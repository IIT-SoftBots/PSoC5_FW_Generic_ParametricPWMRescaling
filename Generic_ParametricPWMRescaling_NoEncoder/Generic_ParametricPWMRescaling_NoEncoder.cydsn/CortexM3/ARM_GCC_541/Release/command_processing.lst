ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E44B     		ldr	r3, .L53
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E24B     		ldr	r3, .L53
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DE48     		ldr	r0, .L53
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DC4B     		ldr	r3, .L53
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e DA4A     		ldr	r2, .L53
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D84B     		ldr	r3, .L53
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 61E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  78 0044 A82B     		cmp	r3, #168
  79 0046 00F25C82 		bhi	.L52
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 79030000 		.word	.L5+1
  85 0054 5B030000 		.word	.L7+1
  86 0058 03050000 		.word	.L52+1
  87 005c 7F030000 		.word	.L8+1
  88 0060 85030000 		.word	.L9+1
  89 0064 A9030000 		.word	.L10+1
  90 0068 43030000 		.word	.L11+1
  91 006c 03050000 		.word	.L52+1
  92 0070 03050000 		.word	.L52+1
  93 0074 DD030000 		.word	.L12+1
  94 0078 C3030000 		.word	.L13+1
  95 007c 03050000 		.word	.L52+1
  96 0080 61030000 		.word	.L14+1
  97 0084 FF030000 		.word	.L15+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 4


  98 0088 03050000 		.word	.L52+1
  99 008c 03050000 		.word	.L52+1
 100 0090 03050000 		.word	.L52+1
 101 0094 03050000 		.word	.L52+1
 102 0098 03050000 		.word	.L52+1
 103 009c 03050000 		.word	.L52+1
 104 00a0 03050000 		.word	.L52+1
 105 00a4 03050000 		.word	.L52+1
 106 00a8 03050000 		.word	.L52+1
 107 00ac 03050000 		.word	.L52+1
 108 00b0 03050000 		.word	.L52+1
 109 00b4 03050000 		.word	.L52+1
 110 00b8 03050000 		.word	.L52+1
 111 00bc 03050000 		.word	.L52+1
 112 00c0 03050000 		.word	.L52+1
 113 00c4 03050000 		.word	.L52+1
 114 00c8 03050000 		.word	.L52+1
 115 00cc 03050000 		.word	.L52+1
 116 00d0 03050000 		.word	.L52+1
 117 00d4 03050000 		.word	.L52+1
 118 00d8 03050000 		.word	.L52+1
 119 00dc 03050000 		.word	.L52+1
 120 00e0 03050000 		.word	.L52+1
 121 00e4 03050000 		.word	.L52+1
 122 00e8 03050000 		.word	.L52+1
 123 00ec 03050000 		.word	.L52+1
 124 00f0 03050000 		.word	.L52+1
 125 00f4 03050000 		.word	.L52+1
 126 00f8 03050000 		.word	.L52+1
 127 00fc 03050000 		.word	.L52+1
 128 0100 03050000 		.word	.L52+1
 129 0104 03050000 		.word	.L52+1
 130 0108 03050000 		.word	.L52+1
 131 010c 03050000 		.word	.L52+1
 132 0110 03050000 		.word	.L52+1
 133 0114 03050000 		.word	.L52+1
 134 0118 03050000 		.word	.L52+1
 135 011c 03050000 		.word	.L52+1
 136 0120 03050000 		.word	.L52+1
 137 0124 03050000 		.word	.L52+1
 138 0128 03050000 		.word	.L52+1
 139 012c 03050000 		.word	.L52+1
 140 0130 03050000 		.word	.L52+1
 141 0134 03050000 		.word	.L52+1
 142 0138 03050000 		.word	.L52+1
 143 013c 03050000 		.word	.L52+1
 144 0140 03050000 		.word	.L52+1
 145 0144 03050000 		.word	.L52+1
 146 0148 03050000 		.word	.L52+1
 147 014c 03050000 		.word	.L52+1
 148 0150 03050000 		.word	.L52+1
 149 0154 03050000 		.word	.L52+1
 150 0158 03050000 		.word	.L52+1
 151 015c 03050000 		.word	.L52+1
 152 0160 03050000 		.word	.L52+1
 153 0164 03050000 		.word	.L52+1
 154 0168 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 5


 155 016c 03050000 		.word	.L52+1
 156 0170 03050000 		.word	.L52+1
 157 0174 03050000 		.word	.L52+1
 158 0178 03050000 		.word	.L52+1
 159 017c 03050000 		.word	.L52+1
 160 0180 03050000 		.word	.L52+1
 161 0184 03050000 		.word	.L52+1
 162 0188 03050000 		.word	.L52+1
 163 018c 03050000 		.word	.L52+1
 164 0190 03050000 		.word	.L52+1
 165 0194 03050000 		.word	.L52+1
 166 0198 03050000 		.word	.L52+1
 167 019c 03050000 		.word	.L52+1
 168 01a0 03050000 		.word	.L52+1
 169 01a4 03050000 		.word	.L52+1
 170 01a8 03050000 		.word	.L52+1
 171 01ac 03050000 		.word	.L52+1
 172 01b0 03050000 		.word	.L52+1
 173 01b4 03050000 		.word	.L52+1
 174 01b8 03050000 		.word	.L52+1
 175 01bc 03050000 		.word	.L52+1
 176 01c0 03050000 		.word	.L52+1
 177 01c4 03050000 		.word	.L52+1
 178 01c8 03050000 		.word	.L52+1
 179 01cc 03050000 		.word	.L52+1
 180 01d0 03050000 		.word	.L52+1
 181 01d4 03050000 		.word	.L52+1
 182 01d8 03050000 		.word	.L52+1
 183 01dc 03050000 		.word	.L52+1
 184 01e0 03050000 		.word	.L52+1
 185 01e4 03050000 		.word	.L52+1
 186 01e8 03050000 		.word	.L52+1
 187 01ec 03050000 		.word	.L52+1
 188 01f0 03050000 		.word	.L52+1
 189 01f4 03050000 		.word	.L52+1
 190 01f8 03050000 		.word	.L52+1
 191 01fc 03050000 		.word	.L52+1
 192 0200 03050000 		.word	.L52+1
 193 0204 03050000 		.word	.L52+1
 194 0208 03050000 		.word	.L52+1
 195 020c 03050000 		.word	.L52+1
 196 0210 03050000 		.word	.L52+1
 197 0214 03050000 		.word	.L52+1
 198 0218 03050000 		.word	.L52+1
 199 021c 03050000 		.word	.L52+1
 200 0220 03050000 		.word	.L52+1
 201 0224 03050000 		.word	.L52+1
 202 0228 03050000 		.word	.L52+1
 203 022c 03050000 		.word	.L52+1
 204 0230 03050000 		.word	.L52+1
 205 0234 03050000 		.word	.L52+1
 206 0238 03050000 		.word	.L52+1
 207 023c 03050000 		.word	.L52+1
 208 0240 03050000 		.word	.L52+1
 209 0244 03050000 		.word	.L52+1
 210 0248 03050000 		.word	.L52+1
 211 024c 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 6


 212 0250 F5020000 		.word	.L16+1
 213 0254 31030000 		.word	.L17+1
 214 0258 FB020000 		.word	.L18+1
 215 025c 3D030000 		.word	.L19+1
 216 0260 01030000 		.word	.L20+1
 217 0264 0D030000 		.word	.L21+1
 218 0268 07030000 		.word	.L22+1
 219 026c 03050000 		.word	.L52+1
 220 0270 2B030000 		.word	.L23+1
 221 0274 19030000 		.word	.L24+1
 222 0278 03050000 		.word	.L52+1
 223 027c 1F030000 		.word	.L25+1
 224 0280 13030000 		.word	.L26+1
 225 0284 03050000 		.word	.L52+1
 226 0288 03050000 		.word	.L52+1
 227 028c 03050000 		.word	.L52+1
 228 0290 37030000 		.word	.L27+1
 229 0294 03050000 		.word	.L52+1
 230 0298 25030000 		.word	.L28+1
 231 029c 03050000 		.word	.L52+1
 232 02a0 03050000 		.word	.L52+1
 233 02a4 03050000 		.word	.L52+1
 234 02a8 03050000 		.word	.L52+1
 235 02ac 03050000 		.word	.L52+1
 236 02b0 03050000 		.word	.L52+1
 237 02b4 03050000 		.word	.L52+1
 238 02b8 03050000 		.word	.L52+1
 239 02bc 03050000 		.word	.L52+1
 240 02c0 03050000 		.word	.L52+1
 241 02c4 03050000 		.word	.L52+1
 242 02c8 03050000 		.word	.L52+1
 243 02cc 03050000 		.word	.L52+1
 244 02d0 03050000 		.word	.L52+1
 245 02d4 9D040000 		.word	.L29+1
 246 02d8 A3040000 		.word	.L30+1
 247 02dc BB040000 		.word	.L31+1
 248 02e0 C1040000 		.word	.L32+1
 249 02e4 C7040000 		.word	.L33+1
 250 02e8 CD040000 		.word	.L34+1
 251 02ec D3040000 		.word	.L35+1
 252 02f0 EB040000 		.word	.L36+1
 253              		.p2align 1
 254              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 255              		.loc 1 78 0
 256 02f4 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 257              		.loc 1 79 0
 258 02f8 04E1     		b	.L1
 259              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 7


  84:..\src/command_processing.c ****             cmd_set_inputs();
 260              		.loc 1 84 0
 261 02fa FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 262              		.loc 1 85 0
 263 02fe 01E1     		b	.L1
 264              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 265              		.loc 1 90 0
 266 0300 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 267              		.loc 1 91 0
 268 0304 FEE0     		b	.L1
 269              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 270              		.loc 1 96 0
 271 0306 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 272              		.loc 1 97 0
 273 030a FBE0     		b	.L1
 274              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 275              		.loc 1 102 0
 276 030c FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 277              		.loc 1 103 0
 278 0310 F8E0     		b	.L1
 279              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 280              		.loc 1 108 0
 281 0312 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 282              		.loc 1 109 0
 283 0316 F5E0     		b	.L1
 284              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 285              		.loc 1 114 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 8


 286 0318 FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
 287              		.loc 1 115 0
 288 031c F2E0     		b	.L1
 289              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 290              		.loc 1 120 0
 291 031e FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 292              		.loc 1 121 0
 293 0322 EFE0     		b	.L1
 294              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 295              		.loc 1 126 0
 296 0324 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 297              		.loc 1 127 0
 298 0328 ECE0     		b	.L1
 299              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 300              		.loc 1 132 0
 301 032a FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 302              		.loc 1 133 0
 303 032e E9E0     		b	.L1
 304              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 305              		.loc 1 138 0
 306 0330 FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 307              		.loc 1 139 0
 308 0334 E6E0     		b	.L1
 309              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 310              		.loc 1 144 0
 311 0336 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 9


 312              		.loc 1 145 0
 313 033a E3E0     		b	.L1
 314              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 315              		.loc 1 150 0
 316 033c FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 317              		.loc 1 151 0
 318 0340 E0E0     		b	.L1
 319              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 320              		.loc 1 156 0
 321 0342 164B     		ldr	r3, .L53+4
 322 0344 1B88     		ldrh	r3, [r3]
 323 0346 BB61     		str	r3, [r7, #24]
 324              	.LBB12:
 325              	.LBB13:
 326              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 10


  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 11


  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 12


 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 13


 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 14


 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 15


 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 16


 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 17


 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 18


 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 19


 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 20


 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 21


 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 22


 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 23


 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 327              		.loc 2 792 0
 328 0348 BB69     		ldr	r3, [r7, #24]
 329              		.syntax unified
 330              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 331 034a 5BBA     		rev16 r3, r3
 332              	@ 0 "" 2
 333              		.thumb
 334              		.syntax unified
 335 034c 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 336              		.loc 2 793 0
 337 034e 7B69     		ldr	r3, [r7, #20]
 338              	.LBE13:
 339              	.LBE12:
 340              		.loc 1 156 0
 341 0350 9BB2     		uxth	r3, r3
 342 0352 1846     		mov	r0, r3
 343 0354 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 344              		.loc 1 157 0
 345 0358 D4E0     		b	.L1
 346              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 347              		.loc 1 162 0
 348 035a FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 349              		.loc 1 163 0
 350 035e D1E0     		b	.L1
 351              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 24


 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 352              		.loc 1 168 0
 353 0360 0E4B     		ldr	r3, .L53+4
 354 0362 1B88     		ldrh	r3, [r3]
 355 0364 BB62     		str	r3, [r7, #40]
 356              	.LBB14:
 357              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 358              		.loc 2 792 0
 359 0366 BB6A     		ldr	r3, [r7, #40]
 360              		.syntax unified
 361              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 362 0368 5BBA     		rev16 r3, r3
 363              	@ 0 "" 2
 364              		.thumb
 365              		.syntax unified
 366 036a 3B61     		str	r3, [r7, #16]
 367              		.loc 2 793 0
 368 036c 3B69     		ldr	r3, [r7, #16]
 369              	.LBE15:
 370              	.LBE14:
 371              		.loc 1 168 0
 372 036e 9BB2     		uxth	r3, r3
 373 0370 1846     		mov	r0, r3
 374 0372 FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 375              		.loc 1 169 0
 376 0376 C5E0     		b	.L1
 377              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 378              		.loc 1 174 0
 379 0378 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 380              		.loc 1 175 0
 381 037c C2E0     		b	.L1
 382              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 383              		.loc 1 180 0
 384 037e FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 385              		.loc 1 181 0
 386 0382 BFE0     		b	.L1
 387              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 388              		.loc 1 186 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 25


 389 0384 3220     		movs	r0, #50
 390 0386 FFF7FEFF 		bl	memStore
 391 038a 0346     		mov	r3, r0
 392 038c 002B     		cmp	r3, #0
 393 038e 07D0     		beq	.L39
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 394              		.loc 1 187 0
 395 0390 0120     		movs	r0, #1
 396 0392 FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 397              		.loc 1 190 0
 398 0396 B5E0     		b	.L1
 399              	.L54:
 400              		.align	2
 401              	.L53:
 402 0398 00000000 		.word	g_rx
 403 039c 01000000 		.word	g_rx+1
 404              	.L39:
 189:..\src/command_processing.c ****             break;
 405              		.loc 1 189 0
 406 03a0 0020     		movs	r0, #0
 407 03a2 FFF7FEFF 		bl	sendAcknowledgment
 408              		.loc 1 190 0
 409 03a6 ADE0     		b	.L1
 410              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 411              		.loc 1 195 0
 412 03a8 FFF7FEFF 		bl	memRestore
 413 03ac 0346     		mov	r3, r0
 414 03ae 002B     		cmp	r3, #0
 415 03b0 03D0     		beq	.L41
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 416              		.loc 1 196 0
 417 03b2 0120     		movs	r0, #1
 418 03b4 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 419              		.loc 1 199 0
 420 03b8 A4E0     		b	.L1
 421              	.L41:
 198:..\src/command_processing.c ****             break;
 422              		.loc 1 198 0
 423 03ba 0020     		movs	r0, #0
 424 03bc FFF7FEFF 		bl	sendAcknowledgment
 425              		.loc 1 199 0
 426 03c0 A0E0     		b	.L1
 427              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 26


 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 204:..\src/command_processing.c ****             if(memInit())
 428              		.loc 1 204 0
 429 03c2 FFF7FEFF 		bl	memInit
 430 03c6 0346     		mov	r3, r0
 431 03c8 002B     		cmp	r3, #0
 432 03ca 03D0     		beq	.L43
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 433              		.loc 1 205 0
 434 03cc 0120     		movs	r0, #1
 435 03ce FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 436              		.loc 1 208 0
 437 03d2 97E0     		b	.L1
 438              	.L43:
 207:..\src/command_processing.c ****             break;
 439              		.loc 1 207 0
 440 03d4 0020     		movs	r0, #0
 441 03d6 FFF7FEFF 		bl	sendAcknowledgment
 442              		.loc 1 208 0
 443 03da 93E0     		b	.L1
 444              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 445              		.loc 1 214 0
 446 03dc 0120     		movs	r0, #1
 447 03de FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 448              		.loc 1 215 0
 449 03e2 4FF47A70 		mov	r0, #1000
 450 03e6 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 451              		.loc 1 216 0
 452 03ea 0020     		movs	r0, #0
 453 03ec FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 454              		.loc 1 217 0
 455 03f0 4FF47A70 		mov	r0, #1000
 456 03f4 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 457              		.loc 1 218 0
 458 03f8 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 459              		.loc 1 219 0
 460 03fc 82E0     		b	.L1
 461              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 27


 462              		.loc 1 224 0
 463 03fe 434B     		ldr	r3, .L55
 464 0400 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 465 0402 1B02     		lsls	r3, r3, #8
 466 0404 1AB2     		sxth	r2, r3
 467 0406 414B     		ldr	r3, .L55
 468 0408 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 469 040a 1BB2     		sxth	r3, r3
 470 040c 1343     		orrs	r3, r3, r2
 471 040e 1AB2     		sxth	r2, r3
 472 0410 3F4B     		ldr	r3, .L55+4
 473 0412 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 474              		.loc 1 225 0
 475 0414 3D4B     		ldr	r3, .L55
 476 0416 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 477 0418 1B02     		lsls	r3, r3, #8
 478 041a 1AB2     		sxth	r2, r3
 479 041c 3B4B     		ldr	r3, .L55
 480 041e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 481 0420 1BB2     		sxth	r3, r3
 482 0422 1343     		orrs	r3, r3, r2
 483 0424 1AB2     		sxth	r2, r3
 484 0426 3A4B     		ldr	r3, .L55+4
 485 0428 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 486              		.loc 1 227 0
 487 042a 394B     		ldr	r3, .L55+4
 488 042c B3F90230 		ldrsh	r3, [r3, #2]
 489 0430 B3F1FF3F 		cmp	r3, #-1
 490 0434 0FD1     		bne	.L45
 491              		.loc 1 227 0 is_stmt 0 discriminator 1
 492 0436 364B     		ldr	r3, .L55+4
 493 0438 B3F90430 		ldrsh	r3, [r3, #4]
 494 043c B3F1FF3F 		cmp	r3, #-1
 495 0440 09D1     		bne	.L45
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 496              		.loc 1 228 0 is_stmt 1
 497 0442 334B     		ldr	r3, .L55+4
 498 0444 0022     		movs	r2, #0
 499 0446 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 500              		.loc 1 229 0
 501 0448 314B     		ldr	r3, .L55+4
 502 044a 0022     		movs	r2, #0
 503 044c 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 504              		.loc 1 230 0
 505 044e 304B     		ldr	r3, .L55+4
 506 0450 0022     		movs	r2, #0
 507 0452 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 508              		.loc 1 231 0
 509 0454 56E0     		b	.L1
 510              	.L45:
 232:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 28


 233:..\src/command_processing.c ****             // Speed & repetitions saturations
 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 511              		.loc 1 234 0
 512 0456 2E4B     		ldr	r3, .L55+4
 513 0458 B3F90230 		ldrsh	r3, [r3, #2]
 514 045c 002B     		cmp	r3, #0
 515 045e 03DA     		bge	.L46
 235:..\src/command_processing.c ****                 calib.speed = 0;
 516              		.loc 1 235 0
 517 0460 2B4B     		ldr	r3, .L55+4
 518 0462 0022     		movs	r2, #0
 519 0464 5A80     		strh	r2, [r3, #2]	@ movhi
 520 0466 07E0     		b	.L47
 521              	.L46:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 522              		.loc 1 236 0
 523 0468 294B     		ldr	r3, .L55+4
 524 046a B3F90230 		ldrsh	r3, [r3, #2]
 525 046e C82B     		cmp	r3, #200
 526 0470 02DD     		ble	.L47
 237:..\src/command_processing.c ****                 calib.speed = 200;
 527              		.loc 1 237 0
 528 0472 274B     		ldr	r3, .L55+4
 529 0474 C822     		movs	r2, #200
 530 0476 5A80     		strh	r2, [r3, #2]	@ movhi
 531              	.L47:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 532              		.loc 1 239 0
 533 0478 254B     		ldr	r3, .L55+4
 534 047a B3F90430 		ldrsh	r3, [r3, #4]
 535 047e 002B     		cmp	r3, #0
 536 0480 02DA     		bge	.L48
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 537              		.loc 1 240 0
 538 0482 234B     		ldr	r3, .L55+4
 539 0484 0022     		movs	r2, #0
 540 0486 9A80     		strh	r2, [r3, #4]	@ movhi
 541              	.L48:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 542              		.loc 1 245 0
 543 0488 224B     		ldr	r3, .L55+8
 544 048a 0022     		movs	r2, #0
 545 048c 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 546              		.loc 1 246 0
 547 048e 204B     		ldr	r3, .L55+4
 548 0490 0122     		movs	r2, #1
 549 0492 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 550              		.loc 1 248 0
 551 0494 0120     		movs	r0, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 29


 552 0496 FFF7FEFF 		bl	sendAcknowledgment
 249:..\src/command_processing.c ****             break;
 553              		.loc 1 249 0
 554 049a 33E0     		b	.L1
 555              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 556              		.loc 1 254 0
 557 049c FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 558              		.loc 1 255 0
 559 04a0 30E0     		b	.L1
 560              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 561              		.loc 1 260 0
 562 04a2 1D4B     		ldr	r3, .L55+12
 563 04a4 1B88     		ldrh	r3, [r3]
 564 04a6 7B62     		str	r3, [r7, #36]
 565              	.LBB16:
 566              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 567              		.loc 2 792 0
 568 04a8 7B6A     		ldr	r3, [r7, #36]
 569              		.syntax unified
 570              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 571 04aa 5BBA     		rev16 r3, r3
 572              	@ 0 "" 2
 573              		.thumb
 574              		.syntax unified
 575 04ac FB60     		str	r3, [r7, #12]
 576              		.loc 2 793 0
 577 04ae FB68     		ldr	r3, [r7, #12]
 578              	.LBE17:
 579              	.LBE16:
 580              		.loc 1 260 0
 581 04b0 9BB2     		uxth	r3, r3
 582 04b2 1846     		mov	r0, r3
 583 04b4 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 584              		.loc 1 261 0
 585 04b8 24E0     		b	.L1
 586              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 587              		.loc 1 266 0
 588 04ba FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 30


 589              		.loc 1 267 0
 590 04be 21E0     		b	.L1
 591              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 592              		.loc 1 272 0
 593 04c0 FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 594              		.loc 1 273 0
 595 04c4 1EE0     		b	.L1
 596              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 597              		.loc 1 278 0
 598 04c6 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 599              		.loc 1 279 0
 600 04ca 1BE0     		b	.L1
 601              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 602              		.loc 1 284 0
 603 04cc FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 604              		.loc 1 285 0
 605 04d0 18E0     		b	.L1
 606              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 607              		.loc 1 290 0
 608 04d2 114B     		ldr	r3, .L55+12
 609 04d4 1B88     		ldrh	r3, [r3]
 610 04d6 3B62     		str	r3, [r7, #32]
 611              	.LBB18:
 612              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 613              		.loc 2 792 0
 614 04d8 3B6A     		ldr	r3, [r7, #32]
 615              		.syntax unified
 616              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 617 04da 5BBA     		rev16 r3, r3
 618              	@ 0 "" 2
 619              		.thumb
 620              		.syntax unified
 621 04dc BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 31


 622              		.loc 2 793 0
 623 04de BB68     		ldr	r3, [r7, #8]
 624              	.LBE19:
 625              	.LBE18:
 626              		.loc 1 290 0
 627 04e0 9BB2     		uxth	r3, r3
 628 04e2 1846     		mov	r0, r3
 629 04e4 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;   
 630              		.loc 1 291 0
 631 04e8 0CE0     		b	.L1
 632              	.L36:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 296:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 633              		.loc 1 296 0
 634 04ea 0B4B     		ldr	r3, .L55+12
 635 04ec 1B88     		ldrh	r3, [r3]
 636 04ee FB61     		str	r3, [r7, #28]
 637              	.LBB20:
 638              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 639              		.loc 2 792 0
 640 04f0 FB69     		ldr	r3, [r7, #28]
 641              		.syntax unified
 642              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 643 04f2 5BBA     		rev16 r3, r3
 644              	@ 0 "" 2
 645              		.thumb
 646              		.syntax unified
 647 04f4 7B60     		str	r3, [r7, #4]
 648              		.loc 2 793 0
 649 04f6 7B68     		ldr	r3, [r7, #4]
 650              	.LBE21:
 651              	.LBE20:
 652              		.loc 1 296 0
 653 04f8 9BB2     		uxth	r3, r3
 654 04fa 1846     		mov	r0, r3
 655 04fc FFF7FEFF 		bl	cmd_remove_SD_file
 297:..\src/command_processing.c ****             break;               
 656              		.loc 1 297 0
 657 0500 00E0     		b	.L1
 658              	.L52:
 298:..\src/command_processing.c ****             
 299:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 300:..\src/command_processing.c ****         default:
 301:..\src/command_processing.c ****             break;
 659              		.loc 1 301 0
 660 0502 00BF     		nop
 661              	.L1:
 302:..\src/command_processing.c **** 
 303:..\src/command_processing.c ****     }
 304:..\src/command_processing.c **** }  
 662              		.loc 1 304 0
 663 0504 3037     		adds	r7, r7, #48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 32


 664              		.cfi_def_cfa_offset 8
 665 0506 BD46     		mov	sp, r7
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 0508 80BD     		pop	{r7, pc}
 669              	.L56:
 670 050a 00BF     		.align	2
 671              	.L55:
 672 050c 00000000 		.word	g_rx
 673 0510 00000000 		.word	calib
 674 0514 00000000 		.word	g_refNew
 675 0518 01000000 		.word	g_rx+1
 676              		.cfi_endproc
 677              	.LFE64:
 678              		.size	commProcess, .-commProcess
 679              		.section	.text.infoSend,"ax",%progbits
 680              		.align	2
 681              		.global	infoSend
 682              		.thumb
 683              		.thumb_func
 684              		.type	infoSend, %function
 685              	infoSend:
 686              	.LFB65:
 305:..\src/command_processing.c **** 
 306:..\src/command_processing.c **** //==============================================================================
 307:..\src/command_processing.c **** //                                                                     INFO SEND
 308:..\src/command_processing.c **** //==============================================================================
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c **** void infoSend(void){
 687              		.loc 1 310 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 1504
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691 0000 80B5     		push	{r7, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 ADF5BC6D 		sub	sp, sp, #1504
 696              		.cfi_def_cfa_offset 1512
 697 0006 00AF     		add	r7, sp, #0
 698              		.cfi_def_cfa_register 7
 311:..\src/command_processing.c ****     char packet_string[1500];
 312:..\src/command_processing.c ****     
 313:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 699              		.loc 1 313 0
 700 0008 3B1D     		adds	r3, r7, #4
 701 000a 1846     		mov	r0, r3
 702 000c FFF7FEFF 		bl	prepare_generic_info
 314:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 703              		.loc 1 314 0
 704 0010 3B1D     		adds	r3, r7, #4
 705 0012 1846     		mov	r0, r3
 706 0014 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c **** }
 707              		.loc 1 315 0
 708 0018 00BF     		nop
 709 001a 07F5BC67 		add	r7, r7, #1504
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 33


 710              		.cfi_def_cfa_offset 8
 711 001e BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 0020 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE65:
 717              		.size	infoSend, .-infoSend
 718 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 719              		.align	2
 720              		.global	infoGet
 721              		.thumb
 722              		.thumb_func
 723              		.type	infoGet, %function
 724              	infoGet:
 725              	.LFB66:
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** 
 318:..\src/command_processing.c **** //==============================================================================
 319:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 320:..\src/command_processing.c **** //==============================================================================
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 726              		.loc 1 322 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 24008
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 ADF5BB4D 		sub	sp, sp, #23936
 735              		.cfi_def_cfa_offset 23944
 736 0006 92B0     		sub	sp, sp, #72
 737              		.cfi_def_cfa_offset 24016
 738 0008 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 740 000a 0246     		mov	r2, r0
 741 000c 07F14803 		add	r3, r7, #72
 742 0010 423B     		subs	r3, r3, #66
 743 0012 1A80     		strh	r2, [r3]	@ movhi
 323:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 744              		.loc 1 323 0
 745 0014 07F59C43 		add	r3, r7, #19968
 746 0018 03F12803 		add	r3, r3, #40
 747 001c 0022     		movs	r2, #0
 748 001e 1A60     		str	r2, [r3]
 749 0020 0433     		adds	r3, r3, #4
 750 0022 40F69C72 		movw	r2, #3996
 751 0026 0021     		movs	r1, #0
 752 0028 1846     		mov	r0, r3
 753 002a FFF7FEFF 		bl	memset
 324:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 754              		.loc 1 324 0
 755 002e 07F14803 		add	r3, r7, #72
 756 0032 403B     		subs	r3, r3, #64
 757 0034 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 34


 758 0036 1A60     		str	r2, [r3]
 759 0038 0433     		adds	r3, r3, #4
 760 003a 44F61C62 		movw	r2, #19996
 761 003e 0021     		movs	r1, #0
 762 0040 1846     		mov	r0, r3
 763 0042 FFF7FEFF 		bl	memset
 325:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 326:..\src/command_processing.c **** 
 327:..\src/command_processing.c ****     switch (info_type) {
 764              		.loc 1 327 0
 765 0046 07F14803 		add	r3, r7, #72
 766 004a 423B     		subs	r3, r3, #66
 767 004c 1B88     		ldrh	r3, [r3]
 768 004e 062B     		cmp	r3, #6
 769 0050 7DD8     		bhi	.L69
 770 0052 01A2     		adr	r2, .L61
 771 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 772              		.p2align 2
 773              	.L61:
 774 0058 75000000 		.word	.L60+1
 775 005c 97000000 		.word	.L62+1
 776 0060 B9000000 		.word	.L63+1
 777 0064 E1000000 		.word	.L64+1
 778 0068 03010000 		.word	.L65+1
 779 006c 21010000 		.word	.L66+1
 780 0070 27010000 		.word	.L67+1
 781              		.p2align 1
 782              	.L60:
 328:..\src/command_processing.c ****         case INFO_ALL:
 329:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 783              		.loc 1 329 0
 784 0074 07F59C43 		add	r3, r7, #19968
 785 0078 03F12803 		add	r3, r3, #40
 786 007c 1846     		mov	r0, r3
 787 007e FFF7FEFF 		bl	prepare_generic_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 788              		.loc 1 330 0
 789 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 790              		.loc 1 331 0
 791 0086 07F59C43 		add	r3, r7, #19968
 792 008a 03F12803 		add	r3, r3, #40
 793 008e 1846     		mov	r0, r3
 794 0090 FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 795              		.loc 1 332 0
 796 0094 5CE0     		b	.L68
 797              	.L62:
 333:..\src/command_processing.c ****         case CYCLES_INFO:
 334:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 798              		.loc 1 334 0
 799 0096 07F59C43 		add	r3, r7, #19968
 800 009a 03F12803 		add	r3, r3, #40
 801 009e 1846     		mov	r0, r3
 802 00a0 FFF7FEFF 		bl	prepare_counter_info
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 803              		.loc 1 335 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 35


 804 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 805              		.loc 1 336 0
 806 00a8 07F59C43 		add	r3, r7, #19968
 807 00ac 03F12803 		add	r3, r3, #40
 808 00b0 1846     		mov	r0, r3
 809 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 810              		.loc 1 337 0
 811 00b6 4BE0     		b	.L68
 812              	.L63:
 338:..\src/command_processing.c ****         case GET_SD_PARAM:
 339:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 813              		.loc 1 339 0
 814 00b8 07F59C43 		add	r3, r7, #19968
 815 00bc 03F12803 		add	r3, r3, #40
 816 00c0 4FF47A62 		mov	r2, #4000
 817 00c4 1946     		mov	r1, r3
 818 00c6 2548     		ldr	r0, .L70
 819 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 820              		.loc 1 340 0
 821 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 822              		.loc 1 341 0
 823 00d0 07F59C43 		add	r3, r7, #19968
 824 00d4 03F12803 		add	r3, r3, #40
 825 00d8 1846     		mov	r0, r3
 826 00da FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 827              		.loc 1 342 0
 828 00de 37E0     		b	.L68
 829              	.L64:
 343:..\src/command_processing.c ****         case GET_SD_DATA:
 344:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 830              		.loc 1 344 0
 831 00e0 07F14803 		add	r3, r7, #72
 832 00e4 403B     		subs	r3, r3, #64
 833 00e6 44F62061 		movw	r1, #20000
 834 00ea 1846     		mov	r0, r3
 835 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 836              		.loc 1 345 0
 837 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 838              		.loc 1 346 0
 839 00f4 07F14803 		add	r3, r7, #72
 840 00f8 403B     		subs	r3, r3, #64
 841 00fa 1846     		mov	r0, r3
 842 00fc FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 843              		.loc 1 347 0
 844 0100 26E0     		b	.L68
 845              	.L65:
 348:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 349:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 846              		.loc 1 349 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 36


 847 0102 07F14803 		add	r3, r7, #72
 848 0106 403B     		subs	r3, r3, #64
 849 0108 1846     		mov	r0, r3
 850 010a FFF7FEFF 		bl	Get_SD_FS
 350:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 851              		.loc 1 350 0
 852 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 351:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 853              		.loc 1 351 0
 854 0112 07F14803 		add	r3, r7, #72
 855 0116 403B     		subs	r3, r3, #64
 856 0118 1846     		mov	r0, r3
 857 011a FFF7FEFF 		bl	UART_RS485_PutString
 352:..\src/command_processing.c ****             break;
 858              		.loc 1 352 0
 859 011e 17E0     		b	.L68
 860              	.L66:
 353:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 354:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 355:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 861              		.loc 1 355 0
 862 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 356:..\src/command_processing.c ****             break;
 863              		.loc 1 356 0
 864 0124 14E0     		b	.L68
 865              	.L67:
 357:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 358:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 866              		.loc 1 358 0
 867 0126 07F59C43 		add	r3, r7, #19968
 868 012a 03F12803 		add	r3, r3, #40
 869 012e 4FF47A62 		mov	r2, #4000
 870 0132 1946     		mov	r1, r3
 871 0134 0A48     		ldr	r0, .L70+4
 872 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 359:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 873              		.loc 1 359 0
 874 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 360:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 875              		.loc 1 360 0
 876 013e 07F59C43 		add	r3, r7, #19968
 877 0142 03F12803 		add	r3, r3, #40
 878 0146 1846     		mov	r0, r3
 879 0148 FFF7FEFF 		bl	UART_RS485_PutString
 361:..\src/command_processing.c ****             break;            
 880              		.loc 1 361 0
 881 014c 00E0     		b	.L68
 882              	.L69:
 362:..\src/command_processing.c ****         default:
 363:..\src/command_processing.c ****             break;
 883              		.loc 1 363 0
 884 014e 00BF     		nop
 885              	.L68:
 364:..\src/command_processing.c ****     }
 365:..\src/command_processing.c **** }
 886              		.loc 1 365 0 discriminator 1
 887 0150 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 37


 888 0152 07F5BB47 		add	r7, r7, #23936
 889 0156 4837     		adds	r7, r7, #72
 890              		.cfi_def_cfa_offset 8
 891 0158 BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 015a 80BD     		pop	{r7, pc}
 895              	.L71:
 896              		.align	2
 897              	.L70:
 898 015c 00000000 		.word	sdParam
 899 0160 00000000 		.word	sdR01File
 900              		.cfi_endproc
 901              	.LFE66:
 902              		.size	infoGet, .-infoGet
 903              		.global	__aeabi_i2f
 904              		.global	__aeabi_fdiv
 905              		.section	.rodata
 906              		.align	2
 907              	.LC90:
 908 0000 20557362 		.ascii	" Usb\000"
 908      00
 909 0005 000000   		.align	2
 910              	.LC91:
 911 0008 2048616E 		.ascii	" Handle\000"
 911      646C6500 
 912              		.align	2
 913              	.LC92:
 914 0010 20454D47 		.ascii	" EMG proportional\000"
 914      2070726F 
 914      706F7274 
 914      696F6E61 
 914      6C00
 915 0022 0000     		.align	2
 916              	.LC93:
 917 0024 20454D47 		.ascii	" EMG integral\000"
 917      20696E74 
 917      65677261 
 917      6C00
 918 0032 0000     		.align	2
 919              	.LC94:
 920 0034 20454D47 		.ascii	" EMG FCFS\000"
 920      20464346 
 920      5300
 921 003e 0000     		.align	2
 922              	.LC95:
 923 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 923      20464346 
 923      53204164 
 923      76616E63 
 923      656400
 924 0053 00       		.align	2
 925              	.LC96:
 926 0054 204A6F79 		.ascii	" Joystick\000"
 926      73746963 
 926      6B00
 927 005e 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 38


 928              	.LC97:
 929 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 929      2070726F 
 929      706F7274 
 929      696F6E61 
 929      6C204E6F 
 930 0082 0000     		.align	2
 931              	.LC98:
 932 0084 20506F73 		.ascii	" Position\000"
 932      6974696F 
 932      6E00
 933 008e 0000     		.align	2
 934              	.LC99:
 935 0090 2050574D 		.ascii	" PWM\000"
 935      00
 936 0095 000000   		.align	2
 937              	.LC100:
 938 0098 20437572 		.ascii	" Current\000"
 938      72656E74 
 938      00
 939 00a1 000000   		.align	2
 940              	.LC101:
 941 00a4 20506F73 		.ascii	" Position and Current\000"
 941      6974696F 
 941      6E20616E 
 941      64204375 
 941      7272656E 
 942 00ba 0000     		.align	2
 943              	.LC102:
 944 00bc 20594553 		.ascii	" YES\000\000"
 944      0000
 945 00c2 0000     		.align	2
 946              	.LC103:
 947 00c4 204E4F00 		.ascii	" NO\000\000"
 947      00
 948 00c9 000000   		.align	2
 949              	.LC104:
 950 00cc 20526967 		.ascii	" Right\000\000"
 950      68740000 
 951              		.align	2
 952              	.LC105:
 953 00d4 204C6566 		.ascii	" Left\000\000"
 953      740000
 954 00db 00       		.align	2
 955              	.LC106:
 956 00dc 204F4646 		.ascii	" OFF\000\000"
 956      0000
 957 00e2 0000     		.align	2
 958              	.LC107:
 959 00e4 204F4E00 		.ascii	" ON\000\000"
 959      00
 960 00e9 000000   		.align	2
 961              	.LC108:
 962 00ec 204E6F6E 		.ascii	" None\000\000"
 962      650000
 963 00f3 00       		.align	2
 964              	.LC109:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 39


 965 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 965      52544320 
 965      626F6172 
 965      640000
 966 0103 00       		.align	2
 967              	.LC110:
 968 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 968      6920626F 
 968      61726420 
 968      5B4E2F41 
 968      5D0000
 969 0117 00       		.align	2
 970              	.LC111:
 971 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 971      6572205B 
 971      4E2F415D 
 971      0000
 972 0126 0000     		.align	2
 973              	.LC112:
 974 0128 204C6F77 		.ascii	" Low\000\000"
 974      0000
 975 012e 0000     		.align	2
 976              	.LC113:
 977 0130 20486967 		.ascii	" High\000\000"
 977      680000
 978 0137 00       		.align	2
 979              	.LC114:
 980 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 980      45524943 
 980      20555345 
 980      520000
 981 0147 00       		.align	2
 982              	.LC115:
 983 0148 204D4152 		.ascii	" MARIA\000\000"
 983      49410000 
 984              		.align	2
 985              	.LC116:
 986 0150 20523031 		.ascii	" R01\000\000"
 986      0000
 987 0156 0000     		.align	2
 988              	.LC117:
 989 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 989      33383837 
 989      20285374 
 989      616E6461 
 989      72642900 
 990 016d 000000   		.align	2
 991              	.LC118:
 992 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 992      35303139 
 992      20284869 
 992      67682070 
 992      6F776572 
 993 0187 00       		.align	2
 994              	.LC119:
 995 0188 20455343 		.ascii	" ESC (Brushless)\000\000"
 995      20284272 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 40


 995      7573686C 
 995      65737329 
 995      0000
 996 019a 0000     		.align	2
 997              	.LC120:
 998 019c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 998      5448414E 
 998      44205052 
 998      4F0000
 999 01ab 00       		.align	2
 1000              	.LC121:
 1001 01ac 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 1001      45524943 
 1001      2032204D 
 1001      4F544F52 
 1001      530000
 1002 01bf 00       		.align	2
 1003              	.LC122:
 1004 01c0 20414952 		.ascii	" AIR CHAMBERS\000\000"
 1004      20434841 
 1004      4D424552 
 1004      530000
 1005 01cf 00       		.align	2
 1006              	.LC123:
 1007 01d0 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 1007      4F424F43 
 1007      4B205752 
 1007      49535400 
 1007      00
 1008 01e1 000000   		.align	2
 1009              	.LC124:
 1010 01e4 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 1010      5448414E 
 1010      44203220 
 1010      4D4F544F 
 1010      52530000 
 1011              		.align	2
 1012              	.LC125:
 1013 01f8 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 1013      743A7379 
 1013      6E322C20 
 1013      536C6F77 
 1013      3A73796E 
 1014 020f 00       		.align	2
 1015              	.LC126:
 1016 0210 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 1016      743A7772 
 1016      6973742C 
 1016      536C6F77 
 1016      3A68616E 
 1017 0227 00       		.align	2
 1018              	.LC127:
 1019 0228 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 1019      773A7379 
 1019      6E322C20 
 1019      46617374 
 1019      3A73796E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 41


 1020 023f 00       		.align	2
 1021              	.LC128:
 1022 0240 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 1022      773A7772 
 1022      6973742C 
 1022      46617374 
 1022      3A68616E 
 1023 0257 00       		.align	2
 1024              	.LC129:
 1025 0258 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 1025      73653A43 
 1025      572C204F 
 1025      70656E3A 
 1025      43435700 
 1026 026d 000000   		.align	2
 1027              	.LC130:
 1028 0270 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 1028      73653A43 
 1028      43572C20 
 1028      4F70656E 
 1028      3A435700 
 1029              		.section	.text.get_param_list,"ax",%progbits
 1030              		.align	2
 1031              		.global	get_param_list
 1032              		.thumb
 1033              		.thumb_func
 1034              		.type	get_param_list, %function
 1035              	get_param_list:
 1036              	.LFB67:
 366:..\src/command_processing.c **** 
 367:..\src/command_processing.c **** 
 368:..\src/command_processing.c **** //==============================================================================
 369:..\src/command_processing.c **** //                                                                GET PARAM LIST
 370:..\src/command_processing.c **** //==============================================================================
 371:..\src/command_processing.c **** 
 372:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 373:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 374:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 375:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 1037              		.loc 1 375 0
 1038              		.cfi_startproc
 1039              		@ args = 16, pretend = 0, frame = 5760
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1042              		.cfi_def_cfa_offset 20
 1043              		.cfi_offset 4, -20
 1044              		.cfi_offset 5, -16
 1045              		.cfi_offset 6, -12
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 ADF5B45D 		sub	sp, sp, #5760
 1049              		.cfi_def_cfa_offset 5780
 1050 0006 81B0     		sub	sp, sp, #4
 1051              		.cfi_def_cfa_offset 5784
 1052 0008 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 000a 07F12004 		add	r4, r7, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 42


 1055 000e 143C     		subs	r4, r4, #20
 1056 0010 2060     		str	r0, [r4]
 1057 0012 07F12000 		add	r0, r7, #32
 1058 0016 1838     		subs	r0, r0, #24
 1059 0018 0160     		str	r1, [r0]
 1060 001a 07F12001 		add	r1, r7, #32
 1061 001e 1C39     		subs	r1, r1, #28
 1062 0020 0A60     		str	r2, [r1]
 1063 0022 3A46     		mov	r2, r7
 1064 0024 1360     		str	r3, [r2]
 376:..\src/command_processing.c ****     
 377:..\src/command_processing.c ****     //Package to be sent variables
 378:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1065              		.loc 1 378 0
 1066 0026 07F16003 		add	r3, r7, #96
 1067 002a 083B     		subs	r3, r3, #8
 1068 002c 0022     		movs	r2, #0
 1069 002e 1A60     		str	r2, [r3]
 1070 0030 0433     		adds	r3, r3, #4
 1071 0032 41F20E62 		movw	r2, #5646
 1072 0036 0021     		movs	r1, #0
 1073 0038 1846     		mov	r0, r3
 1074 003a FFF7FEFF 		bl	memset
 379:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1075              		.loc 1 379 0
 1076 003e 41F21263 		movw	r3, #5650
 1077 0042 07F5B352 		add	r2, r7, #5728
 1078 0046 02F11802 		add	r2, r2, #24
 1079 004a 1380     		strh	r3, [r2]	@ movhi
 380:..\src/command_processing.c **** 
 381:..\src/command_processing.c ****     //Auxiliary variables
 382:..\src/command_processing.c ****     uint8 CYDATA i, j;
 383:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1080              		.loc 1 383 0
 1081 004c 0023     		movs	r3, #0
 1082 004e 07F5B352 		add	r2, r7, #5728
 1083 0052 02F11D02 		add	r2, r2, #29
 1084 0056 1370     		strb	r3, [r2]
 384:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1085              		.loc 1 384 0
 1086 0058 0023     		movs	r3, #0
 1087 005a 07F5B352 		add	r2, r7, #5728
 1088 005e 02F11C02 		add	r2, r2, #28
 1089 0062 1370     		strb	r3, [r2]
 385:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1090              		.loc 1 385 0
 1091 0064 0023     		movs	r3, #0
 1092 0066 07F5B352 		add	r2, r7, #5728
 1093 006a 02F11B02 		add	r2, r2, #27
 1094 006e 1370     		strb	r3, [r2]
 386:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 387:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1095              		.loc 1 387 0
 1096 0070 07F14003 		add	r3, r7, #64
 1097 0074 1C3B     		subs	r3, r3, #28
 1098 0076 0022     		movs	r2, #0
 1099 0078 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 43


 1100 007a 0433     		adds	r3, r3, #4
 1101 007c 2E22     		movs	r2, #46
 1102 007e 0021     		movs	r1, #0
 1103 0080 1846     		mov	r0, r3
 1104 0082 FFF7FEFF 		bl	memset
 388:..\src/command_processing.c ****     float aux_float;
 389:..\src/command_processing.c ****     int16 aux_int16;
 390:..\src/command_processing.c ****     uint16 aux_uint16;
 391:..\src/command_processing.c ****     int32 aux_int32;
 392:..\src/command_processing.c ****     uint32 aux_uint32;
 393:..\src/command_processing.c **** 
 394:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1105              		.loc 1 394 0
 1106 0086 0023     		movs	r3, #0
 1107 0088 07F5B352 		add	r2, r7, #5728
 1108 008c 02F11702 		add	r2, r2, #23
 1109 0090 1370     		strb	r3, [r2]
 395:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1110              		.loc 1 395 0
 1111 0092 0123     		movs	r3, #1
 1112 0094 07F5B352 		add	r2, r7, #5728
 1113 0098 02F11602 		add	r2, r2, #22
 1114 009c 1370     		strb	r3, [r2]
 396:..\src/command_processing.c ****   
 397:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1115              		.loc 1 397 0
 1116 009e 07F12003 		add	r3, r7, #32
 1117 00a2 143B     		subs	r3, r3, #20
 1118 00a4 1B68     		ldr	r3, [r3]
 1119 00a6 1B68     		ldr	r3, [r3]
 1120 00a8 07F5B352 		add	r2, r7, #5728
 1121 00ac 02F11002 		add	r2, r2, #16
 1122 00b0 1360     		str	r3, [r2]
 398:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1123              		.loc 1 398 0
 1124 00b2 07F5B353 		add	r3, r7, #5728
 1125 00b6 03F11003 		add	r3, r3, #16
 1126 00ba 1B68     		ldr	r3, [r3]
 1127 00bc 07F5B352 		add	r2, r7, #5728
 1128 00c0 02F10C02 		add	r2, r2, #12
 1129 00c4 1360     		str	r3, [r2]
 399:..\src/command_processing.c ****         
 400:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1130              		.loc 1 400 0
 1131 00c6 07F16003 		add	r3, r7, #96
 1132 00ca 083B     		subs	r3, r3, #8
 1133 00cc 0C22     		movs	r2, #12
 1134 00ce 1A70     		strb	r2, [r3]
 401:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1135              		.loc 1 401 0
 1136 00d0 07F16003 		add	r3, r7, #96
 1137 00d4 083B     		subs	r3, r3, #8
 1138 00d6 4F22     		movs	r2, #79
 1139 00d8 5A70     		strb	r2, [r3, #1]
 402:..\src/command_processing.c ****     
 403:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1140              		.loc 1 403 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 44


 1141 00da 0023     		movs	r3, #0
 1142 00dc 07F5B352 		add	r2, r7, #5728
 1143 00e0 02F11D02 		add	r2, r2, #29
 1144 00e4 1370     		strb	r3, [r2]
 1145 00e6 02F0BFBF 		b	.L73
 1146              	.L278:
 404:..\src/command_processing.c ****         
 405:..\src/command_processing.c ****         // Assign m_addr memory address
 406:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1147              		.loc 1 406 0
 1148 00ea 07F5B353 		add	r3, r7, #5728
 1149 00ee 03F11D03 		add	r3, r3, #29
 1150 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1151 00f4 9A00     		lsls	r2, r3, #2
 1152 00f6 07F12003 		add	r3, r7, #32
 1153 00fa 143B     		subs	r3, r3, #20
 1154 00fc 1B68     		ldr	r3, [r3]
 1155 00fe 1344     		add	r3, r3, r2
 1156 0100 1B68     		ldr	r3, [r3]
 1157 0102 07F5B352 		add	r2, r7, #5728
 1158 0106 02F11002 		add	r2, r2, #16
 1159 010a 1360     		str	r3, [r2]
 407:..\src/command_processing.c ****         
 408:..\src/command_processing.c ****         // Add parameter type and size to packet
 409:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1160              		.loc 1 409 0
 1161 010c 07F5B353 		add	r3, r7, #5728
 1162 0110 03F11D03 		add	r3, r3, #29
 1163 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1164 0116 3222     		movs	r2, #50
 1165 0118 02FB03F3 		mul	r3, r2, r3
 1166 011c 9A1C     		adds	r2, r3, #2
 1167 011e 07F5B353 		add	r3, r7, #5728
 1168 0122 03F11D03 		add	r3, r3, #29
 1169 0126 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1170 0128 07F12003 		add	r3, r7, #32
 1171 012c 183B     		subs	r3, r3, #24
 1172 012e 1B68     		ldr	r3, [r3]
 1173 0130 0B44     		add	r3, r3, r1
 1174 0132 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1175 0134 07F16003 		add	r3, r7, #96
 1176 0138 083B     		subs	r3, r3, #8
 1177 013a 9954     		strb	r1, [r3, r2]
 410:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1178              		.loc 1 410 0
 1179 013c 07F5B353 		add	r3, r7, #5728
 1180 0140 03F11D03 		add	r3, r3, #29
 1181 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1182 0146 3222     		movs	r2, #50
 1183 0148 02FB03F3 		mul	r3, r2, r3
 1184 014c DA1C     		adds	r2, r3, #3
 1185 014e 07F5B353 		add	r3, r7, #5728
 1186 0152 03F11D03 		add	r3, r3, #29
 1187 0156 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1188 0158 07F12003 		add	r3, r7, #32
 1189 015c 1C3B     		subs	r3, r3, #28
 1190 015e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 45


 1191 0160 0B44     		add	r3, r3, r1
 1192 0162 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1193 0164 07F16003 		add	r3, r7, #96
 1194 0168 083B     		subs	r3, r3, #8
 1195 016a 9954     		strb	r1, [r3, r2]
 411:..\src/command_processing.c ****         
 412:..\src/command_processing.c ****         // Find size of data
 413:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1196              		.loc 1 413 0
 1197 016c 07F5B353 		add	r3, r7, #5728
 1198 0170 03F11D03 		add	r3, r3, #29
 1199 0174 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1200 0176 07F12003 		add	r3, r7, #32
 1201 017a 183B     		subs	r3, r3, #24
 1202 017c 1B68     		ldr	r3, [r3]
 1203 017e 1344     		add	r3, r3, r2
 1204 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 0182 092B     		cmp	r3, #9
 1206 0184 2BD8     		bhi	.L74
 1207 0186 01A2     		adr	r2, .L76
 1208 0188 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1209              		.p2align 2
 1210              	.L76:
 1211 018c B5010000 		.word	.L75+1
 1212 0190 B5010000 		.word	.L75+1
 1213 0194 B5010000 		.word	.L75+1
 1214 0198 C3010000 		.word	.L77+1
 1215 019c C3010000 		.word	.L77+1
 1216 01a0 D1010000 		.word	.L78+1
 1217 01a4 D1010000 		.word	.L78+1
 1218 01a8 D1010000 		.word	.L78+1
 1219 01ac DF010000 		.word	.L74+1
 1220 01b0 B5010000 		.word	.L75+1
 1221              		.p2align 1
 1222              	.L75:
 414:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 415:..\src/command_processing.c ****                 sod = 1; break;
 1223              		.loc 1 415 0
 1224 01b4 0123     		movs	r3, #1
 1225 01b6 07F5B352 		add	r2, r7, #5728
 1226 01ba 02F11B02 		add	r2, r2, #27
 1227 01be 1370     		strb	r3, [r2]
 1228 01c0 0DE0     		b	.L74
 1229              	.L77:
 416:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 417:..\src/command_processing.c ****                 sod = 2; break;
 1230              		.loc 1 417 0
 1231 01c2 0223     		movs	r3, #2
 1232 01c4 07F5B352 		add	r2, r7, #5728
 1233 01c8 02F11B02 		add	r2, r2, #27
 1234 01cc 1370     		strb	r3, [r2]
 1235 01ce 06E0     		b	.L74
 1236              	.L78:
 418:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 419:..\src/command_processing.c ****                 sod = 4; break;
 1237              		.loc 1 419 0
 1238 01d0 0423     		movs	r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 46


 1239 01d2 07F5B352 		add	r2, r7, #5728
 1240 01d6 02F11B02 		add	r2, r2, #27
 1241 01da 1370     		strb	r3, [r2]
 1242 01dc 00BF     		nop
 1243              	.L74:
 420:..\src/command_processing.c ****         }
 421:..\src/command_processing.c ****             
 422:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1244              		.loc 1 422 0
 1245 01de 07F5B353 		add	r3, r7, #5728
 1246 01e2 03F11D03 		add	r3, r3, #29
 1247 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1248 01e8 07F5B552 		add	r2, r7, #5792
 1249 01ec 1268     		ldr	r2, [r2]
 1250 01ee 1344     		add	r3, r3, r2
 1251 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 01f2 002B     		cmp	r3, #0
 1253 01f4 40F0DA83 		bne	.L79
 423:..\src/command_processing.c ****             
 424:..\src/command_processing.c ****             // Add parameter data to packet
 425:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1254              		.loc 1 425 0
 1255 01f8 07F5B353 		add	r3, r7, #5728
 1256 01fc 03F11D03 		add	r3, r3, #29
 1257 0200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1258 0202 07F12003 		add	r3, r7, #32
 1259 0206 183B     		subs	r3, r3, #24
 1260 0208 1B68     		ldr	r3, [r3]
 1261 020a 1344     		add	r3, r3, r2
 1262 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1263 020e 092B     		cmp	r3, #9
 1264 0210 02F2F780 		bhi	.L113
 1265 0214 01A2     		adr	r2, .L82
 1266 0216 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1267 021a 00BF     		.p2align 2
 1268              	.L82:
 1269 021c 45020000 		.word	.L81+1
 1270 0220 01030000 		.word	.L83+1
 1271 0224 45020000 		.word	.L81+1
 1272 0228 BD030000 		.word	.L84+1
 1273 022c EF040000 		.word	.L85+1
 1274 0230 1F060000 		.word	.L86+1
 1275 0234 4F070000 		.word	.L87+1
 1276 0238 7F080000 		.word	.L88+1
 1277 023c 03240000 		.word	.L113+1
 1278 0240 45020000 		.word	.L81+1
 1279              		.p2align 1
 1280              	.L81:
 426:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1281              		.loc 1 427 0
 1282 0244 0023     		movs	r3, #0
 1283 0246 07F5B352 		add	r2, r7, #5728
 1284 024a 02F11F02 		add	r2, r2, #31
 1285 024e 1370     		strb	r3, [r2]
 1286 0250 42E0     		b	.L89
 1287              	.L90:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 47


 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1288              		.loc 1 428 0 discriminator 3
 1289 0252 07F5B353 		add	r3, r7, #5728
 1290 0256 03F11F03 		add	r3, r3, #31
 1291 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1292 025c 07F5B352 		add	r2, r7, #5728
 1293 0260 02F11B02 		add	r2, r2, #27
 1294 0264 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1295 0266 02FB03F3 		mul	r3, r2, r3
 1296 026a 1A46     		mov	r2, r3
 1297 026c 07F5B353 		add	r3, r7, #5728
 1298 0270 03F11003 		add	r3, r3, #16
 1299 0274 1B68     		ldr	r3, [r3]
 1300 0276 1344     		add	r3, r3, r2
 1301 0278 07F5B352 		add	r2, r7, #5728
 1302 027c 02F10C02 		add	r2, r2, #12
 1303 0280 1360     		str	r3, [r2]
 429:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1304              		.loc 1 429 0 discriminator 3
 1305 0282 07F5B353 		add	r3, r7, #5728
 1306 0286 03F11D03 		add	r3, r3, #29
 1307 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1308 028c 3222     		movs	r2, #50
 1309 028e 02FB03F3 		mul	r3, r2, r3
 1310 0292 1A1D     		adds	r2, r3, #4
 1311 0294 07F5B353 		add	r3, r7, #5728
 1312 0298 03F11F03 		add	r3, r3, #31
 1313 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 029e 07F5B351 		add	r1, r7, #5728
 1315 02a2 01F11B01 		add	r1, r1, #27
 1316 02a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1317 02a8 01FB03F3 		mul	r3, r1, r3
 1318 02ac 1A44     		add	r2, r2, r3
 1319 02ae 07F5B353 		add	r3, r7, #5728
 1320 02b2 03F10C03 		add	r3, r3, #12
 1321 02b6 1B68     		ldr	r3, [r3]
 1322 02b8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1323 02ba 07F16003 		add	r3, r7, #96
 1324 02be 083B     		subs	r3, r3, #8
 1325 02c0 9954     		strb	r1, [r3, r2]
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1326              		.loc 1 427 0 discriminator 3
 1327 02c2 07F5B353 		add	r3, r7, #5728
 1328 02c6 03F11F03 		add	r3, r3, #31
 1329 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 02cc 0133     		adds	r3, r3, #1
 1331 02ce 07F5B352 		add	r2, r7, #5728
 1332 02d2 02F11F02 		add	r2, r2, #31
 1333 02d6 1370     		strb	r3, [r2]
 1334              	.L89:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1335              		.loc 1 427 0 is_stmt 0 discriminator 1
 1336 02d8 07F5B353 		add	r3, r7, #5728
 1337 02dc 03F11D03 		add	r3, r3, #29
 1338 02e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1339 02e2 07F12003 		add	r3, r7, #32
 1340 02e6 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 48


 1341 02e8 1B68     		ldr	r3, [r3]
 1342 02ea 1344     		add	r3, r3, r2
 1343 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1344 02ee 07F5B352 		add	r2, r7, #5728
 1345 02f2 02F11F02 		add	r2, r2, #31
 1346 02f6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1347 02f8 9A42     		cmp	r2, r3
 1348 02fa AAD3     		bcc	.L90
 430:..\src/command_processing.c ****                     }
 431:..\src/command_processing.c ****                     break;                
 1349              		.loc 1 431 0 is_stmt 1
 1350 02fc 02F081B8 		b	.L113
 1351              	.L83:
 432:..\src/command_processing.c ****                 case TYPE_INT8:
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1352              		.loc 1 433 0
 1353 0300 0023     		movs	r3, #0
 1354 0302 07F5B352 		add	r2, r7, #5728
 1355 0306 02F11F02 		add	r2, r2, #31
 1356 030a 1370     		strb	r3, [r2]
 1357 030c 42E0     		b	.L91
 1358              	.L92:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1359              		.loc 1 434 0 discriminator 3
 1360 030e 07F5B353 		add	r3, r7, #5728
 1361 0312 03F11F03 		add	r3, r3, #31
 1362 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1363 0318 07F5B352 		add	r2, r7, #5728
 1364 031c 02F11B02 		add	r2, r2, #27
 1365 0320 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1366 0322 02FB03F3 		mul	r3, r2, r3
 1367 0326 1A46     		mov	r2, r3
 1368 0328 07F5B353 		add	r3, r7, #5728
 1369 032c 03F11003 		add	r3, r3, #16
 1370 0330 1B68     		ldr	r3, [r3]
 1371 0332 1344     		add	r3, r3, r2
 1372 0334 07F5B352 		add	r2, r7, #5728
 1373 0338 02F10C02 		add	r2, r2, #12
 1374 033c 1360     		str	r3, [r2]
 435:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1375              		.loc 1 435 0 discriminator 3
 1376 033e 07F5B353 		add	r3, r7, #5728
 1377 0342 03F11D03 		add	r3, r3, #29
 1378 0346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1379 0348 3222     		movs	r2, #50
 1380 034a 02FB03F3 		mul	r3, r2, r3
 1381 034e 1A1D     		adds	r2, r3, #4
 1382 0350 07F5B353 		add	r3, r7, #5728
 1383 0354 03F11F03 		add	r3, r3, #31
 1384 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1385 035a 07F5B351 		add	r1, r7, #5728
 1386 035e 01F11B01 		add	r1, r1, #27
 1387 0362 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1388 0364 01FB03F3 		mul	r3, r1, r3
 1389 0368 1A44     		add	r2, r2, r3
 1390 036a 07F5B353 		add	r3, r7, #5728
 1391 036e 03F10C03 		add	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 49


 1392 0372 1B68     		ldr	r3, [r3]
 1393 0374 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1394 0376 07F16003 		add	r3, r7, #96
 1395 037a 083B     		subs	r3, r3, #8
 1396 037c 9954     		strb	r1, [r3, r2]
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1397              		.loc 1 433 0 discriminator 3
 1398 037e 07F5B353 		add	r3, r7, #5728
 1399 0382 03F11F03 		add	r3, r3, #31
 1400 0386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1401 0388 0133     		adds	r3, r3, #1
 1402 038a 07F5B352 		add	r2, r7, #5728
 1403 038e 02F11F02 		add	r2, r2, #31
 1404 0392 1370     		strb	r3, [r2]
 1405              	.L91:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1406              		.loc 1 433 0 is_stmt 0 discriminator 1
 1407 0394 07F5B353 		add	r3, r7, #5728
 1408 0398 03F11D03 		add	r3, r3, #29
 1409 039c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1410 039e 07F12003 		add	r3, r7, #32
 1411 03a2 1C3B     		subs	r3, r3, #28
 1412 03a4 1B68     		ldr	r3, [r3]
 1413 03a6 1344     		add	r3, r3, r2
 1414 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1415 03aa 07F5B352 		add	r2, r7, #5728
 1416 03ae 02F11F02 		add	r2, r2, #31
 1417 03b2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1418 03b4 9A42     		cmp	r2, r3
 1419 03b6 AAD3     		bcc	.L92
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;
 1420              		.loc 1 437 0 is_stmt 1
 1421 03b8 02F023B8 		b	.L113
 1422              	.L84:
 438:..\src/command_processing.c ****                 case TYPE_INT16:
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1423              		.loc 1 439 0
 1424 03bc 0023     		movs	r3, #0
 1425 03be 07F5B352 		add	r2, r7, #5728
 1426 03c2 02F11F02 		add	r2, r2, #31
 1427 03c6 1370     		strb	r3, [r2]
 1428 03c8 7CE0     		b	.L93
 1429              	.L96:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1430              		.loc 1 440 0
 1431 03ca 07F5B353 		add	r3, r7, #5728
 1432 03ce 03F11F03 		add	r3, r3, #31
 1433 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1434 03d4 07F5B352 		add	r2, r7, #5728
 1435 03d8 02F11B02 		add	r2, r2, #27
 1436 03dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1437 03de 02FB03F3 		mul	r3, r2, r3
 1438 03e2 1A46     		mov	r2, r3
 1439 03e4 07F5B353 		add	r3, r7, #5728
 1440 03e8 03F11003 		add	r3, r3, #16
 1441 03ec 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 50


 1442 03ee 1344     		add	r3, r3, r2
 1443 03f0 07F5B352 		add	r2, r7, #5728
 1444 03f4 02F10C02 		add	r2, r2, #12
 1445 03f8 1360     		str	r3, [r2]
 441:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1446              		.loc 1 441 0
 1447 03fa 07F5B353 		add	r3, r7, #5728
 1448 03fe 03F10C03 		add	r3, r3, #12
 1449 0402 1B68     		ldr	r3, [r3]
 1450 0404 B3F90020 		ldrsh	r2, [r3]
 1451 0408 07F12003 		add	r3, r7, #32
 1452 040c 023B     		subs	r3, r3, #2
 1453 040e 1A80     		strh	r2, [r3]	@ movhi
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1454              		.loc 1 442 0
 1455 0410 0023     		movs	r3, #0
 1456 0412 07F5B352 		add	r2, r7, #5728
 1457 0416 02F11E02 		add	r2, r2, #30
 1458 041a 1370     		strb	r3, [r2]
 1459 041c 3BE0     		b	.L94
 1460              	.L95:
 443:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1461              		.loc 1 443 0 discriminator 3
 1462 041e 07F5B353 		add	r3, r7, #5728
 1463 0422 03F11D03 		add	r3, r3, #29
 1464 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 0428 3222     		movs	r2, #50
 1466 042a 02FB03F3 		mul	r3, r2, r3
 1467 042e 1A1D     		adds	r2, r3, #4
 1468 0430 07F5B353 		add	r3, r7, #5728
 1469 0434 03F11F03 		add	r3, r3, #31
 1470 0438 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1471 043a 07F5B351 		add	r1, r7, #5728
 1472 043e 01F11B01 		add	r1, r1, #27
 1473 0442 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1474 0444 01FB03F3 		mul	r3, r1, r3
 1475 0448 1A44     		add	r2, r2, r3
 1476 044a 07F5B353 		add	r3, r7, #5728
 1477 044e 03F11B03 		add	r3, r3, #27
 1478 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1479 0454 1A44     		add	r2, r2, r3
 1480 0456 07F5B353 		add	r3, r7, #5728
 1481 045a 03F11E03 		add	r3, r3, #30
 1482 045e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1483 0460 D31A     		subs	r3, r2, r3
 1484 0462 5A1E     		subs	r2, r3, #1
 1485 0464 07F5B353 		add	r3, r7, #5728
 1486 0468 03F11E03 		add	r3, r3, #30
 1487 046c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1488 046e 07F12003 		add	r3, r7, #32
 1489 0472 023B     		subs	r3, r3, #2
 1490 0474 0B44     		add	r3, r3, r1
 1491 0476 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1492 0478 07F16003 		add	r3, r7, #96
 1493 047c 083B     		subs	r3, r3, #8
 1494 047e 9954     		strb	r1, [r3, r2]
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 51


 1495              		.loc 1 442 0 discriminator 3
 1496 0480 07F5B353 		add	r3, r7, #5728
 1497 0484 03F11E03 		add	r3, r3, #30
 1498 0488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1499 048a 0133     		adds	r3, r3, #1
 1500 048c 07F5B352 		add	r2, r7, #5728
 1501 0490 02F11E02 		add	r2, r2, #30
 1502 0494 1370     		strb	r3, [r2]
 1503              	.L94:
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1504              		.loc 1 442 0 is_stmt 0 discriminator 1
 1505 0496 07F5B353 		add	r3, r7, #5728
 1506 049a 03F11E03 		add	r3, r3, #30
 1507 049e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1508 04a0 07F5B353 		add	r3, r7, #5728
 1509 04a4 03F11B03 		add	r3, r3, #27
 1510 04a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1511 04aa 9A42     		cmp	r2, r3
 1512 04ac B7D3     		bcc	.L95
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1513              		.loc 1 439 0 is_stmt 1 discriminator 2
 1514 04ae 07F5B353 		add	r3, r7, #5728
 1515 04b2 03F11F03 		add	r3, r3, #31
 1516 04b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1517 04b8 0133     		adds	r3, r3, #1
 1518 04ba 07F5B352 		add	r2, r7, #5728
 1519 04be 02F11F02 		add	r2, r2, #31
 1520 04c2 1370     		strb	r3, [r2]
 1521              	.L93:
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1522              		.loc 1 439 0 is_stmt 0 discriminator 1
 1523 04c4 07F5B353 		add	r3, r7, #5728
 1524 04c8 03F11D03 		add	r3, r3, #29
 1525 04cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1526 04ce 07F12003 		add	r3, r7, #32
 1527 04d2 1C3B     		subs	r3, r3, #28
 1528 04d4 1B68     		ldr	r3, [r3]
 1529 04d6 1344     		add	r3, r3, r2
 1530 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 04da 07F5B352 		add	r2, r7, #5728
 1532 04de 02F11F02 		add	r2, r2, #31
 1533 04e2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1534 04e4 9A42     		cmp	r2, r3
 1535 04e6 FFF470AF 		bcc	.L96
 444:..\src/command_processing.c ****                         }
 445:..\src/command_processing.c ****                     }
 446:..\src/command_processing.c ****                     break;
 1536              		.loc 1 446 0 is_stmt 1
 1537 04ea 01F08ABF 		b	.L113
 1538              	.L85:
 447:..\src/command_processing.c ****                 case TYPE_UINT16:
 448:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1539              		.loc 1 448 0
 1540 04ee 0023     		movs	r3, #0
 1541 04f0 07F5B352 		add	r2, r7, #5728
 1542 04f4 02F11F02 		add	r2, r2, #31
 1543 04f8 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 52


 1544 04fa 7BE0     		b	.L97
 1545              	.L100:
 449:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1546              		.loc 1 449 0
 1547 04fc 07F5B353 		add	r3, r7, #5728
 1548 0500 03F11F03 		add	r3, r3, #31
 1549 0504 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1550 0506 07F5B352 		add	r2, r7, #5728
 1551 050a 02F11B02 		add	r2, r2, #27
 1552 050e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1553 0510 02FB03F3 		mul	r3, r2, r3
 1554 0514 1A46     		mov	r2, r3
 1555 0516 07F5B353 		add	r3, r7, #5728
 1556 051a 03F11003 		add	r3, r3, #16
 1557 051e 1B68     		ldr	r3, [r3]
 1558 0520 1344     		add	r3, r3, r2
 1559 0522 07F5B352 		add	r2, r7, #5728
 1560 0526 02F10C02 		add	r2, r2, #12
 1561 052a 1360     		str	r3, [r2]
 450:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1562              		.loc 1 450 0
 1563 052c 07F5B353 		add	r3, r7, #5728
 1564 0530 03F10C03 		add	r3, r3, #12
 1565 0534 1B68     		ldr	r3, [r3]
 1566 0536 1A88     		ldrh	r2, [r3]
 1567 0538 07F12003 		add	r3, r7, #32
 1568 053c 043B     		subs	r3, r3, #4
 1569 053e 1A80     		strh	r2, [r3]	@ movhi
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1570              		.loc 1 451 0
 1571 0540 0023     		movs	r3, #0
 1572 0542 07F5B352 		add	r2, r7, #5728
 1573 0546 02F11E02 		add	r2, r2, #30
 1574 054a 1370     		strb	r3, [r2]
 1575 054c 3BE0     		b	.L98
 1576              	.L99:
 452:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1577              		.loc 1 452 0 discriminator 3
 1578 054e 07F5B353 		add	r3, r7, #5728
 1579 0552 03F11D03 		add	r3, r3, #29
 1580 0556 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1581 0558 3222     		movs	r2, #50
 1582 055a 02FB03F3 		mul	r3, r2, r3
 1583 055e 1A1D     		adds	r2, r3, #4
 1584 0560 07F5B353 		add	r3, r7, #5728
 1585 0564 03F11F03 		add	r3, r3, #31
 1586 0568 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1587 056a 07F5B351 		add	r1, r7, #5728
 1588 056e 01F11B01 		add	r1, r1, #27
 1589 0572 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1590 0574 01FB03F3 		mul	r3, r1, r3
 1591 0578 1A44     		add	r2, r2, r3
 1592 057a 07F5B353 		add	r3, r7, #5728
 1593 057e 03F11B03 		add	r3, r3, #27
 1594 0582 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1595 0584 1A44     		add	r2, r2, r3
 1596 0586 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 53


 1597 058a 03F11E03 		add	r3, r3, #30
 1598 058e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 0590 D31A     		subs	r3, r2, r3
 1600 0592 5A1E     		subs	r2, r3, #1
 1601 0594 07F5B353 		add	r3, r7, #5728
 1602 0598 03F11E03 		add	r3, r3, #30
 1603 059c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1604 059e 07F12003 		add	r3, r7, #32
 1605 05a2 043B     		subs	r3, r3, #4
 1606 05a4 0B44     		add	r3, r3, r1
 1607 05a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1608 05a8 07F16003 		add	r3, r7, #96
 1609 05ac 083B     		subs	r3, r3, #8
 1610 05ae 9954     		strb	r1, [r3, r2]
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1611              		.loc 1 451 0 discriminator 3
 1612 05b0 07F5B353 		add	r3, r7, #5728
 1613 05b4 03F11E03 		add	r3, r3, #30
 1614 05b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 05ba 0133     		adds	r3, r3, #1
 1616 05bc 07F5B352 		add	r2, r7, #5728
 1617 05c0 02F11E02 		add	r2, r2, #30
 1618 05c4 1370     		strb	r3, [r2]
 1619              	.L98:
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1620              		.loc 1 451 0 is_stmt 0 discriminator 1
 1621 05c6 07F5B353 		add	r3, r7, #5728
 1622 05ca 03F11E03 		add	r3, r3, #30
 1623 05ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1624 05d0 07F5B353 		add	r3, r7, #5728
 1625 05d4 03F11B03 		add	r3, r3, #27
 1626 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1627 05da 9A42     		cmp	r2, r3
 1628 05dc B7D3     		bcc	.L99
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1629              		.loc 1 448 0 is_stmt 1 discriminator 2
 1630 05de 07F5B353 		add	r3, r7, #5728
 1631 05e2 03F11F03 		add	r3, r3, #31
 1632 05e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1633 05e8 0133     		adds	r3, r3, #1
 1634 05ea 07F5B352 		add	r2, r7, #5728
 1635 05ee 02F11F02 		add	r2, r2, #31
 1636 05f2 1370     		strb	r3, [r2]
 1637              	.L97:
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1638              		.loc 1 448 0 is_stmt 0 discriminator 1
 1639 05f4 07F5B353 		add	r3, r7, #5728
 1640 05f8 03F11D03 		add	r3, r3, #29
 1641 05fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1642 05fe 07F12003 		add	r3, r7, #32
 1643 0602 1C3B     		subs	r3, r3, #28
 1644 0604 1B68     		ldr	r3, [r3]
 1645 0606 1344     		add	r3, r3, r2
 1646 0608 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1647 060a 07F5B352 		add	r2, r7, #5728
 1648 060e 02F11F02 		add	r2, r2, #31
 1649 0612 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 54


 1650 0614 9A42     		cmp	r2, r3
 1651 0616 FFF471AF 		bcc	.L100
 453:..\src/command_processing.c ****                         }
 454:..\src/command_processing.c ****                     }
 455:..\src/command_processing.c ****                     break;
 1652              		.loc 1 455 0 is_stmt 1
 1653 061a 01F0F2BE 		b	.L113
 1654              	.L86:
 456:..\src/command_processing.c ****                 case TYPE_INT32: 
 457:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1655              		.loc 1 457 0
 1656 061e 0023     		movs	r3, #0
 1657 0620 07F5B352 		add	r2, r7, #5728
 1658 0624 02F11F02 		add	r2, r2, #31
 1659 0628 1370     		strb	r3, [r2]
 1660 062a 7BE0     		b	.L101
 1661              	.L104:
 458:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1662              		.loc 1 458 0
 1663 062c 07F5B353 		add	r3, r7, #5728
 1664 0630 03F11F03 		add	r3, r3, #31
 1665 0634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1666 0636 07F5B352 		add	r2, r7, #5728
 1667 063a 02F11B02 		add	r2, r2, #27
 1668 063e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1669 0640 02FB03F3 		mul	r3, r2, r3
 1670 0644 1A46     		mov	r2, r3
 1671 0646 07F5B353 		add	r3, r7, #5728
 1672 064a 03F11003 		add	r3, r3, #16
 1673 064e 1B68     		ldr	r3, [r3]
 1674 0650 1344     		add	r3, r3, r2
 1675 0652 07F5B352 		add	r2, r7, #5728
 1676 0656 02F10C02 		add	r2, r2, #12
 1677 065a 1360     		str	r3, [r2]
 459:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1678              		.loc 1 459 0
 1679 065c 07F5B353 		add	r3, r7, #5728
 1680 0660 03F10C03 		add	r3, r3, #12
 1681 0664 1B68     		ldr	r3, [r3]
 1682 0666 1A68     		ldr	r2, [r3]
 1683 0668 07F12003 		add	r3, r7, #32
 1684 066c 083B     		subs	r3, r3, #8
 1685 066e 1A60     		str	r2, [r3]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1686              		.loc 1 460 0
 1687 0670 0023     		movs	r3, #0
 1688 0672 07F5B352 		add	r2, r7, #5728
 1689 0676 02F11E02 		add	r2, r2, #30
 1690 067a 1370     		strb	r3, [r2]
 1691 067c 3BE0     		b	.L102
 1692              	.L103:
 461:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1693              		.loc 1 461 0 discriminator 3
 1694 067e 07F5B353 		add	r3, r7, #5728
 1695 0682 03F11D03 		add	r3, r3, #29
 1696 0686 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1697 0688 3222     		movs	r2, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 55


 1698 068a 02FB03F3 		mul	r3, r2, r3
 1699 068e 1A1D     		adds	r2, r3, #4
 1700 0690 07F5B353 		add	r3, r7, #5728
 1701 0694 03F11F03 		add	r3, r3, #31
 1702 0698 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1703 069a 07F5B351 		add	r1, r7, #5728
 1704 069e 01F11B01 		add	r1, r1, #27
 1705 06a2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1706 06a4 01FB03F3 		mul	r3, r1, r3
 1707 06a8 1A44     		add	r2, r2, r3
 1708 06aa 07F5B353 		add	r3, r7, #5728
 1709 06ae 03F11B03 		add	r3, r3, #27
 1710 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1711 06b4 1A44     		add	r2, r2, r3
 1712 06b6 07F5B353 		add	r3, r7, #5728
 1713 06ba 03F11E03 		add	r3, r3, #30
 1714 06be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1715 06c0 D31A     		subs	r3, r2, r3
 1716 06c2 5A1E     		subs	r2, r3, #1
 1717 06c4 07F5B353 		add	r3, r7, #5728
 1718 06c8 03F11E03 		add	r3, r3, #30
 1719 06cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1720 06ce 07F12003 		add	r3, r7, #32
 1721 06d2 083B     		subs	r3, r3, #8
 1722 06d4 0B44     		add	r3, r3, r1
 1723 06d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1724 06d8 07F16003 		add	r3, r7, #96
 1725 06dc 083B     		subs	r3, r3, #8
 1726 06de 9954     		strb	r1, [r3, r2]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1727              		.loc 1 460 0 discriminator 3
 1728 06e0 07F5B353 		add	r3, r7, #5728
 1729 06e4 03F11E03 		add	r3, r3, #30
 1730 06e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1731 06ea 0133     		adds	r3, r3, #1
 1732 06ec 07F5B352 		add	r2, r7, #5728
 1733 06f0 02F11E02 		add	r2, r2, #30
 1734 06f4 1370     		strb	r3, [r2]
 1735              	.L102:
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1736              		.loc 1 460 0 is_stmt 0 discriminator 1
 1737 06f6 07F5B353 		add	r3, r7, #5728
 1738 06fa 03F11E03 		add	r3, r3, #30
 1739 06fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1740 0700 07F5B353 		add	r3, r7, #5728
 1741 0704 03F11B03 		add	r3, r3, #27
 1742 0708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1743 070a 9A42     		cmp	r2, r3
 1744 070c B7D3     		bcc	.L103
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1745              		.loc 1 457 0 is_stmt 1 discriminator 2
 1746 070e 07F5B353 		add	r3, r7, #5728
 1747 0712 03F11F03 		add	r3, r3, #31
 1748 0716 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1749 0718 0133     		adds	r3, r3, #1
 1750 071a 07F5B352 		add	r2, r7, #5728
 1751 071e 02F11F02 		add	r2, r2, #31
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 56


 1752 0722 1370     		strb	r3, [r2]
 1753              	.L101:
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1754              		.loc 1 457 0 is_stmt 0 discriminator 1
 1755 0724 07F5B353 		add	r3, r7, #5728
 1756 0728 03F11D03 		add	r3, r3, #29
 1757 072c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1758 072e 07F12003 		add	r3, r7, #32
 1759 0732 1C3B     		subs	r3, r3, #28
 1760 0734 1B68     		ldr	r3, [r3]
 1761 0736 1344     		add	r3, r3, r2
 1762 0738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1763 073a 07F5B352 		add	r2, r7, #5728
 1764 073e 02F11F02 		add	r2, r2, #31
 1765 0742 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1766 0744 9A42     		cmp	r2, r3
 1767 0746 FFF471AF 		bcc	.L104
 462:..\src/command_processing.c ****                         }
 463:..\src/command_processing.c ****                     }
 464:..\src/command_processing.c ****                     break;
 1768              		.loc 1 464 0 is_stmt 1
 1769 074a 01F05ABE 		b	.L113
 1770              	.L87:
 465:..\src/command_processing.c ****                 case TYPE_UINT32: 
 466:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1771              		.loc 1 466 0
 1772 074e 0023     		movs	r3, #0
 1773 0750 07F5B352 		add	r2, r7, #5728
 1774 0754 02F11F02 		add	r2, r2, #31
 1775 0758 1370     		strb	r3, [r2]
 1776 075a 7BE0     		b	.L105
 1777              	.L108:
 467:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1778              		.loc 1 467 0
 1779 075c 07F5B353 		add	r3, r7, #5728
 1780 0760 03F11F03 		add	r3, r3, #31
 1781 0764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1782 0766 07F5B352 		add	r2, r7, #5728
 1783 076a 02F11B02 		add	r2, r2, #27
 1784 076e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1785 0770 02FB03F3 		mul	r3, r2, r3
 1786 0774 1A46     		mov	r2, r3
 1787 0776 07F5B353 		add	r3, r7, #5728
 1788 077a 03F11003 		add	r3, r3, #16
 1789 077e 1B68     		ldr	r3, [r3]
 1790 0780 1344     		add	r3, r3, r2
 1791 0782 07F5B352 		add	r2, r7, #5728
 1792 0786 02F10C02 		add	r2, r2, #12
 1793 078a 1360     		str	r3, [r2]
 468:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1794              		.loc 1 468 0
 1795 078c 07F5B353 		add	r3, r7, #5728
 1796 0790 03F10C03 		add	r3, r3, #12
 1797 0794 1B68     		ldr	r3, [r3]
 1798 0796 1A68     		ldr	r2, [r3]
 1799 0798 07F12003 		add	r3, r7, #32
 1800 079c 0C3B     		subs	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 57


 1801 079e 1A60     		str	r2, [r3]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1802              		.loc 1 469 0
 1803 07a0 0023     		movs	r3, #0
 1804 07a2 07F5B352 		add	r2, r7, #5728
 1805 07a6 02F11E02 		add	r2, r2, #30
 1806 07aa 1370     		strb	r3, [r2]
 1807 07ac 3BE0     		b	.L106
 1808              	.L107:
 470:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1809              		.loc 1 470 0 discriminator 3
 1810 07ae 07F5B353 		add	r3, r7, #5728
 1811 07b2 03F11D03 		add	r3, r3, #29
 1812 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1813 07b8 3222     		movs	r2, #50
 1814 07ba 02FB03F3 		mul	r3, r2, r3
 1815 07be 1A1D     		adds	r2, r3, #4
 1816 07c0 07F5B353 		add	r3, r7, #5728
 1817 07c4 03F11F03 		add	r3, r3, #31
 1818 07c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1819 07ca 07F5B351 		add	r1, r7, #5728
 1820 07ce 01F11B01 		add	r1, r1, #27
 1821 07d2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1822 07d4 01FB03F3 		mul	r3, r1, r3
 1823 07d8 1A44     		add	r2, r2, r3
 1824 07da 07F5B353 		add	r3, r7, #5728
 1825 07de 03F11B03 		add	r3, r3, #27
 1826 07e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 07e4 1A44     		add	r2, r2, r3
 1828 07e6 07F5B353 		add	r3, r7, #5728
 1829 07ea 03F11E03 		add	r3, r3, #30
 1830 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1831 07f0 D31A     		subs	r3, r2, r3
 1832 07f2 5A1E     		subs	r2, r3, #1
 1833 07f4 07F5B353 		add	r3, r7, #5728
 1834 07f8 03F11E03 		add	r3, r3, #30
 1835 07fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1836 07fe 07F12003 		add	r3, r7, #32
 1837 0802 0C3B     		subs	r3, r3, #12
 1838 0804 0B44     		add	r3, r3, r1
 1839 0806 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1840 0808 07F16003 		add	r3, r7, #96
 1841 080c 083B     		subs	r3, r3, #8
 1842 080e 9954     		strb	r1, [r3, r2]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1843              		.loc 1 469 0 discriminator 3
 1844 0810 07F5B353 		add	r3, r7, #5728
 1845 0814 03F11E03 		add	r3, r3, #30
 1846 0818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 081a 0133     		adds	r3, r3, #1
 1848 081c 07F5B352 		add	r2, r7, #5728
 1849 0820 02F11E02 		add	r2, r2, #30
 1850 0824 1370     		strb	r3, [r2]
 1851              	.L106:
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1852              		.loc 1 469 0 is_stmt 0 discriminator 1
 1853 0826 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 58


 1854 082a 03F11E03 		add	r3, r3, #30
 1855 082e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1856 0830 07F5B353 		add	r3, r7, #5728
 1857 0834 03F11B03 		add	r3, r3, #27
 1858 0838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1859 083a 9A42     		cmp	r2, r3
 1860 083c B7D3     		bcc	.L107
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1861              		.loc 1 466 0 is_stmt 1 discriminator 2
 1862 083e 07F5B353 		add	r3, r7, #5728
 1863 0842 03F11F03 		add	r3, r3, #31
 1864 0846 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1865 0848 0133     		adds	r3, r3, #1
 1866 084a 07F5B352 		add	r2, r7, #5728
 1867 084e 02F11F02 		add	r2, r2, #31
 1868 0852 1370     		strb	r3, [r2]
 1869              	.L105:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1870              		.loc 1 466 0 is_stmt 0 discriminator 1
 1871 0854 07F5B353 		add	r3, r7, #5728
 1872 0858 03F11D03 		add	r3, r3, #29
 1873 085c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1874 085e 07F12003 		add	r3, r7, #32
 1875 0862 1C3B     		subs	r3, r3, #28
 1876 0864 1B68     		ldr	r3, [r3]
 1877 0866 1344     		add	r3, r3, r2
 1878 0868 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1879 086a 07F5B352 		add	r2, r7, #5728
 1880 086e 02F11F02 		add	r2, r2, #31
 1881 0872 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1882 0874 9A42     		cmp	r2, r3
 1883 0876 FFF471AF 		bcc	.L108
 471:..\src/command_processing.c ****                         }
 472:..\src/command_processing.c ****                     }
 473:..\src/command_processing.c ****                     break;
 1884              		.loc 1 473 0 is_stmt 1
 1885 087a 01F0C2BD 		b	.L113
 1886              	.L88:
 474:..\src/command_processing.c ****                     
 475:..\src/command_processing.c ****                 case TYPE_FLOAT:
 476:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1887              		.loc 1 476 0
 1888 087e 0023     		movs	r3, #0
 1889 0880 07F5B352 		add	r2, r7, #5728
 1890 0884 02F11F02 		add	r2, r2, #31
 1891 0888 1370     		strb	r3, [r2]
 1892 088a 79E0     		b	.L109
 1893              	.L112:
 477:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1894              		.loc 1 477 0
 1895 088c 07F5B353 		add	r3, r7, #5728
 1896 0890 03F11F03 		add	r3, r3, #31
 1897 0894 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1898 0896 07F5B352 		add	r2, r7, #5728
 1899 089a 02F11B02 		add	r2, r2, #27
 1900 089e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1901 08a0 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 59


 1902 08a4 1A46     		mov	r2, r3
 1903 08a6 07F5B353 		add	r3, r7, #5728
 1904 08aa 03F11003 		add	r3, r3, #16
 1905 08ae 1B68     		ldr	r3, [r3]
 1906 08b0 1344     		add	r3, r3, r2
 1907 08b2 07F5B352 		add	r2, r7, #5728
 1908 08b6 02F10C02 		add	r2, r2, #12
 1909 08ba 1360     		str	r3, [r2]
 478:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1910              		.loc 1 478 0
 1911 08bc 07F5B353 		add	r3, r7, #5728
 1912 08c0 03F10C03 		add	r3, r3, #12
 1913 08c4 1B68     		ldr	r3, [r3]
 1914 08c6 1A68     		ldr	r2, [r3]	@ float
 1915 08c8 07F12003 		add	r3, r7, #32
 1916 08cc 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1917              		.loc 1 479 0
 1918 08ce 0023     		movs	r3, #0
 1919 08d0 07F5B352 		add	r2, r7, #5728
 1920 08d4 02F11E02 		add	r2, r2, #30
 1921 08d8 1370     		strb	r3, [r2]
 1922 08da 3AE0     		b	.L110
 1923              	.L111:
 480:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1924              		.loc 1 480 0 discriminator 3
 1925 08dc 07F5B353 		add	r3, r7, #5728
 1926 08e0 03F11D03 		add	r3, r3, #29
 1927 08e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1928 08e6 3222     		movs	r2, #50
 1929 08e8 02FB03F3 		mul	r3, r2, r3
 1930 08ec 1A1D     		adds	r2, r3, #4
 1931 08ee 07F5B353 		add	r3, r7, #5728
 1932 08f2 03F11F03 		add	r3, r3, #31
 1933 08f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1934 08f8 07F5B351 		add	r1, r7, #5728
 1935 08fc 01F11B01 		add	r1, r1, #27
 1936 0900 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1937 0902 01FB03F3 		mul	r3, r1, r3
 1938 0906 1A44     		add	r2, r2, r3
 1939 0908 07F5B353 		add	r3, r7, #5728
 1940 090c 03F11B03 		add	r3, r3, #27
 1941 0910 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1942 0912 1A44     		add	r2, r2, r3
 1943 0914 07F5B353 		add	r3, r7, #5728
 1944 0918 03F11E03 		add	r3, r3, #30
 1945 091c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1946 091e D31A     		subs	r3, r2, r3
 1947 0920 5A1E     		subs	r2, r3, #1
 1948 0922 07F5B353 		add	r3, r7, #5728
 1949 0926 03F11E03 		add	r3, r3, #30
 1950 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 092c 07F12001 		add	r1, r7, #32
 1952 0930 0B44     		add	r3, r3, r1
 1953 0932 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1954 0934 07F16003 		add	r3, r7, #96
 1955 0938 083B     		subs	r3, r3, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 60


 1956 093a 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1957              		.loc 1 479 0 discriminator 3
 1958 093c 07F5B353 		add	r3, r7, #5728
 1959 0940 03F11E03 		add	r3, r3, #30
 1960 0944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1961 0946 0133     		adds	r3, r3, #1
 1962 0948 07F5B352 		add	r2, r7, #5728
 1963 094c 02F11E02 		add	r2, r2, #30
 1964 0950 1370     		strb	r3, [r2]
 1965              	.L110:
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1966              		.loc 1 479 0 is_stmt 0 discriminator 1
 1967 0952 07F5B353 		add	r3, r7, #5728
 1968 0956 03F11E03 		add	r3, r3, #30
 1969 095a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1970 095c 07F5B353 		add	r3, r7, #5728
 1971 0960 03F11B03 		add	r3, r3, #27
 1972 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1973 0966 9A42     		cmp	r2, r3
 1974 0968 B8D3     		bcc	.L111
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1975              		.loc 1 476 0 is_stmt 1 discriminator 2
 1976 096a 07F5B353 		add	r3, r7, #5728
 1977 096e 03F11F03 		add	r3, r3, #31
 1978 0972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1979 0974 0133     		adds	r3, r3, #1
 1980 0976 07F5B352 		add	r2, r7, #5728
 1981 097a 02F11F02 		add	r2, r2, #31
 1982 097e 1370     		strb	r3, [r2]
 1983              	.L109:
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1984              		.loc 1 476 0 is_stmt 0 discriminator 1
 1985 0980 07F5B353 		add	r3, r7, #5728
 1986 0984 03F11D03 		add	r3, r3, #29
 1987 0988 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1988 098a 07F12003 		add	r3, r7, #32
 1989 098e 1C3B     		subs	r3, r3, #28
 1990 0990 1B68     		ldr	r3, [r3]
 1991 0992 1344     		add	r3, r3, r2
 1992 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1993 0996 07F5B352 		add	r2, r7, #5728
 1994 099a 02F11F02 		add	r2, r2, #31
 1995 099e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1996 09a0 9A42     		cmp	r2, r3
 1997 09a2 FFF473AF 		bcc	.L112
 481:..\src/command_processing.c ****                         }
 482:..\src/command_processing.c ****                     }
 483:..\src/command_processing.c ****                     break;   
 1998              		.loc 1 483 0 is_stmt 1 discriminator 7
 1999 09a6 00BF     		nop
 2000 09a8 01F02BBD 		b	.L113
 2001              	.L79:
 484:..\src/command_processing.c ****             }
 485:..\src/command_processing.c ****         }
 486:..\src/command_processing.c ****         else {
 487:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 61


 488:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 489:..\src/command_processing.c ****             
 490:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 491:..\src/command_processing.c ****                 switch(idx+1){
 2002              		.loc 1 491 0
 2003 09ac 07F5B353 		add	r3, r7, #5728
 2004 09b0 03F11D03 		add	r3, r3, #29
 2005 09b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2006 09b6 0133     		adds	r3, r3, #1
 2007 09b8 023B     		subs	r3, r3, #2
 2008 09ba 342B     		cmp	r3, #52
 2009 09bc 01F22085 		bhi	.L283
 2010 09c0 01A2     		adr	r2, .L116
 2011 09c2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2012 09c6 00BF     		.p2align 2
 2013              	.L116:
 2014 09c8 9D0A0000 		.word	.L115+1
 2015 09cc 410F0000 		.word	.L117+1
 2016 09d0 01240000 		.word	.L283+1
 2017 09d4 01240000 		.word	.L283+1
 2018 09d8 01240000 		.word	.L283+1
 2019 09dc 01240000 		.word	.L283+1
 2020 09e0 E5130000 		.word	.L118+1
 2021 09e4 01240000 		.word	.L283+1
 2022 09e8 01240000 		.word	.L283+1
 2023 09ec 59150000 		.word	.L119+1
 2024 09f0 01240000 		.word	.L283+1
 2025 09f4 01240000 		.word	.L283+1
 2026 09f8 01240000 		.word	.L283+1
 2027 09fc 01240000 		.word	.L283+1
 2028 0a00 01240000 		.word	.L283+1
 2029 0a04 01240000 		.word	.L283+1
 2030 0a08 01240000 		.word	.L283+1
 2031 0a0c 01240000 		.word	.L283+1
 2032 0a10 01240000 		.word	.L283+1
 2033 0a14 01240000 		.word	.L283+1
 2034 0a18 01240000 		.word	.L283+1
 2035 0a1c 01240000 		.word	.L283+1
 2036 0a20 11170000 		.word	.L120+1
 2037 0a24 01240000 		.word	.L283+1
 2038 0a28 01240000 		.word	.L283+1
 2039 0a2c 01240000 		.word	.L283+1
 2040 0a30 01240000 		.word	.L283+1
 2041 0a34 01240000 		.word	.L283+1
 2042 0a38 01240000 		.word	.L283+1
 2043 0a3c 01240000 		.word	.L283+1
 2044 0a40 01240000 		.word	.L283+1
 2045 0a44 01240000 		.word	.L283+1
 2046 0a48 01240000 		.word	.L283+1
 2047 0a4c 01240000 		.word	.L283+1
 2048 0a50 01240000 		.word	.L283+1
 2049 0a54 01240000 		.word	.L283+1
 2050 0a58 01240000 		.word	.L283+1
 2051 0a5c 01240000 		.word	.L283+1
 2052 0a60 01240000 		.word	.L283+1
 2053 0a64 01240000 		.word	.L283+1
 2054 0a68 01240000 		.word	.L283+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 62


 2055 0a6c 01240000 		.word	.L283+1
 2056 0a70 01240000 		.word	.L283+1
 2057 0a74 D7170000 		.word	.L121+1
 2058 0a78 811C0000 		.word	.L122+1
 2059 0a7c 01240000 		.word	.L283+1
 2060 0a80 01240000 		.word	.L283+1
 2061 0a84 01240000 		.word	.L283+1
 2062 0a88 01240000 		.word	.L283+1
 2063 0a8c 23210000 		.word	.L123+1
 2064 0a90 01240000 		.word	.L283+1
 2065 0a94 01240000 		.word	.L283+1
 2066 0a98 43220000 		.word	.L124+1
 2067              		.p2align 1
 2068              	.L115:
 492:..\src/command_processing.c ****                     case 2:         // Position PID
 493:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2069              		.loc 1 493 0
 2070 0a9c 07F5B353 		add	r3, r7, #5728
 2071 0aa0 03F11703 		add	r3, r3, #23
 2072 0aa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 0aa6 D34A     		ldr	r2, .L289
 2074 0aa8 7421     		movs	r1, #116
 2075 0aaa 01FB03F3 		mul	r3, r1, r3
 2076 0aae 1344     		add	r3, r3, r2
 2077 0ab0 03F20F13 		addw	r3, r3, #271
 2078 0ab4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2079 0ab6 032B     		cmp	r3, #3
 2080 0ab8 00F02081 		beq	.L125
 494:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2081              		.loc 1 494 0
 2082 0abc 07F5B353 		add	r3, r7, #5728
 2083 0ac0 03F11703 		add	r3, r3, #23
 2084 0ac4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2085 0ac6 CB4A     		ldr	r2, .L289
 2086 0ac8 7421     		movs	r1, #116
 2087 0aca 01FB03F3 		mul	r3, r1, r3
 2088 0ace 1344     		add	r3, r3, r2
 2089 0ad0 B033     		adds	r3, r3, #176
 2090 0ad2 1B68     		ldr	r3, [r3]
 2091 0ad4 1846     		mov	r0, r3
 2092 0ad6 FFF7FEFF 		bl	__aeabi_i2f
 2093 0ada 0346     		mov	r3, r0
 2094 0adc 4FF08F41 		mov	r1, #1199570944
 2095 0ae0 1846     		mov	r0, r3
 2096 0ae2 FFF7FEFF 		bl	__aeabi_fdiv
 2097 0ae6 0346     		mov	r3, r0
 2098 0ae8 1A46     		mov	r2, r3
 2099 0aea 07F12003 		add	r3, r7, #32
 2100 0aee 1A60     		str	r2, [r3]	@ float
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2101              		.loc 1 495 0
 2102 0af0 0023     		movs	r3, #0
 2103 0af2 07F5B352 		add	r2, r7, #5728
 2104 0af6 02F11F02 		add	r2, r2, #31
 2105 0afa 1370     		strb	r3, [r2]
 2106 0afc 2DE0     		b	.L126
 2107              	.L127:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 63


 496:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2108              		.loc 1 496 0 discriminator 3
 2109 0afe 07F5B353 		add	r3, r7, #5728
 2110 0b02 03F11D03 		add	r3, r3, #29
 2111 0b06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2112 0b08 3222     		movs	r2, #50
 2113 0b0a 02FB03F3 		mul	r3, r2, r3
 2114 0b0e 1A1D     		adds	r2, r3, #4
 2115 0b10 07F5B353 		add	r3, r7, #5728
 2116 0b14 03F11B03 		add	r3, r3, #27
 2117 0b18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2118 0b1a 1A44     		add	r2, r2, r3
 2119 0b1c 07F5B353 		add	r3, r7, #5728
 2120 0b20 03F11F03 		add	r3, r3, #31
 2121 0b24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2122 0b26 D31A     		subs	r3, r2, r3
 2123 0b28 5A1E     		subs	r2, r3, #1
 2124 0b2a 07F5B353 		add	r3, r7, #5728
 2125 0b2e 03F11F03 		add	r3, r3, #31
 2126 0b32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2127 0b34 07F12001 		add	r1, r7, #32
 2128 0b38 0B44     		add	r3, r3, r1
 2129 0b3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2130 0b3c 07F16003 		add	r3, r7, #96
 2131 0b40 083B     		subs	r3, r3, #8
 2132 0b42 9954     		strb	r1, [r3, r2]
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2133              		.loc 1 495 0 discriminator 3
 2134 0b44 07F5B353 		add	r3, r7, #5728
 2135 0b48 03F11F03 		add	r3, r3, #31
 2136 0b4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2137 0b4e 0133     		adds	r3, r3, #1
 2138 0b50 07F5B352 		add	r2, r7, #5728
 2139 0b54 02F11F02 		add	r2, r2, #31
 2140 0b58 1370     		strb	r3, [r2]
 2141              	.L126:
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2142              		.loc 1 495 0 is_stmt 0 discriminator 1
 2143 0b5a 07F5B353 		add	r3, r7, #5728
 2144 0b5e 03F11F03 		add	r3, r3, #31
 2145 0b62 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2146 0b64 07F5B353 		add	r3, r7, #5728
 2147 0b68 03F11B03 		add	r3, r3, #27
 2148 0b6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2149 0b6e 9A42     		cmp	r2, r3
 2150 0b70 C5D3     		bcc	.L127
 497:..\src/command_processing.c ****                             }
 498:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2151              		.loc 1 498 0 is_stmt 1
 2152 0b72 07F5B353 		add	r3, r7, #5728
 2153 0b76 03F11703 		add	r3, r3, #23
 2154 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2155 0b7c 9D4A     		ldr	r2, .L289
 2156 0b7e 7421     		movs	r1, #116
 2157 0b80 01FB03F3 		mul	r3, r1, r3
 2158 0b84 1344     		add	r3, r3, r2
 2159 0b86 B433     		adds	r3, r3, #180
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 64


 2160 0b88 1B68     		ldr	r3, [r3]
 2161 0b8a 1846     		mov	r0, r3
 2162 0b8c FFF7FEFF 		bl	__aeabi_i2f
 2163 0b90 0346     		mov	r3, r0
 2164 0b92 4FF08F41 		mov	r1, #1199570944
 2165 0b96 1846     		mov	r0, r3
 2166 0b98 FFF7FEFF 		bl	__aeabi_fdiv
 2167 0b9c 0346     		mov	r3, r0
 2168 0b9e 1A46     		mov	r2, r3
 2169 0ba0 07F12003 		add	r3, r7, #32
 2170 0ba4 1A60     		str	r2, [r3]	@ float
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2171              		.loc 1 499 0
 2172 0ba6 0023     		movs	r3, #0
 2173 0ba8 07F5B352 		add	r2, r7, #5728
 2174 0bac 02F11F02 		add	r2, r2, #31
 2175 0bb0 1370     		strb	r3, [r2]
 2176 0bb2 33E0     		b	.L128
 2177              	.L129:
 500:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2178              		.loc 1 500 0 discriminator 3
 2179 0bb4 07F5B353 		add	r3, r7, #5728
 2180 0bb8 03F11D03 		add	r3, r3, #29
 2181 0bbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2182 0bbe 3222     		movs	r2, #50
 2183 0bc0 02FB03F3 		mul	r3, r2, r3
 2184 0bc4 1A1D     		adds	r2, r3, #4
 2185 0bc6 07F5B353 		add	r3, r7, #5728
 2186 0bca 03F11B03 		add	r3, r3, #27
 2187 0bce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2188 0bd0 1A44     		add	r2, r2, r3
 2189 0bd2 07F5B353 		add	r3, r7, #5728
 2190 0bd6 03F11B03 		add	r3, r3, #27
 2191 0bda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2192 0bdc 1A44     		add	r2, r2, r3
 2193 0bde 07F5B353 		add	r3, r7, #5728
 2194 0be2 03F11F03 		add	r3, r3, #31
 2195 0be6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2196 0be8 D31A     		subs	r3, r2, r3
 2197 0bea 5A1E     		subs	r2, r3, #1
 2198 0bec 07F5B353 		add	r3, r7, #5728
 2199 0bf0 03F11F03 		add	r3, r3, #31
 2200 0bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2201 0bf6 07F12001 		add	r1, r7, #32
 2202 0bfa 0B44     		add	r3, r3, r1
 2203 0bfc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2204 0bfe 07F16003 		add	r3, r7, #96
 2205 0c02 083B     		subs	r3, r3, #8
 2206 0c04 9954     		strb	r1, [r3, r2]
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2207              		.loc 1 499 0 discriminator 3
 2208 0c06 07F5B353 		add	r3, r7, #5728
 2209 0c0a 03F11F03 		add	r3, r3, #31
 2210 0c0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2211 0c10 0133     		adds	r3, r3, #1
 2212 0c12 07F5B352 		add	r2, r7, #5728
 2213 0c16 02F11F02 		add	r2, r2, #31
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 65


 2214 0c1a 1370     		strb	r3, [r2]
 2215              	.L128:
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2216              		.loc 1 499 0 is_stmt 0 discriminator 1
 2217 0c1c 07F5B353 		add	r3, r7, #5728
 2218 0c20 03F11F03 		add	r3, r3, #31
 2219 0c24 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2220 0c26 07F5B353 		add	r3, r7, #5728
 2221 0c2a 03F11B03 		add	r3, r3, #27
 2222 0c2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2223 0c30 9A42     		cmp	r2, r3
 2224 0c32 BFD3     		bcc	.L129
 501:..\src/command_processing.c ****                             }
 502:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2225              		.loc 1 502 0 is_stmt 1
 2226 0c34 07F5B353 		add	r3, r7, #5728
 2227 0c38 03F11703 		add	r3, r3, #23
 2228 0c3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2229 0c3e 6D4A     		ldr	r2, .L289
 2230 0c40 7421     		movs	r1, #116
 2231 0c42 01FB03F3 		mul	r3, r1, r3
 2232 0c46 1344     		add	r3, r3, r2
 2233 0c48 B833     		adds	r3, r3, #184
 2234 0c4a 1B68     		ldr	r3, [r3]
 2235 0c4c 1846     		mov	r0, r3
 2236 0c4e FFF7FEFF 		bl	__aeabi_i2f
 2237 0c52 0346     		mov	r3, r0
 2238 0c54 4FF08F41 		mov	r1, #1199570944
 2239 0c58 1846     		mov	r0, r3
 2240 0c5a FFF7FEFF 		bl	__aeabi_fdiv
 2241 0c5e 0346     		mov	r3, r0
 2242 0c60 1A46     		mov	r2, r3
 2243 0c62 07F12003 		add	r3, r7, #32
 2244 0c66 1A60     		str	r2, [r3]	@ float
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2245              		.loc 1 503 0
 2246 0c68 0023     		movs	r3, #0
 2247 0c6a 07F5B352 		add	r2, r7, #5728
 2248 0c6e 02F11F02 		add	r2, r2, #31
 2249 0c72 1370     		strb	r3, [r2]
 2250 0c74 34E0     		b	.L130
 2251              	.L131:
 504:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2252              		.loc 1 504 0 discriminator 3
 2253 0c76 07F5B353 		add	r3, r7, #5728
 2254 0c7a 03F11D03 		add	r3, r3, #29
 2255 0c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2256 0c80 3222     		movs	r2, #50
 2257 0c82 02FB03F3 		mul	r3, r2, r3
 2258 0c86 1A1D     		adds	r2, r3, #4
 2259 0c88 07F5B353 		add	r3, r7, #5728
 2260 0c8c 03F11B03 		add	r3, r3, #27
 2261 0c90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2262 0c92 5B00     		lsls	r3, r3, #1
 2263 0c94 1A44     		add	r2, r2, r3
 2264 0c96 07F5B353 		add	r3, r7, #5728
 2265 0c9a 03F11B03 		add	r3, r3, #27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 66


 2266 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2267 0ca0 1A44     		add	r2, r2, r3
 2268 0ca2 07F5B353 		add	r3, r7, #5728
 2269 0ca6 03F11F03 		add	r3, r3, #31
 2270 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2271 0cac D31A     		subs	r3, r2, r3
 2272 0cae 5A1E     		subs	r2, r3, #1
 2273 0cb0 07F5B353 		add	r3, r7, #5728
 2274 0cb4 03F11F03 		add	r3, r3, #31
 2275 0cb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2276 0cba 07F12001 		add	r1, r7, #32
 2277 0cbe 0B44     		add	r3, r3, r1
 2278 0cc0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2279 0cc2 07F16003 		add	r3, r7, #96
 2280 0cc6 083B     		subs	r3, r3, #8
 2281 0cc8 9954     		strb	r1, [r3, r2]
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2282              		.loc 1 503 0 discriminator 3
 2283 0cca 07F5B353 		add	r3, r7, #5728
 2284 0cce 03F11F03 		add	r3, r3, #31
 2285 0cd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2286 0cd4 0133     		adds	r3, r3, #1
 2287 0cd6 07F5B352 		add	r2, r7, #5728
 2288 0cda 02F11F02 		add	r2, r2, #31
 2289 0cde 1370     		strb	r3, [r2]
 2290              	.L130:
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2291              		.loc 1 503 0 is_stmt 0 discriminator 1
 2292 0ce0 07F5B353 		add	r3, r7, #5728
 2293 0ce4 03F11F03 		add	r3, r3, #31
 2294 0ce8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2295 0cea 07F5B353 		add	r3, r7, #5728
 2296 0cee 03F11B03 		add	r3, r3, #27
 2297 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2298 0cf4 9A42     		cmp	r2, r3
 2299 0cf6 BED3     		bcc	.L131
 505:..\src/command_processing.c ****                             } 
 506:..\src/command_processing.c ****                         }
 507:..\src/command_processing.c ****                         else {
 508:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 511:..\src/command_processing.c ****                             }
 512:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 515:..\src/command_processing.c ****                             }
 516:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 519:..\src/command_processing.c ****                             }
 520:..\src/command_processing.c ****                         }
 521:..\src/command_processing.c ****                         break;
 2300              		.loc 1 521 0 is_stmt 1
 2301 0cf8 01F083BB 		b	.L113
 2302              	.L125:
 508:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 67


 2303              		.loc 1 508 0
 2304 0cfc 07F5B353 		add	r3, r7, #5728
 2305 0d00 03F11703 		add	r3, r3, #23
 2306 0d04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2307 0d06 3B4A     		ldr	r2, .L289
 2308 0d08 7421     		movs	r1, #116
 2309 0d0a 01FB03F3 		mul	r3, r1, r3
 2310 0d0e 1344     		add	r3, r3, r2
 2311 0d10 C833     		adds	r3, r3, #200
 2312 0d12 1B68     		ldr	r3, [r3]
 2313 0d14 1846     		mov	r0, r3
 2314 0d16 FFF7FEFF 		bl	__aeabi_i2f
 2315 0d1a 0346     		mov	r3, r0
 2316 0d1c 4FF08F41 		mov	r1, #1199570944
 2317 0d20 1846     		mov	r0, r3
 2318 0d22 FFF7FEFF 		bl	__aeabi_fdiv
 2319 0d26 0346     		mov	r3, r0
 2320 0d28 1A46     		mov	r2, r3
 2321 0d2a 07F12003 		add	r3, r7, #32
 2322 0d2e 1A60     		str	r2, [r3]	@ float
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2323              		.loc 1 509 0
 2324 0d30 0023     		movs	r3, #0
 2325 0d32 07F5B352 		add	r2, r7, #5728
 2326 0d36 02F11F02 		add	r2, r2, #31
 2327 0d3a 1370     		strb	r3, [r2]
 2328 0d3c 2DE0     		b	.L133
 2329              	.L134:
 510:..\src/command_processing.c ****                             }
 2330              		.loc 1 510 0 discriminator 3
 2331 0d3e 07F5B353 		add	r3, r7, #5728
 2332 0d42 03F11D03 		add	r3, r3, #29
 2333 0d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2334 0d48 3222     		movs	r2, #50
 2335 0d4a 02FB03F3 		mul	r3, r2, r3
 2336 0d4e 1A1D     		adds	r2, r3, #4
 2337 0d50 07F5B353 		add	r3, r7, #5728
 2338 0d54 03F11B03 		add	r3, r3, #27
 2339 0d58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2340 0d5a 1A44     		add	r2, r2, r3
 2341 0d5c 07F5B353 		add	r3, r7, #5728
 2342 0d60 03F11F03 		add	r3, r3, #31
 2343 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2344 0d66 D31A     		subs	r3, r2, r3
 2345 0d68 5A1E     		subs	r2, r3, #1
 2346 0d6a 07F5B353 		add	r3, r7, #5728
 2347 0d6e 03F11F03 		add	r3, r3, #31
 2348 0d72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2349 0d74 07F12001 		add	r1, r7, #32
 2350 0d78 0B44     		add	r3, r3, r1
 2351 0d7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2352 0d7c 07F16003 		add	r3, r7, #96
 2353 0d80 083B     		subs	r3, r3, #8
 2354 0d82 9954     		strb	r1, [r3, r2]
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2355              		.loc 1 509 0 discriminator 3
 2356 0d84 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 68


 2357 0d88 03F11F03 		add	r3, r3, #31
 2358 0d8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 0d8e 0133     		adds	r3, r3, #1
 2360 0d90 07F5B352 		add	r2, r7, #5728
 2361 0d94 02F11F02 		add	r2, r2, #31
 2362 0d98 1370     		strb	r3, [r2]
 2363              	.L133:
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2364              		.loc 1 509 0 is_stmt 0 discriminator 1
 2365 0d9a 07F5B353 		add	r3, r7, #5728
 2366 0d9e 03F11F03 		add	r3, r3, #31
 2367 0da2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2368 0da4 07F5B353 		add	r3, r7, #5728
 2369 0da8 03F11B03 		add	r3, r3, #27
 2370 0dac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2371 0dae 9A42     		cmp	r2, r3
 2372 0db0 C5D3     		bcc	.L134
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2373              		.loc 1 512 0 is_stmt 1
 2374 0db2 07F5B353 		add	r3, r7, #5728
 2375 0db6 03F11703 		add	r3, r3, #23
 2376 0dba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2377 0dbc 0D4A     		ldr	r2, .L289
 2378 0dbe 7421     		movs	r1, #116
 2379 0dc0 01FB03F3 		mul	r3, r1, r3
 2380 0dc4 1344     		add	r3, r3, r2
 2381 0dc6 CC33     		adds	r3, r3, #204
 2382 0dc8 1B68     		ldr	r3, [r3]
 2383 0dca 1846     		mov	r0, r3
 2384 0dcc FFF7FEFF 		bl	__aeabi_i2f
 2385 0dd0 0346     		mov	r3, r0
 2386 0dd2 4FF08F41 		mov	r1, #1199570944
 2387 0dd6 1846     		mov	r0, r3
 2388 0dd8 FFF7FEFF 		bl	__aeabi_fdiv
 2389 0ddc 0346     		mov	r3, r0
 2390 0dde 1A46     		mov	r2, r3
 2391 0de0 07F12003 		add	r3, r7, #32
 2392 0de4 1A60     		str	r2, [r3]	@ float
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2393              		.loc 1 513 0
 2394 0de6 0023     		movs	r3, #0
 2395 0de8 07F5B352 		add	r2, r7, #5728
 2396 0dec 02F11F02 		add	r2, r2, #31
 2397 0df0 1370     		strb	r3, [r2]
 2398 0df2 35E0     		b	.L135
 2399              	.L290:
 2400              		.align	2
 2401              	.L289:
 2402 0df4 00000000 		.word	c_mem
 2403              	.L136:
 514:..\src/command_processing.c ****                             }
 2404              		.loc 1 514 0 discriminator 3
 2405 0df8 07F5B353 		add	r3, r7, #5728
 2406 0dfc 03F11D03 		add	r3, r3, #29
 2407 0e00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2408 0e02 3222     		movs	r2, #50
 2409 0e04 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 69


 2410 0e08 1A1D     		adds	r2, r3, #4
 2411 0e0a 07F5B353 		add	r3, r7, #5728
 2412 0e0e 03F11B03 		add	r3, r3, #27
 2413 0e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2414 0e14 1A44     		add	r2, r2, r3
 2415 0e16 07F5B353 		add	r3, r7, #5728
 2416 0e1a 03F11B03 		add	r3, r3, #27
 2417 0e1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2418 0e20 1A44     		add	r2, r2, r3
 2419 0e22 07F5B353 		add	r3, r7, #5728
 2420 0e26 03F11F03 		add	r3, r3, #31
 2421 0e2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2422 0e2c D31A     		subs	r3, r2, r3
 2423 0e2e 5A1E     		subs	r2, r3, #1
 2424 0e30 07F5B353 		add	r3, r7, #5728
 2425 0e34 03F11F03 		add	r3, r3, #31
 2426 0e38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2427 0e3a 07F12001 		add	r1, r7, #32
 2428 0e3e 0B44     		add	r3, r3, r1
 2429 0e40 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2430 0e42 07F16003 		add	r3, r7, #96
 2431 0e46 083B     		subs	r3, r3, #8
 2432 0e48 9954     		strb	r1, [r3, r2]
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2433              		.loc 1 513 0 discriminator 3
 2434 0e4a 07F5B353 		add	r3, r7, #5728
 2435 0e4e 03F11F03 		add	r3, r3, #31
 2436 0e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2437 0e54 0133     		adds	r3, r3, #1
 2438 0e56 07F5B352 		add	r2, r7, #5728
 2439 0e5a 02F11F02 		add	r2, r2, #31
 2440 0e5e 1370     		strb	r3, [r2]
 2441              	.L135:
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2442              		.loc 1 513 0 is_stmt 0 discriminator 1
 2443 0e60 07F5B353 		add	r3, r7, #5728
 2444 0e64 03F11F03 		add	r3, r3, #31
 2445 0e68 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2446 0e6a 07F5B353 		add	r3, r7, #5728
 2447 0e6e 03F11B03 		add	r3, r3, #27
 2448 0e72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2449 0e74 9A42     		cmp	r2, r3
 2450 0e76 BFD3     		bcc	.L136
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2451              		.loc 1 516 0 is_stmt 1
 2452 0e78 07F5B353 		add	r3, r7, #5728
 2453 0e7c 03F11703 		add	r3, r3, #23
 2454 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2455 0e82 C74A     		ldr	r2, .L291
 2456 0e84 7421     		movs	r1, #116
 2457 0e86 01FB03F3 		mul	r3, r1, r3
 2458 0e8a 1344     		add	r3, r3, r2
 2459 0e8c D033     		adds	r3, r3, #208
 2460 0e8e 1B68     		ldr	r3, [r3]
 2461 0e90 1846     		mov	r0, r3
 2462 0e92 FFF7FEFF 		bl	__aeabi_i2f
 2463 0e96 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 70


 2464 0e98 4FF08F41 		mov	r1, #1199570944
 2465 0e9c 1846     		mov	r0, r3
 2466 0e9e FFF7FEFF 		bl	__aeabi_fdiv
 2467 0ea2 0346     		mov	r3, r0
 2468 0ea4 1A46     		mov	r2, r3
 2469 0ea6 07F12003 		add	r3, r7, #32
 2470 0eaa 1A60     		str	r2, [r3]	@ float
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2471              		.loc 1 517 0
 2472 0eac 0023     		movs	r3, #0
 2473 0eae 07F5B352 		add	r2, r7, #5728
 2474 0eb2 02F11F02 		add	r2, r2, #31
 2475 0eb6 1370     		strb	r3, [r2]
 2476 0eb8 34E0     		b	.L137
 2477              	.L138:
 518:..\src/command_processing.c ****                             }
 2478              		.loc 1 518 0 discriminator 3
 2479 0eba 07F5B353 		add	r3, r7, #5728
 2480 0ebe 03F11D03 		add	r3, r3, #29
 2481 0ec2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2482 0ec4 3222     		movs	r2, #50
 2483 0ec6 02FB03F3 		mul	r3, r2, r3
 2484 0eca 1A1D     		adds	r2, r3, #4
 2485 0ecc 07F5B353 		add	r3, r7, #5728
 2486 0ed0 03F11B03 		add	r3, r3, #27
 2487 0ed4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2488 0ed6 5B00     		lsls	r3, r3, #1
 2489 0ed8 1A44     		add	r2, r2, r3
 2490 0eda 07F5B353 		add	r3, r7, #5728
 2491 0ede 03F11B03 		add	r3, r3, #27
 2492 0ee2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2493 0ee4 1A44     		add	r2, r2, r3
 2494 0ee6 07F5B353 		add	r3, r7, #5728
 2495 0eea 03F11F03 		add	r3, r3, #31
 2496 0eee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2497 0ef0 D31A     		subs	r3, r2, r3
 2498 0ef2 5A1E     		subs	r2, r3, #1
 2499 0ef4 07F5B353 		add	r3, r7, #5728
 2500 0ef8 03F11F03 		add	r3, r3, #31
 2501 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2502 0efe 07F12001 		add	r1, r7, #32
 2503 0f02 0B44     		add	r3, r3, r1
 2504 0f04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2505 0f06 07F16003 		add	r3, r7, #96
 2506 0f0a 083B     		subs	r3, r3, #8
 2507 0f0c 9954     		strb	r1, [r3, r2]
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2508              		.loc 1 517 0 discriminator 3
 2509 0f0e 07F5B353 		add	r3, r7, #5728
 2510 0f12 03F11F03 		add	r3, r3, #31
 2511 0f16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2512 0f18 0133     		adds	r3, r3, #1
 2513 0f1a 07F5B352 		add	r2, r7, #5728
 2514 0f1e 02F11F02 		add	r2, r2, #31
 2515 0f22 1370     		strb	r3, [r2]
 2516              	.L137:
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 71


 2517              		.loc 1 517 0 is_stmt 0 discriminator 1
 2518 0f24 07F5B353 		add	r3, r7, #5728
 2519 0f28 03F11F03 		add	r3, r3, #31
 2520 0f2c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2521 0f2e 07F5B353 		add	r3, r7, #5728
 2522 0f32 03F11B03 		add	r3, r3, #27
 2523 0f36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2524 0f38 9A42     		cmp	r2, r3
 2525 0f3a BED3     		bcc	.L138
 2526              		.loc 1 521 0 is_stmt 1
 2527 0f3c 01F061BA 		b	.L113
 2528              	.L117:
 522:..\src/command_processing.c ****                         
 523:..\src/command_processing.c ****                     case 3:         //Current PID
 524:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2529              		.loc 1 524 0
 2530 0f40 07F5B353 		add	r3, r7, #5728
 2531 0f44 03F11703 		add	r3, r3, #23
 2532 0f48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2533 0f4a 954A     		ldr	r2, .L291
 2534 0f4c 7421     		movs	r1, #116
 2535 0f4e 01FB03F3 		mul	r3, r1, r3
 2536 0f52 1344     		add	r3, r3, r2
 2537 0f54 03F20F13 		addw	r3, r3, #271
 2538 0f58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2539 0f5a 032B     		cmp	r3, #3
 2540 0f5c 00F02281 		beq	.L139
 525:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2541              		.loc 1 525 0
 2542 0f60 07F5B353 		add	r3, r7, #5728
 2543 0f64 03F11703 		add	r3, r3, #23
 2544 0f68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2545 0f6a 8D4A     		ldr	r2, .L291
 2546 0f6c 7421     		movs	r1, #116
 2547 0f6e 01FB03F3 		mul	r3, r1, r3
 2548 0f72 1344     		add	r3, r3, r2
 2549 0f74 BC33     		adds	r3, r3, #188
 2550 0f76 1B68     		ldr	r3, [r3]
 2551 0f78 1846     		mov	r0, r3
 2552 0f7a FFF7FEFF 		bl	__aeabi_i2f
 2553 0f7e 0346     		mov	r3, r0
 2554 0f80 4FF08F41 		mov	r1, #1199570944
 2555 0f84 1846     		mov	r0, r3
 2556 0f86 FFF7FEFF 		bl	__aeabi_fdiv
 2557 0f8a 0346     		mov	r3, r0
 2558 0f8c 1A46     		mov	r2, r3
 2559 0f8e 07F12003 		add	r3, r7, #32
 2560 0f92 1A60     		str	r2, [r3]	@ float
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2561              		.loc 1 526 0
 2562 0f94 0023     		movs	r3, #0
 2563 0f96 07F5B352 		add	r2, r7, #5728
 2564 0f9a 02F11F02 		add	r2, r2, #31
 2565 0f9e 1370     		strb	r3, [r2]
 2566 0fa0 2DE0     		b	.L140
 2567              	.L141:
 527:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 72


 2568              		.loc 1 527 0 discriminator 3
 2569 0fa2 07F5B353 		add	r3, r7, #5728
 2570 0fa6 03F11D03 		add	r3, r3, #29
 2571 0faa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2572 0fac 3222     		movs	r2, #50
 2573 0fae 02FB03F3 		mul	r3, r2, r3
 2574 0fb2 1A1D     		adds	r2, r3, #4
 2575 0fb4 07F5B353 		add	r3, r7, #5728
 2576 0fb8 03F11B03 		add	r3, r3, #27
 2577 0fbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2578 0fbe 1A44     		add	r2, r2, r3
 2579 0fc0 07F5B353 		add	r3, r7, #5728
 2580 0fc4 03F11F03 		add	r3, r3, #31
 2581 0fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2582 0fca D31A     		subs	r3, r2, r3
 2583 0fcc 5A1E     		subs	r2, r3, #1
 2584 0fce 07F5B353 		add	r3, r7, #5728
 2585 0fd2 03F11F03 		add	r3, r3, #31
 2586 0fd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2587 0fd8 07F12001 		add	r1, r7, #32
 2588 0fdc 0B44     		add	r3, r3, r1
 2589 0fde 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2590 0fe0 07F16003 		add	r3, r7, #96
 2591 0fe4 083B     		subs	r3, r3, #8
 2592 0fe6 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2593              		.loc 1 526 0 discriminator 3
 2594 0fe8 07F5B353 		add	r3, r7, #5728
 2595 0fec 03F11F03 		add	r3, r3, #31
 2596 0ff0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2597 0ff2 0133     		adds	r3, r3, #1
 2598 0ff4 07F5B352 		add	r2, r7, #5728
 2599 0ff8 02F11F02 		add	r2, r2, #31
 2600 0ffc 1370     		strb	r3, [r2]
 2601              	.L140:
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2602              		.loc 1 526 0 is_stmt 0 discriminator 1
 2603 0ffe 07F5B353 		add	r3, r7, #5728
 2604 1002 03F11F03 		add	r3, r3, #31
 2605 1006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2606 1008 07F5B353 		add	r3, r7, #5728
 2607 100c 03F11B03 		add	r3, r3, #27
 2608 1010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2609 1012 9A42     		cmp	r2, r3
 2610 1014 C5D3     		bcc	.L141
 528:..\src/command_processing.c ****                             }
 529:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2611              		.loc 1 529 0 is_stmt 1
 2612 1016 07F5B353 		add	r3, r7, #5728
 2613 101a 03F11703 		add	r3, r3, #23
 2614 101e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2615 1020 5F4A     		ldr	r2, .L291
 2616 1022 7421     		movs	r1, #116
 2617 1024 01FB03F3 		mul	r3, r1, r3
 2618 1028 1344     		add	r3, r3, r2
 2619 102a C033     		adds	r3, r3, #192
 2620 102c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 73


 2621 102e 1846     		mov	r0, r3
 2622 1030 FFF7FEFF 		bl	__aeabi_i2f
 2623 1034 0346     		mov	r3, r0
 2624 1036 4FF08F41 		mov	r1, #1199570944
 2625 103a 1846     		mov	r0, r3
 2626 103c FFF7FEFF 		bl	__aeabi_fdiv
 2627 1040 0346     		mov	r3, r0
 2628 1042 1A46     		mov	r2, r3
 2629 1044 07F12003 		add	r3, r7, #32
 2630 1048 1A60     		str	r2, [r3]	@ float
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2631              		.loc 1 530 0
 2632 104a 0023     		movs	r3, #0
 2633 104c 07F5B352 		add	r2, r7, #5728
 2634 1050 02F11F02 		add	r2, r2, #31
 2635 1054 1370     		strb	r3, [r2]
 2636 1056 33E0     		b	.L142
 2637              	.L143:
 531:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2638              		.loc 1 531 0 discriminator 3
 2639 1058 07F5B353 		add	r3, r7, #5728
 2640 105c 03F11D03 		add	r3, r3, #29
 2641 1060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2642 1062 3222     		movs	r2, #50
 2643 1064 02FB03F3 		mul	r3, r2, r3
 2644 1068 1A1D     		adds	r2, r3, #4
 2645 106a 07F5B353 		add	r3, r7, #5728
 2646 106e 03F11B03 		add	r3, r3, #27
 2647 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2648 1074 1A44     		add	r2, r2, r3
 2649 1076 07F5B353 		add	r3, r7, #5728
 2650 107a 03F11B03 		add	r3, r3, #27
 2651 107e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2652 1080 1A44     		add	r2, r2, r3
 2653 1082 07F5B353 		add	r3, r7, #5728
 2654 1086 03F11F03 		add	r3, r3, #31
 2655 108a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2656 108c D31A     		subs	r3, r2, r3
 2657 108e 5A1E     		subs	r2, r3, #1
 2658 1090 07F5B353 		add	r3, r7, #5728
 2659 1094 03F11F03 		add	r3, r3, #31
 2660 1098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2661 109a 07F12001 		add	r1, r7, #32
 2662 109e 0B44     		add	r3, r3, r1
 2663 10a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2664 10a2 07F16003 		add	r3, r7, #96
 2665 10a6 083B     		subs	r3, r3, #8
 2666 10a8 9954     		strb	r1, [r3, r2]
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2667              		.loc 1 530 0 discriminator 3
 2668 10aa 07F5B353 		add	r3, r7, #5728
 2669 10ae 03F11F03 		add	r3, r3, #31
 2670 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2671 10b4 0133     		adds	r3, r3, #1
 2672 10b6 07F5B352 		add	r2, r7, #5728
 2673 10ba 02F11F02 		add	r2, r2, #31
 2674 10be 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 74


 2675              	.L142:
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2676              		.loc 1 530 0 is_stmt 0 discriminator 1
 2677 10c0 07F5B353 		add	r3, r7, #5728
 2678 10c4 03F11F03 		add	r3, r3, #31
 2679 10c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2680 10ca 07F5B353 		add	r3, r7, #5728
 2681 10ce 03F11B03 		add	r3, r3, #27
 2682 10d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2683 10d4 9A42     		cmp	r2, r3
 2684 10d6 BFD3     		bcc	.L143
 532:..\src/command_processing.c ****                             }
 533:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2685              		.loc 1 533 0 is_stmt 1
 2686 10d8 07F5B353 		add	r3, r7, #5728
 2687 10dc 03F11703 		add	r3, r3, #23
 2688 10e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2689 10e2 2F4A     		ldr	r2, .L291
 2690 10e4 7421     		movs	r1, #116
 2691 10e6 01FB03F3 		mul	r3, r1, r3
 2692 10ea 1344     		add	r3, r3, r2
 2693 10ec C433     		adds	r3, r3, #196
 2694 10ee 1B68     		ldr	r3, [r3]
 2695 10f0 1846     		mov	r0, r3
 2696 10f2 FFF7FEFF 		bl	__aeabi_i2f
 2697 10f6 0346     		mov	r3, r0
 2698 10f8 4FF08F41 		mov	r1, #1199570944
 2699 10fc 1846     		mov	r0, r3
 2700 10fe FFF7FEFF 		bl	__aeabi_fdiv
 2701 1102 0346     		mov	r3, r0
 2702 1104 1A46     		mov	r2, r3
 2703 1106 07F12003 		add	r3, r7, #32
 2704 110a 1A60     		str	r2, [r3]	@ float
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2705              		.loc 1 534 0
 2706 110c 0023     		movs	r3, #0
 2707 110e 07F5B352 		add	r2, r7, #5728
 2708 1112 02F11F02 		add	r2, r2, #31
 2709 1116 1370     		strb	r3, [r2]
 2710 1118 34E0     		b	.L144
 2711              	.L145:
 535:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2712              		.loc 1 535 0 discriminator 3
 2713 111a 07F5B353 		add	r3, r7, #5728
 2714 111e 03F11D03 		add	r3, r3, #29
 2715 1122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2716 1124 3222     		movs	r2, #50
 2717 1126 02FB03F3 		mul	r3, r2, r3
 2718 112a 1A1D     		adds	r2, r3, #4
 2719 112c 07F5B353 		add	r3, r7, #5728
 2720 1130 03F11B03 		add	r3, r3, #27
 2721 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2722 1136 5B00     		lsls	r3, r3, #1
 2723 1138 1A44     		add	r2, r2, r3
 2724 113a 07F5B353 		add	r3, r7, #5728
 2725 113e 03F11B03 		add	r3, r3, #27
 2726 1142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 75


 2727 1144 1A44     		add	r2, r2, r3
 2728 1146 07F5B353 		add	r3, r7, #5728
 2729 114a 03F11F03 		add	r3, r3, #31
 2730 114e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2731 1150 D31A     		subs	r3, r2, r3
 2732 1152 5A1E     		subs	r2, r3, #1
 2733 1154 07F5B353 		add	r3, r7, #5728
 2734 1158 03F11F03 		add	r3, r3, #31
 2735 115c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2736 115e 07F12001 		add	r1, r7, #32
 2737 1162 0B44     		add	r3, r3, r1
 2738 1164 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2739 1166 07F16003 		add	r3, r7, #96
 2740 116a 083B     		subs	r3, r3, #8
 2741 116c 9954     		strb	r1, [r3, r2]
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2742              		.loc 1 534 0 discriminator 3
 2743 116e 07F5B353 		add	r3, r7, #5728
 2744 1172 03F11F03 		add	r3, r3, #31
 2745 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2746 1178 0133     		adds	r3, r3, #1
 2747 117a 07F5B352 		add	r2, r7, #5728
 2748 117e 02F11F02 		add	r2, r2, #31
 2749 1182 1370     		strb	r3, [r2]
 2750              	.L144:
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2751              		.loc 1 534 0 is_stmt 0 discriminator 1
 2752 1184 07F5B353 		add	r3, r7, #5728
 2753 1188 03F11F03 		add	r3, r3, #31
 2754 118c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2755 118e 07F5B353 		add	r3, r7, #5728
 2756 1192 03F11B03 		add	r3, r3, #27
 2757 1196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2758 1198 9A42     		cmp	r2, r3
 2759 119a BED3     		bcc	.L145
 536:..\src/command_processing.c ****                             }
 537:..\src/command_processing.c ****                         }
 538:..\src/command_processing.c ****                         else {
 539:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 541:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 542:..\src/command_processing.c ****                             }
 543:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 544:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 545:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 546:..\src/command_processing.c ****                             }
 547:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 548:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 549:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 550:..\src/command_processing.c ****                             }
 551:..\src/command_processing.c ****                         }            
 552:..\src/command_processing.c ****                         break;  
 2760              		.loc 1 552 0 is_stmt 1
 2761 119c 01F031B9 		b	.L113
 2762              	.L292:
 2763              		.align	2
 2764              	.L291:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 76


 2765 11a0 00000000 		.word	c_mem
 2766              	.L139:
 539:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2767              		.loc 1 539 0
 2768 11a4 07F5B353 		add	r3, r7, #5728
 2769 11a8 03F11703 		add	r3, r3, #23
 2770 11ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2771 11ae B44A     		ldr	r2, .L293
 2772 11b0 7421     		movs	r1, #116
 2773 11b2 01FB03F3 		mul	r3, r1, r3
 2774 11b6 1344     		add	r3, r3, r2
 2775 11b8 D433     		adds	r3, r3, #212
 2776 11ba 1B68     		ldr	r3, [r3]
 2777 11bc 1846     		mov	r0, r3
 2778 11be FFF7FEFF 		bl	__aeabi_i2f
 2779 11c2 0346     		mov	r3, r0
 2780 11c4 4FF08F41 		mov	r1, #1199570944
 2781 11c8 1846     		mov	r0, r3
 2782 11ca FFF7FEFF 		bl	__aeabi_fdiv
 2783 11ce 0346     		mov	r3, r0
 2784 11d0 1A46     		mov	r2, r3
 2785 11d2 07F12003 		add	r3, r7, #32
 2786 11d6 1A60     		str	r2, [r3]	@ float
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2787              		.loc 1 540 0
 2788 11d8 0023     		movs	r3, #0
 2789 11da 07F5B352 		add	r2, r7, #5728
 2790 11de 02F11F02 		add	r2, r2, #31
 2791 11e2 1370     		strb	r3, [r2]
 2792 11e4 2DE0     		b	.L147
 2793              	.L148:
 541:..\src/command_processing.c ****                             }
 2794              		.loc 1 541 0 discriminator 3
 2795 11e6 07F5B353 		add	r3, r7, #5728
 2796 11ea 03F11D03 		add	r3, r3, #29
 2797 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2798 11f0 3222     		movs	r2, #50
 2799 11f2 02FB03F3 		mul	r3, r2, r3
 2800 11f6 1A1D     		adds	r2, r3, #4
 2801 11f8 07F5B353 		add	r3, r7, #5728
 2802 11fc 03F11B03 		add	r3, r3, #27
 2803 1200 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2804 1202 1A44     		add	r2, r2, r3
 2805 1204 07F5B353 		add	r3, r7, #5728
 2806 1208 03F11F03 		add	r3, r3, #31
 2807 120c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2808 120e D31A     		subs	r3, r2, r3
 2809 1210 5A1E     		subs	r2, r3, #1
 2810 1212 07F5B353 		add	r3, r7, #5728
 2811 1216 03F11F03 		add	r3, r3, #31
 2812 121a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2813 121c 07F12001 		add	r1, r7, #32
 2814 1220 0B44     		add	r3, r3, r1
 2815 1222 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2816 1224 07F16003 		add	r3, r7, #96
 2817 1228 083B     		subs	r3, r3, #8
 2818 122a 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 77


 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2819              		.loc 1 540 0 discriminator 3
 2820 122c 07F5B353 		add	r3, r7, #5728
 2821 1230 03F11F03 		add	r3, r3, #31
 2822 1234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2823 1236 0133     		adds	r3, r3, #1
 2824 1238 07F5B352 		add	r2, r7, #5728
 2825 123c 02F11F02 		add	r2, r2, #31
 2826 1240 1370     		strb	r3, [r2]
 2827              	.L147:
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2828              		.loc 1 540 0 is_stmt 0 discriminator 1
 2829 1242 07F5B353 		add	r3, r7, #5728
 2830 1246 03F11F03 		add	r3, r3, #31
 2831 124a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2832 124c 07F5B353 		add	r3, r7, #5728
 2833 1250 03F11B03 		add	r3, r3, #27
 2834 1254 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2835 1256 9A42     		cmp	r2, r3
 2836 1258 C5D3     		bcc	.L148
 543:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2837              		.loc 1 543 0 is_stmt 1
 2838 125a 07F5B353 		add	r3, r7, #5728
 2839 125e 03F11703 		add	r3, r3, #23
 2840 1262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2841 1264 864A     		ldr	r2, .L293
 2842 1266 7421     		movs	r1, #116
 2843 1268 01FB03F3 		mul	r3, r1, r3
 2844 126c 1344     		add	r3, r3, r2
 2845 126e D833     		adds	r3, r3, #216
 2846 1270 1B68     		ldr	r3, [r3]
 2847 1272 1846     		mov	r0, r3
 2848 1274 FFF7FEFF 		bl	__aeabi_i2f
 2849 1278 0346     		mov	r3, r0
 2850 127a 4FF08F41 		mov	r1, #1199570944
 2851 127e 1846     		mov	r0, r3
 2852 1280 FFF7FEFF 		bl	__aeabi_fdiv
 2853 1284 0346     		mov	r3, r0
 2854 1286 1A46     		mov	r2, r3
 2855 1288 07F12003 		add	r3, r7, #32
 2856 128c 1A60     		str	r2, [r3]	@ float
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2857              		.loc 1 544 0
 2858 128e 0023     		movs	r3, #0
 2859 1290 07F5B352 		add	r2, r7, #5728
 2860 1294 02F11F02 		add	r2, r2, #31
 2861 1298 1370     		strb	r3, [r2]
 2862 129a 33E0     		b	.L149
 2863              	.L150:
 545:..\src/command_processing.c ****                             }
 2864              		.loc 1 545 0 discriminator 3
 2865 129c 07F5B353 		add	r3, r7, #5728
 2866 12a0 03F11D03 		add	r3, r3, #29
 2867 12a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2868 12a6 3222     		movs	r2, #50
 2869 12a8 02FB03F3 		mul	r3, r2, r3
 2870 12ac 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 78


 2871 12ae 07F5B353 		add	r3, r7, #5728
 2872 12b2 03F11B03 		add	r3, r3, #27
 2873 12b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2874 12b8 1A44     		add	r2, r2, r3
 2875 12ba 07F5B353 		add	r3, r7, #5728
 2876 12be 03F11B03 		add	r3, r3, #27
 2877 12c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2878 12c4 1A44     		add	r2, r2, r3
 2879 12c6 07F5B353 		add	r3, r7, #5728
 2880 12ca 03F11F03 		add	r3, r3, #31
 2881 12ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2882 12d0 D31A     		subs	r3, r2, r3
 2883 12d2 5A1E     		subs	r2, r3, #1
 2884 12d4 07F5B353 		add	r3, r7, #5728
 2885 12d8 03F11F03 		add	r3, r3, #31
 2886 12dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2887 12de 07F12001 		add	r1, r7, #32
 2888 12e2 0B44     		add	r3, r3, r1
 2889 12e4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2890 12e6 07F16003 		add	r3, r7, #96
 2891 12ea 083B     		subs	r3, r3, #8
 2892 12ec 9954     		strb	r1, [r3, r2]
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2893              		.loc 1 544 0 discriminator 3
 2894 12ee 07F5B353 		add	r3, r7, #5728
 2895 12f2 03F11F03 		add	r3, r3, #31
 2896 12f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2897 12f8 0133     		adds	r3, r3, #1
 2898 12fa 07F5B352 		add	r2, r7, #5728
 2899 12fe 02F11F02 		add	r2, r2, #31
 2900 1302 1370     		strb	r3, [r2]
 2901              	.L149:
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2902              		.loc 1 544 0 is_stmt 0 discriminator 1
 2903 1304 07F5B353 		add	r3, r7, #5728
 2904 1308 03F11F03 		add	r3, r3, #31
 2905 130c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2906 130e 07F5B353 		add	r3, r7, #5728
 2907 1312 03F11B03 		add	r3, r3, #27
 2908 1316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2909 1318 9A42     		cmp	r2, r3
 2910 131a BFD3     		bcc	.L150
 547:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2911              		.loc 1 547 0 is_stmt 1
 2912 131c 07F5B353 		add	r3, r7, #5728
 2913 1320 03F11703 		add	r3, r3, #23
 2914 1324 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2915 1326 564A     		ldr	r2, .L293
 2916 1328 7421     		movs	r1, #116
 2917 132a 01FB03F3 		mul	r3, r1, r3
 2918 132e 1344     		add	r3, r3, r2
 2919 1330 DC33     		adds	r3, r3, #220
 2920 1332 1B68     		ldr	r3, [r3]
 2921 1334 1846     		mov	r0, r3
 2922 1336 FFF7FEFF 		bl	__aeabi_i2f
 2923 133a 0346     		mov	r3, r0
 2924 133c 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 79


 2925 1340 1846     		mov	r0, r3
 2926 1342 FFF7FEFF 		bl	__aeabi_fdiv
 2927 1346 0346     		mov	r3, r0
 2928 1348 1A46     		mov	r2, r3
 2929 134a 07F12003 		add	r3, r7, #32
 2930 134e 1A60     		str	r2, [r3]	@ float
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2931              		.loc 1 548 0
 2932 1350 0023     		movs	r3, #0
 2933 1352 07F5B352 		add	r2, r7, #5728
 2934 1356 02F11F02 		add	r2, r2, #31
 2935 135a 1370     		strb	r3, [r2]
 2936 135c 34E0     		b	.L151
 2937              	.L152:
 549:..\src/command_processing.c ****                             }
 2938              		.loc 1 549 0 discriminator 3
 2939 135e 07F5B353 		add	r3, r7, #5728
 2940 1362 03F11D03 		add	r3, r3, #29
 2941 1366 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2942 1368 3222     		movs	r2, #50
 2943 136a 02FB03F3 		mul	r3, r2, r3
 2944 136e 1A1D     		adds	r2, r3, #4
 2945 1370 07F5B353 		add	r3, r7, #5728
 2946 1374 03F11B03 		add	r3, r3, #27
 2947 1378 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2948 137a 5B00     		lsls	r3, r3, #1
 2949 137c 1A44     		add	r2, r2, r3
 2950 137e 07F5B353 		add	r3, r7, #5728
 2951 1382 03F11B03 		add	r3, r3, #27
 2952 1386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2953 1388 1A44     		add	r2, r2, r3
 2954 138a 07F5B353 		add	r3, r7, #5728
 2955 138e 03F11F03 		add	r3, r3, #31
 2956 1392 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2957 1394 D31A     		subs	r3, r2, r3
 2958 1396 5A1E     		subs	r2, r3, #1
 2959 1398 07F5B353 		add	r3, r7, #5728
 2960 139c 03F11F03 		add	r3, r3, #31
 2961 13a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2962 13a2 07F12001 		add	r1, r7, #32
 2963 13a6 0B44     		add	r3, r3, r1
 2964 13a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2965 13aa 07F16003 		add	r3, r7, #96
 2966 13ae 083B     		subs	r3, r3, #8
 2967 13b0 9954     		strb	r1, [r3, r2]
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2968              		.loc 1 548 0 discriminator 3
 2969 13b2 07F5B353 		add	r3, r7, #5728
 2970 13b6 03F11F03 		add	r3, r3, #31
 2971 13ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2972 13bc 0133     		adds	r3, r3, #1
 2973 13be 07F5B352 		add	r2, r7, #5728
 2974 13c2 02F11F02 		add	r2, r2, #31
 2975 13c6 1370     		strb	r3, [r2]
 2976              	.L151:
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2977              		.loc 1 548 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 80


 2978 13c8 07F5B353 		add	r3, r7, #5728
 2979 13cc 03F11F03 		add	r3, r3, #31
 2980 13d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2981 13d2 07F5B353 		add	r3, r7, #5728
 2982 13d6 03F11B03 		add	r3, r3, #27
 2983 13da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2984 13dc 9A42     		cmp	r2, r3
 2985 13de BED3     		bcc	.L152
 2986              		.loc 1 552 0 is_stmt 1
 2987 13e0 01F00FB8 		b	.L113
 2988              	.L118:
 553:..\src/command_processing.c **** 
 554:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 555:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 2989              		.loc 1 555 0
 2990 13e4 0023     		movs	r3, #0
 2991 13e6 07F5B352 		add	r2, r7, #5728
 2992 13ea 02F11F02 		add	r2, r2, #31
 2993 13ee 1370     		strb	r3, [r2]
 2994 13f0 9DE0     		b	.L153
 2995              	.L156:
 556:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 2996              		.loc 1 556 0
 2997 13f2 07F5B353 		add	r3, r7, #5728
 2998 13f6 03F11703 		add	r3, r3, #23
 2999 13fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3000 13fc 214A     		ldr	r2, .L293+4
 3001 13fe 7421     		movs	r1, #116
 3002 1400 01FB03F3 		mul	r3, r1, r3
 3003 1404 1344     		add	r3, r3, r2
 3004 1406 03F58873 		add	r3, r3, #272
 3005 140a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3006 140c 1846     		mov	r0, r3
 3007 140e 07F5B353 		add	r3, r7, #5728
 3008 1412 03F11F03 		add	r3, r3, #31
 3009 1416 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3010 1418 1949     		ldr	r1, .L293
 3011 141a 0346     		mov	r3, r0
 3012 141c 5B00     		lsls	r3, r3, #1
 3013 141e 0344     		add	r3, r3, r0
 3014 1420 9B00     		lsls	r3, r3, #2
 3015 1422 1344     		add	r3, r3, r2
 3016 1424 6833     		adds	r3, r3, #104
 3017 1426 51F82320 		ldr	r2, [r1, r3, lsl #2]
 3018 142a 07F5B353 		add	r3, r7, #5728
 3019 142e 03F11703 		add	r3, r3, #23
 3020 1432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3021 1434 1349     		ldr	r1, .L293+4
 3022 1436 7420     		movs	r0, #116
 3023 1438 00FB03F3 		mul	r3, r0, r3
 3024 143c 0B44     		add	r3, r3, r1
 3025 143e 03F58873 		add	r3, r3, #272
 3026 1442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3027 1444 1C46     		mov	r4, r3
 3028 1446 07F5B353 		add	r3, r7, #5728
 3029 144a 03F11F03 		add	r3, r3, #31
 3030 144e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 81


 3031 1450 0B48     		ldr	r0, .L293
 3032 1452 2346     		mov	r3, r4
 3033 1454 5B00     		lsls	r3, r3, #1
 3034 1456 2344     		add	r3, r3, r4
 3035 1458 1B01     		lsls	r3, r3, #4
 3036 145a 0344     		add	r3, r3, r0
 3037 145c 0B44     		add	r3, r3, r1
 3038 145e 03F29D13 		addw	r3, r3, #413
 3039 1462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3040 1464 42FA03F3 		asr	r3, r2, r3
 3041 1468 1AB2     		sxth	r2, r3
 3042 146a 07F12003 		add	r3, r7, #32
 3043 146e 023B     		subs	r3, r3, #2
 3044 1470 1A80     		strh	r2, [r3]	@ movhi
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3045              		.loc 1 557 0
 3046 1472 0023     		movs	r3, #0
 3047 1474 07F5B352 		add	r2, r7, #5728
 3048 1478 02F11E02 		add	r2, r2, #30
 3049 147c 1370     		strb	r3, [r2]
 3050 147e 3FE0     		b	.L154
 3051              	.L294:
 3052              		.align	2
 3053              	.L293:
 3054 1480 00000000 		.word	c_mem
 3055 1484 00000000 		.word	g_mem
 3056              	.L155:
 558:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 3057              		.loc 1 558 0 discriminator 3
 3058 1488 07F5B353 		add	r3, r7, #5728
 3059 148c 03F11D03 		add	r3, r3, #29
 3060 1490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3061 1492 3222     		movs	r2, #50
 3062 1494 02FB03F3 		mul	r3, r2, r3
 3063 1498 1A1D     		adds	r2, r3, #4
 3064 149a 07F5B353 		add	r3, r7, #5728
 3065 149e 03F11F03 		add	r3, r3, #31
 3066 14a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3067 14a4 07F5B351 		add	r1, r7, #5728
 3068 14a8 01F11B01 		add	r1, r1, #27
 3069 14ac 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3070 14ae 01FB03F3 		mul	r3, r1, r3
 3071 14b2 1A44     		add	r2, r2, r3
 3072 14b4 07F5B353 		add	r3, r7, #5728
 3073 14b8 03F11B03 		add	r3, r3, #27
 3074 14bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3075 14be 1A44     		add	r2, r2, r3
 3076 14c0 07F5B353 		add	r3, r7, #5728
 3077 14c4 03F11E03 		add	r3, r3, #30
 3078 14c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3079 14ca D31A     		subs	r3, r2, r3
 3080 14cc 5A1E     		subs	r2, r3, #1
 3081 14ce 07F5B353 		add	r3, r7, #5728
 3082 14d2 03F11E03 		add	r3, r3, #30
 3083 14d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3084 14d8 07F12003 		add	r3, r7, #32
 3085 14dc 023B     		subs	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 82


 3086 14de 0B44     		add	r3, r3, r1
 3087 14e0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3088 14e2 07F16003 		add	r3, r7, #96
 3089 14e6 083B     		subs	r3, r3, #8
 3090 14e8 9954     		strb	r1, [r3, r2]
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3091              		.loc 1 557 0 discriminator 3
 3092 14ea 07F5B353 		add	r3, r7, #5728
 3093 14ee 03F11E03 		add	r3, r3, #30
 3094 14f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3095 14f4 0133     		adds	r3, r3, #1
 3096 14f6 07F5B352 		add	r2, r7, #5728
 3097 14fa 02F11E02 		add	r2, r2, #30
 3098 14fe 1370     		strb	r3, [r2]
 3099              	.L154:
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3100              		.loc 1 557 0 is_stmt 0 discriminator 1
 3101 1500 07F5B353 		add	r3, r7, #5728
 3102 1504 03F11E03 		add	r3, r3, #30
 3103 1508 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3104 150a 07F5B353 		add	r3, r7, #5728
 3105 150e 03F11B03 		add	r3, r3, #27
 3106 1512 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3107 1514 9A42     		cmp	r2, r3
 3108 1516 B7D3     		bcc	.L155
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3109              		.loc 1 555 0 is_stmt 1 discriminator 2
 3110 1518 07F5B353 		add	r3, r7, #5728
 3111 151c 03F11F03 		add	r3, r3, #31
 3112 1520 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3113 1522 0133     		adds	r3, r3, #1
 3114 1524 07F5B352 		add	r2, r7, #5728
 3115 1528 02F11F02 		add	r2, r2, #31
 3116 152c 1370     		strb	r3, [r2]
 3117              	.L153:
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3118              		.loc 1 555 0 is_stmt 0 discriminator 1
 3119 152e 07F5B353 		add	r3, r7, #5728
 3120 1532 03F11D03 		add	r3, r3, #29
 3121 1536 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3122 1538 07F12003 		add	r3, r7, #32
 3123 153c 1C3B     		subs	r3, r3, #28
 3124 153e 1B68     		ldr	r3, [r3]
 3125 1540 1344     		add	r3, r3, r2
 3126 1542 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3127 1544 07F5B352 		add	r2, r7, #5728
 3128 1548 02F11F02 		add	r2, r2, #31
 3129 154c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3130 154e 9A42     		cmp	r2, r3
 3131 1550 FFF44FAF 		bcc	.L156
 559:..\src/command_processing.c ****                             }
 560:..\src/command_processing.c ****                         }
 561:..\src/command_processing.c ****                         break;
 3132              		.loc 1 561 0 is_stmt 1
 3133 1554 00F055BF 		b	.L113
 3134              	.L119:
 562:..\src/command_processing.c ****                 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 83


 563:..\src/command_processing.c ****                     case 11:        //Position limits
 564:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3135              		.loc 1 564 0
 3136 1558 07F5B353 		add	r3, r7, #5728
 3137 155c 03F11703 		add	r3, r3, #23
 3138 1560 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3139 1562 B54A     		ldr	r2, .L295
 3140 1564 7421     		movs	r1, #116
 3141 1566 01FB03F3 		mul	r3, r1, r3
 3142 156a 1344     		add	r3, r3, r2
 3143 156c E433     		adds	r3, r3, #228
 3144 156e 1A68     		ldr	r2, [r3]
 3145 1570 07F5B353 		add	r3, r7, #5728
 3146 1574 03F11703 		add	r3, r3, #23
 3147 1578 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3148 157a B049     		ldr	r1, .L295+4
 3149 157c 7420     		movs	r0, #116
 3150 157e 00FB03F3 		mul	r3, r0, r3
 3151 1582 0B44     		add	r3, r3, r1
 3152 1584 03F58873 		add	r3, r3, #272
 3153 1588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3154 158a 1846     		mov	r0, r3
 3155 158c AA49     		ldr	r1, .L295
 3156 158e 0346     		mov	r3, r0
 3157 1590 5B00     		lsls	r3, r3, #1
 3158 1592 0344     		add	r3, r3, r0
 3159 1594 1B01     		lsls	r3, r3, #4
 3160 1596 0B44     		add	r3, r3, r1
 3161 1598 03F29D13 		addw	r3, r3, #413
 3162 159c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3163 159e 1A41     		asrs	r2, r2, r3
 3164 15a0 07F12003 		add	r3, r7, #32
 3165 15a4 083B     		subs	r3, r3, #8
 3166 15a6 1A60     		str	r2, [r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3167              		.loc 1 565 0
 3168 15a8 0023     		movs	r3, #0
 3169 15aa 07F5B352 		add	r2, r7, #5728
 3170 15ae 02F11E02 		add	r2, r2, #30
 3171 15b2 1370     		strb	r3, [r2]
 3172 15b4 2EE0     		b	.L157
 3173              	.L158:
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3174              		.loc 1 566 0 discriminator 3
 3175 15b6 07F5B353 		add	r3, r7, #5728
 3176 15ba 03F11D03 		add	r3, r3, #29
 3177 15be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3178 15c0 3222     		movs	r2, #50
 3179 15c2 02FB03F3 		mul	r3, r2, r3
 3180 15c6 1A1D     		adds	r2, r3, #4
 3181 15c8 07F5B353 		add	r3, r7, #5728
 3182 15cc 03F11B03 		add	r3, r3, #27
 3183 15d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3184 15d2 1A44     		add	r2, r2, r3
 3185 15d4 07F5B353 		add	r3, r7, #5728
 3186 15d8 03F11E03 		add	r3, r3, #30
 3187 15dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 84


 3188 15de D31A     		subs	r3, r2, r3
 3189 15e0 5A1E     		subs	r2, r3, #1
 3190 15e2 07F5B353 		add	r3, r7, #5728
 3191 15e6 03F11E03 		add	r3, r3, #30
 3192 15ea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3193 15ec 07F12003 		add	r3, r7, #32
 3194 15f0 083B     		subs	r3, r3, #8
 3195 15f2 0B44     		add	r3, r3, r1
 3196 15f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3197 15f6 07F16003 		add	r3, r7, #96
 3198 15fa 083B     		subs	r3, r3, #8
 3199 15fc 9954     		strb	r1, [r3, r2]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3200              		.loc 1 565 0 discriminator 3
 3201 15fe 07F5B353 		add	r3, r7, #5728
 3202 1602 03F11E03 		add	r3, r3, #30
 3203 1606 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3204 1608 0133     		adds	r3, r3, #1
 3205 160a 07F5B352 		add	r2, r7, #5728
 3206 160e 02F11E02 		add	r2, r2, #30
 3207 1612 1370     		strb	r3, [r2]
 3208              	.L157:
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3209              		.loc 1 565 0 is_stmt 0 discriminator 1
 3210 1614 07F5B353 		add	r3, r7, #5728
 3211 1618 03F11E03 		add	r3, r3, #30
 3212 161c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3213 161e 07F5B353 		add	r3, r7, #5728
 3214 1622 03F11B03 		add	r3, r3, #27
 3215 1626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3216 1628 9A42     		cmp	r2, r3
 3217 162a C4D3     		bcc	.L158
 567:..\src/command_processing.c ****                         }
 568:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3218              		.loc 1 568 0 is_stmt 1
 3219 162c 07F5B353 		add	r3, r7, #5728
 3220 1630 03F11703 		add	r3, r3, #23
 3221 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3222 1636 804A     		ldr	r2, .L295
 3223 1638 7421     		movs	r1, #116
 3224 163a 01FB03F3 		mul	r3, r1, r3
 3225 163e 1344     		add	r3, r3, r2
 3226 1640 E833     		adds	r3, r3, #232
 3227 1642 1A68     		ldr	r2, [r3]
 3228 1644 07F5B353 		add	r3, r7, #5728
 3229 1648 03F11703 		add	r3, r3, #23
 3230 164c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3231 164e 7B49     		ldr	r1, .L295+4
 3232 1650 7420     		movs	r0, #116
 3233 1652 00FB03F3 		mul	r3, r0, r3
 3234 1656 0B44     		add	r3, r3, r1
 3235 1658 03F58873 		add	r3, r3, #272
 3236 165c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 165e 1846     		mov	r0, r3
 3238 1660 7549     		ldr	r1, .L295
 3239 1662 0346     		mov	r3, r0
 3240 1664 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 85


 3241 1666 0344     		add	r3, r3, r0
 3242 1668 1B01     		lsls	r3, r3, #4
 3243 166a 0B44     		add	r3, r3, r1
 3244 166c 03F29D13 		addw	r3, r3, #413
 3245 1670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3246 1672 1A41     		asrs	r2, r2, r3
 3247 1674 07F12003 		add	r3, r7, #32
 3248 1678 083B     		subs	r3, r3, #8
 3249 167a 1A60     		str	r2, [r3]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3250              		.loc 1 569 0
 3251 167c 0023     		movs	r3, #0
 3252 167e 07F5B352 		add	r2, r7, #5728
 3253 1682 02F11E02 		add	r2, r2, #30
 3254 1686 1370     		strb	r3, [r2]
 3255 1688 34E0     		b	.L159
 3256              	.L160:
 570:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3257              		.loc 1 570 0 discriminator 3
 3258 168a 07F5B353 		add	r3, r7, #5728
 3259 168e 03F11D03 		add	r3, r3, #29
 3260 1692 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3261 1694 3222     		movs	r2, #50
 3262 1696 02FB03F3 		mul	r3, r2, r3
 3263 169a 1A1D     		adds	r2, r3, #4
 3264 169c 07F5B353 		add	r3, r7, #5728
 3265 16a0 03F11B03 		add	r3, r3, #27
 3266 16a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3267 16a6 1A44     		add	r2, r2, r3
 3268 16a8 07F5B353 		add	r3, r7, #5728
 3269 16ac 03F11B03 		add	r3, r3, #27
 3270 16b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3271 16b2 1A44     		add	r2, r2, r3
 3272 16b4 07F5B353 		add	r3, r7, #5728
 3273 16b8 03F11E03 		add	r3, r3, #30
 3274 16bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3275 16be D31A     		subs	r3, r2, r3
 3276 16c0 5A1E     		subs	r2, r3, #1
 3277 16c2 07F5B353 		add	r3, r7, #5728
 3278 16c6 03F11E03 		add	r3, r3, #30
 3279 16ca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3280 16cc 07F12003 		add	r3, r7, #32
 3281 16d0 083B     		subs	r3, r3, #8
 3282 16d2 0B44     		add	r3, r3, r1
 3283 16d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3284 16d6 07F16003 		add	r3, r7, #96
 3285 16da 083B     		subs	r3, r3, #8
 3286 16dc 9954     		strb	r1, [r3, r2]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3287              		.loc 1 569 0 discriminator 3
 3288 16de 07F5B353 		add	r3, r7, #5728
 3289 16e2 03F11E03 		add	r3, r3, #30
 3290 16e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3291 16e8 0133     		adds	r3, r3, #1
 3292 16ea 07F5B352 		add	r2, r7, #5728
 3293 16ee 02F11E02 		add	r2, r2, #30
 3294 16f2 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 86


 3295              	.L159:
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3296              		.loc 1 569 0 is_stmt 0 discriminator 1
 3297 16f4 07F5B353 		add	r3, r7, #5728
 3298 16f8 03F11E03 		add	r3, r3, #30
 3299 16fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3300 16fe 07F5B353 		add	r3, r7, #5728
 3301 1702 03F11B03 		add	r3, r3, #27
 3302 1706 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3303 1708 9A42     		cmp	r2, r3
 3304 170a BED3     		bcc	.L160
 571:..\src/command_processing.c ****                         }
 572:..\src/command_processing.c ****                         break;            
 3305              		.loc 1 572 0 is_stmt 1
 3306 170c 00F079BE 		b	.L113
 3307              	.L120:
 573:..\src/command_processing.c **** 
 574:..\src/command_processing.c ****                     case 24:        //Rest Position
 575:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3308              		.loc 1 575 0
 3309 1710 494B     		ldr	r3, .L295
 3310 1712 D3F8A822 		ldr	r2, [r3, #680]
 3311 1716 07F5B353 		add	r3, r7, #5728
 3312 171a 03F11703 		add	r3, r3, #23
 3313 171e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3314 1720 4649     		ldr	r1, .L295+4
 3315 1722 7420     		movs	r0, #116
 3316 1724 00FB03F3 		mul	r3, r0, r3
 3317 1728 0B44     		add	r3, r3, r1
 3318 172a 03F58873 		add	r3, r3, #272
 3319 172e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3320 1730 1846     		mov	r0, r3
 3321 1732 4149     		ldr	r1, .L295
 3322 1734 0346     		mov	r3, r0
 3323 1736 5B00     		lsls	r3, r3, #1
 3324 1738 0344     		add	r3, r3, r0
 3325 173a 1B01     		lsls	r3, r3, #4
 3326 173c 0B44     		add	r3, r3, r1
 3327 173e 03F29D13 		addw	r3, r3, #413
 3328 1742 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3329 1744 1A41     		asrs	r2, r2, r3
 3330 1746 07F12003 		add	r3, r7, #32
 3331 174a 083B     		subs	r3, r3, #8
 3332 174c 1A60     		str	r2, [r3]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3333              		.loc 1 576 0
 3334 174e 0023     		movs	r3, #0
 3335 1750 07F5B352 		add	r2, r7, #5728
 3336 1754 02F11E02 		add	r2, r2, #30
 3337 1758 1370     		strb	r3, [r2]
 3338 175a 2EE0     		b	.L161
 3339              	.L162:
 577:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3340              		.loc 1 577 0 discriminator 3
 3341 175c 07F5B353 		add	r3, r7, #5728
 3342 1760 03F11D03 		add	r3, r3, #29
 3343 1764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 87


 3344 1766 3222     		movs	r2, #50
 3345 1768 02FB03F3 		mul	r3, r2, r3
 3346 176c 1A1D     		adds	r2, r3, #4
 3347 176e 07F5B353 		add	r3, r7, #5728
 3348 1772 03F11B03 		add	r3, r3, #27
 3349 1776 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3350 1778 1A44     		add	r2, r2, r3
 3351 177a 07F5B353 		add	r3, r7, #5728
 3352 177e 03F11E03 		add	r3, r3, #30
 3353 1782 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3354 1784 D31A     		subs	r3, r2, r3
 3355 1786 5A1E     		subs	r2, r3, #1
 3356 1788 07F5B353 		add	r3, r7, #5728
 3357 178c 03F11E03 		add	r3, r3, #30
 3358 1790 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3359 1792 07F12003 		add	r3, r7, #32
 3360 1796 083B     		subs	r3, r3, #8
 3361 1798 0B44     		add	r3, r3, r1
 3362 179a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3363 179c 07F16003 		add	r3, r7, #96
 3364 17a0 083B     		subs	r3, r3, #8
 3365 17a2 9954     		strb	r1, [r3, r2]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3366              		.loc 1 576 0 discriminator 3
 3367 17a4 07F5B353 		add	r3, r7, #5728
 3368 17a8 03F11E03 		add	r3, r3, #30
 3369 17ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3370 17ae 0133     		adds	r3, r3, #1
 3371 17b0 07F5B352 		add	r2, r7, #5728
 3372 17b4 02F11E02 		add	r2, r2, #30
 3373 17b8 1370     		strb	r3, [r2]
 3374              	.L161:
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3375              		.loc 1 576 0 is_stmt 0 discriminator 1
 3376 17ba 07F5B353 		add	r3, r7, #5728
 3377 17be 03F11E03 		add	r3, r3, #30
 3378 17c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3379 17c4 07F5B353 		add	r3, r7, #5728
 3380 17c8 03F11B03 		add	r3, r3, #27
 3381 17cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3382 17ce 9A42     		cmp	r2, r3
 3383 17d0 C4D3     		bcc	.L162
 578:..\src/command_processing.c ****                         }
 579:..\src/command_processing.c ****                         break; 
 3384              		.loc 1 579 0 is_stmt 1
 3385 17d2 00F016BE 		b	.L113
 3386              	.L121:
 580:..\src/command_processing.c ****                         
 581:..\src/command_processing.c ****                     case 45:         // Second Motor Position PID
 582:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3387              		.loc 1 582 0
 3388 17d6 07F5B353 		add	r3, r7, #5728
 3389 17da 03F11603 		add	r3, r3, #22
 3390 17de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3391 17e0 154A     		ldr	r2, .L295
 3392 17e2 7421     		movs	r1, #116
 3393 17e4 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 88


 3394 17e8 1344     		add	r3, r3, r2
 3395 17ea 03F20F13 		addw	r3, r3, #271
 3396 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3397 17f0 032B     		cmp	r3, #3
 3398 17f2 00F02481 		beq	.L163
 583:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3399              		.loc 1 583 0
 3400 17f6 07F5B353 		add	r3, r7, #5728
 3401 17fa 03F11603 		add	r3, r3, #22
 3402 17fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3403 1800 0D4A     		ldr	r2, .L295
 3404 1802 7421     		movs	r1, #116
 3405 1804 01FB03F3 		mul	r3, r1, r3
 3406 1808 1344     		add	r3, r3, r2
 3407 180a B033     		adds	r3, r3, #176
 3408 180c 1B68     		ldr	r3, [r3]
 3409 180e 1846     		mov	r0, r3
 3410 1810 FFF7FEFF 		bl	__aeabi_i2f
 3411 1814 0346     		mov	r3, r0
 3412 1816 4FF08F41 		mov	r1, #1199570944
 3413 181a 1846     		mov	r0, r3
 3414 181c FFF7FEFF 		bl	__aeabi_fdiv
 3415 1820 0346     		mov	r3, r0
 3416 1822 1A46     		mov	r2, r3
 3417 1824 07F12003 		add	r3, r7, #32
 3418 1828 1A60     		str	r2, [r3]	@ float
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3419              		.loc 1 584 0
 3420 182a 0023     		movs	r3, #0
 3421 182c 07F5B352 		add	r2, r7, #5728
 3422 1830 02F11F02 		add	r2, r2, #31
 3423 1834 1370     		strb	r3, [r2]
 3424 1836 31E0     		b	.L164
 3425              	.L296:
 3426              		.align	2
 3427              	.L295:
 3428 1838 00000000 		.word	c_mem
 3429 183c 00000000 		.word	g_mem
 3430              	.L165:
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3431              		.loc 1 585 0 discriminator 3
 3432 1840 07F5B353 		add	r3, r7, #5728
 3433 1844 03F11D03 		add	r3, r3, #29
 3434 1848 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3435 184a 3222     		movs	r2, #50
 3436 184c 02FB03F3 		mul	r3, r2, r3
 3437 1850 1A1D     		adds	r2, r3, #4
 3438 1852 07F5B353 		add	r3, r7, #5728
 3439 1856 03F11B03 		add	r3, r3, #27
 3440 185a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 185c 1A44     		add	r2, r2, r3
 3442 185e 07F5B353 		add	r3, r7, #5728
 3443 1862 03F11F03 		add	r3, r3, #31
 3444 1866 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3445 1868 D31A     		subs	r3, r2, r3
 3446 186a 5A1E     		subs	r2, r3, #1
 3447 186c 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 89


 3448 1870 03F11F03 		add	r3, r3, #31
 3449 1874 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3450 1876 07F12001 		add	r1, r7, #32
 3451 187a 0B44     		add	r3, r3, r1
 3452 187c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3453 187e 07F16003 		add	r3, r7, #96
 3454 1882 083B     		subs	r3, r3, #8
 3455 1884 9954     		strb	r1, [r3, r2]
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3456              		.loc 1 584 0 discriminator 3
 3457 1886 07F5B353 		add	r3, r7, #5728
 3458 188a 03F11F03 		add	r3, r3, #31
 3459 188e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3460 1890 0133     		adds	r3, r3, #1
 3461 1892 07F5B352 		add	r2, r7, #5728
 3462 1896 02F11F02 		add	r2, r2, #31
 3463 189a 1370     		strb	r3, [r2]
 3464              	.L164:
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3465              		.loc 1 584 0 is_stmt 0 discriminator 1
 3466 189c 07F5B353 		add	r3, r7, #5728
 3467 18a0 03F11F03 		add	r3, r3, #31
 3468 18a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3469 18a6 07F5B353 		add	r3, r7, #5728
 3470 18aa 03F11B03 		add	r3, r3, #27
 3471 18ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3472 18b0 9A42     		cmp	r2, r3
 3473 18b2 C5D3     		bcc	.L165
 586:..\src/command_processing.c ****                             }
 587:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3474              		.loc 1 587 0 is_stmt 1
 3475 18b4 07F5B353 		add	r3, r7, #5728
 3476 18b8 03F11603 		add	r3, r3, #22
 3477 18bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3478 18be CE4A     		ldr	r2, .L297
 3479 18c0 7421     		movs	r1, #116
 3480 18c2 01FB03F3 		mul	r3, r1, r3
 3481 18c6 1344     		add	r3, r3, r2
 3482 18c8 B433     		adds	r3, r3, #180
 3483 18ca 1B68     		ldr	r3, [r3]
 3484 18cc 1846     		mov	r0, r3
 3485 18ce FFF7FEFF 		bl	__aeabi_i2f
 3486 18d2 0346     		mov	r3, r0
 3487 18d4 4FF08F41 		mov	r1, #1199570944
 3488 18d8 1846     		mov	r0, r3
 3489 18da FFF7FEFF 		bl	__aeabi_fdiv
 3490 18de 0346     		mov	r3, r0
 3491 18e0 1A46     		mov	r2, r3
 3492 18e2 07F12003 		add	r3, r7, #32
 3493 18e6 1A60     		str	r2, [r3]	@ float
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3494              		.loc 1 588 0
 3495 18e8 0023     		movs	r3, #0
 3496 18ea 07F5B352 		add	r2, r7, #5728
 3497 18ee 02F11F02 		add	r2, r2, #31
 3498 18f2 1370     		strb	r3, [r2]
 3499 18f4 33E0     		b	.L166
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 90


 3500              	.L167:
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3501              		.loc 1 589 0 discriminator 3
 3502 18f6 07F5B353 		add	r3, r7, #5728
 3503 18fa 03F11D03 		add	r3, r3, #29
 3504 18fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3505 1900 3222     		movs	r2, #50
 3506 1902 02FB03F3 		mul	r3, r2, r3
 3507 1906 1A1D     		adds	r2, r3, #4
 3508 1908 07F5B353 		add	r3, r7, #5728
 3509 190c 03F11B03 		add	r3, r3, #27
 3510 1910 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3511 1912 1A44     		add	r2, r2, r3
 3512 1914 07F5B353 		add	r3, r7, #5728
 3513 1918 03F11B03 		add	r3, r3, #27
 3514 191c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3515 191e 1A44     		add	r2, r2, r3
 3516 1920 07F5B353 		add	r3, r7, #5728
 3517 1924 03F11F03 		add	r3, r3, #31
 3518 1928 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3519 192a D31A     		subs	r3, r2, r3
 3520 192c 5A1E     		subs	r2, r3, #1
 3521 192e 07F5B353 		add	r3, r7, #5728
 3522 1932 03F11F03 		add	r3, r3, #31
 3523 1936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3524 1938 07F12001 		add	r1, r7, #32
 3525 193c 0B44     		add	r3, r3, r1
 3526 193e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3527 1940 07F16003 		add	r3, r7, #96
 3528 1944 083B     		subs	r3, r3, #8
 3529 1946 9954     		strb	r1, [r3, r2]
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3530              		.loc 1 588 0 discriminator 3
 3531 1948 07F5B353 		add	r3, r7, #5728
 3532 194c 03F11F03 		add	r3, r3, #31
 3533 1950 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3534 1952 0133     		adds	r3, r3, #1
 3535 1954 07F5B352 		add	r2, r7, #5728
 3536 1958 02F11F02 		add	r2, r2, #31
 3537 195c 1370     		strb	r3, [r2]
 3538              	.L166:
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3539              		.loc 1 588 0 is_stmt 0 discriminator 1
 3540 195e 07F5B353 		add	r3, r7, #5728
 3541 1962 03F11F03 		add	r3, r3, #31
 3542 1966 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3543 1968 07F5B353 		add	r3, r7, #5728
 3544 196c 03F11B03 		add	r3, r3, #27
 3545 1970 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3546 1972 9A42     		cmp	r2, r3
 3547 1974 BFD3     		bcc	.L167
 590:..\src/command_processing.c ****                             }
 591:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3548              		.loc 1 591 0 is_stmt 1
 3549 1976 07F5B353 		add	r3, r7, #5728
 3550 197a 03F11603 		add	r3, r3, #22
 3551 197e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 91


 3552 1980 9D4A     		ldr	r2, .L297
 3553 1982 7421     		movs	r1, #116
 3554 1984 01FB03F3 		mul	r3, r1, r3
 3555 1988 1344     		add	r3, r3, r2
 3556 198a B833     		adds	r3, r3, #184
 3557 198c 1B68     		ldr	r3, [r3]
 3558 198e 1846     		mov	r0, r3
 3559 1990 FFF7FEFF 		bl	__aeabi_i2f
 3560 1994 0346     		mov	r3, r0
 3561 1996 4FF08F41 		mov	r1, #1199570944
 3562 199a 1846     		mov	r0, r3
 3563 199c FFF7FEFF 		bl	__aeabi_fdiv
 3564 19a0 0346     		mov	r3, r0
 3565 19a2 1A46     		mov	r2, r3
 3566 19a4 07F12003 		add	r3, r7, #32
 3567 19a8 1A60     		str	r2, [r3]	@ float
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3568              		.loc 1 592 0
 3569 19aa 0023     		movs	r3, #0
 3570 19ac 07F5B352 		add	r2, r7, #5728
 3571 19b0 02F11F02 		add	r2, r2, #31
 3572 19b4 1370     		strb	r3, [r2]
 3573 19b6 34E0     		b	.L168
 3574              	.L169:
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3575              		.loc 1 593 0 discriminator 3
 3576 19b8 07F5B353 		add	r3, r7, #5728
 3577 19bc 03F11D03 		add	r3, r3, #29
 3578 19c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3579 19c2 3222     		movs	r2, #50
 3580 19c4 02FB03F3 		mul	r3, r2, r3
 3581 19c8 1A1D     		adds	r2, r3, #4
 3582 19ca 07F5B353 		add	r3, r7, #5728
 3583 19ce 03F11B03 		add	r3, r3, #27
 3584 19d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3585 19d4 5B00     		lsls	r3, r3, #1
 3586 19d6 1A44     		add	r2, r2, r3
 3587 19d8 07F5B353 		add	r3, r7, #5728
 3588 19dc 03F11B03 		add	r3, r3, #27
 3589 19e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3590 19e2 1A44     		add	r2, r2, r3
 3591 19e4 07F5B353 		add	r3, r7, #5728
 3592 19e8 03F11F03 		add	r3, r3, #31
 3593 19ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3594 19ee D31A     		subs	r3, r2, r3
 3595 19f0 5A1E     		subs	r2, r3, #1
 3596 19f2 07F5B353 		add	r3, r7, #5728
 3597 19f6 03F11F03 		add	r3, r3, #31
 3598 19fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3599 19fc 07F12001 		add	r1, r7, #32
 3600 1a00 0B44     		add	r3, r3, r1
 3601 1a02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3602 1a04 07F16003 		add	r3, r7, #96
 3603 1a08 083B     		subs	r3, r3, #8
 3604 1a0a 9954     		strb	r1, [r3, r2]
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3605              		.loc 1 592 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 92


 3606 1a0c 07F5B353 		add	r3, r7, #5728
 3607 1a10 03F11F03 		add	r3, r3, #31
 3608 1a14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3609 1a16 0133     		adds	r3, r3, #1
 3610 1a18 07F5B352 		add	r2, r7, #5728
 3611 1a1c 02F11F02 		add	r2, r2, #31
 3612 1a20 1370     		strb	r3, [r2]
 3613              	.L168:
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3614              		.loc 1 592 0 is_stmt 0 discriminator 1
 3615 1a22 07F5B353 		add	r3, r7, #5728
 3616 1a26 03F11F03 		add	r3, r3, #31
 3617 1a2a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3618 1a2c 07F5B353 		add	r3, r7, #5728
 3619 1a30 03F11B03 		add	r3, r3, #27
 3620 1a34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3621 1a36 9A42     		cmp	r2, r3
 3622 1a38 BED3     		bcc	.L169
 594:..\src/command_processing.c ****                             } 
 595:..\src/command_processing.c ****                         }
 596:..\src/command_processing.c ****                         else {
 597:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 599:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 600:..\src/command_processing.c ****                             }
 601:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 604:..\src/command_processing.c ****                             }
 605:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 608:..\src/command_processing.c ****                             }
 609:..\src/command_processing.c ****                         }
 610:..\src/command_processing.c ****                         break;
 3623              		.loc 1 610 0 is_stmt 1
 3624 1a3a 00F0E2BC 		b	.L113
 3625              	.L163:
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3626              		.loc 1 597 0
 3627 1a3e 07F5B353 		add	r3, r7, #5728
 3628 1a42 03F11603 		add	r3, r3, #22
 3629 1a46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3630 1a48 6B4A     		ldr	r2, .L297
 3631 1a4a 7421     		movs	r1, #116
 3632 1a4c 01FB03F3 		mul	r3, r1, r3
 3633 1a50 1344     		add	r3, r3, r2
 3634 1a52 C833     		adds	r3, r3, #200
 3635 1a54 1B68     		ldr	r3, [r3]
 3636 1a56 1846     		mov	r0, r3
 3637 1a58 FFF7FEFF 		bl	__aeabi_i2f
 3638 1a5c 0346     		mov	r3, r0
 3639 1a5e 4FF08F41 		mov	r1, #1199570944
 3640 1a62 1846     		mov	r0, r3
 3641 1a64 FFF7FEFF 		bl	__aeabi_fdiv
 3642 1a68 0346     		mov	r3, r0
 3643 1a6a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 93


 3644 1a6c 07F12003 		add	r3, r7, #32
 3645 1a70 1A60     		str	r2, [r3]	@ float
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3646              		.loc 1 598 0
 3647 1a72 0023     		movs	r3, #0
 3648 1a74 07F5B352 		add	r2, r7, #5728
 3649 1a78 02F11F02 		add	r2, r2, #31
 3650 1a7c 1370     		strb	r3, [r2]
 3651 1a7e 2DE0     		b	.L171
 3652              	.L172:
 599:..\src/command_processing.c ****                             }
 3653              		.loc 1 599 0 discriminator 3
 3654 1a80 07F5B353 		add	r3, r7, #5728
 3655 1a84 03F11D03 		add	r3, r3, #29
 3656 1a88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3657 1a8a 3222     		movs	r2, #50
 3658 1a8c 02FB03F3 		mul	r3, r2, r3
 3659 1a90 1A1D     		adds	r2, r3, #4
 3660 1a92 07F5B353 		add	r3, r7, #5728
 3661 1a96 03F11B03 		add	r3, r3, #27
 3662 1a9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3663 1a9c 1A44     		add	r2, r2, r3
 3664 1a9e 07F5B353 		add	r3, r7, #5728
 3665 1aa2 03F11F03 		add	r3, r3, #31
 3666 1aa6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3667 1aa8 D31A     		subs	r3, r2, r3
 3668 1aaa 5A1E     		subs	r2, r3, #1
 3669 1aac 07F5B353 		add	r3, r7, #5728
 3670 1ab0 03F11F03 		add	r3, r3, #31
 3671 1ab4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3672 1ab6 07F12001 		add	r1, r7, #32
 3673 1aba 0B44     		add	r3, r3, r1
 3674 1abc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3675 1abe 07F16003 		add	r3, r7, #96
 3676 1ac2 083B     		subs	r3, r3, #8
 3677 1ac4 9954     		strb	r1, [r3, r2]
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3678              		.loc 1 598 0 discriminator 3
 3679 1ac6 07F5B353 		add	r3, r7, #5728
 3680 1aca 03F11F03 		add	r3, r3, #31
 3681 1ace 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3682 1ad0 0133     		adds	r3, r3, #1
 3683 1ad2 07F5B352 		add	r2, r7, #5728
 3684 1ad6 02F11F02 		add	r2, r2, #31
 3685 1ada 1370     		strb	r3, [r2]
 3686              	.L171:
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3687              		.loc 1 598 0 is_stmt 0 discriminator 1
 3688 1adc 07F5B353 		add	r3, r7, #5728
 3689 1ae0 03F11F03 		add	r3, r3, #31
 3690 1ae4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3691 1ae6 07F5B353 		add	r3, r7, #5728
 3692 1aea 03F11B03 		add	r3, r3, #27
 3693 1aee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3694 1af0 9A42     		cmp	r2, r3
 3695 1af2 C5D3     		bcc	.L172
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 94


 3696              		.loc 1 601 0 is_stmt 1
 3697 1af4 07F5B353 		add	r3, r7, #5728
 3698 1af8 03F11603 		add	r3, r3, #22
 3699 1afc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3700 1afe 3E4A     		ldr	r2, .L297
 3701 1b00 7421     		movs	r1, #116
 3702 1b02 01FB03F3 		mul	r3, r1, r3
 3703 1b06 1344     		add	r3, r3, r2
 3704 1b08 CC33     		adds	r3, r3, #204
 3705 1b0a 1B68     		ldr	r3, [r3]
 3706 1b0c 1846     		mov	r0, r3
 3707 1b0e FFF7FEFF 		bl	__aeabi_i2f
 3708 1b12 0346     		mov	r3, r0
 3709 1b14 4FF08F41 		mov	r1, #1199570944
 3710 1b18 1846     		mov	r0, r3
 3711 1b1a FFF7FEFF 		bl	__aeabi_fdiv
 3712 1b1e 0346     		mov	r3, r0
 3713 1b20 1A46     		mov	r2, r3
 3714 1b22 07F12003 		add	r3, r7, #32
 3715 1b26 1A60     		str	r2, [r3]	@ float
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3716              		.loc 1 602 0
 3717 1b28 0023     		movs	r3, #0
 3718 1b2a 07F5B352 		add	r2, r7, #5728
 3719 1b2e 02F11F02 		add	r2, r2, #31
 3720 1b32 1370     		strb	r3, [r2]
 3721 1b34 33E0     		b	.L173
 3722              	.L174:
 603:..\src/command_processing.c ****                             }
 3723              		.loc 1 603 0 discriminator 3
 3724 1b36 07F5B353 		add	r3, r7, #5728
 3725 1b3a 03F11D03 		add	r3, r3, #29
 3726 1b3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3727 1b40 3222     		movs	r2, #50
 3728 1b42 02FB03F3 		mul	r3, r2, r3
 3729 1b46 1A1D     		adds	r2, r3, #4
 3730 1b48 07F5B353 		add	r3, r7, #5728
 3731 1b4c 03F11B03 		add	r3, r3, #27
 3732 1b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3733 1b52 1A44     		add	r2, r2, r3
 3734 1b54 07F5B353 		add	r3, r7, #5728
 3735 1b58 03F11B03 		add	r3, r3, #27
 3736 1b5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3737 1b5e 1A44     		add	r2, r2, r3
 3738 1b60 07F5B353 		add	r3, r7, #5728
 3739 1b64 03F11F03 		add	r3, r3, #31
 3740 1b68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3741 1b6a D31A     		subs	r3, r2, r3
 3742 1b6c 5A1E     		subs	r2, r3, #1
 3743 1b6e 07F5B353 		add	r3, r7, #5728
 3744 1b72 03F11F03 		add	r3, r3, #31
 3745 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3746 1b78 07F12001 		add	r1, r7, #32
 3747 1b7c 0B44     		add	r3, r3, r1
 3748 1b7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3749 1b80 07F16003 		add	r3, r7, #96
 3750 1b84 083B     		subs	r3, r3, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 95


 3751 1b86 9954     		strb	r1, [r3, r2]
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3752              		.loc 1 602 0 discriminator 3
 3753 1b88 07F5B353 		add	r3, r7, #5728
 3754 1b8c 03F11F03 		add	r3, r3, #31
 3755 1b90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3756 1b92 0133     		adds	r3, r3, #1
 3757 1b94 07F5B352 		add	r2, r7, #5728
 3758 1b98 02F11F02 		add	r2, r2, #31
 3759 1b9c 1370     		strb	r3, [r2]
 3760              	.L173:
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3761              		.loc 1 602 0 is_stmt 0 discriminator 1
 3762 1b9e 07F5B353 		add	r3, r7, #5728
 3763 1ba2 03F11F03 		add	r3, r3, #31
 3764 1ba6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3765 1ba8 07F5B353 		add	r3, r7, #5728
 3766 1bac 03F11B03 		add	r3, r3, #27
 3767 1bb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3768 1bb2 9A42     		cmp	r2, r3
 3769 1bb4 BFD3     		bcc	.L174
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3770              		.loc 1 605 0 is_stmt 1
 3771 1bb6 07F5B353 		add	r3, r7, #5728
 3772 1bba 03F11603 		add	r3, r3, #22
 3773 1bbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3774 1bc0 0D4A     		ldr	r2, .L297
 3775 1bc2 7421     		movs	r1, #116
 3776 1bc4 01FB03F3 		mul	r3, r1, r3
 3777 1bc8 1344     		add	r3, r3, r2
 3778 1bca D033     		adds	r3, r3, #208
 3779 1bcc 1B68     		ldr	r3, [r3]
 3780 1bce 1846     		mov	r0, r3
 3781 1bd0 FFF7FEFF 		bl	__aeabi_i2f
 3782 1bd4 0346     		mov	r3, r0
 3783 1bd6 4FF08F41 		mov	r1, #1199570944
 3784 1bda 1846     		mov	r0, r3
 3785 1bdc FFF7FEFF 		bl	__aeabi_fdiv
 3786 1be0 0346     		mov	r3, r0
 3787 1be2 1A46     		mov	r2, r3
 3788 1be4 07F12003 		add	r3, r7, #32
 3789 1be8 1A60     		str	r2, [r3]	@ float
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3790              		.loc 1 606 0
 3791 1bea 0023     		movs	r3, #0
 3792 1bec 07F5B352 		add	r2, r7, #5728
 3793 1bf0 02F11F02 		add	r2, r2, #31
 3794 1bf4 1370     		strb	r3, [r2]
 3795 1bf6 36E0     		b	.L175
 3796              	.L298:
 3797              		.align	2
 3798              	.L297:
 3799 1bf8 00000000 		.word	c_mem
 3800              	.L176:
 607:..\src/command_processing.c ****                             }
 3801              		.loc 1 607 0 discriminator 3
 3802 1bfc 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 96


 3803 1c00 03F11D03 		add	r3, r3, #29
 3804 1c04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3805 1c06 3222     		movs	r2, #50
 3806 1c08 02FB03F3 		mul	r3, r2, r3
 3807 1c0c 1A1D     		adds	r2, r3, #4
 3808 1c0e 07F5B353 		add	r3, r7, #5728
 3809 1c12 03F11B03 		add	r3, r3, #27
 3810 1c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3811 1c18 5B00     		lsls	r3, r3, #1
 3812 1c1a 1A44     		add	r2, r2, r3
 3813 1c1c 07F5B353 		add	r3, r7, #5728
 3814 1c20 03F11B03 		add	r3, r3, #27
 3815 1c24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3816 1c26 1A44     		add	r2, r2, r3
 3817 1c28 07F5B353 		add	r3, r7, #5728
 3818 1c2c 03F11F03 		add	r3, r3, #31
 3819 1c30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3820 1c32 D31A     		subs	r3, r2, r3
 3821 1c34 5A1E     		subs	r2, r3, #1
 3822 1c36 07F5B353 		add	r3, r7, #5728
 3823 1c3a 03F11F03 		add	r3, r3, #31
 3824 1c3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3825 1c40 07F12001 		add	r1, r7, #32
 3826 1c44 0B44     		add	r3, r3, r1
 3827 1c46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3828 1c48 07F16003 		add	r3, r7, #96
 3829 1c4c 083B     		subs	r3, r3, #8
 3830 1c4e 9954     		strb	r1, [r3, r2]
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3831              		.loc 1 606 0 discriminator 3
 3832 1c50 07F5B353 		add	r3, r7, #5728
 3833 1c54 03F11F03 		add	r3, r3, #31
 3834 1c58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3835 1c5a 0133     		adds	r3, r3, #1
 3836 1c5c 07F5B352 		add	r2, r7, #5728
 3837 1c60 02F11F02 		add	r2, r2, #31
 3838 1c64 1370     		strb	r3, [r2]
 3839              	.L175:
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3840              		.loc 1 606 0 is_stmt 0 discriminator 1
 3841 1c66 07F5B353 		add	r3, r7, #5728
 3842 1c6a 03F11F03 		add	r3, r3, #31
 3843 1c6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3844 1c70 07F5B353 		add	r3, r7, #5728
 3845 1c74 03F11B03 		add	r3, r3, #27
 3846 1c78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3847 1c7a 9A42     		cmp	r2, r3
 3848 1c7c BED3     		bcc	.L176
 3849              		.loc 1 610 0 is_stmt 1
 3850 1c7e C0E3     		b	.L113
 3851              	.L122:
 611:..\src/command_processing.c ****                         
 612:..\src/command_processing.c ****                     case 46:         // Second Motor Current PID
 613:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3852              		.loc 1 613 0
 3853 1c80 07F5B353 		add	r3, r7, #5728
 3854 1c84 03F11603 		add	r3, r3, #22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 97


 3855 1c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3856 1c8a D34A     		ldr	r2, .L299
 3857 1c8c 7421     		movs	r1, #116
 3858 1c8e 01FB03F3 		mul	r3, r1, r3
 3859 1c92 1344     		add	r3, r3, r2
 3860 1c94 03F20F13 		addw	r3, r3, #271
 3861 1c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3862 1c9a 032B     		cmp	r3, #3
 3863 1c9c 00F01F81 		beq	.L177
 614:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3864              		.loc 1 614 0
 3865 1ca0 07F5B353 		add	r3, r7, #5728
 3866 1ca4 03F11603 		add	r3, r3, #22
 3867 1ca8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3868 1caa CB4A     		ldr	r2, .L299
 3869 1cac 7421     		movs	r1, #116
 3870 1cae 01FB03F3 		mul	r3, r1, r3
 3871 1cb2 1344     		add	r3, r3, r2
 3872 1cb4 BC33     		adds	r3, r3, #188
 3873 1cb6 1B68     		ldr	r3, [r3]
 3874 1cb8 1846     		mov	r0, r3
 3875 1cba FFF7FEFF 		bl	__aeabi_i2f
 3876 1cbe 0346     		mov	r3, r0
 3877 1cc0 4FF08F41 		mov	r1, #1199570944
 3878 1cc4 1846     		mov	r0, r3
 3879 1cc6 FFF7FEFF 		bl	__aeabi_fdiv
 3880 1cca 0346     		mov	r3, r0
 3881 1ccc 1A46     		mov	r2, r3
 3882 1cce 07F12003 		add	r3, r7, #32
 3883 1cd2 1A60     		str	r2, [r3]	@ float
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3884              		.loc 1 615 0
 3885 1cd4 0023     		movs	r3, #0
 3886 1cd6 07F5B352 		add	r2, r7, #5728
 3887 1cda 02F11F02 		add	r2, r2, #31
 3888 1cde 1370     		strb	r3, [r2]
 3889 1ce0 2DE0     		b	.L178
 3890              	.L179:
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3891              		.loc 1 616 0 discriminator 3
 3892 1ce2 07F5B353 		add	r3, r7, #5728
 3893 1ce6 03F11D03 		add	r3, r3, #29
 3894 1cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3895 1cec 3222     		movs	r2, #50
 3896 1cee 02FB03F3 		mul	r3, r2, r3
 3897 1cf2 1A1D     		adds	r2, r3, #4
 3898 1cf4 07F5B353 		add	r3, r7, #5728
 3899 1cf8 03F11B03 		add	r3, r3, #27
 3900 1cfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3901 1cfe 1A44     		add	r2, r2, r3
 3902 1d00 07F5B353 		add	r3, r7, #5728
 3903 1d04 03F11F03 		add	r3, r3, #31
 3904 1d08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3905 1d0a D31A     		subs	r3, r2, r3
 3906 1d0c 5A1E     		subs	r2, r3, #1
 3907 1d0e 07F5B353 		add	r3, r7, #5728
 3908 1d12 03F11F03 		add	r3, r3, #31
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 98


 3909 1d16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3910 1d18 07F12001 		add	r1, r7, #32
 3911 1d1c 0B44     		add	r3, r3, r1
 3912 1d1e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3913 1d20 07F16003 		add	r3, r7, #96
 3914 1d24 083B     		subs	r3, r3, #8
 3915 1d26 9954     		strb	r1, [r3, r2]
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3916              		.loc 1 615 0 discriminator 3
 3917 1d28 07F5B353 		add	r3, r7, #5728
 3918 1d2c 03F11F03 		add	r3, r3, #31
 3919 1d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3920 1d32 0133     		adds	r3, r3, #1
 3921 1d34 07F5B352 		add	r2, r7, #5728
 3922 1d38 02F11F02 		add	r2, r2, #31
 3923 1d3c 1370     		strb	r3, [r2]
 3924              	.L178:
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3925              		.loc 1 615 0 is_stmt 0 discriminator 1
 3926 1d3e 07F5B353 		add	r3, r7, #5728
 3927 1d42 03F11F03 		add	r3, r3, #31
 3928 1d46 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3929 1d48 07F5B353 		add	r3, r7, #5728
 3930 1d4c 03F11B03 		add	r3, r3, #27
 3931 1d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3932 1d52 9A42     		cmp	r2, r3
 3933 1d54 C5D3     		bcc	.L179
 617:..\src/command_processing.c ****                             }
 618:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3934              		.loc 1 618 0 is_stmt 1
 3935 1d56 07F5B353 		add	r3, r7, #5728
 3936 1d5a 03F11603 		add	r3, r3, #22
 3937 1d5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3938 1d60 9D4A     		ldr	r2, .L299
 3939 1d62 7421     		movs	r1, #116
 3940 1d64 01FB03F3 		mul	r3, r1, r3
 3941 1d68 1344     		add	r3, r3, r2
 3942 1d6a C033     		adds	r3, r3, #192
 3943 1d6c 1B68     		ldr	r3, [r3]
 3944 1d6e 1846     		mov	r0, r3
 3945 1d70 FFF7FEFF 		bl	__aeabi_i2f
 3946 1d74 0346     		mov	r3, r0
 3947 1d76 4FF08F41 		mov	r1, #1199570944
 3948 1d7a 1846     		mov	r0, r3
 3949 1d7c FFF7FEFF 		bl	__aeabi_fdiv
 3950 1d80 0346     		mov	r3, r0
 3951 1d82 1A46     		mov	r2, r3
 3952 1d84 07F12003 		add	r3, r7, #32
 3953 1d88 1A60     		str	r2, [r3]	@ float
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3954              		.loc 1 619 0
 3955 1d8a 0023     		movs	r3, #0
 3956 1d8c 07F5B352 		add	r2, r7, #5728
 3957 1d90 02F11F02 		add	r2, r2, #31
 3958 1d94 1370     		strb	r3, [r2]
 3959 1d96 33E0     		b	.L180
 3960              	.L181:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 99


 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3961              		.loc 1 620 0 discriminator 3
 3962 1d98 07F5B353 		add	r3, r7, #5728
 3963 1d9c 03F11D03 		add	r3, r3, #29
 3964 1da0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3965 1da2 3222     		movs	r2, #50
 3966 1da4 02FB03F3 		mul	r3, r2, r3
 3967 1da8 1A1D     		adds	r2, r3, #4
 3968 1daa 07F5B353 		add	r3, r7, #5728
 3969 1dae 03F11B03 		add	r3, r3, #27
 3970 1db2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3971 1db4 1A44     		add	r2, r2, r3
 3972 1db6 07F5B353 		add	r3, r7, #5728
 3973 1dba 03F11B03 		add	r3, r3, #27
 3974 1dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3975 1dc0 1A44     		add	r2, r2, r3
 3976 1dc2 07F5B353 		add	r3, r7, #5728
 3977 1dc6 03F11F03 		add	r3, r3, #31
 3978 1dca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3979 1dcc D31A     		subs	r3, r2, r3
 3980 1dce 5A1E     		subs	r2, r3, #1
 3981 1dd0 07F5B353 		add	r3, r7, #5728
 3982 1dd4 03F11F03 		add	r3, r3, #31
 3983 1dd8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3984 1dda 07F12001 		add	r1, r7, #32
 3985 1dde 0B44     		add	r3, r3, r1
 3986 1de0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3987 1de2 07F16003 		add	r3, r7, #96
 3988 1de6 083B     		subs	r3, r3, #8
 3989 1de8 9954     		strb	r1, [r3, r2]
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3990              		.loc 1 619 0 discriminator 3
 3991 1dea 07F5B353 		add	r3, r7, #5728
 3992 1dee 03F11F03 		add	r3, r3, #31
 3993 1df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3994 1df4 0133     		adds	r3, r3, #1
 3995 1df6 07F5B352 		add	r2, r7, #5728
 3996 1dfa 02F11F02 		add	r2, r2, #31
 3997 1dfe 1370     		strb	r3, [r2]
 3998              	.L180:
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3999              		.loc 1 619 0 is_stmt 0 discriminator 1
 4000 1e00 07F5B353 		add	r3, r7, #5728
 4001 1e04 03F11F03 		add	r3, r3, #31
 4002 1e08 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4003 1e0a 07F5B353 		add	r3, r7, #5728
 4004 1e0e 03F11B03 		add	r3, r3, #27
 4005 1e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4006 1e14 9A42     		cmp	r2, r3
 4007 1e16 BFD3     		bcc	.L181
 621:..\src/command_processing.c ****                             }
 622:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4008              		.loc 1 622 0 is_stmt 1
 4009 1e18 07F5B353 		add	r3, r7, #5728
 4010 1e1c 03F11603 		add	r3, r3, #22
 4011 1e20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4012 1e22 6D4A     		ldr	r2, .L299
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 100


 4013 1e24 7421     		movs	r1, #116
 4014 1e26 01FB03F3 		mul	r3, r1, r3
 4015 1e2a 1344     		add	r3, r3, r2
 4016 1e2c C433     		adds	r3, r3, #196
 4017 1e2e 1B68     		ldr	r3, [r3]
 4018 1e30 1846     		mov	r0, r3
 4019 1e32 FFF7FEFF 		bl	__aeabi_i2f
 4020 1e36 0346     		mov	r3, r0
 4021 1e38 4FF08F41 		mov	r1, #1199570944
 4022 1e3c 1846     		mov	r0, r3
 4023 1e3e FFF7FEFF 		bl	__aeabi_fdiv
 4024 1e42 0346     		mov	r3, r0
 4025 1e44 1A46     		mov	r2, r3
 4026 1e46 07F12003 		add	r3, r7, #32
 4027 1e4a 1A60     		str	r2, [r3]	@ float
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4028              		.loc 1 623 0
 4029 1e4c 0023     		movs	r3, #0
 4030 1e4e 07F5B352 		add	r2, r7, #5728
 4031 1e52 02F11F02 		add	r2, r2, #31
 4032 1e56 1370     		strb	r3, [r2]
 4033 1e58 34E0     		b	.L182
 4034              	.L183:
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4035              		.loc 1 624 0 discriminator 3
 4036 1e5a 07F5B353 		add	r3, r7, #5728
 4037 1e5e 03F11D03 		add	r3, r3, #29
 4038 1e62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4039 1e64 3222     		movs	r2, #50
 4040 1e66 02FB03F3 		mul	r3, r2, r3
 4041 1e6a 1A1D     		adds	r2, r3, #4
 4042 1e6c 07F5B353 		add	r3, r7, #5728
 4043 1e70 03F11B03 		add	r3, r3, #27
 4044 1e74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4045 1e76 5B00     		lsls	r3, r3, #1
 4046 1e78 1A44     		add	r2, r2, r3
 4047 1e7a 07F5B353 		add	r3, r7, #5728
 4048 1e7e 03F11B03 		add	r3, r3, #27
 4049 1e82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4050 1e84 1A44     		add	r2, r2, r3
 4051 1e86 07F5B353 		add	r3, r7, #5728
 4052 1e8a 03F11F03 		add	r3, r3, #31
 4053 1e8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4054 1e90 D31A     		subs	r3, r2, r3
 4055 1e92 5A1E     		subs	r2, r3, #1
 4056 1e94 07F5B353 		add	r3, r7, #5728
 4057 1e98 03F11F03 		add	r3, r3, #31
 4058 1e9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4059 1e9e 07F12001 		add	r1, r7, #32
 4060 1ea2 0B44     		add	r3, r3, r1
 4061 1ea4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4062 1ea6 07F16003 		add	r3, r7, #96
 4063 1eaa 083B     		subs	r3, r3, #8
 4064 1eac 9954     		strb	r1, [r3, r2]
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4065              		.loc 1 623 0 discriminator 3
 4066 1eae 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 101


 4067 1eb2 03F11F03 		add	r3, r3, #31
 4068 1eb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4069 1eb8 0133     		adds	r3, r3, #1
 4070 1eba 07F5B352 		add	r2, r7, #5728
 4071 1ebe 02F11F02 		add	r2, r2, #31
 4072 1ec2 1370     		strb	r3, [r2]
 4073              	.L182:
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4074              		.loc 1 623 0 is_stmt 0 discriminator 1
 4075 1ec4 07F5B353 		add	r3, r7, #5728
 4076 1ec8 03F11F03 		add	r3, r3, #31
 4077 1ecc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4078 1ece 07F5B353 		add	r3, r7, #5728
 4079 1ed2 03F11B03 		add	r3, r3, #27
 4080 1ed6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4081 1ed8 9A42     		cmp	r2, r3
 4082 1eda BED3     		bcc	.L183
 625:..\src/command_processing.c ****                             }
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         else {
 628:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 630:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 631:..\src/command_processing.c ****                             }
 632:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 633:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 634:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 635:..\src/command_processing.c ****                             }
 636:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 637:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 638:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 639:..\src/command_processing.c ****                             }
 640:..\src/command_processing.c ****                         }            
 641:..\src/command_processing.c ****                         break;  
 4083              		.loc 1 641 0 is_stmt 1
 4084 1edc 91E2     		b	.L113
 4085              	.L177:
 628:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4086              		.loc 1 628 0
 4087 1ede 07F5B353 		add	r3, r7, #5728
 4088 1ee2 03F11603 		add	r3, r3, #22
 4089 1ee6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4090 1ee8 3B4A     		ldr	r2, .L299
 4091 1eea 7421     		movs	r1, #116
 4092 1eec 01FB03F3 		mul	r3, r1, r3
 4093 1ef0 1344     		add	r3, r3, r2
 4094 1ef2 D433     		adds	r3, r3, #212
 4095 1ef4 1B68     		ldr	r3, [r3]
 4096 1ef6 1846     		mov	r0, r3
 4097 1ef8 FFF7FEFF 		bl	__aeabi_i2f
 4098 1efc 0346     		mov	r3, r0
 4099 1efe 4FF08F41 		mov	r1, #1199570944
 4100 1f02 1846     		mov	r0, r3
 4101 1f04 FFF7FEFF 		bl	__aeabi_fdiv
 4102 1f08 0346     		mov	r3, r0
 4103 1f0a 1A46     		mov	r2, r3
 4104 1f0c 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 102


 4105 1f10 1A60     		str	r2, [r3]	@ float
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4106              		.loc 1 629 0
 4107 1f12 0023     		movs	r3, #0
 4108 1f14 07F5B352 		add	r2, r7, #5728
 4109 1f18 02F11F02 		add	r2, r2, #31
 4110 1f1c 1370     		strb	r3, [r2]
 4111 1f1e 2DE0     		b	.L185
 4112              	.L186:
 630:..\src/command_processing.c ****                             }
 4113              		.loc 1 630 0 discriminator 3
 4114 1f20 07F5B353 		add	r3, r7, #5728
 4115 1f24 03F11D03 		add	r3, r3, #29
 4116 1f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4117 1f2a 3222     		movs	r2, #50
 4118 1f2c 02FB03F3 		mul	r3, r2, r3
 4119 1f30 1A1D     		adds	r2, r3, #4
 4120 1f32 07F5B353 		add	r3, r7, #5728
 4121 1f36 03F11B03 		add	r3, r3, #27
 4122 1f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4123 1f3c 1A44     		add	r2, r2, r3
 4124 1f3e 07F5B353 		add	r3, r7, #5728
 4125 1f42 03F11F03 		add	r3, r3, #31
 4126 1f46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4127 1f48 D31A     		subs	r3, r2, r3
 4128 1f4a 5A1E     		subs	r2, r3, #1
 4129 1f4c 07F5B353 		add	r3, r7, #5728
 4130 1f50 03F11F03 		add	r3, r3, #31
 4131 1f54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4132 1f56 07F12001 		add	r1, r7, #32
 4133 1f5a 0B44     		add	r3, r3, r1
 4134 1f5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4135 1f5e 07F16003 		add	r3, r7, #96
 4136 1f62 083B     		subs	r3, r3, #8
 4137 1f64 9954     		strb	r1, [r3, r2]
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4138              		.loc 1 629 0 discriminator 3
 4139 1f66 07F5B353 		add	r3, r7, #5728
 4140 1f6a 03F11F03 		add	r3, r3, #31
 4141 1f6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4142 1f70 0133     		adds	r3, r3, #1
 4143 1f72 07F5B352 		add	r2, r7, #5728
 4144 1f76 02F11F02 		add	r2, r2, #31
 4145 1f7a 1370     		strb	r3, [r2]
 4146              	.L185:
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4147              		.loc 1 629 0 is_stmt 0 discriminator 1
 4148 1f7c 07F5B353 		add	r3, r7, #5728
 4149 1f80 03F11F03 		add	r3, r3, #31
 4150 1f84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4151 1f86 07F5B353 		add	r3, r7, #5728
 4152 1f8a 03F11B03 		add	r3, r3, #27
 4153 1f8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4154 1f90 9A42     		cmp	r2, r3
 4155 1f92 C5D3     		bcc	.L186
 632:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4156              		.loc 1 632 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 103


 4157 1f94 07F5B353 		add	r3, r7, #5728
 4158 1f98 03F11603 		add	r3, r3, #22
 4159 1f9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4160 1f9e 0E4A     		ldr	r2, .L299
 4161 1fa0 7421     		movs	r1, #116
 4162 1fa2 01FB03F3 		mul	r3, r1, r3
 4163 1fa6 1344     		add	r3, r3, r2
 4164 1fa8 D833     		adds	r3, r3, #216
 4165 1faa 1B68     		ldr	r3, [r3]
 4166 1fac 1846     		mov	r0, r3
 4167 1fae FFF7FEFF 		bl	__aeabi_i2f
 4168 1fb2 0346     		mov	r3, r0
 4169 1fb4 4FF08F41 		mov	r1, #1199570944
 4170 1fb8 1846     		mov	r0, r3
 4171 1fba FFF7FEFF 		bl	__aeabi_fdiv
 4172 1fbe 0346     		mov	r3, r0
 4173 1fc0 1A46     		mov	r2, r3
 4174 1fc2 07F12003 		add	r3, r7, #32
 4175 1fc6 1A60     		str	r2, [r3]	@ float
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4176              		.loc 1 633 0
 4177 1fc8 0023     		movs	r3, #0
 4178 1fca 07F5B352 		add	r2, r7, #5728
 4179 1fce 02F11F02 		add	r2, r2, #31
 4180 1fd2 1370     		strb	r3, [r2]
 4181 1fd4 36E0     		b	.L187
 4182              	.L300:
 4183 1fd6 00BF     		.align	2
 4184              	.L299:
 4185 1fd8 00000000 		.word	c_mem
 4186              	.L188:
 634:..\src/command_processing.c ****                             }
 4187              		.loc 1 634 0 discriminator 3
 4188 1fdc 07F5B353 		add	r3, r7, #5728
 4189 1fe0 03F11D03 		add	r3, r3, #29
 4190 1fe4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4191 1fe6 3222     		movs	r2, #50
 4192 1fe8 02FB03F3 		mul	r3, r2, r3
 4193 1fec 1A1D     		adds	r2, r3, #4
 4194 1fee 07F5B353 		add	r3, r7, #5728
 4195 1ff2 03F11B03 		add	r3, r3, #27
 4196 1ff6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4197 1ff8 1A44     		add	r2, r2, r3
 4198 1ffa 07F5B353 		add	r3, r7, #5728
 4199 1ffe 03F11B03 		add	r3, r3, #27
 4200 2002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4201 2004 1A44     		add	r2, r2, r3
 4202 2006 07F5B353 		add	r3, r7, #5728
 4203 200a 03F11F03 		add	r3, r3, #31
 4204 200e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4205 2010 D31A     		subs	r3, r2, r3
 4206 2012 5A1E     		subs	r2, r3, #1
 4207 2014 07F5B353 		add	r3, r7, #5728
 4208 2018 03F11F03 		add	r3, r3, #31
 4209 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4210 201e 07F12001 		add	r1, r7, #32
 4211 2022 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 104


 4212 2024 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4213 2026 07F16003 		add	r3, r7, #96
 4214 202a 083B     		subs	r3, r3, #8
 4215 202c 9954     		strb	r1, [r3, r2]
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4216              		.loc 1 633 0 discriminator 3
 4217 202e 07F5B353 		add	r3, r7, #5728
 4218 2032 03F11F03 		add	r3, r3, #31
 4219 2036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4220 2038 0133     		adds	r3, r3, #1
 4221 203a 07F5B352 		add	r2, r7, #5728
 4222 203e 02F11F02 		add	r2, r2, #31
 4223 2042 1370     		strb	r3, [r2]
 4224              	.L187:
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4225              		.loc 1 633 0 is_stmt 0 discriminator 1
 4226 2044 07F5B353 		add	r3, r7, #5728
 4227 2048 03F11F03 		add	r3, r3, #31
 4228 204c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4229 204e 07F5B353 		add	r3, r7, #5728
 4230 2052 03F11B03 		add	r3, r3, #27
 4231 2056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4232 2058 9A42     		cmp	r2, r3
 4233 205a BFD3     		bcc	.L188
 636:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4234              		.loc 1 636 0 is_stmt 1
 4235 205c 07F5B353 		add	r3, r7, #5728
 4236 2060 03F11603 		add	r3, r3, #22
 4237 2064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4238 2066 C34A     		ldr	r2, .L301
 4239 2068 7421     		movs	r1, #116
 4240 206a 01FB03F3 		mul	r3, r1, r3
 4241 206e 1344     		add	r3, r3, r2
 4242 2070 DC33     		adds	r3, r3, #220
 4243 2072 1B68     		ldr	r3, [r3]
 4244 2074 1846     		mov	r0, r3
 4245 2076 FFF7FEFF 		bl	__aeabi_i2f
 4246 207a 0346     		mov	r3, r0
 4247 207c 4FF08F41 		mov	r1, #1199570944
 4248 2080 1846     		mov	r0, r3
 4249 2082 FFF7FEFF 		bl	__aeabi_fdiv
 4250 2086 0346     		mov	r3, r0
 4251 2088 1A46     		mov	r2, r3
 4252 208a 07F12003 		add	r3, r7, #32
 4253 208e 1A60     		str	r2, [r3]	@ float
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4254              		.loc 1 637 0
 4255 2090 0023     		movs	r3, #0
 4256 2092 07F5B352 		add	r2, r7, #5728
 4257 2096 02F11F02 		add	r2, r2, #31
 4258 209a 1370     		strb	r3, [r2]
 4259 209c 34E0     		b	.L189
 4260              	.L190:
 638:..\src/command_processing.c ****                             }
 4261              		.loc 1 638 0 discriminator 3
 4262 209e 07F5B353 		add	r3, r7, #5728
 4263 20a2 03F11D03 		add	r3, r3, #29
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 105


 4264 20a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4265 20a8 3222     		movs	r2, #50
 4266 20aa 02FB03F3 		mul	r3, r2, r3
 4267 20ae 1A1D     		adds	r2, r3, #4
 4268 20b0 07F5B353 		add	r3, r7, #5728
 4269 20b4 03F11B03 		add	r3, r3, #27
 4270 20b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4271 20ba 5B00     		lsls	r3, r3, #1
 4272 20bc 1A44     		add	r2, r2, r3
 4273 20be 07F5B353 		add	r3, r7, #5728
 4274 20c2 03F11B03 		add	r3, r3, #27
 4275 20c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4276 20c8 1A44     		add	r2, r2, r3
 4277 20ca 07F5B353 		add	r3, r7, #5728
 4278 20ce 03F11F03 		add	r3, r3, #31
 4279 20d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4280 20d4 D31A     		subs	r3, r2, r3
 4281 20d6 5A1E     		subs	r2, r3, #1
 4282 20d8 07F5B353 		add	r3, r7, #5728
 4283 20dc 03F11F03 		add	r3, r3, #31
 4284 20e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4285 20e2 07F12001 		add	r1, r7, #32
 4286 20e6 0B44     		add	r3, r3, r1
 4287 20e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4288 20ea 07F16003 		add	r3, r7, #96
 4289 20ee 083B     		subs	r3, r3, #8
 4290 20f0 9954     		strb	r1, [r3, r2]
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4291              		.loc 1 637 0 discriminator 3
 4292 20f2 07F5B353 		add	r3, r7, #5728
 4293 20f6 03F11F03 		add	r3, r3, #31
 4294 20fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4295 20fc 0133     		adds	r3, r3, #1
 4296 20fe 07F5B352 		add	r2, r7, #5728
 4297 2102 02F11F02 		add	r2, r2, #31
 4298 2106 1370     		strb	r3, [r2]
 4299              	.L189:
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4300              		.loc 1 637 0 is_stmt 0 discriminator 1
 4301 2108 07F5B353 		add	r3, r7, #5728
 4302 210c 03F11F03 		add	r3, r3, #31
 4303 2110 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4304 2112 07F5B353 		add	r3, r7, #5728
 4305 2116 03F11B03 		add	r3, r3, #27
 4306 211a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4307 211c 9A42     		cmp	r2, r3
 4308 211e BED3     		bcc	.L190
 4309              		.loc 1 641 0 is_stmt 1
 4310 2120 6FE1     		b	.L113
 4311              	.L123:
 642:..\src/command_processing.c **** 
 643:..\src/command_processing.c ****                     case 51:         // Second Motor Measurement Offset
 644:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4312              		.loc 1 644 0
 4313 2122 07F5B353 		add	r3, r7, #5728
 4314 2126 03F11603 		add	r3, r3, #22
 4315 212a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 106


 4316 212c 924A     		ldr	r2, .L301+4
 4317 212e 7421     		movs	r1, #116
 4318 2130 01FB03F3 		mul	r3, r1, r3
 4319 2134 1344     		add	r3, r3, r2
 4320 2136 03F58873 		add	r3, r3, #272
 4321 213a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4322 213c 1846     		mov	r0, r3
 4323 213e 07F5B353 		add	r3, r7, #5728
 4324 2142 03F11F03 		add	r3, r3, #31
 4325 2146 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4326 2148 8A49     		ldr	r1, .L301
 4327 214a 0346     		mov	r3, r0
 4328 214c 5B00     		lsls	r3, r3, #1
 4329 214e 0344     		add	r3, r3, r0
 4330 2150 9B00     		lsls	r3, r3, #2
 4331 2152 1344     		add	r3, r3, r2
 4332 2154 6833     		adds	r3, r3, #104
 4333 2156 51F82320 		ldr	r2, [r1, r3, lsl #2]
 4334 215a 07F5B353 		add	r3, r7, #5728
 4335 215e 03F11603 		add	r3, r3, #22
 4336 2162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4337 2164 8449     		ldr	r1, .L301+4
 4338 2166 7420     		movs	r0, #116
 4339 2168 00FB03F3 		mul	r3, r0, r3
 4340 216c 0B44     		add	r3, r3, r1
 4341 216e 03F58873 		add	r3, r3, #272
 4342 2172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4343 2174 1C46     		mov	r4, r3
 4344 2176 07F5B353 		add	r3, r7, #5728
 4345 217a 03F11F03 		add	r3, r3, #31
 4346 217e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4347 2180 7C48     		ldr	r0, .L301
 4348 2182 2346     		mov	r3, r4
 4349 2184 5B00     		lsls	r3, r3, #1
 4350 2186 2344     		add	r3, r3, r4
 4351 2188 1B01     		lsls	r3, r3, #4
 4352 218a 0344     		add	r3, r3, r0
 4353 218c 0B44     		add	r3, r3, r1
 4354 218e 03F29D13 		addw	r3, r3, #413
 4355 2192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4356 2194 42FA03F3 		asr	r3, r2, r3
 4357 2198 1AB2     		sxth	r2, r3
 4358 219a 07F12003 		add	r3, r7, #32
 4359 219e 023B     		subs	r3, r3, #2
 4360 21a0 1A80     		strh	r2, [r3]	@ movhi
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4361              		.loc 1 645 0
 4362 21a2 0023     		movs	r3, #0
 4363 21a4 07F5B352 		add	r2, r7, #5728
 4364 21a8 02F11E02 		add	r2, r2, #30
 4365 21ac 1370     		strb	r3, [r2]
 4366 21ae 3BE0     		b	.L191
 4367              	.L192:
 646:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4368              		.loc 1 646 0 discriminator 3
 4369 21b0 07F5B353 		add	r3, r7, #5728
 4370 21b4 03F11D03 		add	r3, r3, #29
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 107


 4371 21b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4372 21ba 3222     		movs	r2, #50
 4373 21bc 02FB03F3 		mul	r3, r2, r3
 4374 21c0 1A1D     		adds	r2, r3, #4
 4375 21c2 07F5B353 		add	r3, r7, #5728
 4376 21c6 03F11F03 		add	r3, r3, #31
 4377 21ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4378 21cc 07F5B351 		add	r1, r7, #5728
 4379 21d0 01F11B01 		add	r1, r1, #27
 4380 21d4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4381 21d6 01FB03F3 		mul	r3, r1, r3
 4382 21da 1A44     		add	r2, r2, r3
 4383 21dc 07F5B353 		add	r3, r7, #5728
 4384 21e0 03F11B03 		add	r3, r3, #27
 4385 21e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4386 21e6 1A44     		add	r2, r2, r3
 4387 21e8 07F5B353 		add	r3, r7, #5728
 4388 21ec 03F11E03 		add	r3, r3, #30
 4389 21f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4390 21f2 D31A     		subs	r3, r2, r3
 4391 21f4 5A1E     		subs	r2, r3, #1
 4392 21f6 07F5B353 		add	r3, r7, #5728
 4393 21fa 03F11E03 		add	r3, r3, #30
 4394 21fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4395 2200 07F12003 		add	r3, r7, #32
 4396 2204 023B     		subs	r3, r3, #2
 4397 2206 0B44     		add	r3, r3, r1
 4398 2208 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4399 220a 07F16003 		add	r3, r7, #96
 4400 220e 083B     		subs	r3, r3, #8
 4401 2210 9954     		strb	r1, [r3, r2]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4402              		.loc 1 645 0 discriminator 3
 4403 2212 07F5B353 		add	r3, r7, #5728
 4404 2216 03F11E03 		add	r3, r3, #30
 4405 221a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4406 221c 0133     		adds	r3, r3, #1
 4407 221e 07F5B352 		add	r2, r7, #5728
 4408 2222 02F11E02 		add	r2, r2, #30
 4409 2226 1370     		strb	r3, [r2]
 4410              	.L191:
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4411              		.loc 1 645 0 is_stmt 0 discriminator 1
 4412 2228 07F5B353 		add	r3, r7, #5728
 4413 222c 03F11E03 		add	r3, r3, #30
 4414 2230 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4415 2232 07F5B353 		add	r3, r7, #5728
 4416 2236 03F11B03 		add	r3, r3, #27
 4417 223a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4418 223c 9A42     		cmp	r2, r3
 4419 223e B7D3     		bcc	.L192
 647:..\src/command_processing.c ****                         }
 648:..\src/command_processing.c ****                         break;
 4420              		.loc 1 648 0 is_stmt 1
 4421 2240 DFE0     		b	.L113
 4422              	.L124:
 649:..\src/command_processing.c ****                 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 108


 650:..\src/command_processing.c ****                     case 54:        // Second Motor Position limits
 651:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4423              		.loc 1 651 0
 4424 2242 07F5B353 		add	r3, r7, #5728
 4425 2246 03F11603 		add	r3, r3, #22
 4426 224a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4427 224c 494A     		ldr	r2, .L301
 4428 224e 7421     		movs	r1, #116
 4429 2250 01FB03F3 		mul	r3, r1, r3
 4430 2254 1344     		add	r3, r3, r2
 4431 2256 E433     		adds	r3, r3, #228
 4432 2258 1A68     		ldr	r2, [r3]
 4433 225a 07F5B353 		add	r3, r7, #5728
 4434 225e 03F11603 		add	r3, r3, #22
 4435 2262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4436 2264 4449     		ldr	r1, .L301+4
 4437 2266 7420     		movs	r0, #116
 4438 2268 00FB03F3 		mul	r3, r0, r3
 4439 226c 0B44     		add	r3, r3, r1
 4440 226e 03F58873 		add	r3, r3, #272
 4441 2272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4442 2274 1846     		mov	r0, r3
 4443 2276 3F49     		ldr	r1, .L301
 4444 2278 0346     		mov	r3, r0
 4445 227a 5B00     		lsls	r3, r3, #1
 4446 227c 0344     		add	r3, r3, r0
 4447 227e 1B01     		lsls	r3, r3, #4
 4448 2280 0B44     		add	r3, r3, r1
 4449 2282 03F29D13 		addw	r3, r3, #413
 4450 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4451 2288 1A41     		asrs	r2, r2, r3
 4452 228a 07F12003 		add	r3, r7, #32
 4453 228e 083B     		subs	r3, r3, #8
 4454 2290 1A60     		str	r2, [r3]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4455              		.loc 1 652 0
 4456 2292 0023     		movs	r3, #0
 4457 2294 07F5B352 		add	r2, r7, #5728
 4458 2298 02F11E02 		add	r2, r2, #30
 4459 229c 1370     		strb	r3, [r2]
 4460 229e 2EE0     		b	.L193
 4461              	.L194:
 653:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4462              		.loc 1 653 0 discriminator 3
 4463 22a0 07F5B353 		add	r3, r7, #5728
 4464 22a4 03F11D03 		add	r3, r3, #29
 4465 22a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4466 22aa 3222     		movs	r2, #50
 4467 22ac 02FB03F3 		mul	r3, r2, r3
 4468 22b0 1A1D     		adds	r2, r3, #4
 4469 22b2 07F5B353 		add	r3, r7, #5728
 4470 22b6 03F11B03 		add	r3, r3, #27
 4471 22ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4472 22bc 1A44     		add	r2, r2, r3
 4473 22be 07F5B353 		add	r3, r7, #5728
 4474 22c2 03F11E03 		add	r3, r3, #30
 4475 22c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 109


 4476 22c8 D31A     		subs	r3, r2, r3
 4477 22ca 5A1E     		subs	r2, r3, #1
 4478 22cc 07F5B353 		add	r3, r7, #5728
 4479 22d0 03F11E03 		add	r3, r3, #30
 4480 22d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4481 22d6 07F12003 		add	r3, r7, #32
 4482 22da 083B     		subs	r3, r3, #8
 4483 22dc 0B44     		add	r3, r3, r1
 4484 22de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4485 22e0 07F16003 		add	r3, r7, #96
 4486 22e4 083B     		subs	r3, r3, #8
 4487 22e6 9954     		strb	r1, [r3, r2]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4488              		.loc 1 652 0 discriminator 3
 4489 22e8 07F5B353 		add	r3, r7, #5728
 4490 22ec 03F11E03 		add	r3, r3, #30
 4491 22f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4492 22f2 0133     		adds	r3, r3, #1
 4493 22f4 07F5B352 		add	r2, r7, #5728
 4494 22f8 02F11E02 		add	r2, r2, #30
 4495 22fc 1370     		strb	r3, [r2]
 4496              	.L193:
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4497              		.loc 1 652 0 is_stmt 0 discriminator 1
 4498 22fe 07F5B353 		add	r3, r7, #5728
 4499 2302 03F11E03 		add	r3, r3, #30
 4500 2306 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4501 2308 07F5B353 		add	r3, r7, #5728
 4502 230c 03F11B03 		add	r3, r3, #27
 4503 2310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4504 2312 9A42     		cmp	r2, r3
 4505 2314 C4D3     		bcc	.L194
 654:..\src/command_processing.c ****                         }
 655:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4506              		.loc 1 655 0 is_stmt 1
 4507 2316 07F5B353 		add	r3, r7, #5728
 4508 231a 03F11603 		add	r3, r3, #22
 4509 231e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4510 2320 144A     		ldr	r2, .L301
 4511 2322 7421     		movs	r1, #116
 4512 2324 01FB03F3 		mul	r3, r1, r3
 4513 2328 1344     		add	r3, r3, r2
 4514 232a E833     		adds	r3, r3, #232
 4515 232c 1A68     		ldr	r2, [r3]
 4516 232e 07F5B353 		add	r3, r7, #5728
 4517 2332 03F11603 		add	r3, r3, #22
 4518 2336 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4519 2338 0F49     		ldr	r1, .L301+4
 4520 233a 7420     		movs	r0, #116
 4521 233c 00FB03F3 		mul	r3, r0, r3
 4522 2340 0B44     		add	r3, r3, r1
 4523 2342 03F58873 		add	r3, r3, #272
 4524 2346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4525 2348 1846     		mov	r0, r3
 4526 234a 0A49     		ldr	r1, .L301
 4527 234c 0346     		mov	r3, r0
 4528 234e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 110


 4529 2350 0344     		add	r3, r3, r0
 4530 2352 1B01     		lsls	r3, r3, #4
 4531 2354 0B44     		add	r3, r3, r1
 4532 2356 03F29D13 		addw	r3, r3, #413
 4533 235a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4534 235c 1A41     		asrs	r2, r2, r3
 4535 235e 07F12003 		add	r3, r7, #32
 4536 2362 083B     		subs	r3, r3, #8
 4537 2364 1A60     		str	r2, [r3]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4538              		.loc 1 656 0
 4539 2366 0023     		movs	r3, #0
 4540 2368 07F5B352 		add	r2, r7, #5728
 4541 236c 02F11E02 		add	r2, r2, #30
 4542 2370 1370     		strb	r3, [r2]
 4543 2372 38E0     		b	.L195
 4544              	.L302:
 4545              		.align	2
 4546              	.L301:
 4547 2374 00000000 		.word	c_mem
 4548 2378 00000000 		.word	g_mem
 4549              	.L196:
 657:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4550              		.loc 1 657 0 discriminator 3
 4551 237c 07F5B353 		add	r3, r7, #5728
 4552 2380 03F11D03 		add	r3, r3, #29
 4553 2384 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4554 2386 3222     		movs	r2, #50
 4555 2388 02FB03F3 		mul	r3, r2, r3
 4556 238c 1A1D     		adds	r2, r3, #4
 4557 238e 07F5B353 		add	r3, r7, #5728
 4558 2392 03F11B03 		add	r3, r3, #27
 4559 2396 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4560 2398 1A44     		add	r2, r2, r3
 4561 239a 07F5B353 		add	r3, r7, #5728
 4562 239e 03F11B03 		add	r3, r3, #27
 4563 23a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4564 23a4 1A44     		add	r2, r2, r3
 4565 23a6 07F5B353 		add	r3, r7, #5728
 4566 23aa 03F11E03 		add	r3, r3, #30
 4567 23ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4568 23b0 D31A     		subs	r3, r2, r3
 4569 23b2 5A1E     		subs	r2, r3, #1
 4570 23b4 07F5B353 		add	r3, r7, #5728
 4571 23b8 03F11E03 		add	r3, r3, #30
 4572 23bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4573 23be 07F12003 		add	r3, r7, #32
 4574 23c2 083B     		subs	r3, r3, #8
 4575 23c4 0B44     		add	r3, r3, r1
 4576 23c6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4577 23c8 07F16003 		add	r3, r7, #96
 4578 23cc 083B     		subs	r3, r3, #8
 4579 23ce 9954     		strb	r1, [r3, r2]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4580              		.loc 1 656 0 discriminator 3
 4581 23d0 07F5B353 		add	r3, r7, #5728
 4582 23d4 03F11E03 		add	r3, r3, #30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 111


 4583 23d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4584 23da 0133     		adds	r3, r3, #1
 4585 23dc 07F5B352 		add	r2, r7, #5728
 4586 23e0 02F11E02 		add	r2, r2, #30
 4587 23e4 1370     		strb	r3, [r2]
 4588              	.L195:
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4589              		.loc 1 656 0 is_stmt 0 discriminator 1
 4590 23e6 07F5B353 		add	r3, r7, #5728
 4591 23ea 03F11E03 		add	r3, r3, #30
 4592 23ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4593 23f0 07F5B353 		add	r3, r7, #5728
 4594 23f4 03F11B03 		add	r3, r3, #27
 4595 23f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4596 23fa 9A42     		cmp	r2, r3
 4597 23fc BED3     		bcc	.L196
 658:..\src/command_processing.c ****                         }
 659:..\src/command_processing.c ****                         break;
 4598              		.loc 1 659 0 is_stmt 1
 4599 23fe 00E0     		b	.L113
 4600              	.L283:
 660:..\src/command_processing.c ****                         
 661:..\src/command_processing.c ****                     default:
 662:..\src/command_processing.c ****                         break;
 4601              		.loc 1 662 0
 4602 2400 00BF     		nop
 4603              	.L113:
 663:..\src/command_processing.c ****                 }
 664:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 665:..\src/command_processing.c ****                         
 666:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 667:..\src/command_processing.c ****         }
 668:..\src/command_processing.c ****         
 669:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4604              		.loc 1 669 0
 4605 2402 07F5B353 		add	r3, r7, #5728
 4606 2406 03F11D03 		add	r3, r3, #29
 4607 240a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4608 240c 9B00     		lsls	r3, r3, #2
 4609 240e 07F5B452 		add	r2, r7, #5760
 4610 2412 02F11C02 		add	r2, r2, #28
 4611 2416 1268     		ldr	r2, [r2]
 4612 2418 1344     		add	r3, r3, r2
 4613 241a 1A68     		ldr	r2, [r3]
 4614 241c 07F14003 		add	r3, r7, #64
 4615 2420 1C3B     		subs	r3, r3, #28
 4616 2422 1146     		mov	r1, r2
 4617 2424 1846     		mov	r0, r3
 4618 2426 FFF7FEFF 		bl	sprintf
 670:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4619              		.loc 1 670 0
 4620 242a 07F14003 		add	r3, r7, #64
 4621 242e 1C3B     		subs	r3, r3, #28
 4622 2430 1846     		mov	r0, r3
 4623 2432 FFF7FEFF 		bl	strlen
 4624 2436 0346     		mov	r3, r0
 4625 2438 07F5B352 		add	r2, r7, #5728
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 112


 4626 243c 02F11A02 		add	r2, r2, #26
 4627 2440 1370     		strb	r3, [r2]
 671:..\src/command_processing.c ****         
 672:..\src/command_processing.c ****         // Parameters with a menu
 673:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4628              		.loc 1 673 0
 4629 2442 07F5B353 		add	r3, r7, #5728
 4630 2446 03F11D03 		add	r3, r3, #29
 4631 244a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4632 244c 07F12003 		add	r3, r7, #32
 4633 2450 183B     		subs	r3, r3, #24
 4634 2452 1B68     		ldr	r3, [r3]
 4635 2454 1344     		add	r3, r3, r2
 4636 2456 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4637 2458 002B     		cmp	r3, #0
 4638 245a 40F0D984 		bne	.L197
 674:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4639              		.loc 1 674 0
 4640 245e 07F5B353 		add	r3, r7, #5728
 4641 2462 03F11C03 		add	r3, r3, #28
 4642 2466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4643 2468 07F5B452 		add	r2, r7, #5760
 4644 246c 02F11802 		add	r2, r2, #24
 4645 2470 1268     		ldr	r2, [r2]
 4646 2472 1344     		add	r3, r3, r2
 4647 2474 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4648 2476 013B     		subs	r3, r3, #1
 4649 2478 0B2B     		cmp	r3, #11
 4650 247a 00F2BB84 		bhi	.L198
 4651 247e 01A2     		adr	r2, .L200
 4652 2480 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4653              		.p2align 2
 4654              	.L200:
 4655 2484 B5240000 		.word	.L199+1
 4656 2488 5F260000 		.word	.L201+1
 4657 248c 35270000 		.word	.L202+1
 4658 2490 89270000 		.word	.L203+1
 4659 2494 ED270000 		.word	.L204+1
 4660 2498 49280000 		.word	.L205+1
 4661 249c 65290000 		.word	.L206+1
 4662 24a0 ED290000 		.word	.L207+1
 4663 24a4 812A0000 		.word	.L208+1
 4664 24a8 2B2B0000 		.word	.L209+1
 4665 24ac 7F2C0000 		.word	.L210+1
 4666 24b0 732D0000 		.word	.L211+1
 4667              		.p2align 1
 4668              	.L199:
 675:..\src/command_processing.c ****                 case 1:     // input mode menu
 676:..\src/command_processing.c ****                     switch(*m_addr) {
 4669              		.loc 1 676 0
 4670 24b4 07F5B353 		add	r3, r7, #5728
 4671 24b8 03F11003 		add	r3, r3, #16
 4672 24bc 1B68     		ldr	r3, [r3]
 4673 24be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4674 24c0 072B     		cmp	r3, #7
 4675 24c2 00F29084 		bhi	.L284
 4676 24c6 01A2     		adr	r2, .L214
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 113


 4677 24c8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4678              		.p2align 2
 4679              	.L214:
 4680 24cc ED240000 		.word	.L213+1
 4681 24d0 11250000 		.word	.L215+1
 4682 24d4 37250000 		.word	.L216+1
 4683 24d8 65250000 		.word	.L217+1
 4684 24dc 91250000 		.word	.L218+1
 4685 24e0 BB250000 		.word	.L219+1
 4686 24e4 EF250000 		.word	.L220+1
 4687 24e8 19260000 		.word	.L221+1
 4688              		.p2align 1
 4689              	.L213:
 677:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 678:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4690              		.loc 1 678 0
 4691 24ec 07F14003 		add	r3, r7, #64
 4692 24f0 1C3B     		subs	r3, r3, #28
 4693 24f2 1846     		mov	r0, r3
 4694 24f4 FFF7FEFF 		bl	strlen
 4695 24f8 0346     		mov	r3, r0
 4696 24fa 1A46     		mov	r2, r3
 4697 24fc 07F14003 		add	r3, r7, #64
 4698 2500 1C3B     		subs	r3, r3, #28
 4699 2502 1344     		add	r3, r3, r2
 4700 2504 DA4A     		ldr	r2, .L303
 4701 2506 1068     		ldr	r0, [r2]	@ unaligned
 4702 2508 1860     		str	r0, [r3]	@ unaligned
 4703 250a 1279     		ldrb	r2, [r2, #4]
 4704 250c 1A71     		strb	r2, [r3, #4]
 679:..\src/command_processing.c ****                         break;
 4705              		.loc 1 679 0
 4706 250e A5E0     		b	.L212
 4707              	.L215:
 680:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 681:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4708              		.loc 1 681 0
 4709 2510 07F14003 		add	r3, r7, #64
 4710 2514 1C3B     		subs	r3, r3, #28
 4711 2516 1846     		mov	r0, r3
 4712 2518 FFF7FEFF 		bl	strlen
 4713 251c 0346     		mov	r3, r0
 4714 251e 1A46     		mov	r2, r3
 4715 2520 07F14003 		add	r3, r7, #64
 4716 2524 1C3B     		subs	r3, r3, #28
 4717 2526 1344     		add	r3, r3, r2
 4718 2528 D249     		ldr	r1, .L303+4
 4719 252a 1A46     		mov	r2, r3
 4720 252c 0B46     		mov	r3, r1
 4721 252e 03CB     		ldmia	r3!, {r0, r1}
 4722 2530 1060     		str	r0, [r2]	@ unaligned
 4723 2532 5160     		str	r1, [r2, #4]	@ unaligned
 682:..\src/command_processing.c ****                         break;
 4724              		.loc 1 682 0
 4725 2534 92E0     		b	.L212
 4726              	.L216:
 683:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 114


 684:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4727              		.loc 1 684 0
 4728 2536 07F14003 		add	r3, r7, #64
 4729 253a 1C3B     		subs	r3, r3, #28
 4730 253c 1846     		mov	r0, r3
 4731 253e FFF7FEFF 		bl	strlen
 4732 2542 0346     		mov	r3, r0
 4733 2544 1A46     		mov	r2, r3
 4734 2546 07F14003 		add	r3, r7, #64
 4735 254a 1C3B     		subs	r3, r3, #28
 4736 254c 1344     		add	r3, r3, r2
 4737 254e CA4A     		ldr	r2, .L303+8
 4738 2550 1D46     		mov	r5, r3
 4739 2552 1446     		mov	r4, r2
 4740 2554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4741 2556 2860     		str	r0, [r5]	@ unaligned
 4742 2558 6960     		str	r1, [r5, #4]	@ unaligned
 4743 255a AA60     		str	r2, [r5, #8]	@ unaligned
 4744 255c EB60     		str	r3, [r5, #12]	@ unaligned
 4745 255e 2388     		ldrh	r3, [r4]	@ unaligned
 4746 2560 2B82     		strh	r3, [r5, #16]	@ unaligned
 685:..\src/command_processing.c ****                         break;
 4747              		.loc 1 685 0
 4748 2562 7BE0     		b	.L212
 4749              	.L217:
 686:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 687:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4750              		.loc 1 687 0
 4751 2564 07F14003 		add	r3, r7, #64
 4752 2568 1C3B     		subs	r3, r3, #28
 4753 256a 1846     		mov	r0, r3
 4754 256c FFF7FEFF 		bl	strlen
 4755 2570 0346     		mov	r3, r0
 4756 2572 1A46     		mov	r2, r3
 4757 2574 07F14003 		add	r3, r7, #64
 4758 2578 1C3B     		subs	r3, r3, #28
 4759 257a 1344     		add	r3, r3, r2
 4760 257c BF4A     		ldr	r2, .L303+12
 4761 257e 1C46     		mov	r4, r3
 4762 2580 1346     		mov	r3, r2
 4763 2582 07CB     		ldmia	r3!, {r0, r1, r2}
 4764 2584 2060     		str	r0, [r4]	@ unaligned
 4765 2586 6160     		str	r1, [r4, #4]	@ unaligned
 4766 2588 A260     		str	r2, [r4, #8]	@ unaligned
 4767 258a 1B88     		ldrh	r3, [r3]	@ unaligned
 4768 258c A381     		strh	r3, [r4, #12]	@ unaligned
 688:..\src/command_processing.c ****                         break;
 4769              		.loc 1 688 0
 4770 258e 65E0     		b	.L212
 4771              	.L218:
 689:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 690:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4772              		.loc 1 690 0
 4773 2590 07F14003 		add	r3, r7, #64
 4774 2594 1C3B     		subs	r3, r3, #28
 4775 2596 1846     		mov	r0, r3
 4776 2598 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 115


 4777 259c 0346     		mov	r3, r0
 4778 259e 1A46     		mov	r2, r3
 4779 25a0 07F14003 		add	r3, r7, #64
 4780 25a4 1C3B     		subs	r3, r3, #28
 4781 25a6 1344     		add	r3, r3, r2
 4782 25a8 B549     		ldr	r1, .L303+16
 4783 25aa 1A46     		mov	r2, r3
 4784 25ac 0B46     		mov	r3, r1
 4785 25ae 03CB     		ldmia	r3!, {r0, r1}
 4786 25b0 1060     		str	r0, [r2]	@ unaligned
 4787 25b2 5160     		str	r1, [r2, #4]	@ unaligned
 4788 25b4 1B88     		ldrh	r3, [r3]	@ unaligned
 4789 25b6 1381     		strh	r3, [r2, #8]	@ unaligned
 691:..\src/command_processing.c ****                         break;
 4790              		.loc 1 691 0
 4791 25b8 50E0     		b	.L212
 4792              	.L219:
 692:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 693:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4793              		.loc 1 693 0
 4794 25ba 07F14003 		add	r3, r7, #64
 4795 25be 1C3B     		subs	r3, r3, #28
 4796 25c0 1846     		mov	r0, r3
 4797 25c2 FFF7FEFF 		bl	strlen
 4798 25c6 0346     		mov	r3, r0
 4799 25c8 1A46     		mov	r2, r3
 4800 25ca 07F14003 		add	r3, r7, #64
 4801 25ce 1C3B     		subs	r3, r3, #28
 4802 25d0 1344     		add	r3, r3, r2
 4803 25d2 AC4A     		ldr	r2, .L303+20
 4804 25d4 1D46     		mov	r5, r3
 4805 25d6 1446     		mov	r4, r2
 4806 25d8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4807 25da 2860     		str	r0, [r5]	@ unaligned
 4808 25dc 6960     		str	r1, [r5, #4]	@ unaligned
 4809 25de AA60     		str	r2, [r5, #8]	@ unaligned
 4810 25e0 EB60     		str	r3, [r5, #12]	@ unaligned
 4811 25e2 2388     		ldrh	r3, [r4]	@ unaligned
 4812 25e4 A278     		ldrb	r2, [r4, #2]
 4813 25e6 2B82     		strh	r3, [r5, #16]	@ unaligned
 4814 25e8 1346     		mov	r3, r2
 4815 25ea AB74     		strb	r3, [r5, #18]
 694:..\src/command_processing.c ****                         break;
 4816              		.loc 1 694 0
 4817 25ec 36E0     		b	.L212
 4818              	.L220:
 695:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 696:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4819              		.loc 1 696 0
 4820 25ee 07F14003 		add	r3, r7, #64
 4821 25f2 1C3B     		subs	r3, r3, #28
 4822 25f4 1846     		mov	r0, r3
 4823 25f6 FFF7FEFF 		bl	strlen
 4824 25fa 0346     		mov	r3, r0
 4825 25fc 1A46     		mov	r2, r3
 4826 25fe 07F14003 		add	r3, r7, #64
 4827 2602 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 116


 4828 2604 1344     		add	r3, r3, r2
 4829 2606 A049     		ldr	r1, .L303+24
 4830 2608 1A46     		mov	r2, r3
 4831 260a 0B46     		mov	r3, r1
 4832 260c 03CB     		ldmia	r3!, {r0, r1}
 4833 260e 1060     		str	r0, [r2]	@ unaligned
 4834 2610 5160     		str	r1, [r2, #4]	@ unaligned
 4835 2612 1B88     		ldrh	r3, [r3]	@ unaligned
 4836 2614 1381     		strh	r3, [r2, #8]	@ unaligned
 697:..\src/command_processing.c ****                         break;
 4837              		.loc 1 697 0
 4838 2616 21E0     		b	.L212
 4839              	.L221:
 698:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 699:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4840              		.loc 1 699 0
 4841 2618 07F14003 		add	r3, r7, #64
 4842 261c 1C3B     		subs	r3, r3, #28
 4843 261e 1846     		mov	r0, r3
 4844 2620 FFF7FEFF 		bl	strlen
 4845 2624 0346     		mov	r3, r0
 4846 2626 1A46     		mov	r2, r3
 4847 2628 07F14003 		add	r3, r7, #64
 4848 262c 1C3B     		subs	r3, r3, #28
 4849 262e 1344     		add	r3, r3, r2
 4850 2630 964A     		ldr	r2, .L303+28
 4851 2632 1446     		mov	r4, r2
 4852 2634 9E46     		mov	lr, r3
 4853 2636 04F1200C 		add	ip, r4, #32
 4854              	.L222:
 4855 263a 7546     		mov	r5, lr
 4856 263c 2646     		mov	r6, r4
 4857 263e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4858 2640 2860     		str	r0, [r5]	@ unaligned
 4859 2642 6960     		str	r1, [r5, #4]	@ unaligned
 4860 2644 AA60     		str	r2, [r5, #8]	@ unaligned
 4861 2646 EB60     		str	r3, [r5, #12]	@ unaligned
 4862 2648 1034     		adds	r4, r4, #16
 4863 264a 0EF1100E 		add	lr, lr, #16
 4864 264e 6445     		cmp	r4, ip
 4865 2650 F3D1     		bne	.L222
 4866 2652 7246     		mov	r2, lr
 4867 2654 2346     		mov	r3, r4
 4868 2656 1B88     		ldrh	r3, [r3]	@ unaligned
 4869 2658 1380     		strh	r3, [r2]	@ unaligned
 700:..\src/command_processing.c ****                         break;
 4870              		.loc 1 700 0
 4871 265a 00BF     		nop
 4872              	.L212:
 701:..\src/command_processing.c ****                     }
 702:..\src/command_processing.c ****                     break;
 4873              		.loc 1 702 0
 4874 265c C3E3     		b	.L284
 4875              	.L201:
 703:..\src/command_processing.c ****                 case 2:     // control mode menu
 704:..\src/command_processing.c ****                     switch(*m_addr){
 4876              		.loc 1 704 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 117


 4877 265e 07F5B353 		add	r3, r7, #5728
 4878 2662 03F11003 		add	r3, r3, #16
 4879 2666 1B68     		ldr	r3, [r3]
 4880 2668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4881 266a 032B     		cmp	r3, #3
 4882 266c 00F2BD83 		bhi	.L285
 4883 2670 01A2     		adr	r2, .L225
 4884 2672 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4885 2676 00BF     		.p2align 2
 4886              	.L225:
 4887 2678 89260000 		.word	.L224+1
 4888 267c B3260000 		.word	.L226+1
 4889 2680 D7260000 		.word	.L227+1
 4890 2684 01270000 		.word	.L228+1
 4891              		.p2align 1
 4892              	.L224:
 705:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 706:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4893              		.loc 1 706 0
 4894 2688 07F14003 		add	r3, r7, #64
 4895 268c 1C3B     		subs	r3, r3, #28
 4896 268e 1846     		mov	r0, r3
 4897 2690 FFF7FEFF 		bl	strlen
 4898 2694 0346     		mov	r3, r0
 4899 2696 1A46     		mov	r2, r3
 4900 2698 07F14003 		add	r3, r7, #64
 4901 269c 1C3B     		subs	r3, r3, #28
 4902 269e 1344     		add	r3, r3, r2
 4903 26a0 7B49     		ldr	r1, .L303+32
 4904 26a2 1A46     		mov	r2, r3
 4905 26a4 0B46     		mov	r3, r1
 4906 26a6 03CB     		ldmia	r3!, {r0, r1}
 4907 26a8 1060     		str	r0, [r2]	@ unaligned
 4908 26aa 5160     		str	r1, [r2, #4]	@ unaligned
 4909 26ac 1B88     		ldrh	r3, [r3]	@ unaligned
 4910 26ae 1381     		strh	r3, [r2, #8]	@ unaligned
 707:..\src/command_processing.c ****                         break;
 4911              		.loc 1 707 0
 4912 26b0 3FE0     		b	.L223
 4913              	.L226:
 708:..\src/command_processing.c ****                         case CONTROL_PWM:
 709:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4914              		.loc 1 709 0
 4915 26b2 07F14003 		add	r3, r7, #64
 4916 26b6 1C3B     		subs	r3, r3, #28
 4917 26b8 1846     		mov	r0, r3
 4918 26ba FFF7FEFF 		bl	strlen
 4919 26be 0346     		mov	r3, r0
 4920 26c0 1A46     		mov	r2, r3
 4921 26c2 07F14003 		add	r3, r7, #64
 4922 26c6 1C3B     		subs	r3, r3, #28
 4923 26c8 1344     		add	r3, r3, r2
 4924 26ca 724A     		ldr	r2, .L303+36
 4925 26cc 1068     		ldr	r0, [r2]	@ unaligned
 4926 26ce 1860     		str	r0, [r3]	@ unaligned
 4927 26d0 1279     		ldrb	r2, [r2, #4]
 4928 26d2 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 118


 710:..\src/command_processing.c ****                         break;
 4929              		.loc 1 710 0
 4930 26d4 2DE0     		b	.L223
 4931              	.L227:
 711:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 712:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4932              		.loc 1 712 0
 4933 26d6 07F14003 		add	r3, r7, #64
 4934 26da 1C3B     		subs	r3, r3, #28
 4935 26dc 1846     		mov	r0, r3
 4936 26de FFF7FEFF 		bl	strlen
 4937 26e2 0346     		mov	r3, r0
 4938 26e4 1A46     		mov	r2, r3
 4939 26e6 07F14003 		add	r3, r7, #64
 4940 26ea 1C3B     		subs	r3, r3, #28
 4941 26ec 1344     		add	r3, r3, r2
 4942 26ee 6A49     		ldr	r1, .L303+40
 4943 26f0 1A46     		mov	r2, r3
 4944 26f2 0B46     		mov	r3, r1
 4945 26f4 03CB     		ldmia	r3!, {r0, r1}
 4946 26f6 1060     		str	r0, [r2]	@ unaligned
 4947 26f8 5160     		str	r1, [r2, #4]	@ unaligned
 4948 26fa 1B78     		ldrb	r3, [r3]
 4949 26fc 1372     		strb	r3, [r2, #8]
 713:..\src/command_processing.c ****                         break;
 4950              		.loc 1 713 0
 4951 26fe 18E0     		b	.L223
 4952              	.L228:
 714:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 715:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 4953              		.loc 1 715 0
 4954 2700 07F14003 		add	r3, r7, #64
 4955 2704 1C3B     		subs	r3, r3, #28
 4956 2706 1846     		mov	r0, r3
 4957 2708 FFF7FEFF 		bl	strlen
 4958 270c 0346     		mov	r3, r0
 4959 270e 1A46     		mov	r2, r3
 4960 2710 07F14003 		add	r3, r7, #64
 4961 2714 1C3B     		subs	r3, r3, #28
 4962 2716 1344     		add	r3, r3, r2
 4963 2718 604A     		ldr	r2, .L303+44
 4964 271a 1D46     		mov	r5, r3
 4965 271c 1446     		mov	r4, r2
 4966 271e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4967 2720 2860     		str	r0, [r5]	@ unaligned
 4968 2722 6960     		str	r1, [r5, #4]	@ unaligned
 4969 2724 AA60     		str	r2, [r5, #8]	@ unaligned
 4970 2726 EB60     		str	r3, [r5, #12]	@ unaligned
 4971 2728 2068     		ldr	r0, [r4]	@ unaligned
 4972 272a 2861     		str	r0, [r5, #16]	@ unaligned
 4973 272c A388     		ldrh	r3, [r4, #4]	@ unaligned
 4974 272e AB82     		strh	r3, [r5, #20]	@ unaligned
 716:..\src/command_processing.c ****                         break;
 4975              		.loc 1 716 0
 4976 2730 00BF     		nop
 4977              	.L223:
 717:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 119


 718:..\src/command_processing.c ****                     break;
 4978              		.loc 1 718 0
 4979 2732 5AE3     		b	.L285
 4980              	.L202:
 719:..\src/command_processing.c ****                 case 3:     // yes/no menu
 720:..\src/command_processing.c ****                     if(*m_addr){
 4981              		.loc 1 720 0
 4982 2734 07F5B353 		add	r3, r7, #5728
 4983 2738 03F11003 		add	r3, r3, #16
 4984 273c 1B68     		ldr	r3, [r3]
 4985 273e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4986 2740 002B     		cmp	r3, #0
 4987 2742 11D0     		beq	.L229
 721:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 4988              		.loc 1 721 0
 4989 2744 07F14003 		add	r3, r7, #64
 4990 2748 1C3B     		subs	r3, r3, #28
 4991 274a 1846     		mov	r0, r3
 4992 274c FFF7FEFF 		bl	strlen
 4993 2750 0346     		mov	r3, r0
 4994 2752 1A46     		mov	r2, r3
 4995 2754 07F14003 		add	r3, r7, #64
 4996 2758 1C3B     		subs	r3, r3, #28
 4997 275a 1344     		add	r3, r3, r2
 4998 275c 504A     		ldr	r2, .L303+48
 4999 275e 1068     		ldr	r0, [r2]	@ unaligned
 5000 2760 1860     		str	r0, [r3]	@ unaligned
 5001 2762 1279     		ldrb	r2, [r2, #4]
 5002 2764 1A71     		strb	r2, [r3, #4]
 722:..\src/command_processing.c ****                     }
 723:..\src/command_processing.c ****                     else {
 724:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 725:..\src/command_processing.c ****                     }
 726:..\src/command_processing.c ****                     break;    
 5003              		.loc 1 726 0
 5004 2766 45E3     		b	.L198
 5005              	.L229:
 724:..\src/command_processing.c ****                     }
 5006              		.loc 1 724 0
 5007 2768 07F14003 		add	r3, r7, #64
 5008 276c 1C3B     		subs	r3, r3, #28
 5009 276e 1846     		mov	r0, r3
 5010 2770 FFF7FEFF 		bl	strlen
 5011 2774 0346     		mov	r3, r0
 5012 2776 1A46     		mov	r2, r3
 5013 2778 07F14003 		add	r3, r7, #64
 5014 277c 1C3B     		subs	r3, r3, #28
 5015 277e 1344     		add	r3, r3, r2
 5016 2780 484A     		ldr	r2, .L303+52
 5017 2782 1068     		ldr	r0, [r2]	@ unaligned
 5018 2784 1860     		str	r0, [r3]	@ unaligned
 5019              		.loc 1 726 0
 5020 2786 35E3     		b	.L198
 5021              	.L203:
 727:..\src/command_processing.c ****                 case 4:     // right/lef menu
 728:..\src/command_processing.c ****                     switch(*m_addr){
 5022              		.loc 1 728 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 120


 5023 2788 07F5B353 		add	r3, r7, #5728
 5024 278c 03F11003 		add	r3, r3, #16
 5025 2790 1B68     		ldr	r3, [r3]
 5026 2792 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5027 2794 002B     		cmp	r3, #0
 5028 2796 02D0     		beq	.L232
 5029 2798 012B     		cmp	r3, #1
 5030 279a 14D0     		beq	.L233
 729:..\src/command_processing.c ****                         case RIGHT_HAND:
 730:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 731:..\src/command_processing.c ****                         break;
 732:..\src/command_processing.c ****                         case LEFT_HAND:
 733:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 734:..\src/command_processing.c ****                         break;
 735:..\src/command_processing.c ****                     }
 736:..\src/command_processing.c ****                     break;
 5031              		.loc 1 736 0
 5032 279c 2AE3     		b	.L198
 5033              	.L232:
 730:..\src/command_processing.c ****                         break;
 5034              		.loc 1 730 0
 5035 279e 07F14003 		add	r3, r7, #64
 5036 27a2 1C3B     		subs	r3, r3, #28
 5037 27a4 1846     		mov	r0, r3
 5038 27a6 FFF7FEFF 		bl	strlen
 5039 27aa 0346     		mov	r3, r0
 5040 27ac 1A46     		mov	r2, r3
 5041 27ae 07F14003 		add	r3, r7, #64
 5042 27b2 1C3B     		subs	r3, r3, #28
 5043 27b4 1344     		add	r3, r3, r2
 5044 27b6 3C4A     		ldr	r2, .L303+56
 5045 27b8 1068     		ldr	r0, [r2]	@ unaligned
 5046 27ba 1860     		str	r0, [r3]	@ unaligned
 5047 27bc 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5048 27be 9279     		ldrb	r2, [r2, #6]
 5049 27c0 9980     		strh	r1, [r3, #4]	@ unaligned
 5050 27c2 9A71     		strb	r2, [r3, #6]
 731:..\src/command_processing.c ****                         case LEFT_HAND:
 5051              		.loc 1 731 0
 5052 27c4 11E0     		b	.L231
 5053              	.L233:
 733:..\src/command_processing.c ****                         break;
 5054              		.loc 1 733 0
 5055 27c6 07F14003 		add	r3, r7, #64
 5056 27ca 1C3B     		subs	r3, r3, #28
 5057 27cc 1846     		mov	r0, r3
 5058 27ce FFF7FEFF 		bl	strlen
 5059 27d2 0346     		mov	r3, r0
 5060 27d4 1A46     		mov	r2, r3
 5061 27d6 07F14003 		add	r3, r7, #64
 5062 27da 1C3B     		subs	r3, r3, #28
 5063 27dc 1344     		add	r3, r3, r2
 5064 27de 334A     		ldr	r2, .L303+60
 5065 27e0 1068     		ldr	r0, [r2]	@ unaligned
 5066 27e2 1860     		str	r0, [r3]	@ unaligned
 5067 27e4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5068 27e6 9A80     		strh	r2, [r3, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 121


 734:..\src/command_processing.c ****                     }
 5069              		.loc 1 734 0
 5070 27e8 00BF     		nop
 5071              	.L231:
 5072              		.loc 1 736 0
 5073 27ea 03E3     		b	.L198
 5074              	.L204:
 737:..\src/command_processing.c ****                 case 5:     // on/off menu
 738:..\src/command_processing.c ****                     switch(*m_addr){
 5075              		.loc 1 738 0
 5076 27ec 07F5B353 		add	r3, r7, #5728
 5077 27f0 03F11003 		add	r3, r3, #16
 5078 27f4 1B68     		ldr	r3, [r3]
 5079 27f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5080 27f8 002B     		cmp	r3, #0
 5081 27fa 02D0     		beq	.L235
 5082 27fc 012B     		cmp	r3, #1
 5083 27fe 12D0     		beq	.L236
 739:..\src/command_processing.c ****                         case 0:
 740:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 741:..\src/command_processing.c ****                         break;
 742:..\src/command_processing.c ****                         case 1:
 743:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 744:..\src/command_processing.c ****                         break;
 745:..\src/command_processing.c ****                     }
 746:..\src/command_processing.c ****                     break;
 5084              		.loc 1 746 0
 5085 2800 F8E2     		b	.L198
 5086              	.L235:
 740:..\src/command_processing.c ****                         break;
 5087              		.loc 1 740 0
 5088 2802 07F14003 		add	r3, r7, #64
 5089 2806 1C3B     		subs	r3, r3, #28
 5090 2808 1846     		mov	r0, r3
 5091 280a FFF7FEFF 		bl	strlen
 5092 280e 0346     		mov	r3, r0
 5093 2810 1A46     		mov	r2, r3
 5094 2812 07F14003 		add	r3, r7, #64
 5095 2816 1C3B     		subs	r3, r3, #28
 5096 2818 1344     		add	r3, r3, r2
 5097 281a 254A     		ldr	r2, .L303+64
 5098 281c 1068     		ldr	r0, [r2]	@ unaligned
 5099 281e 1860     		str	r0, [r3]	@ unaligned
 5100 2820 1279     		ldrb	r2, [r2, #4]
 5101 2822 1A71     		strb	r2, [r3, #4]
 741:..\src/command_processing.c ****                         case 1:
 5102              		.loc 1 741 0
 5103 2824 0FE0     		b	.L234
 5104              	.L236:
 743:..\src/command_processing.c ****                         break;
 5105              		.loc 1 743 0
 5106 2826 07F14003 		add	r3, r7, #64
 5107 282a 1C3B     		subs	r3, r3, #28
 5108 282c 1846     		mov	r0, r3
 5109 282e FFF7FEFF 		bl	strlen
 5110 2832 0346     		mov	r3, r0
 5111 2834 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 122


 5112 2836 07F14003 		add	r3, r7, #64
 5113 283a 1C3B     		subs	r3, r3, #28
 5114 283c 1344     		add	r3, r3, r2
 5115 283e 1D4A     		ldr	r2, .L303+68
 5116 2840 1068     		ldr	r0, [r2]	@ unaligned
 5117 2842 1860     		str	r0, [r3]	@ unaligned
 744:..\src/command_processing.c ****                     }
 5118              		.loc 1 744 0
 5119 2844 00BF     		nop
 5120              	.L234:
 5121              		.loc 1 746 0
 5122 2846 D5E2     		b	.L198
 5123              	.L205:
 747:..\src/command_processing.c ****                 case 6:     // expansion port menu
 748:..\src/command_processing.c ****                     switch(*m_addr){
 5124              		.loc 1 748 0
 5125 2848 07F5B353 		add	r3, r7, #5728
 5126 284c 03F11003 		add	r3, r3, #16
 5127 2850 1B68     		ldr	r3, [r3]
 5128 2852 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5129 2854 032B     		cmp	r3, #3
 5130 2856 00F2CA82 		bhi	.L286
 5131 285a 01A2     		adr	r2, .L239
 5132 285c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5133              		.p2align 2
 5134              	.L239:
 5135 2860 B9280000 		.word	.L238+1
 5136 2864 DD280000 		.word	.L240+1
 5137 2868 09290000 		.word	.L241+1
 5138 286c 37290000 		.word	.L242+1
 5139              		.p2align 1
 5140              	.L304:
 5141              		.align	2
 5142              	.L303:
 5143 2870 00000000 		.word	.LC90
 5144 2874 08000000 		.word	.LC91
 5145 2878 10000000 		.word	.LC92
 5146 287c 24000000 		.word	.LC93
 5147 2880 34000000 		.word	.LC94
 5148 2884 40000000 		.word	.LC95
 5149 2888 54000000 		.word	.LC96
 5150 288c 60000000 		.word	.LC97
 5151 2890 84000000 		.word	.LC98
 5152 2894 90000000 		.word	.LC99
 5153 2898 98000000 		.word	.LC100
 5154 289c A4000000 		.word	.LC101
 5155 28a0 BC000000 		.word	.LC102
 5156 28a4 C4000000 		.word	.LC103
 5157 28a8 CC000000 		.word	.LC104
 5158 28ac D4000000 		.word	.LC105
 5159 28b0 DC000000 		.word	.LC106
 5160 28b4 E4000000 		.word	.LC107
 5161              	.L238:
 749:..\src/command_processing.c ****                         case EXP_NONE:
 750:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5162              		.loc 1 750 0
 5163 28b8 07F14003 		add	r3, r7, #64
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 123


 5164 28bc 1C3B     		subs	r3, r3, #28
 5165 28be 1846     		mov	r0, r3
 5166 28c0 FFF7FEFF 		bl	strlen
 5167 28c4 0346     		mov	r3, r0
 5168 28c6 1A46     		mov	r2, r3
 5169 28c8 07F14003 		add	r3, r7, #64
 5170 28cc 1C3B     		subs	r3, r3, #28
 5171 28ce 1344     		add	r3, r3, r2
 5172 28d0 CD4A     		ldr	r2, .L305
 5173 28d2 1068     		ldr	r0, [r2]	@ unaligned
 5174 28d4 1860     		str	r0, [r3]	@ unaligned
 5175 28d6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5176 28d8 9A80     		strh	r2, [r3, #4]	@ unaligned
 751:..\src/command_processing.c ****                             break;
 5177              		.loc 1 751 0
 5178 28da 42E0     		b	.L237
 5179              	.L240:
 752:..\src/command_processing.c ****                         case EXP_SD_RTC:
 753:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5180              		.loc 1 753 0
 5181 28dc 07F14003 		add	r3, r7, #64
 5182 28e0 1C3B     		subs	r3, r3, #28
 5183 28e2 1846     		mov	r0, r3
 5184 28e4 FFF7FEFF 		bl	strlen
 5185 28e8 0346     		mov	r3, r0
 5186 28ea 1A46     		mov	r2, r3
 5187 28ec 07F14003 		add	r3, r7, #64
 5188 28f0 1C3B     		subs	r3, r3, #28
 5189 28f2 1344     		add	r3, r3, r2
 5190 28f4 C54A     		ldr	r2, .L305+4
 5191 28f6 1C46     		mov	r4, r3
 5192 28f8 1346     		mov	r3, r2
 5193 28fa 07CB     		ldmia	r3!, {r0, r1, r2}
 5194 28fc 2060     		str	r0, [r4]	@ unaligned
 5195 28fe 6160     		str	r1, [r4, #4]	@ unaligned
 5196 2900 A260     		str	r2, [r4, #8]	@ unaligned
 5197 2902 1B88     		ldrh	r3, [r3]	@ unaligned
 5198 2904 A381     		strh	r3, [r4, #12]	@ unaligned
 754:..\src/command_processing.c ****                             break;
 5199              		.loc 1 754 0
 5200 2906 2CE0     		b	.L237
 5201              	.L241:
 755:..\src/command_processing.c ****                         case EXP_WIFI:
 756:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5202              		.loc 1 756 0
 5203 2908 07F14003 		add	r3, r7, #64
 5204 290c 1C3B     		subs	r3, r3, #28
 5205 290e 1846     		mov	r0, r3
 5206 2910 FFF7FEFF 		bl	strlen
 5207 2914 0346     		mov	r3, r0
 5208 2916 1A46     		mov	r2, r3
 5209 2918 07F14003 		add	r3, r7, #64
 5210 291c 1C3B     		subs	r3, r3, #28
 5211 291e 1344     		add	r3, r3, r2
 5212 2920 BB4A     		ldr	r2, .L305+8
 5213 2922 1D46     		mov	r5, r3
 5214 2924 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 124


 5215 2926 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5216 2928 2860     		str	r0, [r5]	@ unaligned
 5217 292a 6960     		str	r1, [r5, #4]	@ unaligned
 5218 292c AA60     		str	r2, [r5, #8]	@ unaligned
 5219 292e EB60     		str	r3, [r5, #12]	@ unaligned
 5220 2930 2388     		ldrh	r3, [r4]	@ unaligned
 5221 2932 2B82     		strh	r3, [r5, #16]	@ unaligned
 757:..\src/command_processing.c ****         					break;
 5222              		.loc 1 757 0
 5223 2934 15E0     		b	.L237
 5224              	.L242:
 758:..\src/command_processing.c ****                         case EXP_OTHER:
 759:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5225              		.loc 1 759 0
 5226 2936 07F14003 		add	r3, r7, #64
 5227 293a 1C3B     		subs	r3, r3, #28
 5228 293c 1846     		mov	r0, r3
 5229 293e FFF7FEFF 		bl	strlen
 5230 2942 0346     		mov	r3, r0
 5231 2944 1A46     		mov	r2, r3
 5232 2946 07F14003 		add	r3, r7, #64
 5233 294a 1C3B     		subs	r3, r3, #28
 5234 294c 1344     		add	r3, r3, r2
 5235 294e B14A     		ldr	r2, .L305+12
 5236 2950 1C46     		mov	r4, r3
 5237 2952 1346     		mov	r3, r2
 5238 2954 07CB     		ldmia	r3!, {r0, r1, r2}
 5239 2956 2060     		str	r0, [r4]	@ unaligned
 5240 2958 6160     		str	r1, [r4, #4]	@ unaligned
 5241 295a A260     		str	r2, [r4, #8]	@ unaligned
 5242 295c 1B78     		ldrb	r3, [r3]
 5243 295e 2373     		strb	r3, [r4, #12]
 760:..\src/command_processing.c ****         					break;
 5244              		.loc 1 760 0
 5245 2960 00BF     		nop
 5246              	.L237:
 761:..\src/command_processing.c ****                     }
 762:..\src/command_processing.c ****                     break;
 5247              		.loc 1 762 0
 5248 2962 44E2     		b	.L286
 5249              	.L206:
 763:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 764:..\src/command_processing.c ****                     switch(*m_addr){
 5250              		.loc 1 764 0
 5251 2964 07F5B353 		add	r3, r7, #5728
 5252 2968 03F11003 		add	r3, r3, #16
 5253 296c 1B68     		ldr	r3, [r3]
 5254 296e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5255 2970 012B     		cmp	r3, #1
 5256 2972 16D0     		beq	.L244
 5257 2974 022B     		cmp	r3, #2
 5258 2976 26D0     		beq	.L245
 5259 2978 002B     		cmp	r3, #0
 5260 297a 00D0     		beq	.L246
 765:..\src/command_processing.c ****                         case 0: 
 766:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 767:..\src/command_processing.c ****                             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 125


 768:..\src/command_processing.c ****                         case 1: 
 769:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 770:..\src/command_processing.c ****                             break;
 771:..\src/command_processing.c ****                         case 2: 
 772:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 773:..\src/command_processing.c ****                             break;
 774:..\src/command_processing.c ****                         default:
 775:..\src/command_processing.c ****                             break;
 5261              		.loc 1 775 0
 5262 297c 35E0     		b	.L247
 5263              	.L246:
 766:..\src/command_processing.c ****                             break;
 5264              		.loc 1 766 0
 5265 297e 07F14003 		add	r3, r7, #64
 5266 2982 1C3B     		subs	r3, r3, #28
 5267 2984 1846     		mov	r0, r3
 5268 2986 FFF7FEFF 		bl	strlen
 5269 298a 0346     		mov	r3, r0
 5270 298c 1A46     		mov	r2, r3
 5271 298e 07F14003 		add	r3, r7, #64
 5272 2992 1C3B     		subs	r3, r3, #28
 5273 2994 1344     		add	r3, r3, r2
 5274 2996 9C4A     		ldr	r2, .L305
 5275 2998 1068     		ldr	r0, [r2]	@ unaligned
 5276 299a 1860     		str	r0, [r3]	@ unaligned
 5277 299c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5278 299e 9A80     		strh	r2, [r3, #4]	@ unaligned
 767:..\src/command_processing.c ****                         case 1: 
 5279              		.loc 1 767 0
 5280 29a0 23E0     		b	.L247
 5281              	.L244:
 769:..\src/command_processing.c ****                             break;
 5282              		.loc 1 769 0
 5283 29a2 07F14003 		add	r3, r7, #64
 5284 29a6 1C3B     		subs	r3, r3, #28
 5285 29a8 1846     		mov	r0, r3
 5286 29aa FFF7FEFF 		bl	strlen
 5287 29ae 0346     		mov	r3, r0
 5288 29b0 1A46     		mov	r2, r3
 5289 29b2 07F14003 		add	r3, r7, #64
 5290 29b6 1C3B     		subs	r3, r3, #28
 5291 29b8 1344     		add	r3, r3, r2
 5292 29ba 974A     		ldr	r2, .L305+16
 5293 29bc 1068     		ldr	r0, [r2]	@ unaligned
 5294 29be 1860     		str	r0, [r3]	@ unaligned
 5295 29c0 1279     		ldrb	r2, [r2, #4]
 5296 29c2 1A71     		strb	r2, [r3, #4]
 770:..\src/command_processing.c ****                         case 2: 
 5297              		.loc 1 770 0
 5298 29c4 11E0     		b	.L247
 5299              	.L245:
 772:..\src/command_processing.c ****                             break;
 5300              		.loc 1 772 0
 5301 29c6 07F14003 		add	r3, r7, #64
 5302 29ca 1C3B     		subs	r3, r3, #28
 5303 29cc 1846     		mov	r0, r3
 5304 29ce FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 126


 5305 29d2 0346     		mov	r3, r0
 5306 29d4 1A46     		mov	r2, r3
 5307 29d6 07F14003 		add	r3, r7, #64
 5308 29da 1C3B     		subs	r3, r3, #28
 5309 29dc 1344     		add	r3, r3, r2
 5310 29de 8F4A     		ldr	r2, .L305+20
 5311 29e0 1068     		ldr	r0, [r2]	@ unaligned
 5312 29e2 1860     		str	r0, [r3]	@ unaligned
 5313 29e4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5314 29e6 9A80     		strh	r2, [r3, #4]	@ unaligned
 773:..\src/command_processing.c ****                         default:
 5315              		.loc 1 773 0
 5316 29e8 00BF     		nop
 5317              	.L247:
 776:..\src/command_processing.c ****                     } 
 777:..\src/command_processing.c ****                     break;
 5318              		.loc 1 777 0 discriminator 12
 5319 29ea 03E2     		b	.L198
 5320              	.L207:
 778:..\src/command_processing.c ****                 case 8:     // user menu          
 779:..\src/command_processing.c ****                     switch(*m_addr){
 5321              		.loc 1 779 0
 5322 29ec 07F5B353 		add	r3, r7, #5728
 5323 29f0 03F11003 		add	r3, r3, #16
 5324 29f4 1B68     		ldr	r3, [r3]
 5325 29f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5326 29f8 012B     		cmp	r3, #1
 5327 29fa 1AD0     		beq	.L249
 5328 29fc 022B     		cmp	r3, #2
 5329 29fe 2CD0     		beq	.L250
 5330 2a00 002B     		cmp	r3, #0
 5331 2a02 00D0     		beq	.L251
 780:..\src/command_processing.c ****                         case GENERIC_USER:
 781:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 782:..\src/command_processing.c ****                         break;
 783:..\src/command_processing.c ****                         case MARIA:
 784:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 785:..\src/command_processing.c ****                         break;
 786:..\src/command_processing.c ****                         case R01:
 787:..\src/command_processing.c ****                             strcat(aux_str, " R01\0");
 788:..\src/command_processing.c ****                         break;
 789:..\src/command_processing.c ****                     }   
 790:..\src/command_processing.c ****                     break;                    
 5332              		.loc 1 790 0
 5333 2a04 F6E1     		b	.L198
 5334              	.L251:
 781:..\src/command_processing.c ****                         break;
 5335              		.loc 1 781 0
 5336 2a06 07F14003 		add	r3, r7, #64
 5337 2a0a 1C3B     		subs	r3, r3, #28
 5338 2a0c 1846     		mov	r0, r3
 5339 2a0e FFF7FEFF 		bl	strlen
 5340 2a12 0346     		mov	r3, r0
 5341 2a14 1A46     		mov	r2, r3
 5342 2a16 07F14003 		add	r3, r7, #64
 5343 2a1a 1C3B     		subs	r3, r3, #28
 5344 2a1c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 127


 5345 2a1e 804A     		ldr	r2, .L305+24
 5346 2a20 1C46     		mov	r4, r3
 5347 2a22 1346     		mov	r3, r2
 5348 2a24 07CB     		ldmia	r3!, {r0, r1, r2}
 5349 2a26 2060     		str	r0, [r4]	@ unaligned
 5350 2a28 6160     		str	r1, [r4, #4]	@ unaligned
 5351 2a2a A260     		str	r2, [r4, #8]	@ unaligned
 5352 2a2c 1B88     		ldrh	r3, [r3]	@ unaligned
 5353 2a2e A381     		strh	r3, [r4, #12]	@ unaligned
 782:..\src/command_processing.c ****                         case MARIA:
 5354              		.loc 1 782 0
 5355 2a30 25E0     		b	.L248
 5356              	.L249:
 784:..\src/command_processing.c ****                         break;
 5357              		.loc 1 784 0
 5358 2a32 07F14003 		add	r3, r7, #64
 5359 2a36 1C3B     		subs	r3, r3, #28
 5360 2a38 1846     		mov	r0, r3
 5361 2a3a FFF7FEFF 		bl	strlen
 5362 2a3e 0346     		mov	r3, r0
 5363 2a40 1A46     		mov	r2, r3
 5364 2a42 07F14003 		add	r3, r7, #64
 5365 2a46 1C3B     		subs	r3, r3, #28
 5366 2a48 1344     		add	r3, r3, r2
 5367 2a4a 764A     		ldr	r2, .L305+28
 5368 2a4c 1068     		ldr	r0, [r2]	@ unaligned
 5369 2a4e 1860     		str	r0, [r3]	@ unaligned
 5370 2a50 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5371 2a52 9279     		ldrb	r2, [r2, #6]
 5372 2a54 9980     		strh	r1, [r3, #4]	@ unaligned
 5373 2a56 9A71     		strb	r2, [r3, #6]
 785:..\src/command_processing.c ****                         case R01:
 5374              		.loc 1 785 0
 5375 2a58 11E0     		b	.L248
 5376              	.L250:
 787:..\src/command_processing.c ****                         break;
 5377              		.loc 1 787 0
 5378 2a5a 07F14003 		add	r3, r7, #64
 5379 2a5e 1C3B     		subs	r3, r3, #28
 5380 2a60 1846     		mov	r0, r3
 5381 2a62 FFF7FEFF 		bl	strlen
 5382 2a66 0346     		mov	r3, r0
 5383 2a68 1A46     		mov	r2, r3
 5384 2a6a 07F14003 		add	r3, r7, #64
 5385 2a6e 1C3B     		subs	r3, r3, #28
 5386 2a70 1344     		add	r3, r3, r2
 5387 2a72 6D4A     		ldr	r2, .L305+32
 5388 2a74 1068     		ldr	r0, [r2]	@ unaligned
 5389 2a76 1860     		str	r0, [r3]	@ unaligned
 5390 2a78 1279     		ldrb	r2, [r2, #4]
 5391 2a7a 1A71     		strb	r2, [r3, #4]
 788:..\src/command_processing.c ****                     }   
 5392              		.loc 1 788 0
 5393 2a7c 00BF     		nop
 5394              	.L248:
 5395              		.loc 1 790 0
 5396 2a7e B9E1     		b	.L198
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 128


 5397              	.L208:
 791:..\src/command_processing.c ****                 case 9:     // driver type menu
 792:..\src/command_processing.c ****                     switch(*m_addr){
 5398              		.loc 1 792 0
 5399 2a80 07F5B353 		add	r3, r7, #5728
 5400 2a84 03F11003 		add	r3, r3, #16
 5401 2a88 1B68     		ldr	r3, [r3]
 5402 2a8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5403 2a8c 012B     		cmp	r3, #1
 5404 2a8e 1BD0     		beq	.L253
 5405 2a90 022B     		cmp	r3, #2
 5406 2a92 32D0     		beq	.L254
 5407 2a94 002B     		cmp	r3, #0
 5408 2a96 00D0     		beq	.L255
 793:..\src/command_processing.c ****                         case 0:
 794:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 795:..\src/command_processing.c ****                         break;
 796:..\src/command_processing.c ****                         case 1:
 797:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 798:..\src/command_processing.c ****                         break;
 799:..\src/command_processing.c ****                         case 2:
 800:..\src/command_processing.c ****                             strcat(aux_str, " ESC (Brushless)\0");
 801:..\src/command_processing.c ****                         break;
 802:..\src/command_processing.c ****                     }
 803:..\src/command_processing.c ****                     break;
 5409              		.loc 1 803 0
 5410 2a98 ACE1     		b	.L198
 5411              	.L255:
 794:..\src/command_processing.c ****                         break;
 5412              		.loc 1 794 0
 5413 2a9a 07F14003 		add	r3, r7, #64
 5414 2a9e 1C3B     		subs	r3, r3, #28
 5415 2aa0 1846     		mov	r0, r3
 5416 2aa2 FFF7FEFF 		bl	strlen
 5417 2aa6 0346     		mov	r3, r0
 5418 2aa8 1A46     		mov	r2, r3
 5419 2aaa 07F14003 		add	r3, r7, #64
 5420 2aae 1C3B     		subs	r3, r3, #28
 5421 2ab0 1344     		add	r3, r3, r2
 5422 2ab2 5E4A     		ldr	r2, .L305+36
 5423 2ab4 1D46     		mov	r5, r3
 5424 2ab6 1446     		mov	r4, r2
 5425 2ab8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5426 2aba 2860     		str	r0, [r5]	@ unaligned
 5427 2abc 6960     		str	r1, [r5, #4]	@ unaligned
 5428 2abe AA60     		str	r2, [r5, #8]	@ unaligned
 5429 2ac0 EB60     		str	r3, [r5, #12]	@ unaligned
 5430 2ac2 2068     		ldr	r0, [r4]	@ unaligned
 5431 2ac4 2861     		str	r0, [r5, #16]	@ unaligned
 795:..\src/command_processing.c ****                         case 1:
 5432              		.loc 1 795 0
 5433 2ac6 2FE0     		b	.L252
 5434              	.L253:
 797:..\src/command_processing.c ****                         break;
 5435              		.loc 1 797 0
 5436 2ac8 07F14003 		add	r3, r7, #64
 5437 2acc 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 129


 5438 2ace 1846     		mov	r0, r3
 5439 2ad0 FFF7FEFF 		bl	strlen
 5440 2ad4 0346     		mov	r3, r0
 5441 2ad6 1A46     		mov	r2, r3
 5442 2ad8 07F14003 		add	r3, r7, #64
 5443 2adc 1C3B     		subs	r3, r3, #28
 5444 2ade 1344     		add	r3, r3, r2
 5445 2ae0 534A     		ldr	r2, .L305+40
 5446 2ae2 1D46     		mov	r5, r3
 5447 2ae4 1446     		mov	r4, r2
 5448 2ae6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5449 2ae8 2860     		str	r0, [r5]	@ unaligned
 5450 2aea 6960     		str	r1, [r5, #4]	@ unaligned
 5451 2aec AA60     		str	r2, [r5, #8]	@ unaligned
 5452 2aee EB60     		str	r3, [r5, #12]	@ unaligned
 5453 2af0 2068     		ldr	r0, [r4]	@ unaligned
 5454 2af2 2861     		str	r0, [r5, #16]	@ unaligned
 5455 2af4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5456 2af6 AB82     		strh	r3, [r5, #20]	@ unaligned
 798:..\src/command_processing.c ****                         case 2:
 5457              		.loc 1 798 0
 5458 2af8 16E0     		b	.L252
 5459              	.L254:
 800:..\src/command_processing.c ****                         break;
 5460              		.loc 1 800 0
 5461 2afa 07F14003 		add	r3, r7, #64
 5462 2afe 1C3B     		subs	r3, r3, #28
 5463 2b00 1846     		mov	r0, r3
 5464 2b02 FFF7FEFF 		bl	strlen
 5465 2b06 0346     		mov	r3, r0
 5466 2b08 1A46     		mov	r2, r3
 5467 2b0a 07F14003 		add	r3, r7, #64
 5468 2b0e 1C3B     		subs	r3, r3, #28
 5469 2b10 1344     		add	r3, r3, r2
 5470 2b12 484A     		ldr	r2, .L305+44
 5471 2b14 1D46     		mov	r5, r3
 5472 2b16 1446     		mov	r4, r2
 5473 2b18 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5474 2b1a 2860     		str	r0, [r5]	@ unaligned
 5475 2b1c 6960     		str	r1, [r5, #4]	@ unaligned
 5476 2b1e AA60     		str	r2, [r5, #8]	@ unaligned
 5477 2b20 EB60     		str	r3, [r5, #12]	@ unaligned
 5478 2b22 2378     		ldrb	r3, [r4]
 5479 2b24 2B74     		strb	r3, [r5, #16]
 801:..\src/command_processing.c ****                     }
 5480              		.loc 1 801 0
 5481 2b26 00BF     		nop
 5482              	.L252:
 5483              		.loc 1 803 0
 5484 2b28 64E1     		b	.L198
 5485              	.L209:
 804:..\src/command_processing.c ****                 case 10:    // device type menu
 805:..\src/command_processing.c ****                     switch(*m_addr){
 5486              		.loc 1 805 0
 5487 2b2a 07F5B353 		add	r3, r7, #5728
 5488 2b2e 03F11003 		add	r3, r3, #16
 5489 2b32 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 130


 5490 2b34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5491 2b36 042B     		cmp	r3, #4
 5492 2b38 00F25B81 		bhi	.L287
 5493 2b3c 01A2     		adr	r2, .L258
 5494 2b3e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5495 2b42 00BF     		.p2align 2
 5496              	.L258:
 5497 2b44 592B0000 		.word	.L257+1
 5498 2b48 852B0000 		.word	.L259+1
 5499 2b4c B32B0000 		.word	.L260+1
 5500 2b50 DF2B0000 		.word	.L261+1
 5501 2b54 492C0000 		.word	.L262+1
 5502              		.p2align 1
 5503              	.L257:
 806:..\src/command_processing.c ****                         case 0:
 807:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5504              		.loc 1 807 0
 5505 2b58 07F14003 		add	r3, r7, #64
 5506 2b5c 1C3B     		subs	r3, r3, #28
 5507 2b5e 1846     		mov	r0, r3
 5508 2b60 FFF7FEFF 		bl	strlen
 5509 2b64 0346     		mov	r3, r0
 5510 2b66 1A46     		mov	r2, r3
 5511 2b68 07F14003 		add	r3, r7, #64
 5512 2b6c 1C3B     		subs	r3, r3, #28
 5513 2b6e 1344     		add	r3, r3, r2
 5514 2b70 314A     		ldr	r2, .L305+48
 5515 2b72 1C46     		mov	r4, r3
 5516 2b74 1346     		mov	r3, r2
 5517 2b76 07CB     		ldmia	r3!, {r0, r1, r2}
 5518 2b78 2060     		str	r0, [r4]	@ unaligned
 5519 2b7a 6160     		str	r1, [r4, #4]	@ unaligned
 5520 2b7c A260     		str	r2, [r4, #8]	@ unaligned
 5521 2b7e 1B88     		ldrh	r3, [r3]	@ unaligned
 5522 2b80 A381     		strh	r3, [r4, #12]	@ unaligned
 808:..\src/command_processing.c ****                         break;
 5523              		.loc 1 808 0
 5524 2b82 7BE0     		b	.L256
 5525              	.L259:
 809:..\src/command_processing.c ****                         case 1:
 810:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5526              		.loc 1 810 0
 5527 2b84 07F14003 		add	r3, r7, #64
 5528 2b88 1C3B     		subs	r3, r3, #28
 5529 2b8a 1846     		mov	r0, r3
 5530 2b8c FFF7FEFF 		bl	strlen
 5531 2b90 0346     		mov	r3, r0
 5532 2b92 1A46     		mov	r2, r3
 5533 2b94 07F14003 		add	r3, r7, #64
 5534 2b98 1C3B     		subs	r3, r3, #28
 5535 2b9a 1344     		add	r3, r3, r2
 5536 2b9c 274A     		ldr	r2, .L305+52
 5537 2b9e 1D46     		mov	r5, r3
 5538 2ba0 1446     		mov	r4, r2
 5539 2ba2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5540 2ba4 2860     		str	r0, [r5]	@ unaligned
 5541 2ba6 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 131


 5542 2ba8 AA60     		str	r2, [r5, #8]	@ unaligned
 5543 2baa EB60     		str	r3, [r5, #12]	@ unaligned
 5544 2bac 2388     		ldrh	r3, [r4]	@ unaligned
 5545 2bae 2B82     		strh	r3, [r5, #16]	@ unaligned
 811:..\src/command_processing.c ****                         break;
 5546              		.loc 1 811 0
 5547 2bb0 64E0     		b	.L256
 5548              	.L260:
 812:..\src/command_processing.c ****                         case 2:
 813:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5549              		.loc 1 813 0
 5550 2bb2 07F14003 		add	r3, r7, #64
 5551 2bb6 1C3B     		subs	r3, r3, #28
 5552 2bb8 1846     		mov	r0, r3
 5553 2bba FFF7FEFF 		bl	strlen
 5554 2bbe 0346     		mov	r3, r0
 5555 2bc0 1A46     		mov	r2, r3
 5556 2bc2 07F14003 		add	r3, r7, #64
 5557 2bc6 1C3B     		subs	r3, r3, #28
 5558 2bc8 1344     		add	r3, r3, r2
 5559 2bca 1D4A     		ldr	r2, .L305+56
 5560 2bcc 1C46     		mov	r4, r3
 5561 2bce 1346     		mov	r3, r2
 5562 2bd0 07CB     		ldmia	r3!, {r0, r1, r2}
 5563 2bd2 2060     		str	r0, [r4]	@ unaligned
 5564 2bd4 6160     		str	r1, [r4, #4]	@ unaligned
 5565 2bd6 A260     		str	r2, [r4, #8]	@ unaligned
 5566 2bd8 1B88     		ldrh	r3, [r3]	@ unaligned
 5567 2bda A381     		strh	r3, [r4, #12]	@ unaligned
 814:..\src/command_processing.c ****                         break;
 5568              		.loc 1 814 0
 5569 2bdc 4EE0     		b	.L256
 5570              	.L261:
 815:..\src/command_processing.c ****                         case 3:
 816:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5571              		.loc 1 816 0
 5572 2bde 07F14003 		add	r3, r7, #64
 5573 2be2 1C3B     		subs	r3, r3, #28
 5574 2be4 1846     		mov	r0, r3
 5575 2be6 FFF7FEFF 		bl	strlen
 5576 2bea 0346     		mov	r3, r0
 5577 2bec 1A46     		mov	r2, r3
 5578 2bee 07F14003 		add	r3, r7, #64
 5579 2bf2 1C3B     		subs	r3, r3, #28
 5580 2bf4 1344     		add	r3, r3, r2
 5581 2bf6 134A     		ldr	r2, .L305+60
 5582 2bf8 1C46     		mov	r4, r3
 5583 2bfa 1546     		mov	r5, r2
 5584 2bfc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5585 2bfe 2060     		str	r0, [r4]	@ unaligned
 5586 2c00 6160     		str	r1, [r4, #4]	@ unaligned
 5587 2c02 A260     		str	r2, [r4, #8]	@ unaligned
 5588 2c04 E360     		str	r3, [r4, #12]	@ unaligned
 817:..\src/command_processing.c ****                         break;
 5589              		.loc 1 817 0
 5590 2c06 39E0     		b	.L256
 5591              	.L306:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 132


 5592              		.align	2
 5593              	.L305:
 5594 2c08 EC000000 		.word	.LC108
 5595 2c0c F4000000 		.word	.LC109
 5596 2c10 04010000 		.word	.LC110
 5597 2c14 18010000 		.word	.LC111
 5598 2c18 28010000 		.word	.LC112
 5599 2c1c 30010000 		.word	.LC113
 5600 2c20 38010000 		.word	.LC114
 5601 2c24 48010000 		.word	.LC115
 5602 2c28 50010000 		.word	.LC116
 5603 2c2c 58010000 		.word	.LC117
 5604 2c30 70010000 		.word	.LC118
 5605 2c34 88010000 		.word	.LC119
 5606 2c38 9C010000 		.word	.LC120
 5607 2c3c AC010000 		.word	.LC121
 5608 2c40 C0010000 		.word	.LC122
 5609 2c44 D0010000 		.word	.LC123
 5610              	.L262:
 818:..\src/command_processing.c ****                         case 4:
 819:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5611              		.loc 1 819 0
 5612 2c48 07F14003 		add	r3, r7, #64
 5613 2c4c 1C3B     		subs	r3, r3, #28
 5614 2c4e 1846     		mov	r0, r3
 5615 2c50 FFF7FEFF 		bl	strlen
 5616 2c54 0346     		mov	r3, r0
 5617 2c56 1A46     		mov	r2, r3
 5618 2c58 07F14003 		add	r3, r7, #64
 5619 2c5c 1C3B     		subs	r3, r3, #28
 5620 2c5e 1344     		add	r3, r3, r2
 5621 2c60 714A     		ldr	r2, .L307
 5622 2c62 1D46     		mov	r5, r3
 5623 2c64 1446     		mov	r4, r2
 5624 2c66 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5625 2c68 2860     		str	r0, [r5]	@ unaligned
 5626 2c6a 6960     		str	r1, [r5, #4]	@ unaligned
 5627 2c6c AA60     		str	r2, [r5, #8]	@ unaligned
 5628 2c6e EB60     		str	r3, [r5, #12]	@ unaligned
 5629 2c70 2388     		ldrh	r3, [r4]	@ unaligned
 5630 2c72 A278     		ldrb	r2, [r4, #2]
 5631 2c74 2B82     		strh	r3, [r5, #16]	@ unaligned
 5632 2c76 1346     		mov	r3, r2
 5633 2c78 AB74     		strb	r3, [r5, #18]
 820:..\src/command_processing.c ****                         break;
 5634              		.loc 1 820 0
 5635 2c7a 00BF     		nop
 5636              	.L256:
 821:..\src/command_processing.c ****                     }
 822:..\src/command_processing.c ****                     break;
 5637              		.loc 1 822 0
 5638 2c7c B9E0     		b	.L287
 5639              	.L210:
 823:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 824:..\src/command_processing.c ****                     switch(*m_addr){
 5640              		.loc 1 824 0
 5641 2c7e 07F5B353 		add	r3, r7, #5728
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 133


 5642 2c82 03F11003 		add	r3, r3, #16
 5643 2c86 1B68     		ldr	r3, [r3]
 5644 2c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5645 2c8a 002B     		cmp	r3, #0
 5646 2c8c 02D0     		beq	.L264
 5647 2c8e 012B     		cmp	r3, #1
 5648 2c90 37D0     		beq	.L265
 825:..\src/command_processing.c ****                         case 0:
 826:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 827:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 828:..\src/command_processing.c ****                             }
 829:..\src/command_processing.c ****                             else {
 830:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 831:..\src/command_processing.c ****                             }                            
 832:..\src/command_processing.c ****                         break;
 833:..\src/command_processing.c ****                         case 1:
 834:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 835:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 836:..\src/command_processing.c ****                             }
 837:..\src/command_processing.c ****                             else {
 838:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 839:..\src/command_processing.c ****                             }
 840:..\src/command_processing.c ****                         break;
 841:..\src/command_processing.c ****                     }
 842:..\src/command_processing.c ****                     break;
 5649              		.loc 1 842 0
 5650 2c92 AFE0     		b	.L198
 5651              	.L264:
 826:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5652              		.loc 1 826 0
 5653 2c94 654B     		ldr	r3, .L307+4
 5654 2c96 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5655 2c9a 042B     		cmp	r3, #4
 5656 2c9c 18D1     		bne	.L266
 827:..\src/command_processing.c ****                             }
 5657              		.loc 1 827 0
 5658 2c9e 07F14003 		add	r3, r7, #64
 5659 2ca2 1C3B     		subs	r3, r3, #28
 5660 2ca4 1846     		mov	r0, r3
 5661 2ca6 FFF7FEFF 		bl	strlen
 5662 2caa 0346     		mov	r3, r0
 5663 2cac 1A46     		mov	r2, r3
 5664 2cae 07F14003 		add	r3, r7, #64
 5665 2cb2 1C3B     		subs	r3, r3, #28
 5666 2cb4 1344     		add	r3, r3, r2
 5667 2cb6 5E4A     		ldr	r2, .L307+8
 5668 2cb8 1D46     		mov	r5, r3
 5669 2cba 1446     		mov	r4, r2
 5670 2cbc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5671 2cbe 2860     		str	r0, [r5]	@ unaligned
 5672 2cc0 6960     		str	r1, [r5, #4]	@ unaligned
 5673 2cc2 AA60     		str	r2, [r5, #8]	@ unaligned
 5674 2cc4 EB60     		str	r3, [r5, #12]	@ unaligned
 5675 2cc6 2068     		ldr	r0, [r4]	@ unaligned
 5676 2cc8 2861     		str	r0, [r5, #16]	@ unaligned
 5677 2cca A388     		ldrh	r3, [r4, #4]	@ unaligned
 5678 2ccc AB82     		strh	r3, [r5, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 134


 832:..\src/command_processing.c ****                         case 1:
 5679              		.loc 1 832 0
 5680 2cce 4FE0     		b	.L263
 5681              	.L266:
 830:..\src/command_processing.c ****                             }                            
 5682              		.loc 1 830 0
 5683 2cd0 07F14003 		add	r3, r7, #64
 5684 2cd4 1C3B     		subs	r3, r3, #28
 5685 2cd6 1846     		mov	r0, r3
 5686 2cd8 FFF7FEFF 		bl	strlen
 5687 2cdc 0346     		mov	r3, r0
 5688 2cde 1A46     		mov	r2, r3
 5689 2ce0 07F14003 		add	r3, r7, #64
 5690 2ce4 1C3B     		subs	r3, r3, #28
 5691 2ce6 1344     		add	r3, r3, r2
 5692 2ce8 524A     		ldr	r2, .L307+12
 5693 2cea 1D46     		mov	r5, r3
 5694 2cec 1446     		mov	r4, r2
 5695 2cee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5696 2cf0 2860     		str	r0, [r5]	@ unaligned
 5697 2cf2 6960     		str	r1, [r5, #4]	@ unaligned
 5698 2cf4 AA60     		str	r2, [r5, #8]	@ unaligned
 5699 2cf6 EB60     		str	r3, [r5, #12]	@ unaligned
 5700 2cf8 2068     		ldr	r0, [r4]	@ unaligned
 5701 2cfa 2861     		str	r0, [r5, #16]	@ unaligned
 5702 2cfc A388     		ldrh	r3, [r4, #4]	@ unaligned
 5703 2cfe AB82     		strh	r3, [r5, #20]	@ unaligned
 832:..\src/command_processing.c ****                         case 1:
 5704              		.loc 1 832 0
 5705 2d00 36E0     		b	.L263
 5706              	.L265:
 834:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5707              		.loc 1 834 0
 5708 2d02 4A4B     		ldr	r3, .L307+4
 5709 2d04 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5710 2d08 042B     		cmp	r3, #4
 5711 2d0a 18D1     		bne	.L268
 835:..\src/command_processing.c ****                             }
 5712              		.loc 1 835 0
 5713 2d0c 07F14003 		add	r3, r7, #64
 5714 2d10 1C3B     		subs	r3, r3, #28
 5715 2d12 1846     		mov	r0, r3
 5716 2d14 FFF7FEFF 		bl	strlen
 5717 2d18 0346     		mov	r3, r0
 5718 2d1a 1A46     		mov	r2, r3
 5719 2d1c 07F14003 		add	r3, r7, #64
 5720 2d20 1C3B     		subs	r3, r3, #28
 5721 2d22 1344     		add	r3, r3, r2
 5722 2d24 444A     		ldr	r2, .L307+16
 5723 2d26 1D46     		mov	r5, r3
 5724 2d28 1446     		mov	r4, r2
 5725 2d2a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5726 2d2c 2860     		str	r0, [r5]	@ unaligned
 5727 2d2e 6960     		str	r1, [r5, #4]	@ unaligned
 5728 2d30 AA60     		str	r2, [r5, #8]	@ unaligned
 5729 2d32 EB60     		str	r3, [r5, #12]	@ unaligned
 5730 2d34 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 135


 5731 2d36 2861     		str	r0, [r5, #16]	@ unaligned
 5732 2d38 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5733 2d3a AB82     		strh	r3, [r5, #20]	@ unaligned
 840:..\src/command_processing.c ****                     }
 5734              		.loc 1 840 0
 5735 2d3c 17E0     		b	.L288
 5736              	.L268:
 838:..\src/command_processing.c ****                             }
 5737              		.loc 1 838 0
 5738 2d3e 07F14003 		add	r3, r7, #64
 5739 2d42 1C3B     		subs	r3, r3, #28
 5740 2d44 1846     		mov	r0, r3
 5741 2d46 FFF7FEFF 		bl	strlen
 5742 2d4a 0346     		mov	r3, r0
 5743 2d4c 1A46     		mov	r2, r3
 5744 2d4e 07F14003 		add	r3, r7, #64
 5745 2d52 1C3B     		subs	r3, r3, #28
 5746 2d54 1344     		add	r3, r3, r2
 5747 2d56 394A     		ldr	r2, .L307+20
 5748 2d58 1D46     		mov	r5, r3
 5749 2d5a 1446     		mov	r4, r2
 5750 2d5c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5751 2d5e 2860     		str	r0, [r5]	@ unaligned
 5752 2d60 6960     		str	r1, [r5, #4]	@ unaligned
 5753 2d62 AA60     		str	r2, [r5, #8]	@ unaligned
 5754 2d64 EB60     		str	r3, [r5, #12]	@ unaligned
 5755 2d66 2068     		ldr	r0, [r4]	@ unaligned
 5756 2d68 2861     		str	r0, [r5, #16]	@ unaligned
 5757 2d6a A388     		ldrh	r3, [r4, #4]	@ unaligned
 5758 2d6c AB82     		strh	r3, [r5, #20]	@ unaligned
 5759              	.L288:
 840:..\src/command_processing.c ****                     }
 5760              		.loc 1 840 0
 5761 2d6e 00BF     		nop
 5762              	.L263:
 5763              		.loc 1 842 0 discriminator 13
 5764 2d70 40E0     		b	.L198
 5765              	.L211:
 843:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 844:..\src/command_processing.c ****                     switch(*m_addr){
 5766              		.loc 1 844 0
 5767 2d72 07F5B353 		add	r3, r7, #5728
 5768 2d76 03F11003 		add	r3, r3, #16
 5769 2d7a 1B68     		ldr	r3, [r3]
 5770 2d7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5771 2d7e 002B     		cmp	r3, #0
 5772 2d80 02D0     		beq	.L271
 5773 2d82 012B     		cmp	r3, #1
 5774 2d84 17D0     		beq	.L272
 845:..\src/command_processing.c ****                         case 0:
 846:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 847:..\src/command_processing.c ****                         break;
 848:..\src/command_processing.c ****                         case 1:
 849:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 850:..\src/command_processing.c ****                         break;
 851:..\src/command_processing.c ****                     }
 852:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 136


 5775              		.loc 1 852 0
 5776 2d86 35E0     		b	.L198
 5777              	.L271:
 846:..\src/command_processing.c ****                         break;
 5778              		.loc 1 846 0
 5779 2d88 07F14003 		add	r3, r7, #64
 5780 2d8c 1C3B     		subs	r3, r3, #28
 5781 2d8e 1846     		mov	r0, r3
 5782 2d90 FFF7FEFF 		bl	strlen
 5783 2d94 0346     		mov	r3, r0
 5784 2d96 1A46     		mov	r2, r3
 5785 2d98 07F14003 		add	r3, r7, #64
 5786 2d9c 1C3B     		subs	r3, r3, #28
 5787 2d9e 1344     		add	r3, r3, r2
 5788 2da0 274A     		ldr	r2, .L307+24
 5789 2da2 1D46     		mov	r5, r3
 5790 2da4 1446     		mov	r4, r2
 5791 2da6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5792 2da8 2860     		str	r0, [r5]	@ unaligned
 5793 2daa 6960     		str	r1, [r5, #4]	@ unaligned
 5794 2dac AA60     		str	r2, [r5, #8]	@ unaligned
 5795 2dae EB60     		str	r3, [r5, #12]	@ unaligned
 5796 2db0 2068     		ldr	r0, [r4]	@ unaligned
 5797 2db2 2861     		str	r0, [r5, #16]	@ unaligned
 847:..\src/command_processing.c ****                         case 1:
 5798              		.loc 1 847 0
 5799 2db4 16E0     		b	.L270
 5800              	.L272:
 849:..\src/command_processing.c ****                         break;
 5801              		.loc 1 849 0
 5802 2db6 07F14003 		add	r3, r7, #64
 5803 2dba 1C3B     		subs	r3, r3, #28
 5804 2dbc 1846     		mov	r0, r3
 5805 2dbe FFF7FEFF 		bl	strlen
 5806 2dc2 0346     		mov	r3, r0
 5807 2dc4 1A46     		mov	r2, r3
 5808 2dc6 07F14003 		add	r3, r7, #64
 5809 2dca 1C3B     		subs	r3, r3, #28
 5810 2dcc 1344     		add	r3, r3, r2
 5811 2dce 1D4A     		ldr	r2, .L307+28
 5812 2dd0 1D46     		mov	r5, r3
 5813 2dd2 1446     		mov	r4, r2
 5814 2dd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5815 2dd6 2860     		str	r0, [r5]	@ unaligned
 5816 2dd8 6960     		str	r1, [r5, #4]	@ unaligned
 5817 2dda AA60     		str	r2, [r5, #8]	@ unaligned
 5818 2ddc EB60     		str	r3, [r5, #12]	@ unaligned
 5819 2dde 2068     		ldr	r0, [r4]	@ unaligned
 5820 2de0 2861     		str	r0, [r5, #16]	@ unaligned
 850:..\src/command_processing.c ****                     }
 5821              		.loc 1 850 0
 5822 2de2 00BF     		nop
 5823              	.L270:
 5824              		.loc 1 852 0
 5825 2de4 06E0     		b	.L198
 5826              	.L284:
 702:..\src/command_processing.c ****                 case 2:     // control mode menu
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 137


 5827              		.loc 1 702 0
 5828 2de6 00BF     		nop
 5829 2de8 04E0     		b	.L198
 5830              	.L285:
 718:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5831              		.loc 1 718 0
 5832 2dea 00BF     		nop
 5833 2dec 02E0     		b	.L198
 5834              	.L286:
 762:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5835              		.loc 1 762 0
 5836 2dee 00BF     		nop
 5837 2df0 00E0     		b	.L198
 5838              	.L287:
 822:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 5839              		.loc 1 822 0
 5840 2df2 00BF     		nop
 5841              	.L198:
 853:..\src/command_processing.c ****             }
 854:..\src/command_processing.c ****             //Recomputes string lenght
 855:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5842              		.loc 1 855 0
 5843 2df4 07F14003 		add	r3, r7, #64
 5844 2df8 1C3B     		subs	r3, r3, #28
 5845 2dfa 1846     		mov	r0, r3
 5846 2dfc FFF7FEFF 		bl	strlen
 5847 2e00 0346     		mov	r3, r0
 5848 2e02 DBB2     		uxtb	r3, r3
 5849 2e04 0133     		adds	r3, r3, #1
 5850 2e06 07F5B352 		add	r2, r7, #5728
 5851 2e0a 02F11A02 		add	r2, r2, #26
 5852 2e0e 1370     		strb	r3, [r2]
 5853              	.L197:
 856:..\src/command_processing.c ****         }
 857:..\src/command_processing.c **** 
 858:..\src/command_processing.c ****         // Add parameter string to packet
 859:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5854              		.loc 1 859 0
 5855 2e10 07F5B353 		add	r3, r7, #5728
 5856 2e14 03F11A03 		add	r3, r3, #26
 5857 2e18 1B78     		ldrb	r3, [r3]
 5858 2e1a 07F5B352 		add	r2, r7, #5728
 5859 2e1e 02F11F02 		add	r2, r2, #31
 5860 2e22 1370     		strb	r3, [r2]
 5861 2e24 56E0     		b	.L273
 5862              	.L308:
 5863 2e26 00BF     		.align	2
 5864              	.L307:
 5865 2e28 E4010000 		.word	.LC124
 5866 2e2c 00000000 		.word	c_mem
 5867 2e30 F8010000 		.word	.LC125
 5868 2e34 10020000 		.word	.LC126
 5869 2e38 28020000 		.word	.LC127
 5870 2e3c 40020000 		.word	.LC128
 5871 2e40 58020000 		.word	.LC129
 5872 2e44 70020000 		.word	.LC130
 5873              	.L274:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 138


 860:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5874              		.loc 1 860 0 discriminator 3
 5875 2e48 07F5B353 		add	r3, r7, #5728
 5876 2e4c 03F11D03 		add	r3, r3, #29
 5877 2e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5878 2e52 3222     		movs	r2, #50
 5879 2e54 02FB03F3 		mul	r3, r2, r3
 5880 2e58 1A1D     		adds	r2, r3, #4
 5881 2e5a 07F5B353 		add	r3, r7, #5728
 5882 2e5e 03F11B03 		add	r3, r3, #27
 5883 2e62 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5884 2e64 07F5B353 		add	r3, r7, #5728
 5885 2e68 03F11D03 		add	r3, r3, #29
 5886 2e6c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5887 2e6e 07F12003 		add	r3, r7, #32
 5888 2e72 1C3B     		subs	r3, r3, #28
 5889 2e74 1B68     		ldr	r3, [r3]
 5890 2e76 0344     		add	r3, r3, r0
 5891 2e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5892 2e7a 03FB01F3 		mul	r3, r3, r1
 5893 2e7e 1A44     		add	r2, r2, r3
 5894 2e80 07F5B353 		add	r3, r7, #5728
 5895 2e84 03F11A03 		add	r3, r3, #26
 5896 2e88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5897 2e8a 1A44     		add	r2, r2, r3
 5898 2e8c 07F5B353 		add	r3, r7, #5728
 5899 2e90 03F11F03 		add	r3, r3, #31
 5900 2e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5901 2e96 D21A     		subs	r2, r2, r3
 5902 2e98 07F5B353 		add	r3, r7, #5728
 5903 2e9c 03F11A03 		add	r3, r3, #26
 5904 2ea0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5905 2ea2 07F5B353 		add	r3, r7, #5728
 5906 2ea6 03F11F03 		add	r3, r3, #31
 5907 2eaa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5908 2eac C91A     		subs	r1, r1, r3
 5909 2eae 07F14003 		add	r3, r7, #64
 5910 2eb2 1C3B     		subs	r3, r3, #28
 5911 2eb4 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5912 2eb6 07F16003 		add	r3, r7, #96
 5913 2eba 083B     		subs	r3, r3, #8
 5914 2ebc 9954     		strb	r1, [r3, r2]
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5915              		.loc 1 859 0 discriminator 3
 5916 2ebe 07F5B353 		add	r3, r7, #5728
 5917 2ec2 03F11F03 		add	r3, r3, #31
 5918 2ec6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5919 2ec8 013B     		subs	r3, r3, #1
 5920 2eca 07F5B352 		add	r2, r7, #5728
 5921 2ece 02F11F02 		add	r2, r2, #31
 5922 2ed2 1370     		strb	r3, [r2]
 5923              	.L273:
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5924              		.loc 1 859 0 is_stmt 0 discriminator 1
 5925 2ed4 07F5B353 		add	r3, r7, #5728
 5926 2ed8 03F11F03 		add	r3, r3, #31
 5927 2edc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 139


 5928 2ede 002B     		cmp	r3, #0
 5929 2ee0 B2D1     		bne	.L274
 861:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 862:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5930              		.loc 1 862 0 is_stmt 1
 5931 2ee2 07F5B353 		add	r3, r7, #5728
 5932 2ee6 03F11D03 		add	r3, r3, #29
 5933 2eea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5934 2eec 07F12003 		add	r3, r7, #32
 5935 2ef0 183B     		subs	r3, r3, #24
 5936 2ef2 1B68     		ldr	r3, [r3]
 5937 2ef4 1344     		add	r3, r3, r2
 5938 2ef6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5939 2ef8 002B     		cmp	r3, #0
 5940 2efa 3CD1     		bne	.L275
 863:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5941              		.loc 1 863 0
 5942 2efc 07F5B353 		add	r3, r7, #5728
 5943 2f00 03F11D03 		add	r3, r3, #29
 5944 2f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5945 2f06 3222     		movs	r2, #50
 5946 2f08 02FB03F3 		mul	r3, r2, r3
 5947 2f0c 1A1D     		adds	r2, r3, #4
 5948 2f0e 07F5B353 		add	r3, r7, #5728
 5949 2f12 03F11B03 		add	r3, r3, #27
 5950 2f16 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5951 2f18 07F5B353 		add	r3, r7, #5728
 5952 2f1c 03F11D03 		add	r3, r3, #29
 5953 2f20 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5954 2f22 07F12003 		add	r3, r7, #32
 5955 2f26 1C3B     		subs	r3, r3, #28
 5956 2f28 1B68     		ldr	r3, [r3]
 5957 2f2a 0344     		add	r3, r3, r0
 5958 2f2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5959 2f2e 03FB01F3 		mul	r3, r3, r1
 5960 2f32 1A44     		add	r2, r2, r3
 5961 2f34 07F5B353 		add	r3, r7, #5728
 5962 2f38 03F11A03 		add	r3, r3, #26
 5963 2f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5964 2f3e 1A44     		add	r2, r2, r3
 5965 2f40 07F5B353 		add	r3, r7, #5728
 5966 2f44 03F11C03 		add	r3, r3, #28
 5967 2f48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5968 2f4a 07F5B451 		add	r1, r7, #5760
 5969 2f4e 01F11801 		add	r1, r1, #24
 5970 2f52 0968     		ldr	r1, [r1]
 5971 2f54 0B44     		add	r3, r3, r1
 5972 2f56 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5973 2f58 07F16003 		add	r3, r7, #96
 5974 2f5c 083B     		subs	r3, r3, #8
 5975 2f5e 9954     		strb	r1, [r3, r2]
 864:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5976              		.loc 1 864 0
 5977 2f60 07F5B353 		add	r3, r7, #5728
 5978 2f64 03F11C03 		add	r3, r3, #28
 5979 2f68 1B78     		ldrb	r3, [r3]
 5980 2f6a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 140


 5981 2f6c 07F5B352 		add	r2, r7, #5728
 5982 2f70 02F11C02 		add	r2, r2, #28
 5983 2f74 1370     		strb	r3, [r2]
 5984              	.L275:
 865:..\src/command_processing.c ****         }      
 866:..\src/command_processing.c ****         
 867:..\src/command_processing.c ****         // Add struct index after an empty bit
 868:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 869:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5985              		.loc 1 869 0
 5986 2f76 07F5B353 		add	r3, r7, #5728
 5987 2f7a 03F11D03 		add	r3, r3, #29
 5988 2f7e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5989 2f80 07F12003 		add	r3, r7, #32
 5990 2f84 183B     		subs	r3, r3, #24
 5991 2f86 1B68     		ldr	r3, [r3]
 5992 2f88 1344     		add	r3, r3, r2
 5993 2f8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5994 2f8c 002B     		cmp	r3, #0
 5995 2f8e 30D1     		bne	.L276
 870:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 5996              		.loc 1 870 0
 5997 2f90 07F5B353 		add	r3, r7, #5728
 5998 2f94 03F11D03 		add	r3, r3, #29
 5999 2f98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6000 2f9a 3222     		movs	r2, #50
 6001 2f9c 02FB03F3 		mul	r3, r2, r3
 6002 2fa0 1A1D     		adds	r2, r3, #4
 6003 2fa2 07F5B353 		add	r3, r7, #5728
 6004 2fa6 03F11B03 		add	r3, r3, #27
 6005 2faa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6006 2fac 07F5B353 		add	r3, r7, #5728
 6007 2fb0 03F11D03 		add	r3, r3, #29
 6008 2fb4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6009 2fb6 07F12003 		add	r3, r7, #32
 6010 2fba 1C3B     		subs	r3, r3, #28
 6011 2fbc 1B68     		ldr	r3, [r3]
 6012 2fbe 0344     		add	r3, r3, r0
 6013 2fc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6014 2fc2 03FB01F3 		mul	r3, r3, r1
 6015 2fc6 1A44     		add	r2, r2, r3
 6016 2fc8 07F5B353 		add	r3, r7, #5728
 6017 2fcc 03F11A03 		add	r3, r3, #26
 6018 2fd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6019 2fd2 1344     		add	r3, r3, r2
 6020 2fd4 9A1C     		adds	r2, r3, #2
 6021 2fd6 07F5B353 		add	r3, r7, #5728
 6022 2fda 03F11D03 		add	r3, r3, #29
 6023 2fde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6024 2fe0 3946     		mov	r1, r7
 6025 2fe2 0968     		ldr	r1, [r1]
 6026 2fe4 0B44     		add	r3, r3, r1
 6027 2fe6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6028 2fe8 07F16003 		add	r3, r7, #96
 6029 2fec 083B     		subs	r3, r3, #8
 6030 2fee 9954     		strb	r1, [r3, r2]
 6031 2ff0 2FE0     		b	.L277
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 141


 6032              	.L276:
 871:..\src/command_processing.c ****         }
 872:..\src/command_processing.c ****         else {
 873:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 6033              		.loc 1 873 0
 6034 2ff2 07F5B353 		add	r3, r7, #5728
 6035 2ff6 03F11D03 		add	r3, r3, #29
 6036 2ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6037 2ffc 3222     		movs	r2, #50
 6038 2ffe 02FB03F3 		mul	r3, r2, r3
 6039 3002 1A1D     		adds	r2, r3, #4
 6040 3004 07F5B353 		add	r3, r7, #5728
 6041 3008 03F11B03 		add	r3, r3, #27
 6042 300c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6043 300e 07F5B353 		add	r3, r7, #5728
 6044 3012 03F11D03 		add	r3, r3, #29
 6045 3016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6046 3018 07F12003 		add	r3, r7, #32
 6047 301c 1C3B     		subs	r3, r3, #28
 6048 301e 1B68     		ldr	r3, [r3]
 6049 3020 0344     		add	r3, r3, r0
 6050 3022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6051 3024 03FB01F3 		mul	r3, r3, r1
 6052 3028 1A44     		add	r2, r2, r3
 6053 302a 07F5B353 		add	r3, r7, #5728
 6054 302e 03F11A03 		add	r3, r3, #26
 6055 3032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6056 3034 1344     		add	r3, r3, r2
 6057 3036 5A1C     		adds	r2, r3, #1
 6058 3038 07F5B353 		add	r3, r7, #5728
 6059 303c 03F11D03 		add	r3, r3, #29
 6060 3040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6061 3042 3946     		mov	r1, r7
 6062 3044 0968     		ldr	r1, [r1]
 6063 3046 0B44     		add	r3, r3, r1
 6064 3048 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6065 304a 07F16003 		add	r3, r7, #96
 6066 304e 083B     		subs	r3, r3, #8
 6067 3050 9954     		strb	r1, [r3, r2]
 6068              	.L277:
 403:..\src/command_processing.c ****         
 6069              		.loc 1 403 0 discriminator 2
 6070 3052 07F5B353 		add	r3, r7, #5728
 6071 3056 03F11D03 		add	r3, r3, #29
 6072 305a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6073 305c 0133     		adds	r3, r3, #1
 6074 305e 07F5B352 		add	r2, r7, #5728
 6075 3062 02F11D02 		add	r2, r2, #29
 6076 3066 1370     		strb	r3, [r2]
 6077              	.L73:
 403:..\src/command_processing.c ****         
 6078              		.loc 1 403 0 is_stmt 0 discriminator 1
 6079 3068 07F5B353 		add	r3, r7, #5728
 6080 306c 03F11D03 		add	r3, r3, #29
 6081 3070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6082 3072 4E2B     		cmp	r3, #78
 6083 3074 7DF639A8 		bls	.L278
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 142


 874:..\src/command_processing.c ****         }
 875:..\src/command_processing.c ****     }
 876:..\src/command_processing.c **** 
 877:..\src/command_processing.c ****     // Add menu
 878:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6084              		.loc 1 878 0 is_stmt 1
 6085 3078 0023     		movs	r3, #0
 6086 307a 07F5B352 		add	r2, r7, #5728
 6087 307e 02F11E02 		add	r2, r2, #30
 6088 3082 1370     		strb	r3, [r2]
 6089 3084 71E0     		b	.L279
 6090              	.L282:
 879:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6091              		.loc 1 879 0
 6092 3086 07F5B353 		add	r3, r7, #5728
 6093 308a 03F11E03 		add	r3, r3, #30
 6094 308e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6095 3090 9B00     		lsls	r3, r3, #2
 6096 3092 07F5B552 		add	r2, r7, #5792
 6097 3096 02F10402 		add	r2, r2, #4
 6098 309a 1268     		ldr	r2, [r2]
 6099 309c 1344     		add	r3, r3, r2
 6100 309e 1B68     		ldr	r3, [r3]
 6101 30a0 1846     		mov	r0, r3
 6102 30a2 FFF7FEFF 		bl	strlen
 6103 30a6 0346     		mov	r3, r0
 6104 30a8 07F5B352 		add	r2, r7, #5728
 6105 30ac 02F11A02 		add	r2, r2, #26
 6106 30b0 1370     		strb	r3, [r2]
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6107              		.loc 1 880 0
 6108 30b2 07F5B353 		add	r3, r7, #5728
 6109 30b6 03F11A03 		add	r3, r3, #26
 6110 30ba 1B78     		ldrb	r3, [r3]
 6111 30bc 07F5B352 		add	r2, r7, #5728
 6112 30c0 02F11F02 		add	r2, r2, #31
 6113 30c4 1370     		strb	r3, [r2]
 6114 30c6 3EE0     		b	.L280
 6115              	.L281:
 881:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6116              		.loc 1 881 0 discriminator 3
 6117 30c8 07F5B353 		add	r3, r7, #5728
 6118 30cc 03F11E03 		add	r3, r3, #30
 6119 30d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6120 30d2 9622     		movs	r2, #150
 6121 30d4 02FB03F3 		mul	r3, r2, r3
 6122 30d8 03F57762 		add	r2, r3, #3952
 6123 30dc 07F5B353 		add	r3, r7, #5728
 6124 30e0 03F11A03 		add	r3, r3, #26
 6125 30e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6126 30e6 1A44     		add	r2, r2, r3
 6127 30e8 07F5B353 		add	r3, r7, #5728
 6128 30ec 03F11F03 		add	r3, r3, #31
 6129 30f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6130 30f2 D21A     		subs	r2, r2, r3
 6131 30f4 07F5B353 		add	r3, r7, #5728
 6132 30f8 03F11E03 		add	r3, r3, #30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 143


 6133 30fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6134 30fe 9B00     		lsls	r3, r3, #2
 6135 3100 07F5B551 		add	r1, r7, #5792
 6136 3104 01F10401 		add	r1, r1, #4
 6137 3108 0968     		ldr	r1, [r1]
 6138 310a 0B44     		add	r3, r3, r1
 6139 310c 1B68     		ldr	r3, [r3]
 6140 310e 07F5B351 		add	r1, r7, #5728
 6141 3112 01F11A01 		add	r1, r1, #26
 6142 3116 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6143 3118 07F5B351 		add	r1, r7, #5728
 6144 311c 01F11F01 		add	r1, r1, #31
 6145 3120 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6146 3122 411A     		subs	r1, r0, r1
 6147 3124 0B44     		add	r3, r3, r1
 6148 3126 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6149 3128 07F16003 		add	r3, r7, #96
 6150 312c 083B     		subs	r3, r3, #8
 6151 312e 9954     		strb	r1, [r3, r2]
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6152              		.loc 1 880 0 discriminator 3
 6153 3130 07F5B353 		add	r3, r7, #5728
 6154 3134 03F11F03 		add	r3, r3, #31
 6155 3138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6156 313a 013B     		subs	r3, r3, #1
 6157 313c 07F5B352 		add	r2, r7, #5728
 6158 3140 02F11F02 		add	r2, r2, #31
 6159 3144 1370     		strb	r3, [r2]
 6160              	.L280:
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6161              		.loc 1 880 0 is_stmt 0 discriminator 1
 6162 3146 07F5B353 		add	r3, r7, #5728
 6163 314a 03F11F03 		add	r3, r3, #31
 6164 314e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6165 3150 002B     		cmp	r3, #0
 6166 3152 B9D1     		bne	.L281
 878:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6167              		.loc 1 878 0 is_stmt 1 discriminator 2
 6168 3154 07F5B353 		add	r3, r7, #5728
 6169 3158 03F11E03 		add	r3, r3, #30
 6170 315c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6171 315e 0133     		adds	r3, r3, #1
 6172 3160 07F5B352 		add	r2, r7, #5728
 6173 3164 02F11E02 		add	r2, r2, #30
 6174 3168 1370     		strb	r3, [r2]
 6175              	.L279:
 878:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6176              		.loc 1 878 0 is_stmt 0 discriminator 1
 6177 316a 07F5B353 		add	r3, r7, #5728
 6178 316e 03F11E03 		add	r3, r3, #30
 6179 3172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6180 3174 0A2B     		cmp	r3, #10
 6181 3176 86D9     		bls	.L282
 882:..\src/command_processing.c ****     }
 883:..\src/command_processing.c ****     
 884:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6182              		.loc 1 884 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 144


 6183 3178 07F5B353 		add	r3, r7, #5728
 6184 317c 03F11803 		add	r3, r3, #24
 6185 3180 1B88     		ldrh	r3, [r3]
 6186 3182 5C1E     		subs	r4, r3, #1
 6187 3184 07F5B353 		add	r3, r7, #5728
 6188 3188 03F11803 		add	r3, r3, #24
 6189 318c 1B88     		ldrh	r3, [r3]	@ movhi
 6190 318e DBB2     		uxtb	r3, r3
 6191 3190 013B     		subs	r3, r3, #1
 6192 3192 DAB2     		uxtb	r2, r3
 6193 3194 07F16003 		add	r3, r7, #96
 6194 3198 083B     		subs	r3, r3, #8
 6195 319a 1146     		mov	r1, r2
 6196 319c 1846     		mov	r0, r3
 6197 319e FFF7FEFF 		bl	LCRChecksum
 6198 31a2 0346     		mov	r3, r0
 6199 31a4 1A46     		mov	r2, r3
 6200 31a6 07F16003 		add	r3, r7, #96
 6201 31aa 083B     		subs	r3, r3, #8
 6202 31ac 1A55     		strb	r2, [r3, r4]
 885:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6203              		.loc 1 885 0
 6204 31ae 07F5B353 		add	r3, r7, #5728
 6205 31b2 03F11803 		add	r3, r3, #24
 6206 31b6 1A88     		ldrh	r2, [r3]
 6207 31b8 07F16003 		add	r3, r7, #96
 6208 31bc 083B     		subs	r3, r3, #8
 6209 31be 1146     		mov	r1, r2
 6210 31c0 1846     		mov	r0, r3
 6211 31c2 FFF7FEFF 		bl	commWrite
 886:..\src/command_processing.c **** }
 6212              		.loc 1 886 0
 6213 31c6 00BF     		nop
 6214 31c8 07F5B457 		add	r7, r7, #5760
 6215 31cc 0437     		adds	r7, r7, #4
 6216              		.cfi_def_cfa_offset 20
 6217 31ce BD46     		mov	sp, r7
 6218              		.cfi_def_cfa_register 13
 6219              		@ sp needed
 6220 31d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 6221              		.cfi_endproc
 6222              	.LFE67:
 6223              		.size	get_param_list, .-get_param_list
 6224 31d2 00BF     		.section	.rodata
 6225 0285 000000   		.align	2
 6226              	.LC132:
 6227 0288 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6227      204E6F6E 
 6227      650A3120 
 6227      2D3E204C 
 6227      6F772028 
 6228 02b8 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6228      74657220 
 6228      72656164 
 6228      290A3220 
 6228      2D3E2048 
 6229 02e8 62697420 		.ascii	"bit register read)\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 145


 6229      72656769 
 6229      73746572 
 6229      20726561 
 6229      64290A00 
 6230              		.align	2
 6231              	.LC133:
 6232 02fc 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6232      20466173 
 6232      743A7379 
 6232      6E322C20 
 6232      536C6F77 
 6233 032c 796E310A 		.ascii	"yn1\012\000"
 6233      00
 6234 0331 000000   		.align	2
 6235              	.LC134:
 6236 0334 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 6236      20466173 
 6236      743A7772 
 6236      6973742C 
 6236      536C6F77 
 6237 0364 616E640A 		.ascii	"and\012\000"
 6237      00
 6238 0369 000000   		.align	2
 6239              	.LC135:
 6240 036c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6240      20557362 
 6240      0A31202D 
 6240      3E204861 
 6240      6E646C65 
 6241 0397 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6241      20454D47 
 6241      20496E74 
 6241      65677261 
 6241      6C0A3420 
 6242 03c4 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6242      616E6365 
 6242      640A3620 
 6242      2D3E204A 
 6242      6F797374 
 6243 03f1 204E430A 		.ascii	" NC\012\000"
 6243      00
 6244 03f6 0000     		.align	2
 6245              	.LC136:
 6246 03f8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6246      20506F73 
 6246      6974696F 
 6246      6E0A3120 
 6246      2D3E2050 
 6247 0422 6F736974 		.ascii	"osition and Current\012\000"
 6247      696F6E20 
 6247      616E6420 
 6247      43757272 
 6247      656E740A 
 6248 0437 00       		.align	2
 6249              	.LC137:
 6250 0438 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6250      20446561 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 146


 6250      63746976 
 6250      61746520 
 6250      5B4E4F5D 
 6251 0462 0000     		.align	2
 6252              	.LC138:
 6253 0464 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6253      20526967 
 6253      68740A31 
 6253      202D3E20 
 6253      4C656674 
 6254 047a 0000     		.align	2
 6255              	.LC139:
 6256 047c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6256      204F4646 
 6256      0A31202D 
 6256      3E204F4E 
 6256      0A546865 
 6257 04a3 00       		.align	2
 6258              	.LC140:
 6259 04a4 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6259      204E6F6E 
 6259      650A3120 
 6259      2D3E2053 
 6259      442F5254 
 6260 04d1 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6260      0A33202D 
 6260      3E204F74 
 6260      68657220 
 6260      5B4E2F41 
 6261 04fc 00       		.ascii	"\000"
 6262 04fd 000000   		.align	2
 6263              	.LC141:
 6264 0500 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> R01\012The "
 6264      2047656E 
 6264      65726963 
 6264      20757365 
 6264      720A3120 
 6265 052a 626F6172 		.ascii	"board will reset\012\000"
 6265      64207769 
 6265      6C6C2072 
 6265      65736574 
 6265      0A00
 6266              		.align	2
 6267              	.LC142:
 6268 053c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6268      204D4333 
 6268      33383837 
 6268      20285374 
 6268      616E6461 
 6269 056c 290A3220 		.ascii	")\0122 -> ESC (Brushless)\012The board will reset\012"
 6269      2D3E2045 
 6269      53432028 
 6269      42727573 
 6269      686C6573 
 6270 0598 00       		.ascii	"\000"
 6271 0599 000000   		.align	2
 6272              	.LC143:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 147


 6273 059c 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6273      20534F46 
 6273      5448414E 
 6273      44205052 
 6273      4F0A3120 
 6274 05c9 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6274      4348414D 
 6274      42455253 
 6274      0A33202D 
 6274      3E204F54 
 6275 05f6 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6275      4D4F544F 
 6275      52530A54 
 6275      68652062 
 6275      6F617264 
 6276 0617 00       		.align	2
 6277              	.LC144:
 6278 0618 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6278      20436C6F 
 6278      73653A43 
 6278      572C204F 
 6278      70656E3A 
 6279 0648 00       		.ascii	"\000"
 6280 0649 000000   		.align	2
 6281              	.LC0:
 6282 064c 02       		.byte	2
 6283 064d 07       		.byte	7
 6284 064e 07       		.byte	7
 6285 064f 00       		.byte	0
 6286 0650 00       		.byte	0
 6287 0651 00       		.byte	0
 6288 0652 02       		.byte	2
 6289 0653 03       		.byte	3
 6290 0654 07       		.byte	7
 6291 0655 00       		.byte	0
 6292 0656 05       		.byte	5
 6293 0657 05       		.byte	5
 6294 0658 03       		.byte	3
 6295 0659 04       		.byte	4
 6296 065a 00       		.byte	0
 6297 065b 06       		.byte	6
 6298 065c 02       		.byte	2
 6299 065d 00       		.byte	0
 6300 065e 01       		.byte	1
 6301 065f 00       		.byte	0
 6302 0660 04       		.byte	4
 6303 0661 07       		.byte	7
 6304 0662 02       		.byte	2
 6305 0663 05       		.byte	5
 6306 0664 05       		.byte	5
 6307 0665 05       		.byte	5
 6308 0666 00       		.byte	0
 6309 0667 00       		.byte	0
 6310 0668 00       		.byte	0
 6311 0669 00       		.byte	0
 6312 066a 00       		.byte	0
 6313 066b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 148


 6314 066c 02       		.byte	2
 6315 066d 00       		.byte	0
 6316 066e 02       		.byte	2
 6317 066f 00       		.byte	0
 6318 0670 09       		.byte	9
 6319 0671 02       		.byte	2
 6320 0672 00       		.byte	0
 6321 0673 02       		.byte	2
 6322 0674 00       		.byte	0
 6323 0675 02       		.byte	2
 6324 0676 01       		.byte	1
 6325 0677 00       		.byte	0
 6326 0678 07       		.byte	7
 6327 0679 07       		.byte	7
 6328 067a 00       		.byte	0
 6329 067b 00       		.byte	0
 6330 067c 00       		.byte	0
 6331 067d 02       		.byte	2
 6332 067e 03       		.byte	3
 6333 067f 07       		.byte	7
 6334 0680 00       		.byte	0
 6335 0681 05       		.byte	5
 6336 0682 05       		.byte	5
 6337 0683 03       		.byte	3
 6338 0684 00       		.byte	0
 6339 0685 01       		.byte	1
 6340 0686 00       		.byte	0
 6341 0687 04       		.byte	4
 6342 0688 07       		.byte	7
 6343 0689 02       		.byte	2
 6344 068a 00       		.byte	0
 6345 068b 02       		.byte	2
 6346 068c 00       		.byte	0
 6347 068d 02       		.byte	2
 6348 068e 01       		.byte	1
 6349 068f 02       		.byte	2
 6350 0690 02       		.byte	2
 6351 0691 00       		.byte	0
 6352 0692 02       		.byte	2
 6353 0693 02       		.byte	2
 6354 0694 00       		.byte	0
 6355 0695 04       		.byte	4
 6356 0696 03       		.byte	3
 6357 0697 04       		.byte	4
 6358 0698 00       		.byte	0
 6359 0699 00       		.byte	0
 6360 069a 04       		.byte	4
 6361 069b 00       		.byte	0
 6362 069c 00       		.byte	0
 6363 069d 02       		.byte	2
 6364 069e 05       		.byte	5
 6365 069f 07       		.byte	7
 6366 06a0 07       		.byte	7
 6367 06a1 000000   		.align	2
 6368              	.LC1:
 6369 06a4 31202D20 		.ascii	"1 - Device ID:\000"
 6369      44657669 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 149


 6369      63652049 
 6369      443A00
 6370 06b3 00       		.align	2
 6371              	.LC2:
 6372 06b4 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6372      506F7369 
 6372      74696F6E 
 6372      20504944 
 6372      205B502C 
 6373              		.align	2
 6374              	.LC3:
 6375 06d0 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6375      43757272 
 6375      656E7420 
 6375      50494420 
 6375      5B502C20 
 6376 06eb 00       		.align	2
 6377              	.LC4:
 6378 06ec 34202D20 		.ascii	"4 - Startup Activation:\000"
 6378      53746172 
 6378      74757020 
 6378      41637469 
 6378      76617469 
 6379              		.align	2
 6380              	.LC5:
 6381 0704 35202D20 		.ascii	"5 - Input mode:\000"
 6381      496E7075 
 6381      74206D6F 
 6381      64653A00 
 6382              		.align	2
 6383              	.LC6:
 6384 0714 36202D20 		.ascii	"6 - Control mode:\000"
 6384      436F6E74 
 6384      726F6C20 
 6384      6D6F6465 
 6384      3A00
 6385 0726 0000     		.align	2
 6386              	.LC7:
 6387 0728 37202D20 		.ascii	"7 - Resolutions:\000"
 6387      5265736F 
 6387      6C757469 
 6387      6F6E733A 
 6387      00
 6388 0739 000000   		.align	2
 6389              	.LC8:
 6390 073c 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6390      4D656173 
 6390      7572656D 
 6390      656E7420 
 6390      4F666673 
 6391 0755 000000   		.align	2
 6392              	.LC9:
 6393 0758 39202D20 		.ascii	"9 - Multipliers:\000"
 6393      4D756C74 
 6393      69706C69 
 6393      6572733A 
 6393      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 150


 6394 0769 000000   		.align	2
 6395              	.LC10:
 6396 076c 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6396      20506F73 
 6396      2E206C69 
 6396      6D697420 
 6396      61637469 
 6397              		.align	2
 6398              	.LC11:
 6399 0784 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6399      20506F73 
 6399      2E206C69 
 6399      6D697473 
 6399      205B696E 
 6400 07a1 000000   		.align	2
 6401              	.LC12:
 6402 07a4 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6402      204D6178 
 6402      20737465 
 6402      7073205B 
 6402      6E65672C 
 6403 07bf 00       		.align	2
 6404              	.LC13:
 6405 07c0 3133202D 		.ascii	"13 - Current limit:\000"
 6405      20437572 
 6405      72656E74 
 6405      206C696D 
 6405      69743A00 
 6406              		.align	2
 6407              	.LC14:
 6408 07d4 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6408      20454D47 
 6408      20746872 
 6408      6573686F 
 6408      6C64733A 
 6409 07e9 000000   		.align	2
 6410              	.LC15:
 6411 07ec 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6411      20454D47 
 6411      2063616C 
 6411      69627261 
 6411      74696F6E 
 6412 080d 000000   		.align	2
 6413              	.LC16:
 6414 0810 3136202D 		.ascii	"16 - EMG max values:\000"
 6414      20454D47 
 6414      206D6178 
 6414      2076616C 
 6414      7565733A 
 6415 0825 000000   		.align	2
 6416              	.LC17:
 6417 0828 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6417      20454D47 
 6417      206D6178 
 6417      20737065 
 6417      6564733A 
 6418 083d 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 151


 6419              	.LC18:
 6420 0840 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6420      20416273 
 6420      6F6C7574 
 6420      6520656E 
 6420      636F6465 
 6421              		.align	2
 6422              	.LC19:
 6423 0860 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6423      204D6F74 
 6423      6F722068 
 6423      616E646C 
 6423      65207261 
 6424 0879 000000   		.align	2
 6425              	.LC20:
 6426 087c 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6426      2050574D 
 6426      20726573 
 6426      63616C69 
 6426      6E673A00 
 6427              		.align	2
 6428              	.LC21:
 6429 0890 3231202D 		.ascii	"21 - Motor 1 Voltage in mV:\000"
 6429      204D6F74 
 6429      6F722031 
 6429      20566F6C 
 6429      74616765 
 6430              		.align	2
 6431              	.LC22:
 6432 08ac 3232202D 		.ascii	"22 - Current lookup:\000"
 6432      20437572 
 6432      72656E74 
 6432      206C6F6F 
 6432      6B75703A 
 6433 08c1 000000   		.align	2
 6434              	.LC23:
 6435 08c4 3233202D 		.ascii	"23 - Date of maintenance [D/M/Y]:\000"
 6435      20446174 
 6435      65206F66 
 6435      206D6169 
 6435      6E74656E 
 6436 08e6 0000     		.align	2
 6437              	.LC24:
 6438 08e8 3234202D 		.ascii	"24 - Rest position:\000"
 6438      20526573 
 6438      7420706F 
 6438      73697469 
 6438      6F6E3A00 
 6439              		.align	2
 6440              	.LC25:
 6441 08fc 3235202D 		.ascii	"25 - Rest position time delay (ms):\000"
 6441      20526573 
 6441      7420706F 
 6441      73697469 
 6441      6F6E2074 
 6442              		.align	2
 6443              	.LC26:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 152


 6444 0920 3236202D 		.ascii	"26 - Rest vel closure (ticks/sec):\000"
 6444      20526573 
 6444      74207665 
 6444      6C20636C 
 6444      6F737572 
 6445 0943 00       		.align	2
 6446              	.LC27:
 6447 0944 3237202D 		.ascii	"27 - Rest position enabled:\000"
 6447      20526573 
 6447      7420706F 
 6447      73697469 
 6447      6F6E2065 
 6448              		.align	2
 6449              	.LC28:
 6450 0960 3238202D 		.ascii	"28 - EMG inversion:\000"
 6450      20454D47 
 6450      20696E76 
 6450      65727369 
 6450      6F6E3A00 
 6451              		.align	2
 6452              	.LC29:
 6453 0974 3239202D 		.ascii	"29 - Hand side:\000"
 6453      2048616E 
 6453      64207369 
 6453      64653A00 
 6454              		.align	2
 6455              	.LC30:
 6456 0984 3330202D 		.ascii	"30 - Enable IMUs:\000"
 6456      20456E61 
 6456      626C6520 
 6456      494D5573 
 6456      3A00
 6457 0996 0000     		.align	2
 6458              	.LC31:
 6459 0998 3331202D 		.ascii	"31 - Read Expansion port:\000"
 6459      20526561 
 6459      64204578 
 6459      70616E73 
 6459      696F6E20 
 6460 09b2 0000     		.align	2
 6461              	.LC32:
 6462 09b4 3332202D 		.ascii	"32 - Reset counters:\000"
 6462      20526573 
 6462      65742063 
 6462      6F756E74 
 6462      6572733A 
 6463 09c9 000000   		.align	2
 6464              	.LC33:
 6465 09cc 3333202D 		.ascii	"33 - Last checked Time [D/M/Y H:M:S]:\000"
 6465      204C6173 
 6465      74206368 
 6465      65636B65 
 6465      64205469 
 6466 09f2 0000     		.align	2
 6467              	.LC34:
 6468 09f4 3334202D 		.ascii	"34 - SPI read delay (IMU):\000"
 6468      20535049 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 153


 6468      20726561 
 6468      64206465 
 6468      6C617920 
 6469 0a0f 00       		.align	2
 6470              	.LC35:
 6471 0a10 3335202D 		.ascii	"35 - On board IMU conf. [a,g,m,q,t]:\000"
 6471      204F6E20 
 6471      626F6172 
 6471      6420494D 
 6471      5520636F 
 6472 0a35 000000   		.align	2
 6473              	.LC36:
 6474 0a38 3336202D 		.ascii	"36 - User ID:\000"
 6474      20557365 
 6474      72204944 
 6474      3A00
 6475 0a46 0000     		.align	2
 6476              	.LC37:
 6477 0a48 3337202D 		.ascii	"37 - User code:\000"
 6477      20557365 
 6477      7220636F 
 6477      64653A00 
 6478              		.align	2
 6479              	.LC38:
 6480 0a58 3338202D 		.ascii	"38 - Associated encoder line:\000"
 6480      20417373 
 6480      6F636961 
 6480      74656420 
 6480      656E636F 
 6481 0a76 0000     		.align	2
 6482              	.LC39:
 6483 0a78 3339202D 		.ascii	"39 - Driver type:\000"
 6483      20447269 
 6483      76657220 
 6483      74797065 
 6483      3A00
 6484 0a8a 0000     		.align	2
 6485              	.LC40:
 6486 0a8c 3430202D 		.ascii	"40 - PWM rate limiter:\000"
 6486      2050574D 
 6486      20726174 
 6486      65206C69 
 6486      6D697465 
 6487 0aa3 00       		.align	2
 6488              	.LC41:
 6489 0aa4 3431202D 		.ascii	"41 - Not reversible:\000"
 6489      204E6F74 
 6489      20726576 
 6489      65727369 
 6489      626C653A 
 6490 0ab9 000000   		.align	2
 6491              	.LC42:
 6492 0abc 3432202D 		.ascii	"42 - Enc idx used for control:\000"
 6492      20456E63 
 6492      20696478 
 6492      20757365 
 6492      6420666F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 154


 6493 0adb 00       		.align	2
 6494              	.LC43:
 6495 0adc 3433202D 		.ascii	"43 - Gear params[N1, N2, I1]:\000"
 6495      20476561 
 6495      72207061 
 6495      72616D73 
 6495      5B4E312C 
 6496 0afa 0000     		.align	2
 6497              	.LC44:
 6498 0afc 3434202D 		.ascii	"44 - Use second motor:\000"
 6498      20557365 
 6498      20736563 
 6498      6F6E6420 
 6498      6D6F746F 
 6499 0b13 00       		.align	2
 6500              	.LC45:
 6501 0b14 3435202D 		.ascii	"45 - Position PID [P, I, D]:\000"
 6501      20506F73 
 6501      6974696F 
 6501      6E205049 
 6501      44205B50 
 6502 0b31 000000   		.align	2
 6503              	.LC46:
 6504 0b34 3436202D 		.ascii	"46 - Current PID [P, I, D]:\000"
 6504      20437572 
 6504      72656E74 
 6504      20504944 
 6504      205B502C 
 6505              		.align	2
 6506              	.LC47:
 6507 0b50 3437202D 		.ascii	"47 - Startup Activation:\000"
 6507      20537461 
 6507      72747570 
 6507      20416374 
 6507      69766174 
 6508 0b69 000000   		.align	2
 6509              	.LC48:
 6510 0b6c 3438202D 		.ascii	"48 - Input mode:\000"
 6510      20496E70 
 6510      7574206D 
 6510      6F64653A 
 6510      00
 6511 0b7d 000000   		.align	2
 6512              	.LC49:
 6513 0b80 3439202D 		.ascii	"49 - Control mode:\000"
 6513      20436F6E 
 6513      74726F6C 
 6513      206D6F64 
 6513      653A00
 6514 0b93 00       		.align	2
 6515              	.LC50:
 6516 0b94 3530202D 		.ascii	"50 - Resolutions:\000"
 6516      20526573 
 6516      6F6C7574 
 6516      696F6E73 
 6516      3A00
 6517 0ba6 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 155


 6518              	.LC51:
 6519 0ba8 3531202D 		.ascii	"51 - Measurement Offsets:\000"
 6519      204D6561 
 6519      73757265 
 6519      6D656E74 
 6519      204F6666 
 6520 0bc2 0000     		.align	2
 6521              	.LC52:
 6522 0bc4 3532202D 		.ascii	"52 - Multipliers:\000"
 6522      204D756C 
 6522      7469706C 
 6522      69657273 
 6522      3A00
 6523 0bd6 0000     		.align	2
 6524              	.LC53:
 6525 0bd8 3533202D 		.ascii	"53 - Pos. limit active:\000"
 6525      20506F73 
 6525      2E206C69 
 6525      6D697420 
 6525      61637469 
 6526              		.align	2
 6527              	.LC54:
 6528 0bf0 3534202D 		.ascii	"54 - Pos. limits [inf, sup]:\000"
 6528      20506F73 
 6528      2E206C69 
 6528      6D697473 
 6528      205B696E 
 6529 0c0d 000000   		.align	2
 6530              	.LC55:
 6531 0c10 3535202D 		.ascii	"55 - Max steps [neg, pos]:\000"
 6531      204D6178 
 6531      20737465 
 6531      7073205B 
 6531      6E65672C 
 6532 0c2b 00       		.align	2
 6533              	.LC56:
 6534 0c2c 3536202D 		.ascii	"56 - Current limit:\000"
 6534      20437572 
 6534      72656E74 
 6534      206C696D 
 6534      69743A00 
 6535              		.align	2
 6536              	.LC57:
 6537 0c40 3537202D 		.ascii	"57 - Absolute encoder position:\000"
 6537      20416273 
 6537      6F6C7574 
 6537      6520656E 
 6537      636F6465 
 6538              		.align	2
 6539              	.LC58:
 6540 0c60 3538202D 		.ascii	"58 - Motor handle ratio:\000"
 6540      204D6F74 
 6540      6F722068 
 6540      616E646C 
 6540      65207261 
 6541 0c79 000000   		.align	2
 6542              	.LC59:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 156


 6543 0c7c 3539202D 		.ascii	"59 - PWM rescaling:\000"
 6543      2050574D 
 6543      20726573 
 6543      63616C69 
 6543      6E673A00 
 6544              		.align	2
 6545              	.LC60:
 6546 0c90 3630202D 		.ascii	"60 - Motor 2 Voltage in mV:\000"
 6546      204D6F74 
 6546      6F722032 
 6546      20566F6C 
 6546      74616765 
 6547              		.align	2
 6548              	.LC61:
 6549 0cac 3631202D 		.ascii	"61 - Current lookup:\000"
 6549      20437572 
 6549      72656E74 
 6549      206C6F6F 
 6549      6B75703A 
 6550 0cc1 000000   		.align	2
 6551              	.LC62:
 6552 0cc4 3632202D 		.ascii	"62 - Associated encoder line:\000"
 6552      20417373 
 6552      6F636961 
 6552      74656420 
 6552      656E636F 
 6553 0ce2 0000     		.align	2
 6554              	.LC63:
 6555 0ce4 3633202D 		.ascii	"63 - Driver type:\000"
 6555      20447269 
 6555      76657220 
 6555      74797065 
 6555      3A00
 6556 0cf6 0000     		.align	2
 6557              	.LC64:
 6558 0cf8 3634202D 		.ascii	"64 - PWM rate limiter:\000"
 6558      2050574D 
 6558      20726174 
 6558      65206C69 
 6558      6D697465 
 6559 0d0f 00       		.align	2
 6560              	.LC65:
 6561 0d10 3635202D 		.ascii	"65 - Not reversible:\000"
 6561      204E6F74 
 6561      20726576 
 6561      65727369 
 6561      626C653A 
 6562 0d25 000000   		.align	2
 6563              	.LC66:
 6564 0d28 3636202D 		.ascii	"66 - Enc idx used for control:\000"
 6564      20456E63 
 6564      20696478 
 6564      20757365 
 6564      6420666F 
 6565 0d47 00       		.align	2
 6566              	.LC67:
 6567 0d48 3637202D 		.ascii	"67 - Gear params[N1, N2, I1]:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 157


 6567      20476561 
 6567      72207061 
 6567      72616D73 
 6567      5B4E312C 
 6568 0d66 0000     		.align	2
 6569              	.LC68:
 6570 0d68 3638202D 		.ascii	"68 - Read enc raw line 0:\000"
 6570      20526561 
 6570      6420656E 
 6570      63207261 
 6570      77206C69 
 6571 0d82 0000     		.align	2
 6572              	.LC69:
 6573 0d84 3639202D 		.ascii	"69 - Read enc raw line 1:\000"
 6573      20526561 
 6573      6420656E 
 6573      63207261 
 6573      77206C69 
 6574 0d9e 0000     		.align	2
 6575              	.LC70:
 6576 0da0 3730202D 		.ascii	"70 - Read additional ADC port:\000"
 6576      20526561 
 6576      64206164 
 6576      64697469 
 6576      6F6E616C 
 6577 0dbf 00       		.align	2
 6578              	.LC71:
 6579 0dc0 3731202D 		.ascii	"71 - ADC channel [1-6]:\000"
 6579      20414443 
 6579      20636861 
 6579      6E6E656C 
 6579      205B312D 
 6580              		.align	2
 6581              	.LC72:
 6582 0dd8 3732202D 		.ascii	"72 - ADC channel [7-12]:\000"
 6582      20414443 
 6582      20636861 
 6582      6E6E656C 
 6582      205B372D 
 6583 0df1 000000   		.align	2
 6584              	.LC73:
 6585 0df4 3733202D 		.ascii	"73 - Record EMG on SD card:\000"
 6585      20526563 
 6585      6F726420 
 6585      454D4720 
 6585      6F6E2053 
 6586              		.align	2
 6587              	.LC74:
 6588 0e10 3734202D 		.ascii	"74 - Joystick closure speed:\000"
 6588      204A6F79 
 6588      73746963 
 6588      6B20636C 
 6588      6F737572 
 6589 0e2d 000000   		.align	2
 6590              	.LC75:
 6591 0e30 3735202D 		.ascii	"75 - Joystick threshold:\000"
 6591      204A6F79 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 158


 6591      73746963 
 6591      6B207468 
 6591      72657368 
 6592 0e49 000000   		.align	2
 6593              	.LC76:
 6594 0e4c 3736202D 		.ascii	"76 - Joystick gains:\000"
 6594      204A6F79 
 6594      73746963 
 6594      6B206761 
 6594      696E733A 
 6595 0e61 000000   		.align	2
 6596              	.LC77:
 6597 0e64 3737202D 		.ascii	"77 - Device type:\000"
 6597      20446576 
 6597      69636520 
 6597      74797065 
 6597      3A00
 6598 0e76 0000     		.align	2
 6599              	.LC78:
 6600 0e78 3738202D 		.ascii	"78 - EMG FSM act.mode:\000"
 6600      20454D47 
 6600      2046534D 
 6600      20616374 
 6600      2E6D6F64 
 6601 0e8f 00       		.align	2
 6602              	.LC79:
 6603 0e90 3739202D 		.ascii	"79 - Fast act.thresholds:\000"
 6603      20466173 
 6603      74206163 
 6603      742E7468 
 6603      72657368 
 6604 0eaa 0000     		.align	2
 6605              	.LC80:
 6606 0eac 3830202D 		.ascii	"80 - Wrist direction:\000"
 6606      20577269 
 6606      73742064 
 6606      69726563 
 6606      74696F6E 
 6607 0ec2 0000     		.align	2
 6608              	.LC81:
 6609 0ec4 3831202D 		.ascii	"81 - Slave communication active:\000"
 6609      20536C61 
 6609      76652063 
 6609      6F6D6D75 
 6609      6E696361 
 6610 0ee5 000000   		.align	2
 6611              	.LC82:
 6612 0ee8 3832202D 		.ascii	"82 - Slave ID:\000"
 6612      20536C61 
 6612      76652049 
 6612      443A00
 6613 0ef7 00       		.align	2
 6614              	.LC83:
 6615 0ef8 3833202D 		.ascii	"83 - Maximum slave residual current:\000"
 6615      204D6178 
 6615      696D756D 
 6615      20736C61 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 159


 6615      76652072 
 6616 0f1d 000000   		.align	2
 6617              	.LC84:
 6618 0f20 3834202D 		.ascii	"84 - Maximum pressure feedback (kPa):\000"
 6618      204D6178 
 6618      696D756D 
 6618      20707265 
 6618      73737572 
 6619 0f46 0000     		.align	2
 6620              	.LC85:
 6621 0f48 3835202D 		.ascii	"85 - Proportional pressure error gain:\000"
 6621      2050726F 
 6621      706F7274 
 6621      696F6E61 
 6621      6C207072 
 6622 0f6f 00       		.align	2
 6623              	.LC131:
 6624 0f70 A4060000 		.word	.LC1
 6625 0f74 B4060000 		.word	.LC2
 6626 0f78 D0060000 		.word	.LC3
 6627 0f7c EC060000 		.word	.LC4
 6628 0f80 04070000 		.word	.LC5
 6629 0f84 14070000 		.word	.LC6
 6630 0f88 28070000 		.word	.LC7
 6631 0f8c 3C070000 		.word	.LC8
 6632 0f90 58070000 		.word	.LC9
 6633 0f94 6C070000 		.word	.LC10
 6634 0f98 84070000 		.word	.LC11
 6635 0f9c A4070000 		.word	.LC12
 6636 0fa0 C0070000 		.word	.LC13
 6637 0fa4 D4070000 		.word	.LC14
 6638 0fa8 EC070000 		.word	.LC15
 6639 0fac 10080000 		.word	.LC16
 6640 0fb0 28080000 		.word	.LC17
 6641 0fb4 40080000 		.word	.LC18
 6642 0fb8 60080000 		.word	.LC19
 6643 0fbc 7C080000 		.word	.LC20
 6644 0fc0 90080000 		.word	.LC21
 6645 0fc4 AC080000 		.word	.LC22
 6646 0fc8 C4080000 		.word	.LC23
 6647 0fcc E8080000 		.word	.LC24
 6648 0fd0 FC080000 		.word	.LC25
 6649 0fd4 20090000 		.word	.LC26
 6650 0fd8 44090000 		.word	.LC27
 6651 0fdc 60090000 		.word	.LC28
 6652 0fe0 74090000 		.word	.LC29
 6653 0fe4 84090000 		.word	.LC30
 6654 0fe8 98090000 		.word	.LC31
 6655 0fec B4090000 		.word	.LC32
 6656 0ff0 CC090000 		.word	.LC33
 6657 0ff4 F4090000 		.word	.LC34
 6658 0ff8 100A0000 		.word	.LC35
 6659 0ffc 380A0000 		.word	.LC36
 6660 1000 480A0000 		.word	.LC37
 6661 1004 580A0000 		.word	.LC38
 6662 1008 780A0000 		.word	.LC39
 6663 100c 8C0A0000 		.word	.LC40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 160


 6664 1010 A40A0000 		.word	.LC41
 6665 1014 BC0A0000 		.word	.LC42
 6666 1018 DC0A0000 		.word	.LC43
 6667 101c FC0A0000 		.word	.LC44
 6668 1020 140B0000 		.word	.LC45
 6669 1024 340B0000 		.word	.LC46
 6670 1028 500B0000 		.word	.LC47
 6671 102c 6C0B0000 		.word	.LC48
 6672 1030 800B0000 		.word	.LC49
 6673 1034 940B0000 		.word	.LC50
 6674 1038 A80B0000 		.word	.LC51
 6675 103c C40B0000 		.word	.LC52
 6676 1040 D80B0000 		.word	.LC53
 6677 1044 F00B0000 		.word	.LC54
 6678 1048 100C0000 		.word	.LC55
 6679 104c 2C0C0000 		.word	.LC56
 6680 1050 400C0000 		.word	.LC57
 6681 1054 600C0000 		.word	.LC58
 6682 1058 7C0C0000 		.word	.LC59
 6683 105c 900C0000 		.word	.LC60
 6684 1060 AC0C0000 		.word	.LC61
 6685 1064 C40C0000 		.word	.LC62
 6686 1068 E40C0000 		.word	.LC63
 6687 106c F80C0000 		.word	.LC64
 6688 1070 100D0000 		.word	.LC65
 6689 1074 280D0000 		.word	.LC66
 6690 1078 480D0000 		.word	.LC67
 6691 107c 680D0000 		.word	.LC68
 6692 1080 840D0000 		.word	.LC69
 6693 1084 A00D0000 		.word	.LC70
 6694 1088 C00D0000 		.word	.LC71
 6695 108c D80D0000 		.word	.LC72
 6696 1090 F40D0000 		.word	.LC73
 6697 1094 100E0000 		.word	.LC74
 6698 1098 300E0000 		.word	.LC75
 6699 109c 4C0E0000 		.word	.LC76
 6700 10a0 640E0000 		.word	.LC77
 6701 10a4 780E0000 		.word	.LC78
 6702 10a8 900E0000 		.word	.LC79
 6703 10ac AC0E0000 		.word	.LC80
 6704 10b0 C40E0000 		.word	.LC81
 6705 10b4 E80E0000 		.word	.LC82
 6706 10b8 F80E0000 		.word	.LC83
 6707 10bc 200F0000 		.word	.LC84
 6708 10c0 480F0000 		.word	.LC85
 6709              		.align	2
 6710              	.LC87:
 6711 10c4 03       		.byte	3
 6712 10c5 01       		.byte	1
 6713 10c6 02       		.byte	2
 6714 10c7 03       		.byte	3
 6715 10c8 03       		.byte	3
 6716 10c9 03       		.byte	3
 6717 10ca 03       		.byte	3
 6718 10cb 03       		.byte	3
 6719 10cc 03       		.byte	3
 6720 10cd 04       		.byte	4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 161


 6721 10ce 05       		.byte	5
 6722 10cf 06       		.byte	6
 6723 10d0 03       		.byte	3
 6724 10d1 07       		.byte	7
 6725 10d2 08       		.byte	8
 6726 10d3 09       		.byte	9
 6727 10d4 03       		.byte	3
 6728 10d5 05       		.byte	5
 6729 10d6 03       		.byte	3
 6730 10d7 01       		.byte	1
 6731 10d8 02       		.byte	2
 6732 10d9 03       		.byte	3
 6733 10da 03       		.byte	3
 6734 10db 03       		.byte	3
 6735 10dc 09       		.byte	9
 6736 10dd 03       		.byte	3
 6737 10de 05       		.byte	5
 6738 10df 03       		.byte	3
 6739 10e0 0A       		.byte	10
 6740 10e1 0B       		.byte	11
 6741 10e2 0C       		.byte	12
 6742 10e3 03       		.byte	3
 6743              		.align	2
 6744              	.LC88:
 6745 10e4 02       		.byte	2
 6746 10e5 03       		.byte	3
 6747 10e6 08       		.byte	8
 6748 10e7 0B       		.byte	11
 6749 10e8 18       		.byte	24
 6750 10e9 2D       		.byte	45
 6751 10ea 2E       		.byte	46
 6752 10eb 33       		.byte	51
 6753 10ec 36       		.byte	54
 6754 10ed 000000   		.align	2
 6755              	.LC89:
 6756 10f0 02       		.byte	2
 6757 10f1 03       		.byte	3
 6758 10f2 05       		.byte	5
 6759 10f3 08       		.byte	8
 6760 10f4 0B       		.byte	11
 6761 10f5 18       		.byte	24
 6762 10f6 19       		.byte	25
 6763 10f7 1D       		.byte	29
 6764 10f8 20       		.byte	32
 6765 10f9 21       		.byte	33
 6766 10fa 27       		.byte	39
 6767 10fb 2D       		.byte	45
 6768 10fc 2E       		.byte	46
 6769 10fd 30       		.byte	48
 6770 10fe 33       		.byte	51
 6771 10ff 36       		.byte	54
 6772 1100 3F       		.byte	63
 6773 1101 4D       		.byte	77
 6774              		.section	.text.manage_param_list,"ax",%progbits
 6775              		.align	2
 6776              		.global	manage_param_list
 6777              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 162


 6778              		.thumb_func
 6779              		.type	manage_param_list, %function
 6780              	manage_param_list:
 6781              	.LFB68:
 887:..\src/command_processing.c **** 
 888:..\src/command_processing.c **** //==============================================================================
 889:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 890:..\src/command_processing.c **** //==============================================================================
 891:..\src/command_processing.c **** 
 892:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6782              		.loc 1 892 0
 6783              		.cfi_startproc
 6784              		@ args = 0, pretend = 0, frame = 1448
 6785              		@ frame_needed = 1, uses_anonymous_args = 0
 6786 0000 B0B5     		push	{r4, r5, r7, lr}
 6787              		.cfi_def_cfa_offset 16
 6788              		.cfi_offset 4, -16
 6789              		.cfi_offset 5, -12
 6790              		.cfi_offset 7, -8
 6791              		.cfi_offset 14, -4
 6792 0002 ADF5B76D 		sub	sp, sp, #1464
 6793              		.cfi_def_cfa_offset 1480
 6794 0006 04AF     		add	r7, sp, #16
 6795              		.cfi_def_cfa 7, 1464
 6796 0008 0246     		mov	r2, r0
 6797 000a BB1D     		adds	r3, r7, #6
 6798 000c 1A80     		strh	r2, [r3]	@ movhi
 893:..\src/command_processing.c ****     uint8 CYDATA i, j;
 894:..\src/command_processing.c ****     uint8 CYDATA sod;
 895:..\src/command_processing.c ****     uint8 PARAM_IDX;
 896:..\src/command_processing.c ****     int16 aux_int16;
 897:..\src/command_processing.c ****     uint16 aux_uint16;
 898:..\src/command_processing.c ****     int32 aux_int32;
 899:..\src/command_processing.c ****     uint32 aux_uint32;
 900:..\src/command_processing.c ****     float aux_float;
 901:..\src/command_processing.c ****  
 902:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6799              		.loc 1 902 0
 6800 000e 0023     		movs	r3, #0
 6801 0010 87F89D35 		strb	r3, [r7, #1437]
 903:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6802              		.loc 1 903 0
 6803 0014 0123     		movs	r3, #1
 6804 0016 87F89C35 		strb	r3, [r7, #1436]
 904:..\src/command_processing.c ****     
 905:..\src/command_processing.c ****     // Arrays
 906:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6805              		.loc 1 906 0
 6806 001a 054B     		ldr	r3, .L373
 6807 001c C7F8A035 		str	r3, [r7, #1440]
 907:..\src/command_processing.c ****     
 908:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6808              		.loc 1 908 0
 6809 0020 BB1D     		adds	r3, r7, #6
 6810 0022 1B88     		ldrh	r3, [r3]
 6811 0024 002B     		cmp	r3, #0
 6812 0026 07D0     		beq	.L310
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 163


 909:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6813              		.loc 1 909 0
 6814 0028 024B     		ldr	r3, .L373+4
 6815 002a C7F8A035 		str	r3, [r7, #1440]
 6816 002e 03E0     		b	.L374
 6817              	.L375:
 6818              		.align	2
 6819              	.L373:
 6820 0030 00000000 		.word	c_mem
 6821 0034 00000000 		.word	g_mem
 6822              	.L374:
 6823              	.L310:
 910:..\src/command_processing.c ****     }
 911:..\src/command_processing.c ****  
 912:..\src/command_processing.c ****     
 913:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 914:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6824              		.loc 1 915 0
 6825 0038 D7F8A035 		ldr	r3, [r7, #1440]
 6826 003c 03F1A002 		add	r2, r3, #160
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6827              		.loc 1 914 0
 6828 0040 07F23443 		addw	r3, r7, #1076
 6829 0044 1A60     		str	r2, [r3]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6830              		.loc 1 916 0
 6831 0046 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6832 004a 7422     		movs	r2, #116
 6833 004c 02FB03F3 		mul	r3, r2, r3
 6834 0050 B033     		adds	r3, r3, #176
 6835 0052 D7F8A025 		ldr	r2, [r7, #1440]
 6836 0056 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6837              		.loc 1 914 0
 6838 0058 07F23443 		addw	r3, r7, #1076
 6839 005c 5A60     		str	r2, [r3, #4]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6840              		.loc 1 917 0
 6841 005e 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6842 0062 7422     		movs	r2, #116
 6843 0064 02FB03F3 		mul	r3, r2, r3
 6844 0068 B833     		adds	r3, r3, #184
 6845 006a D7F8A025 		ldr	r2, [r7, #1440]
 6846 006e 1344     		add	r3, r3, r2
 6847 0070 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6848              		.loc 1 914 0
 6849 0072 07F23443 		addw	r3, r7, #1076
 6850 0076 9A60     		str	r2, [r3, #8]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6851              		.loc 1 918 0
 6852 0078 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6853 007c 7422     		movs	r2, #116
 6854 007e 02FB03F3 		mul	r3, r2, r3
 6855 0082 E033     		adds	r3, r3, #224
 6856 0084 D7F8A025 		ldr	r2, [r7, #1440]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 164


 6857 0088 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6858              		.loc 1 914 0
 6859 008a 07F23443 		addw	r3, r7, #1076
 6860 008e DA60     		str	r2, [r3, #12]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6861              		.loc 1 919 0
 6862 0090 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6863 0094 7422     		movs	r2, #116
 6864 0096 02FB03F3 		mul	r3, r2, r3
 6865 009a 03F58473 		add	r3, r3, #264
 6866 009e D7F8A025 		ldr	r2, [r7, #1440]
 6867 00a2 1344     		add	r3, r3, r2
 6868 00a4 9A1D     		adds	r2, r3, #6
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6869              		.loc 1 914 0
 6870 00a6 07F23443 		addw	r3, r7, #1076
 6871 00aa 1A61     		str	r2, [r3, #16]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6872              		.loc 1 920 0
 6873 00ac 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6874 00b0 7422     		movs	r2, #116
 6875 00b2 02FB03F3 		mul	r3, r2, r3
 6876 00b6 03F58473 		add	r3, r3, #264
 6877 00ba D7F8A025 		ldr	r2, [r7, #1440]
 6878 00be 1344     		add	r3, r3, r2
 6879 00c0 DA1D     		adds	r2, r3, #7
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6880              		.loc 1 914 0
 6881 00c2 07F23443 		addw	r3, r7, #1076
 6882 00c6 5A61     		str	r2, [r3, #20]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6883              		.loc 1 921 0
 6884 00c8 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6885 00cc D7F8A025 		ldr	r2, [r7, #1440]
 6886 00d0 7421     		movs	r1, #116
 6887 00d2 01FB03F3 		mul	r3, r1, r3
 6888 00d6 1344     		add	r3, r3, r2
 6889 00d8 03F58873 		add	r3, r3, #272
 6890 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6891 00de 1A46     		mov	r2, r3
 6892 00e0 1346     		mov	r3, r2
 6893 00e2 5B00     		lsls	r3, r3, #1
 6894 00e4 1344     		add	r3, r3, r2
 6895 00e6 1B01     		lsls	r3, r3, #4
 6896 00e8 03F5CC73 		add	r3, r3, #408
 6897 00ec D7F8A025 		ldr	r2, [r7, #1440]
 6898 00f0 1344     		add	r3, r3, r2
 6899 00f2 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6900              		.loc 1 914 0
 6901 00f4 07F23443 		addw	r3, r7, #1076
 6902 00f8 9A61     		str	r2, [r3, #24]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6903              		.loc 1 922 0
 6904 00fa 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6905 00fe D7F8A025 		ldr	r2, [r7, #1440]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 165


 6906 0102 7421     		movs	r1, #116
 6907 0104 01FB03F3 		mul	r3, r1, r3
 6908 0108 1344     		add	r3, r3, r2
 6909 010a 03F58873 		add	r3, r3, #272
 6910 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6911 0110 1A46     		mov	r2, r3
 6912 0112 1346     		mov	r3, r2
 6913 0114 5B00     		lsls	r3, r3, #1
 6914 0116 1344     		add	r3, r3, r2
 6915 0118 1B01     		lsls	r3, r3, #4
 6916 011a 03F5D073 		add	r3, r3, #416
 6917 011e D7F8A025 		ldr	r2, [r7, #1440]
 6918 0122 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6919              		.loc 1 914 0
 6920 0124 07F23443 		addw	r3, r7, #1076
 6921 0128 DA61     		str	r2, [r3, #28]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6922              		.loc 1 923 0
 6923 012a 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6924 012e D7F8A025 		ldr	r2, [r7, #1440]
 6925 0132 7421     		movs	r1, #116
 6926 0134 01FB03F3 		mul	r3, r1, r3
 6927 0138 1344     		add	r3, r3, r2
 6928 013a 03F58873 		add	r3, r3, #272
 6929 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6930 0140 1A46     		mov	r2, r3
 6931 0142 1346     		mov	r3, r2
 6932 0144 5B00     		lsls	r3, r3, #1
 6933 0146 1344     		add	r3, r3, r2
 6934 0148 1B01     		lsls	r3, r3, #4
 6935 014a 03F5D473 		add	r3, r3, #424
 6936 014e D7F8A025 		ldr	r2, [r7, #1440]
 6937 0152 1344     		add	r3, r3, r2
 6938 0154 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6939              		.loc 1 914 0
 6940 0156 07F23443 		addw	r3, r7, #1076
 6941 015a 1A62     		str	r2, [r3, #32]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6942              		.loc 1 924 0
 6943 015c 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6944 0160 7422     		movs	r2, #116
 6945 0162 02FB03F3 		mul	r3, r2, r3
 6946 0166 E033     		adds	r3, r3, #224
 6947 0168 D7F8A025 		ldr	r2, [r7, #1440]
 6948 016c 1344     		add	r3, r3, r2
 6949 016e DA1C     		adds	r2, r3, #3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6950              		.loc 1 914 0
 6951 0170 07F23443 		addw	r3, r7, #1076
 6952 0174 5A62     		str	r2, [r3, #36]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6953              		.loc 1 925 0
 6954 0176 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6955 017a 7422     		movs	r2, #116
 6956 017c 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 166


 6957 0180 E033     		adds	r3, r3, #224
 6958 0182 D7F8A025 		ldr	r2, [r7, #1440]
 6959 0186 1344     		add	r3, r3, r2
 6960 0188 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6961              		.loc 1 914 0
 6962 018a 07F23443 		addw	r3, r7, #1076
 6963 018e 9A62     		str	r2, [r3, #40]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 6964              		.loc 1 926 0
 6965 0190 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6966 0194 7422     		movs	r2, #116
 6967 0196 02FB03F3 		mul	r3, r2, r3
 6968 019a E833     		adds	r3, r3, #232
 6969 019c D7F8A025 		ldr	r2, [r7, #1440]
 6970 01a0 1344     		add	r3, r3, r2
 6971 01a2 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6972              		.loc 1 914 0
 6973 01a4 07F23443 		addw	r3, r7, #1076
 6974 01a8 DA62     		str	r2, [r3, #44]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 6975              		.loc 1 927 0
 6976 01aa 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 6977 01ae 7422     		movs	r2, #116
 6978 01b0 02FB03F3 		mul	r3, r2, r3
 6979 01b4 03F58473 		add	r3, r3, #264
 6980 01b8 D7F8A025 		ldr	r2, [r7, #1440]
 6981 01bc 1344     		add	r3, r3, r2
 6982 01be 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6983              		.loc 1 914 0
 6984 01c0 07F23443 		addw	r3, r7, #1076
 6985 01c4 1A63     		str	r2, [r3, #48]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 6986              		.loc 1 928 0
 6987 01c6 D7F8A035 		ldr	r3, [r7, #1440]
 6988 01ca 03F5FC72 		add	r2, r3, #504
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6989              		.loc 1 914 0
 6990 01ce 07F23443 		addw	r3, r7, #1076
 6991 01d2 5A63     		str	r2, [r3, #52]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 6992              		.loc 1 929 0
 6993 01d4 D7F8A035 		ldr	r3, [r7, #1440]
 6994 01d8 03F20622 		addw	r2, r3, #518
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6995              		.loc 1 914 0
 6996 01dc 07F23443 		addw	r3, r7, #1076
 6997 01e0 9A63     		str	r2, [r3, #56]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 6998              		.loc 1 930 0
 6999 01e2 D7F8A035 		ldr	r3, [r7, #1440]
 7000 01e6 03F5FE72 		add	r2, r3, #508
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7001              		.loc 1 914 0
 7002 01ea 07F23443 		addw	r3, r7, #1076
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 167


 7003 01ee DA63     		str	r2, [r3, #60]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7004              		.loc 1 931 0
 7005 01f0 D7F8A035 		ldr	r3, [r7, #1440]
 7006 01f4 03F50172 		add	r2, r3, #516
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7007              		.loc 1 914 0
 7008 01f8 07F23443 		addw	r3, r7, #1076
 7009 01fc 1A64     		str	r2, [r3, #64]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7010              		.loc 1 932 0
 7011 01fe 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7012 0202 D7F8A025 		ldr	r2, [r7, #1440]
 7013 0206 7421     		movs	r1, #116
 7014 0208 01FB03F3 		mul	r3, r1, r3
 7015 020c 1344     		add	r3, r3, r2
 7016 020e 03F58873 		add	r3, r3, #272
 7017 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7018 0214 1A46     		mov	r2, r3
 7019 0216 1346     		mov	r3, r2
 7020 0218 5B00     		lsls	r3, r3, #1
 7021 021a 1344     		add	r3, r3, r2
 7022 021c 1B01     		lsls	r3, r3, #4
 7023 021e 03F5DC73 		add	r3, r3, #440
 7024 0222 D7F8A025 		ldr	r2, [r7, #1440]
 7025 0226 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7026              		.loc 1 914 0
 7027 0228 07F23443 		addw	r3, r7, #1076
 7028 022c 5A64     		str	r2, [r3, #68]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7029              		.loc 1 933 0
 7030 022e 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7031 0232 D7F8A025 		ldr	r2, [r7, #1440]
 7032 0236 7421     		movs	r1, #116
 7033 0238 01FB03F3 		mul	r3, r1, r3
 7034 023c 1344     		add	r3, r3, r2
 7035 023e 03F58873 		add	r3, r3, #272
 7036 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7037 0244 1A46     		mov	r2, r3
 7038 0246 1346     		mov	r3, r2
 7039 0248 5B00     		lsls	r3, r3, #1
 7040 024a 1344     		add	r3, r3, r2
 7041 024c 1B01     		lsls	r3, r3, #4
 7042 024e 03F5DC73 		add	r3, r3, #440
 7043 0252 D7F8A025 		ldr	r2, [r7, #1440]
 7044 0256 1344     		add	r3, r3, r2
 7045 0258 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7046              		.loc 1 914 0
 7047 025a 07F23443 		addw	r3, r7, #1076
 7048 025e 9A64     		str	r2, [r3, #72]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                  //20
 7049              		.loc 1 934 0
 7050 0260 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7051 0264 7422     		movs	r2, #116
 7052 0266 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 168


 7053 026a E033     		adds	r3, r3, #224
 7054 026c D7F8A025 		ldr	r2, [r7, #1440]
 7055 0270 1344     		add	r3, r3, r2
 7056 0272 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7057              		.loc 1 914 0
 7058 0274 07F23443 		addw	r3, r7, #1076
 7059 0278 DA64     		str	r2, [r3, #76]
 935:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].motor_voltage),
 7060              		.loc 1 935 0
 7061 027a 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7062 027e 7422     		movs	r2, #116
 7063 0280 02FB03F3 		mul	r3, r2, r3
 7064 0284 03F58873 		add	r3, r3, #272
 7065 0288 D7F8A025 		ldr	r2, [r7, #1440]
 7066 028c 1344     		add	r3, r3, r2
 7067 028e 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7068              		.loc 1 914 0
 7069 0290 07F23443 		addw	r3, r7, #1076
 7070 0294 1A65     		str	r2, [r3, #80]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7071              		.loc 1 936 0
 7072 0296 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7073 029a 7422     		movs	r2, #116
 7074 029c 02FB03F3 		mul	r3, r2, r3
 7075 02a0 F033     		adds	r3, r3, #240
 7076 02a2 D7F8A025 		ldr	r2, [r7, #1440]
 7077 02a6 1344     		add	r3, r3, r2
 7078 02a8 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7079              		.loc 1 914 0
 7080 02aa 07F23443 		addw	r3, r7, #1076
 7081 02ae 5A65     		str	r2, [r3, #84]
 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7082              		.loc 1 937 0
 7083 02b0 D7F8A035 		ldr	r3, [r7, #1440]
 7084 02b4 03F1A102 		add	r2, r3, #161
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7085              		.loc 1 914 0
 7086 02b8 07F23443 		addw	r3, r7, #1076
 7087 02bc 9A65     		str	r2, [r3, #88]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7088              		.loc 1 938 0
 7089 02be D7F8A035 		ldr	r3, [r7, #1440]
 7090 02c2 03F52A72 		add	r2, r3, #680
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7091              		.loc 1 914 0
 7092 02c6 07F23443 		addw	r3, r7, #1076
 7093 02ca DA65     		str	r2, [r3, #92]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7094              		.loc 1 939 0
 7095 02cc D7F8A035 		ldr	r3, [r7, #1440]
 7096 02d0 03F52B72 		add	r2, r3, #684
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7097              		.loc 1 914 0
 7098 02d4 07F23443 		addw	r3, r7, #1076
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 169


 7099 02d8 1A66     		str	r2, [r3, #96]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7100              		.loc 1 940 0
 7101 02da D7F8A035 		ldr	r3, [r7, #1440]
 7102 02de 03F52C72 		add	r2, r3, #688
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7103              		.loc 1 914 0
 7104 02e2 07F23443 		addw	r3, r7, #1076
 7105 02e6 5A66     		str	r2, [r3, #100]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7106              		.loc 1 941 0
 7107 02e8 D7F8A035 		ldr	r3, [r7, #1440]
 7108 02ec 03F52D72 		add	r2, r3, #692
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7109              		.loc 1 914 0
 7110 02f0 07F23443 		addw	r3, r7, #1076
 7111 02f4 9A66     		str	r2, [r3, #104]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7112              		.loc 1 942 0
 7113 02f6 D7F8A035 		ldr	r3, [r7, #1440]
 7114 02fa 03F20722 		addw	r2, r3, #519
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7115              		.loc 1 914 0
 7116 02fe 07F23443 		addw	r3, r7, #1076
 7117 0302 DA66     		str	r2, [r3, #108]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7118              		.loc 1 943 0
 7119 0304 D7F8A035 		ldr	r3, [r7, #1440]
 7120 0308 03F1A702 		add	r2, r3, #167
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7121              		.loc 1 914 0
 7122 030c 07F23443 		addw	r3, r7, #1076
 7123 0310 1A67     		str	r2, [r3, #112]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),                                        //30
 7124              		.loc 1 944 0
 7125 0312 D7F8A035 		ldr	r3, [r7, #1440]
 7126 0316 03F50272 		add	r2, r3, #520
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7127              		.loc 1 914 0
 7128 031a 07F23443 		addw	r3, r7, #1076
 7129 031e 5A67     		str	r2, [r3, #116]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   
 7130              		.loc 1 945 0
 7131 0320 D7F8A035 		ldr	r3, [r7, #1440]
 7132 0324 03F22E22 		addw	r2, r3, #558
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7133              		.loc 1 914 0
 7134 0328 07F23443 		addw	r3, r7, #1076
 7135 032c 9A67     		str	r2, [r3, #120]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7136              		.loc 1 946 0
 7137 032e D7F8A035 		ldr	r3, [r7, #1440]
 7138 0332 03F1A802 		add	r2, r3, #168
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7139              		.loc 1 914 0
 7140 0336 07F23443 		addw	r3, r7, #1076
 7141 033a DA67     		str	r2, [r3, #124]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 170


 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7142              		.loc 1 947 0
 7143 033c D7F8A035 		ldr	r3, [r7, #1440]
 7144 0340 03F50A72 		add	r2, r3, #552
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7145              		.loc 1 914 0
 7146 0344 07F23443 		addw	r3, r7, #1076
 7147 0348 C3F88020 		str	r2, [r3, #128]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7148              		.loc 1 948 0
 7149 034c D7F8A035 		ldr	r3, [r7, #1440]
 7150 0350 03F20922 		addw	r2, r3, #521
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7151              		.loc 1 914 0
 7152 0354 07F23443 		addw	r3, r7, #1076
 7153 0358 C3F88420 		str	r2, [r3, #132]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7154              		.loc 1 949 0
 7155 035c D7F8A035 		ldr	r3, [r7, #1440]
 7156 0360 03F20A22 		addw	r2, r3, #522
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7157              		.loc 1 914 0
 7158 0364 07F23443 		addw	r3, r7, #1076
 7159 0368 C3F88820 		str	r2, [r3, #136]
 950:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7160              		.loc 1 950 0
 7161 036c D7F8A035 		ldr	r3, [r7, #1440]
 7162 0370 03F1AB02 		add	r2, r3, #171
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7163              		.loc 1 914 0
 7164 0374 07F23443 		addw	r3, r7, #1076
 7165 0378 C3F88C20 		str	r2, [r3, #140]
 951:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7166              		.loc 1 951 0
 7167 037c D7F8A035 		ldr	r3, [r7, #1440]
 7168 0380 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7169 0384 5B01     		lsls	r3, r3, #5
 7170 0386 03F51273 		add	r3, r3, #584
 7171 038a D7F8A025 		ldr	r2, [r7, #1440]
 7172 038e 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7173              		.loc 1 914 0
 7174 0390 07F23443 		addw	r3, r7, #1076
 7175 0394 C3F89020 		str	r2, [r3, #144]
 952:..\src/command_processing.c ****         
 953:..\src/command_processing.c ****         // GENERIC PARAMS
 954:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7176              		.loc 1 954 0
 7177 0398 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7178 039c 7422     		movs	r2, #116
 7179 039e 02FB03F3 		mul	r3, r2, r3
 7180 03a2 03F58873 		add	r3, r3, #272
 7181 03a6 D7F8A025 		ldr	r2, [r7, #1440]
 7182 03aa 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7183              		.loc 1 914 0
 7184 03ac 07F23443 		addw	r3, r7, #1076
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 171


 7185 03b0 C3F89420 		str	r2, [r3, #148]
 955:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7186              		.loc 1 955 0
 7187 03b4 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7188 03b8 7422     		movs	r2, #116
 7189 03ba 02FB03F3 		mul	r3, r2, r3
 7190 03be E033     		adds	r3, r3, #224
 7191 03c0 D7F8A025 		ldr	r2, [r7, #1440]
 7192 03c4 1344     		add	r3, r3, r2
 7193 03c6 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7194              		.loc 1 914 0
 7195 03c8 07F23443 		addw	r3, r7, #1076
 7196 03cc C3F89820 		str	r2, [r3, #152]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),                        //40
 7197              		.loc 1 956 0
 7198 03d0 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7199 03d4 7422     		movs	r2, #116
 7200 03d6 02FB03F3 		mul	r3, r2, r3
 7201 03da 03F58873 		add	r3, r3, #272
 7202 03de D7F8A025 		ldr	r2, [r7, #1440]
 7203 03e2 1344     		add	r3, r3, r2
 7204 03e4 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7205              		.loc 1 914 0
 7206 03e6 07F23443 		addw	r3, r7, #1076
 7207 03ea C3F89C20 		str	r2, [r3, #156]
 957:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	 
 7208              		.loc 1 957 0
 7209 03ee 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7210 03f2 7422     		movs	r2, #116
 7211 03f4 02FB03F3 		mul	r3, r2, r3
 7212 03f8 03F58873 		add	r3, r3, #272
 7213 03fc D7F8A025 		ldr	r2, [r7, #1440]
 7214 0400 1344     		add	r3, r3, r2
 7215 0402 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7216              		.loc 1 914 0
 7217 0404 07F23443 		addw	r3, r7, #1076
 7218 0408 C3F8A020 		str	r2, [r3, #160]
 958:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7219              		.loc 1 958 0
 7220 040c 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7221 0410 D7F8A025 		ldr	r2, [r7, #1440]
 7222 0414 7421     		movs	r1, #116
 7223 0416 01FB03F3 		mul	r3, r1, r3
 7224 041a 1344     		add	r3, r3, r2
 7225 041c 03F58873 		add	r3, r3, #272
 7226 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7227 0422 1A46     		mov	r2, r3
 7228 0424 1346     		mov	r3, r2
 7229 0426 5B00     		lsls	r3, r3, #1
 7230 0428 1344     		add	r3, r3, r2
 7231 042a 1B01     		lsls	r3, r3, #4
 7232 042c 03F5DC73 		add	r3, r3, #440
 7233 0430 D7F8A025 		ldr	r2, [r7, #1440]
 7234 0434 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 172


 7235 0436 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7236              		.loc 1 914 0
 7237 0438 07F23443 		addw	r3, r7, #1076
 7238 043c C3F8A420 		str	r2, [r3, #164]
 959:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7239              		.loc 1 959 0
 7240 0440 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7241 0444 D7F8A025 		ldr	r2, [r7, #1440]
 7242 0448 7421     		movs	r1, #116
 7243 044a 01FB03F3 		mul	r3, r1, r3
 7244 044e 1344     		add	r3, r3, r2
 7245 0450 03F58873 		add	r3, r3, #272
 7246 0454 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7247 0456 1A46     		mov	r2, r3
 7248 0458 1346     		mov	r3, r2
 7249 045a 5B00     		lsls	r3, r3, #1
 7250 045c 1344     		add	r3, r3, r2
 7251 045e 1B01     		lsls	r3, r3, #4
 7252 0460 03F5DC73 		add	r3, r3, #440
 7253 0464 D7F8A025 		ldr	r2, [r7, #1440]
 7254 0468 1344     		add	r3, r3, r2
 7255 046a 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7256              		.loc 1 914 0
 7257 046c 07F23443 		addw	r3, r7, #1076
 7258 0470 C3F8A820 		str	r2, [r3, #168]
 960:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7259              		.loc 1 960 0
 7260 0474 D7F8A035 		ldr	r3, [r7, #1440]
 7261 0478 03F1A902 		add	r2, r3, #169
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7262              		.loc 1 914 0
 7263 047c 07F23443 		addw	r3, r7, #1076
 7264 0480 C3F8AC20 		str	r2, [r3, #172]
 961:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7265              		.loc 1 961 0
 7266 0484 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7267 0488 7422     		movs	r2, #116
 7268 048a 02FB03F3 		mul	r3, r2, r3
 7269 048e B033     		adds	r3, r3, #176
 7270 0490 D7F8A025 		ldr	r2, [r7, #1440]
 7271 0494 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7272              		.loc 1 914 0
 7273 0496 07F23443 		addw	r3, r7, #1076
 7274 049a C3F8B020 		str	r2, [r3, #176]
 962:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7275              		.loc 1 962 0
 7276 049e 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7277 04a2 7422     		movs	r2, #116
 7278 04a4 02FB03F3 		mul	r3, r2, r3
 7279 04a8 B833     		adds	r3, r3, #184
 7280 04aa D7F8A025 		ldr	r2, [r7, #1440]
 7281 04ae 1344     		add	r3, r3, r2
 7282 04b0 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 173


 7283              		.loc 1 914 0
 7284 04b2 07F23443 		addw	r3, r7, #1076
 7285 04b6 C3F8B420 		str	r2, [r3, #180]
 963:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7286              		.loc 1 963 0
 7287 04ba 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7288 04be 7422     		movs	r2, #116
 7289 04c0 02FB03F3 		mul	r3, r2, r3
 7290 04c4 E033     		adds	r3, r3, #224
 7291 04c6 D7F8A025 		ldr	r2, [r7, #1440]
 7292 04ca 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7293              		.loc 1 914 0
 7294 04cc 07F23443 		addw	r3, r7, #1076
 7295 04d0 C3F8B820 		str	r2, [r3, #184]
 964:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7296              		.loc 1 964 0
 7297 04d4 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7298 04d8 7422     		movs	r2, #116
 7299 04da 02FB03F3 		mul	r3, r2, r3
 7300 04de 03F58473 		add	r3, r3, #264
 7301 04e2 D7F8A025 		ldr	r2, [r7, #1440]
 7302 04e6 1344     		add	r3, r3, r2
 7303 04e8 9A1D     		adds	r2, r3, #6
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7304              		.loc 1 914 0
 7305 04ea 07F23443 		addw	r3, r7, #1076
 7306 04ee C3F8BC20 		str	r2, [r3, #188]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7307              		.loc 1 965 0
 7308 04f2 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7309 04f6 7422     		movs	r2, #116
 7310 04f8 02FB03F3 		mul	r3, r2, r3
 7311 04fc 03F58473 		add	r3, r3, #264
 7312 0500 D7F8A025 		ldr	r2, [r7, #1440]
 7313 0504 1344     		add	r3, r3, r2
 7314 0506 DA1D     		adds	r2, r3, #7
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7315              		.loc 1 914 0
 7316 0508 07F23443 		addw	r3, r7, #1076
 7317 050c C3F8C020 		str	r2, [r3, #192]
 966:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),     //50
 7318              		.loc 1 966 0
 7319 0510 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7320 0514 D7F8A025 		ldr	r2, [r7, #1440]
 7321 0518 7421     		movs	r1, #116
 7322 051a 01FB03F3 		mul	r3, r1, r3
 7323 051e 1344     		add	r3, r3, r2
 7324 0520 03F58873 		add	r3, r3, #272
 7325 0524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7326 0526 1A46     		mov	r2, r3
 7327 0528 1346     		mov	r3, r2
 7328 052a 5B00     		lsls	r3, r3, #1
 7329 052c 1344     		add	r3, r3, r2
 7330 052e 1B01     		lsls	r3, r3, #4
 7331 0530 03F5CC73 		add	r3, r3, #408
 7332 0534 D7F8A025 		ldr	r2, [r7, #1440]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 174


 7333 0538 1344     		add	r3, r3, r2
 7334 053a 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7335              		.loc 1 914 0
 7336 053c 07F23443 		addw	r3, r7, #1076
 7337 0540 C3F8C420 		str	r2, [r3, #196]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    
 7338              		.loc 1 967 0
 7339 0544 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7340 0548 D7F8A025 		ldr	r2, [r7, #1440]
 7341 054c 7421     		movs	r1, #116
 7342 054e 01FB03F3 		mul	r3, r1, r3
 7343 0552 1344     		add	r3, r3, r2
 7344 0554 03F58873 		add	r3, r3, #272
 7345 0558 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7346 055a 1A46     		mov	r2, r3
 7347 055c 1346     		mov	r3, r2
 7348 055e 5B00     		lsls	r3, r3, #1
 7349 0560 1344     		add	r3, r3, r2
 7350 0562 1B01     		lsls	r3, r3, #4
 7351 0564 03F5D073 		add	r3, r3, #416
 7352 0568 D7F8A025 		ldr	r2, [r7, #1440]
 7353 056c 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7354              		.loc 1 914 0
 7355 056e 07F23443 		addw	r3, r7, #1076
 7356 0572 C3F8C820 		str	r2, [r3, #200]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7357              		.loc 1 968 0
 7358 0576 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7359 057a D7F8A025 		ldr	r2, [r7, #1440]
 7360 057e 7421     		movs	r1, #116
 7361 0580 01FB03F3 		mul	r3, r1, r3
 7362 0584 1344     		add	r3, r3, r2
 7363 0586 03F58873 		add	r3, r3, #272
 7364 058a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7365 058c 1A46     		mov	r2, r3
 7366 058e 1346     		mov	r3, r2
 7367 0590 5B00     		lsls	r3, r3, #1
 7368 0592 1344     		add	r3, r3, r2
 7369 0594 1B01     		lsls	r3, r3, #4
 7370 0596 03F5D473 		add	r3, r3, #424
 7371 059a D7F8A025 		ldr	r2, [r7, #1440]
 7372 059e 1344     		add	r3, r3, r2
 7373 05a0 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7374              		.loc 1 914 0
 7375 05a2 07F23443 		addw	r3, r7, #1076
 7376 05a6 C3F8CC20 		str	r2, [r3, #204]
 969:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7377              		.loc 1 969 0
 7378 05aa 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7379 05ae 7422     		movs	r2, #116
 7380 05b0 02FB03F3 		mul	r3, r2, r3
 7381 05b4 E033     		adds	r3, r3, #224
 7382 05b6 D7F8A025 		ldr	r2, [r7, #1440]
 7383 05ba 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 175


 7384 05bc DA1C     		adds	r2, r3, #3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7385              		.loc 1 914 0
 7386 05be 07F23443 		addw	r3, r7, #1076
 7387 05c2 C3F8D020 		str	r2, [r3, #208]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7388              		.loc 1 970 0
 7389 05c6 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7390 05ca 7422     		movs	r2, #116
 7391 05cc 02FB03F3 		mul	r3, r2, r3
 7392 05d0 E033     		adds	r3, r3, #224
 7393 05d2 D7F8A025 		ldr	r2, [r7, #1440]
 7394 05d6 1344     		add	r3, r3, r2
 7395 05d8 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7396              		.loc 1 914 0
 7397 05da 07F23443 		addw	r3, r7, #1076
 7398 05de C3F8D420 		str	r2, [r3, #212]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7399              		.loc 1 971 0
 7400 05e2 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7401 05e6 7422     		movs	r2, #116
 7402 05e8 02FB03F3 		mul	r3, r2, r3
 7403 05ec E833     		adds	r3, r3, #232
 7404 05ee D7F8A025 		ldr	r2, [r7, #1440]
 7405 05f2 1344     		add	r3, r3, r2
 7406 05f4 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7407              		.loc 1 914 0
 7408 05f6 07F23443 		addw	r3, r7, #1076
 7409 05fa C3F8D820 		str	r2, [r3, #216]
 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7410              		.loc 1 972 0
 7411 05fe 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7412 0602 7422     		movs	r2, #116
 7413 0604 02FB03F3 		mul	r3, r2, r3
 7414 0608 03F58473 		add	r3, r3, #264
 7415 060c D7F8A025 		ldr	r2, [r7, #1440]
 7416 0610 1344     		add	r3, r3, r2
 7417 0612 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7418              		.loc 1 914 0
 7419 0614 07F23443 		addw	r3, r7, #1076
 7420 0618 C3F8DC20 		str	r2, [r3, #220]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7421              		.loc 1 973 0
 7422 061c 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7423 0620 D7F8A025 		ldr	r2, [r7, #1440]
 7424 0624 7421     		movs	r1, #116
 7425 0626 01FB03F3 		mul	r3, r1, r3
 7426 062a 1344     		add	r3, r3, r2
 7427 062c 03F58873 		add	r3, r3, #272
 7428 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7429 0632 1A46     		mov	r2, r3
 7430 0634 1346     		mov	r3, r2
 7431 0636 5B00     		lsls	r3, r3, #1
 7432 0638 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 176


 7433 063a 1B01     		lsls	r3, r3, #4
 7434 063c 03F5DC73 		add	r3, r3, #440
 7435 0640 D7F8A025 		ldr	r2, [r7, #1440]
 7436 0644 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7437              		.loc 1 914 0
 7438 0646 07F23443 		addw	r3, r7, #1076
 7439 064a C3F8E020 		str	r2, [r3, #224]
 974:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7440              		.loc 1 974 0
 7441 064e 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7442 0652 D7F8A025 		ldr	r2, [r7, #1440]
 7443 0656 7421     		movs	r1, #116
 7444 0658 01FB03F3 		mul	r3, r1, r3
 7445 065c 1344     		add	r3, r3, r2
 7446 065e 03F58873 		add	r3, r3, #272
 7447 0662 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7448 0664 1A46     		mov	r2, r3
 7449 0666 1346     		mov	r3, r2
 7450 0668 5B00     		lsls	r3, r3, #1
 7451 066a 1344     		add	r3, r3, r2
 7452 066c 1B01     		lsls	r3, r3, #4
 7453 066e 03F5DC73 		add	r3, r3, #440
 7454 0672 D7F8A025 		ldr	r2, [r7, #1440]
 7455 0676 1344     		add	r3, r3, r2
 7456 0678 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7457              		.loc 1 914 0
 7458 067a 07F23443 		addw	r3, r7, #1076
 7459 067e C3F8E420 		str	r2, [r3, #228]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7460              		.loc 1 975 0
 7461 0682 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7462 0686 7422     		movs	r2, #116
 7463 0688 02FB03F3 		mul	r3, r2, r3
 7464 068c E033     		adds	r3, r3, #224
 7465 068e D7F8A025 		ldr	r2, [r7, #1440]
 7466 0692 1344     		add	r3, r3, r2
 7467 0694 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7468              		.loc 1 914 0
 7469 0696 07F23443 		addw	r3, r7, #1076
 7470 069a C3F8E820 		str	r2, [r3, #232]
 976:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_voltage),                    //60
 7471              		.loc 1 976 0
 7472 069e 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7473 06a2 7422     		movs	r2, #116
 7474 06a4 02FB03F3 		mul	r3, r2, r3
 7475 06a8 03F58873 		add	r3, r3, #272
 7476 06ac D7F8A025 		ldr	r2, [r7, #1440]
 7477 06b0 1344     		add	r3, r3, r2
 7478 06b2 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7479              		.loc 1 914 0
 7480 06b4 07F23443 		addw	r3, r7, #1076
 7481 06b8 C3F8EC20 		str	r2, [r3, #236]
 977:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 177


 7482              		.loc 1 977 0
 7483 06bc 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7484 06c0 7422     		movs	r2, #116
 7485 06c2 02FB03F3 		mul	r3, r2, r3
 7486 06c6 F033     		adds	r3, r3, #240
 7487 06c8 D7F8A025 		ldr	r2, [r7, #1440]
 7488 06cc 1344     		add	r3, r3, r2
 7489 06ce 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7490              		.loc 1 914 0
 7491 06d0 07F23443 		addw	r3, r7, #1076
 7492 06d4 C3F8F020 		str	r2, [r3, #240]
 978:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         
 7493              		.loc 1 978 0
 7494 06d8 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7495 06dc 7422     		movs	r2, #116
 7496 06de 02FB03F3 		mul	r3, r2, r3
 7497 06e2 03F58873 		add	r3, r3, #272
 7498 06e6 D7F8A025 		ldr	r2, [r7, #1440]
 7499 06ea 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7500              		.loc 1 914 0
 7501 06ec 07F23443 		addw	r3, r7, #1076
 7502 06f0 C3F8F420 		str	r2, [r3, #244]
 979:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7503              		.loc 1 979 0
 7504 06f4 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7505 06f8 7422     		movs	r2, #116
 7506 06fa 02FB03F3 		mul	r3, r2, r3
 7507 06fe E033     		adds	r3, r3, #224
 7508 0700 D7F8A025 		ldr	r2, [r7, #1440]
 7509 0704 1344     		add	r3, r3, r2
 7510 0706 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7511              		.loc 1 914 0
 7512 0708 07F23443 		addw	r3, r7, #1076
 7513 070c C3F8F820 		str	r2, [r3, #248]
 980:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7514              		.loc 1 980 0
 7515 0710 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7516 0714 7422     		movs	r2, #116
 7517 0716 02FB03F3 		mul	r3, r2, r3
 7518 071a 03F58873 		add	r3, r3, #272
 7519 071e D7F8A025 		ldr	r2, [r7, #1440]
 7520 0722 1344     		add	r3, r3, r2
 7521 0724 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7522              		.loc 1 914 0
 7523 0726 07F23443 		addw	r3, r7, #1076
 7524 072a C3F8FC20 		str	r2, [r3, #252]
 981:..\src/command_processing.c ****   
 982:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7525              		.loc 1 982 0
 7526 072e 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7527 0732 7422     		movs	r2, #116
 7528 0734 02FB03F3 		mul	r3, r2, r3
 7529 0738 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 178


 7530 073c D7F8A025 		ldr	r2, [r7, #1440]
 7531 0740 1344     		add	r3, r3, r2
 7532 0742 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7533              		.loc 1 914 0
 7534 0744 07F23443 		addw	r3, r7, #1076
 7535 0748 C3F80021 		str	r2, [r3, #256]
 983:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7536              		.loc 1 983 0
 7537 074c 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7538 0750 D7F8A025 		ldr	r2, [r7, #1440]
 7539 0754 7421     		movs	r1, #116
 7540 0756 01FB03F3 		mul	r3, r1, r3
 7541 075a 1344     		add	r3, r3, r2
 7542 075c 03F58873 		add	r3, r3, #272
 7543 0760 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7544 0762 1A46     		mov	r2, r3
 7545 0764 1346     		mov	r3, r2
 7546 0766 5B00     		lsls	r3, r3, #1
 7547 0768 1344     		add	r3, r3, r2
 7548 076a 1B01     		lsls	r3, r3, #4
 7549 076c 03F5DC73 		add	r3, r3, #440
 7550 0770 D7F8A025 		ldr	r2, [r7, #1440]
 7551 0774 1344     		add	r3, r3, r2
 7552 0776 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7553              		.loc 1 914 0
 7554 0778 07F23443 		addw	r3, r7, #1076
 7555 077c C3F80421 		str	r2, [r3, #260]
 984:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7556              		.loc 1 984 0
 7557 0780 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 7558 0784 D7F8A025 		ldr	r2, [r7, #1440]
 7559 0788 7421     		movs	r1, #116
 7560 078a 01FB03F3 		mul	r3, r1, r3
 7561 078e 1344     		add	r3, r3, r2
 7562 0790 03F58873 		add	r3, r3, #272
 7563 0794 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7564 0796 1A46     		mov	r2, r3
 7565 0798 1346     		mov	r3, r2
 7566 079a 5B00     		lsls	r3, r3, #1
 7567 079c 1344     		add	r3, r3, r2
 7568 079e 1B01     		lsls	r3, r3, #4
 7569 07a0 03F5DC73 		add	r3, r3, #440
 7570 07a4 D7F8A025 		ldr	r2, [r7, #1440]
 7571 07a8 1344     		add	r3, r3, r2
 7572 07aa 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7573              		.loc 1 914 0
 7574 07ac 07F23443 		addw	r3, r7, #1076
 7575 07b0 C3F80821 		str	r2, [r3, #264]
 985:..\src/command_processing.c ****         
 986:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7576              		.loc 1 986 0
 7577 07b4 D7F8A035 		ldr	r3, [r7, #1440]
 7578 07b8 03F5CC72 		add	r2, r3, #408
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 179


 7579              		.loc 1 914 0
 7580 07bc 07F23443 		addw	r3, r7, #1076
 7581 07c0 C3F80C21 		str	r2, [r3, #268]
 987:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7582              		.loc 1 987 0
 7583 07c4 D7F8A035 		ldr	r3, [r7, #1440]
 7584 07c8 03F5E472 		add	r2, r3, #456
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7585              		.loc 1 914 0
 7586 07cc 07F23443 		addw	r3, r7, #1076
 7587 07d0 C3F81021 		str	r2, [r3, #272]
 988:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		                    //70
 7588              		.loc 1 988 0
 7589 07d4 D7F8A035 		ldr	r3, [r7, #1440]
 7590 07d8 03F22F22 		addw	r2, r3, #559
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7591              		.loc 1 914 0
 7592 07dc 07F23443 		addw	r3, r7, #1076
 7593 07e0 C3F81421 		str	r2, [r3, #276]
 989:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),                                           
 7594              		.loc 1 989 0
 7595 07e4 D7F8A035 		ldr	r3, [r7, #1440]
 7596 07e8 03F50C72 		add	r2, r3, #560
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7597              		.loc 1 914 0
 7598 07ec 07F23443 		addw	r3, r7, #1076
 7599 07f0 C3F81821 		str	r2, [r3, #280]
 990:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                            
 7600              		.loc 1 990 0
 7601 07f4 D7F8A035 		ldr	r3, [r7, #1440]
 7602 07f8 03F23622 		addw	r2, r3, #566
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7603              		.loc 1 914 0
 7604 07fc 07F23443 		addw	r3, r7, #1076
 7605 0800 C3F81C21 		str	r2, [r3, #284]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7606              		.loc 1 991 0
 7607 0804 D7F8A035 		ldr	r3, [r7, #1440]
 7608 0808 03F50F72 		add	r2, r3, #572
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7609              		.loc 1 914 0
 7610 080c 07F23443 		addw	r3, r7, #1076
 7611 0810 C3F82021 		str	r2, [r3, #288]
 992:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7612              		.loc 1 992 0
 7613 0814 D7F8A035 		ldr	r3, [r7, #1440]
 7614 0818 03F52E72 		add	r2, r3, #696
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7615              		.loc 1 914 0
 7616 081c 07F23443 		addw	r3, r7, #1076
 7617 0820 C3F82421 		str	r2, [r3, #292]
 993:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7618              		.loc 1 993 0
 7619 0824 D7F8A035 		ldr	r3, [r7, #1440]
 7620 0828 03F2BA22 		addw	r2, r3, #698
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7621              		.loc 1 914 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 180


 7622 082c 07F23443 		addw	r3, r7, #1076
 7623 0830 C3F82821 		str	r2, [r3, #296]
 994:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7624              		.loc 1 994 0
 7625 0834 D7F8A035 		ldr	r3, [r7, #1440]
 7626 0838 03F52F72 		add	r2, r3, #700
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7627              		.loc 1 914 0
 7628 083c 07F23443 		addw	r3, r7, #1076
 7629 0840 C3F82C21 		str	r2, [r3, #300]
 995:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7630              		.loc 1 995 0
 7631 0844 D7F8A035 		ldr	r3, [r7, #1440]
 7632 0848 03F1AC02 		add	r2, r3, #172
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7633              		.loc 1 914 0
 7634 084c 07F23443 		addw	r3, r7, #1076
 7635 0850 C3F83021 		str	r2, [r3, #304]
 996:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7636              		.loc 1 996 0
 7637 0854 D7F8A035 		ldr	r3, [r7, #1440]
 7638 0858 03F53A72 		add	r2, r3, #744
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7639              		.loc 1 914 0
 7640 085c 07F23443 		addw	r3, r7, #1076
 7641 0860 C3F83421 		str	r2, [r3, #308]
 997:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7642              		.loc 1 997 0
 7643 0864 D7F8A035 		ldr	r3, [r7, #1440]
 7644 0868 03F2EA22 		addw	r2, r3, #746
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7645              		.loc 1 914 0
 7646 086c 07F23443 		addw	r3, r7, #1076
 7647 0870 C3F83821 		str	r2, [r3, #312]
 998:..\src/command_processing.c ****         
 999:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7648              		.loc 1 999 0
 7649 0874 D7F8A035 		ldr	r3, [r7, #1440]
 7650 0878 03F2EE22 		addw	r2, r3, #750
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7651              		.loc 1 914 0
 7652 087c 07F23443 		addw	r3, r7, #1076
 7653 0880 C3F83C21 		str	r2, [r3, #316]
1000:..\src/command_processing.c ****         
1001:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7654              		.loc 1 1001 0
 7655 0884 D7F8A035 		ldr	r3, [r7, #1440]
 7656 0888 03F53272 		add	r2, r3, #712
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7657              		.loc 1 914 0
 7658 088c 07F23443 		addw	r3, r7, #1076
 7659 0890 C3F84021 		str	r2, [r3, #320]
1002:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7660              		.loc 1 1002 0
 7661 0894 D7F8A035 		ldr	r3, [r7, #1440]
 7662 0898 03F2C922 		addw	r2, r3, #713
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 181


 7663              		.loc 1 914 0
 7664 089c 07F23443 		addw	r3, r7, #1076
 7665 08a0 C3F84421 		str	r2, [r3, #324]
1003:..\src/command_processing.c ****         
1004:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7666              		.loc 1 1004 0
 7667 08a4 D7F8A035 		ldr	r3, [r7, #1440]
 7668 08a8 03F53672 		add	r2, r3, #728
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7669              		.loc 1 914 0
 7670 08ac 07F23443 		addw	r3, r7, #1076
 7671 08b0 C3F84821 		str	r2, [r3, #328]
1005:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7672              		.loc 1 1005 0
 7673 08b4 D7F8A035 		ldr	r3, [r7, #1440]
 7674 08b8 03F53772 		add	r2, r3, #732
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7675              		.loc 1 914 0
 7676 08bc 07F23443 		addw	r3, r7, #1076
 7677 08c0 C3F84C21 		str	r2, [r3, #332]
1006:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7678              		.loc 1 1006 0
 7679 08c4 D7F8A035 		ldr	r3, [r7, #1440]
 7680 08c8 03F53872 		add	r2, r3, #736
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7681              		.loc 1 914 0
 7682 08cc 07F23443 		addw	r3, r7, #1076
 7683 08d0 C3F85021 		str	r2, [r3, #336]
1007:..\src/command_processing.c ****         
1008:..\src/command_processing.c **** 
1009:..\src/command_processing.c ****     };
1010:..\src/command_processing.c ****     
1011:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7684              		.loc 1 1011 0
 7685 08d4 07F57773 		add	r3, r7, #988
 7686 08d8 F64A     		ldr	r2, .L376
 7687 08da 1846     		mov	r0, r3
 7688 08dc 1146     		mov	r1, r2
 7689 08de 5523     		movs	r3, #85
 7690 08e0 1A46     		mov	r2, r3
 7691 08e2 FFF7FEFF 		bl	memcpy
1012:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
1013:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1014:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1015:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1016:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, TYPE_UINT16, 
1017:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1018:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1019:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1020:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1021:..\src/command_processing.c ****         
1022:..\src/command_processing.c ****         // GENERIC PARAMS
1023:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1024:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1025:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1026:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1027:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 182


1028:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_UINT16,TYPE_FLOAT, TYPE_UINT8,
1029:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1030:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1031:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1032:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1033:..\src/command_processing.c ****         TYPE_UINT16,
1034:..\src/command_processing.c ****         
1035:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1036:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1037:..\src/command_processing.c ****     };
1038:..\src/command_processing.c **** 
1039:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7692              		.loc 1 1039 0
 7693 08e6 07F56173 		add	r3, r7, #900
 7694 08ea 0122     		movs	r2, #1
 7695 08ec 1A70     		strb	r2, [r3]
 7696 08ee 07F56173 		add	r3, r7, #900
 7697 08f2 0322     		movs	r2, #3
 7698 08f4 5A70     		strb	r2, [r3, #1]
 7699 08f6 07F56173 		add	r3, r7, #900
 7700 08fa 0322     		movs	r2, #3
 7701 08fc 9A70     		strb	r2, [r3, #2]
 7702 08fe 07F56173 		add	r3, r7, #900
 7703 0902 0122     		movs	r2, #1
 7704 0904 DA70     		strb	r2, [r3, #3]
 7705 0906 07F56173 		add	r3, r7, #900
 7706 090a 0122     		movs	r2, #1
 7707 090c 1A71     		strb	r2, [r3, #4]
 7708 090e 07F56173 		add	r3, r7, #900
 7709 0912 0122     		movs	r2, #1
 7710 0914 5A71     		strb	r2, [r3, #5]
 7711 0916 07F56173 		add	r3, r7, #900
 7712 091a 0322     		movs	r2, #3
 7713 091c 9A71     		strb	r2, [r3, #6]
 7714 091e 07F56173 		add	r3, r7, #900
 7715 0922 0322     		movs	r2, #3
 7716 0924 DA71     		strb	r2, [r3, #7]
 7717 0926 07F56173 		add	r3, r7, #900
 7718 092a 0322     		movs	r2, #3
 7719 092c 1A72     		strb	r2, [r3, #8]
 7720 092e 07F56173 		add	r3, r7, #900
 7721 0932 0122     		movs	r2, #1
 7722 0934 5A72     		strb	r2, [r3, #9]
 7723 0936 07F56173 		add	r3, r7, #900
 7724 093a 0222     		movs	r2, #2
 7725 093c 9A72     		strb	r2, [r3, #10]
 7726 093e 07F56173 		add	r3, r7, #900
 7727 0942 0222     		movs	r2, #2
 7728 0944 DA72     		strb	r2, [r3, #11]
 7729 0946 07F56173 		add	r3, r7, #900
 7730 094a 0122     		movs	r2, #1
 7731 094c 1A73     		strb	r2, [r3, #12]
 7732 094e 07F56173 		add	r3, r7, #900
 7733 0952 0222     		movs	r2, #2
 7734 0954 5A73     		strb	r2, [r3, #13]
 7735 0956 07F56173 		add	r3, r7, #900
 7736 095a 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 183


 7737 095c 9A73     		strb	r2, [r3, #14]
 7738 095e 07F56173 		add	r3, r7, #900
 7739 0962 0222     		movs	r2, #2
 7740 0964 DA73     		strb	r2, [r3, #15]
 7741 0966 07F56173 		add	r3, r7, #900
 7742 096a 0222     		movs	r2, #2
 7743 096c 1A74     		strb	r2, [r3, #16]
 7744 096e 07F56173 		add	r3, r7, #900
 7745 0972 0122     		movs	r2, #1
 7746 0974 5A74     		strb	r2, [r3, #17]
 7747 0976 07F56173 		add	r3, r7, #900
 7748 097a 0122     		movs	r2, #1
 7749 097c 9A74     		strb	r2, [r3, #18]
 7750 097e 07F56173 		add	r3, r7, #900
 7751 0982 0122     		movs	r2, #1
 7752 0984 DA74     		strb	r2, [r3, #19]
 7753 0986 07F56173 		add	r3, r7, #900
 7754 098a 0122     		movs	r2, #1
 7755 098c 1A75     		strb	r2, [r3, #20]
 7756 098e 07F56173 		add	r3, r7, #900
 7757 0992 0622     		movs	r2, #6
 7758 0994 5A75     		strb	r2, [r3, #21]
 7759 0996 07F56173 		add	r3, r7, #900
 7760 099a 0322     		movs	r2, #3
 7761 099c 9A75     		strb	r2, [r3, #22]
 7762 099e 07F56173 		add	r3, r7, #900
 7763 09a2 0122     		movs	r2, #1
 7764 09a4 DA75     		strb	r2, [r3, #23]
 7765 09a6 07F56173 		add	r3, r7, #900
 7766 09aa 0122     		movs	r2, #1
 7767 09ac 1A76     		strb	r2, [r3, #24]
 7768 09ae 07F56173 		add	r3, r7, #900
 7769 09b2 0122     		movs	r2, #1
 7770 09b4 5A76     		strb	r2, [r3, #25]
 7771 09b6 07F56173 		add	r3, r7, #900
 7772 09ba 0122     		movs	r2, #1
 7773 09bc 9A76     		strb	r2, [r3, #26]
 7774 09be 07F56173 		add	r3, r7, #900
 7775 09c2 0122     		movs	r2, #1
 7776 09c4 DA76     		strb	r2, [r3, #27]
 7777 09c6 07F56173 		add	r3, r7, #900
 7778 09ca 0122     		movs	r2, #1
 7779 09cc 1A77     		strb	r2, [r3, #28]
 7780 09ce 07F56173 		add	r3, r7, #900
 7781 09d2 0122     		movs	r2, #1
 7782 09d4 5A77     		strb	r2, [r3, #29]
 7783 09d6 07F56173 		add	r3, r7, #900
 7784 09da 0122     		movs	r2, #1
 7785 09dc 9A77     		strb	r2, [r3, #30]
 7786 09de 07F56173 		add	r3, r7, #900
 7787 09e2 0122     		movs	r2, #1
 7788 09e4 DA77     		strb	r2, [r3, #31]
 7789 09e6 07F56173 		add	r3, r7, #900
 7790 09ea 0622     		movs	r2, #6
 7791 09ec 83F82020 		strb	r2, [r3, #32]
 7792 09f0 07F56173 		add	r3, r7, #900
 7793 09f4 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 184


 7794 09f6 83F82120 		strb	r2, [r3, #33]
 7795 09fa 07F56173 		add	r3, r7, #900
 7796 09fe 0522     		movs	r2, #5
 7797 0a00 83F82220 		strb	r2, [r3, #34]
 7798 0a04 07F56173 		add	r3, r7, #900
 7799 0a08 0122     		movs	r2, #1
 7800 0a0a 83F82320 		strb	r2, [r3, #35]
 7801 0a0e 07F56173 		add	r3, r7, #900
 7802 0a12 0622     		movs	r2, #6
 7803 0a14 83F82420 		strb	r2, [r3, #36]
 7804 0a18 07F56173 		add	r3, r7, #900
 7805 0a1c 0122     		movs	r2, #1
 7806 0a1e 83F82520 		strb	r2, [r3, #37]
 7807 0a22 07F56173 		add	r3, r7, #900
 7808 0a26 0122     		movs	r2, #1
 7809 0a28 83F82620 		strb	r2, [r3, #38]
 7810 0a2c 07F56173 		add	r3, r7, #900
 7811 0a30 0122     		movs	r2, #1
 7812 0a32 83F82720 		strb	r2, [r3, #39]
 7813 0a36 07F56173 		add	r3, r7, #900
 7814 0a3a 0122     		movs	r2, #1
 7815 0a3c 83F82820 		strb	r2, [r3, #40]
 7816 0a40 07F56173 		add	r3, r7, #900
 7817 0a44 0322     		movs	r2, #3
 7818 0a46 83F82920 		strb	r2, [r3, #41]
 7819 0a4a 07F56173 		add	r3, r7, #900
 7820 0a4e 0322     		movs	r2, #3
 7821 0a50 83F82A20 		strb	r2, [r3, #42]
 7822 0a54 07F56173 		add	r3, r7, #900
 7823 0a58 0122     		movs	r2, #1
 7824 0a5a 83F82B20 		strb	r2, [r3, #43]
 7825 0a5e 07F56173 		add	r3, r7, #900
 7826 0a62 0322     		movs	r2, #3
 7827 0a64 83F82C20 		strb	r2, [r3, #44]
 7828 0a68 07F56173 		add	r3, r7, #900
 7829 0a6c 0322     		movs	r2, #3
 7830 0a6e 83F82D20 		strb	r2, [r3, #45]
 7831 0a72 07F56173 		add	r3, r7, #900
 7832 0a76 0122     		movs	r2, #1
 7833 0a78 83F82E20 		strb	r2, [r3, #46]
 7834 0a7c 07F56173 		add	r3, r7, #900
 7835 0a80 0122     		movs	r2, #1
 7836 0a82 83F82F20 		strb	r2, [r3, #47]
 7837 0a86 07F56173 		add	r3, r7, #900
 7838 0a8a 0122     		movs	r2, #1
 7839 0a8c 83F83020 		strb	r2, [r3, #48]
 7840 0a90 07F56173 		add	r3, r7, #900
 7841 0a94 0322     		movs	r2, #3
 7842 0a96 83F83120 		strb	r2, [r3, #49]
 7843 0a9a 07F56173 		add	r3, r7, #900
 7844 0a9e 0322     		movs	r2, #3
 7845 0aa0 83F83220 		strb	r2, [r3, #50]
 7846 0aa4 07F56173 		add	r3, r7, #900
 7847 0aa8 0322     		movs	r2, #3
 7848 0aaa 83F83320 		strb	r2, [r3, #51]
 7849 0aae 07F56173 		add	r3, r7, #900
 7850 0ab2 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 185


 7851 0ab4 83F83420 		strb	r2, [r3, #52]
 7852 0ab8 07F56173 		add	r3, r7, #900
 7853 0abc 0222     		movs	r2, #2
 7854 0abe 83F83520 		strb	r2, [r3, #53]
 7855 0ac2 07F56173 		add	r3, r7, #900
 7856 0ac6 0222     		movs	r2, #2
 7857 0ac8 83F83620 		strb	r2, [r3, #54]
 7858 0acc 07F56173 		add	r3, r7, #900
 7859 0ad0 0122     		movs	r2, #1
 7860 0ad2 83F83720 		strb	r2, [r3, #55]
 7861 0ad6 07F56173 		add	r3, r7, #900
 7862 0ada 0122     		movs	r2, #1
 7863 0adc 83F83820 		strb	r2, [r3, #56]
 7864 0ae0 07F56173 		add	r3, r7, #900
 7865 0ae4 0122     		movs	r2, #1
 7866 0ae6 83F83920 		strb	r2, [r3, #57]
 7867 0aea 07F56173 		add	r3, r7, #900
 7868 0aee 0122     		movs	r2, #1
 7869 0af0 83F83A20 		strb	r2, [r3, #58]
 7870 0af4 07F56173 		add	r3, r7, #900
 7871 0af8 0122     		movs	r2, #1
 7872 0afa 83F83B20 		strb	r2, [r3, #59]
 7873 0afe 07F56173 		add	r3, r7, #900
 7874 0b02 0622     		movs	r2, #6
 7875 0b04 83F83C20 		strb	r2, [r3, #60]
 7876 0b08 07F56173 		add	r3, r7, #900
 7877 0b0c 0122     		movs	r2, #1
 7878 0b0e 83F83D20 		strb	r2, [r3, #61]
 7879 0b12 07F56173 		add	r3, r7, #900
 7880 0b16 0122     		movs	r2, #1
 7881 0b18 83F83E20 		strb	r2, [r3, #62]
 7882 0b1c 07F56173 		add	r3, r7, #900
 7883 0b20 0122     		movs	r2, #1
 7884 0b22 83F83F20 		strb	r2, [r3, #63]
 7885 0b26 07F56173 		add	r3, r7, #900
 7886 0b2a 0122     		movs	r2, #1
 7887 0b2c 83F84020 		strb	r2, [r3, #64]
 7888 0b30 07F56173 		add	r3, r7, #900
 7889 0b34 0322     		movs	r2, #3
 7890 0b36 83F84120 		strb	r2, [r3, #65]
 7891 0b3a 07F56173 		add	r3, r7, #900
 7892 0b3e 0322     		movs	r2, #3
 7893 0b40 83F84220 		strb	r2, [r3, #66]
1040:..\src/command_processing.c ****         1, 3, 3, 1, 
1041:..\src/command_processing.c ****         1, 1, 3, 3,
1042:..\src/command_processing.c ****         3, 1, 2, 2, 
1043:..\src/command_processing.c ****         1, 2, 1, 2,
1044:..\src/command_processing.c ****         2, 1, 1, 1, 1, 
1045:..\src/command_processing.c ****         6, 3, 1, 1,
1046:..\src/command_processing.c ****         1, 1, 1, 1, 
1047:..\src/command_processing.c ****         1, 1, 1, 6,
1048:..\src/command_processing.c ****         1, 5, 1, 6,
1049:..\src/command_processing.c ****         
1050:..\src/command_processing.c ****         // GENERIC PARAMS
1051:..\src/command_processing.c ****         1, 1, 1, 1,
1052:..\src/command_processing.c ****         3, 3, 1, 3,
1053:..\src/command_processing.c ****         3, 1, 1, 1,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 186


1054:..\src/command_processing.c ****         3, 3, 3, 1,
1055:..\src/command_processing.c ****         2, 2, 1, 1,
1056:..\src/command_processing.c ****         1, 1, 1, 6, 1,
1057:..\src/command_processing.c ****         1, 1, 1, 3, 
1058:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7894              		.loc 1 1058 0
 7895 0b44 5C4B     		ldr	r3, .L376+4
 7896 0b46 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1039:..\src/command_processing.c ****         1, 3, 3, 1, 
 7897              		.loc 1 1039 0
 7898 0b48 07F56173 		add	r3, r7, #900
 7899 0b4c 83F84320 		strb	r2, [r3, #67]
 7900              		.loc 1 1058 0
 7901 0b50 594B     		ldr	r3, .L376+4
 7902 0b52 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1039:..\src/command_processing.c ****         1, 3, 3, 1, 
 7903              		.loc 1 1039 0
 7904 0b54 07F56173 		add	r3, r7, #900
 7905 0b58 83F84420 		strb	r2, [r3, #68]
 7906 0b5c 07F56173 		add	r3, r7, #900
 7907 0b60 0122     		movs	r2, #1
 7908 0b62 83F84520 		strb	r2, [r3, #69]
 7909 0b66 07F56173 		add	r3, r7, #900
 7910 0b6a 0622     		movs	r2, #6
 7911 0b6c 83F84620 		strb	r2, [r3, #70]
 7912 0b70 07F56173 		add	r3, r7, #900
 7913 0b74 0622     		movs	r2, #6
 7914 0b76 83F84720 		strb	r2, [r3, #71]
 7915 0b7a 07F56173 		add	r3, r7, #900
 7916 0b7e 0122     		movs	r2, #1
 7917 0b80 83F84820 		strb	r2, [r3, #72]
 7918 0b84 07F56173 		add	r3, r7, #900
 7919 0b88 0122     		movs	r2, #1
 7920 0b8a 83F84920 		strb	r2, [r3, #73]
 7921 0b8e 07F56173 		add	r3, r7, #900
 7922 0b92 0122     		movs	r2, #1
 7923 0b94 83F84A20 		strb	r2, [r3, #74]
 7924 0b98 07F56173 		add	r3, r7, #900
 7925 0b9c 0222     		movs	r2, #2
 7926 0b9e 83F84B20 		strb	r2, [r3, #75]
 7927 0ba2 07F56173 		add	r3, r7, #900
 7928 0ba6 0122     		movs	r2, #1
 7929 0ba8 83F84C20 		strb	r2, [r3, #76]
 7930 0bac 07F56173 		add	r3, r7, #900
 7931 0bb0 0122     		movs	r2, #1
 7932 0bb2 83F84D20 		strb	r2, [r3, #77]
 7933 0bb6 07F56173 		add	r3, r7, #900
 7934 0bba 0222     		movs	r2, #2
 7935 0bbc 83F84E20 		strb	r2, [r3, #78]
 7936 0bc0 07F56173 		add	r3, r7, #900
 7937 0bc4 0122     		movs	r2, #1
 7938 0bc6 83F84F20 		strb	r2, [r3, #79]
 7939 0bca 07F56173 		add	r3, r7, #900
 7940 0bce 0122     		movs	r2, #1
 7941 0bd0 83F85020 		strb	r2, [r3, #80]
 7942 0bd4 07F56173 		add	r3, r7, #900
 7943 0bd8 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 187


 7944 0bda 83F85120 		strb	r2, [r3, #81]
 7945 0bde 07F56173 		add	r3, r7, #900
 7946 0be2 0122     		movs	r2, #1
 7947 0be4 83F85220 		strb	r2, [r3, #82]
 7948 0be8 07F56173 		add	r3, r7, #900
 7949 0bec 0122     		movs	r2, #1
 7950 0bee 83F85320 		strb	r2, [r3, #83]
 7951 0bf2 07F56173 		add	r3, r7, #900
 7952 0bf6 0122     		movs	r2, #1
 7953 0bf8 83F85420 		strb	r2, [r3, #84]
1059:..\src/command_processing.c ****         6, 6, 1, 1,
1060:..\src/command_processing.c ****         1, 2, 1, 1,
1061:..\src/command_processing.c ****         2,
1062:..\src/command_processing.c ****         
1063:..\src/command_processing.c ****            1, 1, 1, 
1064:..\src/command_processing.c ****         1, 1, 1
1065:..\src/command_processing.c ****     };
1066:..\src/command_processing.c ****     
1067:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 7954              		.loc 1 1067 0
 7955 0bfc 07F54B73 		add	r3, r7, #812
 7956 0c00 0022     		movs	r2, #0
 7957 0c02 1A70     		strb	r2, [r3]
 7958 0c04 97F89D35 		ldrb	r3, [r7, #1437]
 7959 0c08 0A33     		adds	r3, r3, #10
 7960 0c0a DAB2     		uxtb	r2, r3
 7961 0c0c 07F54B73 		add	r3, r7, #812
 7962 0c10 5A70     		strb	r2, [r3, #1]
 7963 0c12 97F89D35 		ldrb	r3, [r7, #1437]
 7964 0c16 0A33     		adds	r3, r3, #10
 7965 0c18 DAB2     		uxtb	r2, r3
 7966 0c1a 07F54B73 		add	r3, r7, #812
 7967 0c1e 9A70     		strb	r2, [r3, #2]
 7968 0c20 97F89D35 		ldrb	r3, [r7, #1437]
 7969 0c24 0A33     		adds	r3, r3, #10
 7970 0c26 DAB2     		uxtb	r2, r3
 7971 0c28 07F54B73 		add	r3, r7, #812
 7972 0c2c DA70     		strb	r2, [r3, #3]
 7973 0c2e 97F89D35 		ldrb	r3, [r7, #1437]
 7974 0c32 0A33     		adds	r3, r3, #10
 7975 0c34 DAB2     		uxtb	r2, r3
 7976 0c36 07F54B73 		add	r3, r7, #812
 7977 0c3a 1A71     		strb	r2, [r3, #4]
 7978 0c3c 97F89D35 		ldrb	r3, [r7, #1437]
 7979 0c40 0A33     		adds	r3, r3, #10
 7980 0c42 DAB2     		uxtb	r2, r3
 7981 0c44 07F54B73 		add	r3, r7, #812
 7982 0c48 5A71     		strb	r2, [r3, #5]
1068:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1069:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 7983              		.loc 1 1069 0
 7984 0c4a 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7985 0c4e D7F8A025 		ldr	r2, [r7, #1440]
 7986 0c52 7421     		movs	r1, #116
 7987 0c54 01FB03F3 		mul	r3, r1, r3
 7988 0c58 1344     		add	r3, r3, r2
 7989 0c5a 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 188


 7990 0c5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7991              		.loc 1 1067 0
 7992 0c60 1433     		adds	r3, r3, #20
 7993 0c62 DAB2     		uxtb	r2, r3
 7994 0c64 07F54B73 		add	r3, r7, #812
 7995 0c68 9A71     		strb	r2, [r3, #6]
 7996              		.loc 1 1069 0
 7997 0c6a 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 7998 0c6e D7F8A025 		ldr	r2, [r7, #1440]
 7999 0c72 7421     		movs	r1, #116
 8000 0c74 01FB03F3 		mul	r3, r1, r3
 8001 0c78 1344     		add	r3, r3, r2
 8002 0c7a 03F58873 		add	r3, r3, #272
 8003 0c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8004              		.loc 1 1067 0
 8005 0c80 1433     		adds	r3, r3, #20
 8006 0c82 DAB2     		uxtb	r2, r3
 8007 0c84 07F54B73 		add	r3, r7, #812
 8008 0c88 DA71     		strb	r2, [r3, #7]
1070:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8009              		.loc 1 1070 0
 8010 0c8a 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 8011 0c8e D7F8A025 		ldr	r2, [r7, #1440]
 8012 0c92 7421     		movs	r1, #116
 8013 0c94 01FB03F3 		mul	r3, r1, r3
 8014 0c98 1344     		add	r3, r3, r2
 8015 0c9a 03F58873 		add	r3, r3, #272
 8016 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8017              		.loc 1 1067 0
 8018 0ca0 1433     		adds	r3, r3, #20
 8019 0ca2 DAB2     		uxtb	r2, r3
 8020 0ca4 07F54B73 		add	r3, r7, #812
 8021 0ca8 1A72     		strb	r2, [r3, #8]
 8022 0caa 97F89D35 		ldrb	r3, [r7, #1437]
 8023 0cae 0A33     		adds	r3, r3, #10
 8024 0cb0 04E0     		b	.L377
 8025              	.L378:
 8026 0cb2 00BF     		.align	2
 8027              	.L376:
 8028 0cb4 4C060000 		.word	.LC0
 8029 0cb8 00000000 		.word	N_Encoder_Line_Connected
 8030              	.L377:
 8031 0cbc DAB2     		uxtb	r2, r3
 8032 0cbe 07F54B73 		add	r3, r7, #812
 8033 0cc2 5A72     		strb	r2, [r3, #9]
 8034 0cc4 97F89D35 		ldrb	r3, [r7, #1437]
 8035 0cc8 0A33     		adds	r3, r3, #10
 8036 0cca DAB2     		uxtb	r2, r3
 8037 0ccc 07F54B73 		add	r3, r7, #812
 8038 0cd0 9A72     		strb	r2, [r3, #10]
 8039 0cd2 97F89D35 		ldrb	r3, [r7, #1437]
 8040 0cd6 0A33     		adds	r3, r3, #10
 8041 0cd8 DAB2     		uxtb	r2, r3
 8042 0cda 07F54B73 		add	r3, r7, #812
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 189


 8043 0cde DA72     		strb	r2, [r3, #11]
 8044 0ce0 97F89D35 		ldrb	r3, [r7, #1437]
 8045 0ce4 0A33     		adds	r3, r3, #10
 8046 0ce6 DAB2     		uxtb	r2, r3
 8047 0ce8 07F54B73 		add	r3, r7, #812
 8048 0cec 1A73     		strb	r2, [r3, #12]
 8049 0cee 07F54B73 		add	r3, r7, #812
 8050 0cf2 1E22     		movs	r2, #30
 8051 0cf4 5A73     		strb	r2, [r3, #13]
 8052 0cf6 07F54B73 		add	r3, r7, #812
 8053 0cfa 1E22     		movs	r2, #30
 8054 0cfc 9A73     		strb	r2, [r3, #14]
 8055 0cfe 07F54B73 		add	r3, r7, #812
 8056 0d02 1E22     		movs	r2, #30
 8057 0d04 DA73     		strb	r2, [r3, #15]
 8058 0d06 07F54B73 		add	r3, r7, #812
 8059 0d0a 1E22     		movs	r2, #30
 8060 0d0c 1A74     		strb	r2, [r3, #16]
1071:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1072:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8061              		.loc 1 1072 0
 8062 0d0e 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 8063 0d12 D7F8A025 		ldr	r2, [r7, #1440]
 8064 0d16 7421     		movs	r1, #116
 8065 0d18 01FB03F3 		mul	r3, r1, r3
 8066 0d1c 1344     		add	r3, r3, r2
 8067 0d1e 03F58873 		add	r3, r3, #272
 8068 0d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8069              		.loc 1 1067 0
 8070 0d24 1433     		adds	r3, r3, #20
 8071 0d26 DAB2     		uxtb	r2, r3
 8072 0d28 07F54B73 		add	r3, r7, #812
 8073 0d2c 5A74     		strb	r2, [r3, #17]
 8074              		.loc 1 1072 0
 8075 0d2e 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 8076 0d32 D7F8A025 		ldr	r2, [r7, #1440]
 8077 0d36 7421     		movs	r1, #116
 8078 0d38 01FB03F3 		mul	r3, r1, r3
 8079 0d3c 1344     		add	r3, r3, r2
 8080 0d3e 03F58873 		add	r3, r3, #272
 8081 0d42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8082              		.loc 1 1067 0
 8083 0d44 1433     		adds	r3, r3, #20
 8084 0d46 DAB2     		uxtb	r2, r3
 8085 0d48 07F54B73 		add	r3, r7, #812
 8086 0d4c 9A74     		strb	r2, [r3, #18]
 8087 0d4e 97F89D35 		ldrb	r3, [r7, #1437]
 8088 0d52 0A33     		adds	r3, r3, #10
 8089 0d54 DAB2     		uxtb	r2, r3
 8090 0d56 07F54B73 		add	r3, r7, #812
 8091 0d5a DA74     		strb	r2, [r3, #19]
 8092 0d5c 97F89D35 		ldrb	r3, [r7, #1437]
 8093 0d60 0A33     		adds	r3, r3, #10
 8094 0d62 DAB2     		uxtb	r2, r3
 8095 0d64 07F54B73 		add	r3, r7, #812
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 190


 8096 0d68 1A75     		strb	r2, [r3, #20]
 8097 0d6a 97F89D35 		ldrb	r3, [r7, #1437]
 8098 0d6e 0A33     		adds	r3, r3, #10
 8099 0d70 DAB2     		uxtb	r2, r3
 8100 0d72 07F54B73 		add	r3, r7, #812
 8101 0d76 5A75     		strb	r2, [r3, #21]
 8102 0d78 07F54B73 		add	r3, r7, #812
 8103 0d7c 0022     		movs	r2, #0
 8104 0d7e 9A75     		strb	r2, [r3, #22]
 8105 0d80 07F54B73 		add	r3, r7, #812
 8106 0d84 4622     		movs	r2, #70
 8107 0d86 DA75     		strb	r2, [r3, #23]
 8108 0d88 07F54B73 		add	r3, r7, #812
 8109 0d8c 4622     		movs	r2, #70
 8110 0d8e 1A76     		strb	r2, [r3, #24]
 8111 0d90 07F54B73 		add	r3, r7, #812
 8112 0d94 4622     		movs	r2, #70
 8113 0d96 5A76     		strb	r2, [r3, #25]
 8114 0d98 07F54B73 		add	r3, r7, #812
 8115 0d9c 4622     		movs	r2, #70
 8116 0d9e 9A76     		strb	r2, [r3, #26]
 8117 0da0 07F54B73 		add	r3, r7, #812
 8118 0da4 1E22     		movs	r2, #30
 8119 0da6 DA76     		strb	r2, [r3, #27]
 8120 0da8 07F54B73 		add	r3, r7, #812
 8121 0dac 0022     		movs	r2, #0
 8122 0dae 1A77     		strb	r2, [r3, #28]
 8123 0db0 07F54B73 		add	r3, r7, #812
 8124 0db4 2822     		movs	r2, #40
 8125 0db6 5A77     		strb	r2, [r3, #29]
 8126 0db8 07F54B73 		add	r3, r7, #812
 8127 0dbc 3222     		movs	r2, #50
 8128 0dbe 9A77     		strb	r2, [r3, #30]
 8129 0dc0 07F54B73 		add	r3, r7, #812
 8130 0dc4 0022     		movs	r2, #0
 8131 0dc6 DA77     		strb	r2, [r3, #31]
 8132 0dc8 07F54B73 		add	r3, r7, #812
 8133 0dcc 3222     		movs	r2, #50
 8134 0dce 83F82020 		strb	r2, [r3, #32]
 8135 0dd2 07F54B73 		add	r3, r7, #812
 8136 0dd6 2822     		movs	r2, #40
 8137 0dd8 83F82120 		strb	r2, [r3, #33]
 8138 0ddc 07F54B73 		add	r3, r7, #812
 8139 0de0 2822     		movs	r2, #40
 8140 0de2 83F82220 		strb	r2, [r3, #34]
 8141 0de6 07F54B73 		add	r3, r7, #812
 8142 0dea 0022     		movs	r2, #0
 8143 0dec 83F82320 		strb	r2, [r3, #35]
1073:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1074:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1075:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1076:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8144              		.loc 1 1076 0
 8145 0df0 D7F8A035 		ldr	r3, [r7, #1440]
 8146 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8147              		.loc 1 1067 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 191


 8148 0df8 3C33     		adds	r3, r3, #60
 8149 0dfa DAB2     		uxtb	r2, r3
 8150 0dfc 07F54B73 		add	r3, r7, #812
 8151 0e00 83F82420 		strb	r2, [r3, #36]
 8152 0e04 97F89D35 		ldrb	r3, [r7, #1437]
 8153 0e08 0A33     		adds	r3, r3, #10
 8154 0e0a DAB2     		uxtb	r2, r3
 8155 0e0c 07F54B73 		add	r3, r7, #812
 8156 0e10 83F82520 		strb	r2, [r3, #37]
 8157 0e14 97F89D35 		ldrb	r3, [r7, #1437]
 8158 0e18 0A33     		adds	r3, r3, #10
 8159 0e1a DAB2     		uxtb	r2, r3
 8160 0e1c 07F54B73 		add	r3, r7, #812
 8161 0e20 83F82620 		strb	r2, [r3, #38]
 8162 0e24 97F89D35 		ldrb	r3, [r7, #1437]
 8163 0e28 0A33     		adds	r3, r3, #10
 8164 0e2a DAB2     		uxtb	r2, r3
 8165 0e2c 07F54B73 		add	r3, r7, #812
 8166 0e30 83F82720 		strb	r2, [r3, #39]
 8167 0e34 97F89D35 		ldrb	r3, [r7, #1437]
 8168 0e38 0A33     		adds	r3, r3, #10
 8169 0e3a DAB2     		uxtb	r2, r3
 8170 0e3c 07F54B73 		add	r3, r7, #812
 8171 0e40 83F82820 		strb	r2, [r3, #40]
1077:..\src/command_processing.c ****         
1078:..\src/command_processing.c ****         // GENERIC PARAMS
1079:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1080:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8172              		.loc 1 1080 0
 8173 0e44 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 8174 0e48 D7F8A025 		ldr	r2, [r7, #1440]
 8175 0e4c 7421     		movs	r1, #116
 8176 0e4e 01FB03F3 		mul	r3, r1, r3
 8177 0e52 1344     		add	r3, r3, r2
 8178 0e54 03F58873 		add	r3, r3, #272
 8179 0e58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8180              		.loc 1 1067 0
 8181 0e5a 1433     		adds	r3, r3, #20
 8182 0e5c DAB2     		uxtb	r2, r3
 8183 0e5e 07F54B73 		add	r3, r7, #812
 8184 0e62 83F82920 		strb	r2, [r3, #41]
 8185              		.loc 1 1080 0
 8186 0e66 97F89D35 		ldrb	r3, [r7, #1437]	@ zero_extendqisi2
 8187 0e6a D7F8A025 		ldr	r2, [r7, #1440]
 8188 0e6e 7421     		movs	r1, #116
 8189 0e70 01FB03F3 		mul	r3, r1, r3
 8190 0e74 1344     		add	r3, r3, r2
 8191 0e76 03F58873 		add	r3, r3, #272
 8192 0e7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8193              		.loc 1 1067 0
 8194 0e7c 1433     		adds	r3, r3, #20
 8195 0e7e DAB2     		uxtb	r2, r3
 8196 0e80 07F54B73 		add	r3, r7, #812
 8197 0e84 83F82A20 		strb	r2, [r3, #42]
 8198 0e88 07F54B73 		add	r3, r7, #812
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 192


 8199 0e8c 0022     		movs	r2, #0
 8200 0e8e 83F82B20 		strb	r2, [r3, #43]
 8201 0e92 97F89C35 		ldrb	r3, [r7, #1436]
 8202 0e96 0A33     		adds	r3, r3, #10
 8203 0e98 DAB2     		uxtb	r2, r3
 8204 0e9a 07F54B73 		add	r3, r7, #812
 8205 0e9e 83F82C20 		strb	r2, [r3, #44]
 8206 0ea2 97F89C35 		ldrb	r3, [r7, #1436]
 8207 0ea6 0A33     		adds	r3, r3, #10
 8208 0ea8 DAB2     		uxtb	r2, r3
 8209 0eaa 07F54B73 		add	r3, r7, #812
 8210 0eae 83F82D20 		strb	r2, [r3, #45]
 8211 0eb2 97F89C35 		ldrb	r3, [r7, #1436]
 8212 0eb6 0A33     		adds	r3, r3, #10
 8213 0eb8 DAB2     		uxtb	r2, r3
 8214 0eba 07F54B73 		add	r3, r7, #812
 8215 0ebe 83F82E20 		strb	r2, [r3, #46]
 8216 0ec2 97F89C35 		ldrb	r3, [r7, #1436]
 8217 0ec6 0A33     		adds	r3, r3, #10
 8218 0ec8 DAB2     		uxtb	r2, r3
 8219 0eca 07F54B73 		add	r3, r7, #812
 8220 0ece 83F82F20 		strb	r2, [r3, #47]
 8221 0ed2 97F89C35 		ldrb	r3, [r7, #1436]
 8222 0ed6 0A33     		adds	r3, r3, #10
 8223 0ed8 DAB2     		uxtb	r2, r3
 8224 0eda 07F54B73 		add	r3, r7, #812
 8225 0ede 83F83020 		strb	r2, [r3, #48]
1081:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1082:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8226              		.loc 1 1082 0
 8227 0ee2 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 8228 0ee6 D7F8A025 		ldr	r2, [r7, #1440]
 8229 0eea 7421     		movs	r1, #116
 8230 0eec 01FB03F3 		mul	r3, r1, r3
 8231 0ef0 1344     		add	r3, r3, r2
 8232 0ef2 03F58873 		add	r3, r3, #272
 8233 0ef6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8234              		.loc 1 1067 0
 8235 0ef8 1433     		adds	r3, r3, #20
 8236 0efa DAB2     		uxtb	r2, r3
 8237 0efc 07F54B73 		add	r3, r7, #812
 8238 0f00 83F83120 		strb	r2, [r3, #49]
 8239              		.loc 1 1082 0
 8240 0f04 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 8241 0f08 D7F8A025 		ldr	r2, [r7, #1440]
 8242 0f0c 7421     		movs	r1, #116
 8243 0f0e 01FB03F3 		mul	r3, r1, r3
 8244 0f12 1344     		add	r3, r3, r2
 8245 0f14 03F58873 		add	r3, r3, #272
 8246 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8247              		.loc 1 1067 0
 8248 0f1a 1433     		adds	r3, r3, #20
 8249 0f1c DAB2     		uxtb	r2, r3
 8250 0f1e 07F54B73 		add	r3, r7, #812
 8251 0f22 83F83220 		strb	r2, [r3, #50]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 193


 8252              		.loc 1 1082 0
 8253 0f26 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 8254 0f2a D7F8A025 		ldr	r2, [r7, #1440]
 8255 0f2e 7421     		movs	r1, #116
 8256 0f30 01FB03F3 		mul	r3, r1, r3
 8257 0f34 1344     		add	r3, r3, r2
 8258 0f36 03F58873 		add	r3, r3, #272
 8259 0f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8260              		.loc 1 1067 0
 8261 0f3c 1433     		adds	r3, r3, #20
 8262 0f3e DAB2     		uxtb	r2, r3
 8263 0f40 07F54B73 		add	r3, r7, #812
 8264 0f44 83F83320 		strb	r2, [r3, #51]
 8265 0f48 97F89C35 		ldrb	r3, [r7, #1436]
 8266 0f4c 0A33     		adds	r3, r3, #10
 8267 0f4e DAB2     		uxtb	r2, r3
 8268 0f50 07F54B73 		add	r3, r7, #812
 8269 0f54 83F83420 		strb	r2, [r3, #52]
 8270 0f58 97F89C35 		ldrb	r3, [r7, #1436]
 8271 0f5c 0A33     		adds	r3, r3, #10
 8272 0f5e DAB2     		uxtb	r2, r3
 8273 0f60 07F54B73 		add	r3, r7, #812
 8274 0f64 83F83520 		strb	r2, [r3, #53]
 8275 0f68 97F89C35 		ldrb	r3, [r7, #1436]
 8276 0f6c 0A33     		adds	r3, r3, #10
 8277 0f6e DAB2     		uxtb	r2, r3
 8278 0f70 07F54B73 		add	r3, r7, #812
 8279 0f74 83F83620 		strb	r2, [r3, #54]
 8280 0f78 97F89C35 		ldrb	r3, [r7, #1436]
 8281 0f7c 0A33     		adds	r3, r3, #10
 8282 0f7e DAB2     		uxtb	r2, r3
 8283 0f80 07F54B73 		add	r3, r7, #812
 8284 0f84 83F83720 		strb	r2, [r3, #55]
1083:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8285              		.loc 1 1083 0
 8286 0f88 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 8287 0f8c D7F8A025 		ldr	r2, [r7, #1440]
 8288 0f90 7421     		movs	r1, #116
 8289 0f92 01FB03F3 		mul	r3, r1, r3
 8290 0f96 1344     		add	r3, r3, r2
 8291 0f98 03F58873 		add	r3, r3, #272
 8292 0f9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8293              		.loc 1 1067 0
 8294 0f9e 1433     		adds	r3, r3, #20
 8295 0fa0 DAB2     		uxtb	r2, r3
 8296 0fa2 07F54B73 		add	r3, r7, #812
 8297 0fa6 83F83820 		strb	r2, [r3, #56]
1084:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8298              		.loc 1 1084 0
 8299 0faa 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 8300 0fae D7F8A025 		ldr	r2, [r7, #1440]
 8301 0fb2 7421     		movs	r1, #116
 8302 0fb4 01FB03F3 		mul	r3, r1, r3
 8303 0fb8 1344     		add	r3, r3, r2
 8304 0fba 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 194


 8305 0fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8306              		.loc 1 1067 0
 8307 0fc0 1433     		adds	r3, r3, #20
 8308 0fc2 DAB2     		uxtb	r2, r3
 8309 0fc4 07F54B73 		add	r3, r7, #812
 8310 0fc8 83F83920 		strb	r2, [r3, #57]
 8311 0fcc 97F89C35 		ldrb	r3, [r7, #1436]
 8312 0fd0 0A33     		adds	r3, r3, #10
 8313 0fd2 DAB2     		uxtb	r2, r3
 8314 0fd4 07F54B73 		add	r3, r7, #812
 8315 0fd8 83F83A20 		strb	r2, [r3, #58]
 8316 0fdc 97F89C35 		ldrb	r3, [r7, #1436]
 8317 0fe0 0A33     		adds	r3, r3, #10
 8318 0fe2 DAB2     		uxtb	r2, r3
 8319 0fe4 07F54B73 		add	r3, r7, #812
 8320 0fe8 83F83B20 		strb	r2, [r3, #59]
 8321 0fec 97F89C35 		ldrb	r3, [r7, #1436]
 8322 0ff0 0A33     		adds	r3, r3, #10
 8323 0ff2 DAB2     		uxtb	r2, r3
 8324 0ff4 07F54B73 		add	r3, r7, #812
 8325 0ff8 83F83C20 		strb	r2, [r3, #60]
 8326 0ffc 97F89C35 		ldrb	r3, [r7, #1436]
 8327 1000 0A33     		adds	r3, r3, #10
 8328 1002 DAB2     		uxtb	r2, r3
 8329 1004 07F54B73 		add	r3, r7, #812
 8330 1008 83F83D20 		strb	r2, [r3, #61]
 8331 100c 97F89C35 		ldrb	r3, [r7, #1436]
 8332 1010 0A33     		adds	r3, r3, #10
 8333 1012 DAB2     		uxtb	r2, r3
 8334 1014 07F54B73 		add	r3, r7, #812
 8335 1018 83F83E20 		strb	r2, [r3, #62]
 8336 101c 97F89C35 		ldrb	r3, [r7, #1436]
 8337 1020 0A33     		adds	r3, r3, #10
 8338 1022 DAB2     		uxtb	r2, r3
 8339 1024 07F54B73 		add	r3, r7, #812
 8340 1028 83F83F20 		strb	r2, [r3, #63]
 8341 102c 97F89C35 		ldrb	r3, [r7, #1436]
 8342 1030 0A33     		adds	r3, r3, #10
 8343 1032 DAB2     		uxtb	r2, r3
 8344 1034 07F54B73 		add	r3, r7, #812
 8345 1038 83F84020 		strb	r2, [r3, #64]
1085:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8346              		.loc 1 1085 0
 8347 103c 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 8348 1040 D7F8A025 		ldr	r2, [r7, #1440]
 8349 1044 7421     		movs	r1, #116
 8350 1046 01FB03F3 		mul	r3, r1, r3
 8351 104a 1344     		add	r3, r3, r2
 8352 104c 03F58873 		add	r3, r3, #272
 8353 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8354              		.loc 1 1067 0
 8355 1052 1433     		adds	r3, r3, #20
 8356 1054 DAB2     		uxtb	r2, r3
 8357 1056 07F54B73 		add	r3, r7, #812
 8358 105a 83F84120 		strb	r2, [r3, #65]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 195


1086:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8359              		.loc 1 1086 0
 8360 105e 97F89C35 		ldrb	r3, [r7, #1436]	@ zero_extendqisi2
 8361 1062 D7F8A025 		ldr	r2, [r7, #1440]
 8362 1066 7421     		movs	r1, #116
 8363 1068 01FB03F3 		mul	r3, r1, r3
 8364 106c 1344     		add	r3, r3, r2
 8365 106e 03F58873 		add	r3, r3, #272
 8366 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1067:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8367              		.loc 1 1067 0
 8368 1074 1433     		adds	r3, r3, #20
 8369 1076 DAB2     		uxtb	r2, r3
 8370 1078 07F54B73 		add	r3, r7, #812
 8371 107c 83F84220 		strb	r2, [r3, #66]
 8372 1080 07F54B73 		add	r3, r7, #812
 8373 1084 1422     		movs	r2, #20
 8374 1086 83F84320 		strb	r2, [r3, #67]
 8375 108a 07F54B73 		add	r3, r7, #812
 8376 108e 1522     		movs	r2, #21
 8377 1090 83F84420 		strb	r2, [r3, #68]
 8378 1094 07F54B73 		add	r3, r7, #812
 8379 1098 3222     		movs	r2, #50
 8380 109a 83F84520 		strb	r2, [r3, #69]
 8381 109e 07F54B73 		add	r3, r7, #812
 8382 10a2 3222     		movs	r2, #50
 8383 10a4 83F84620 		strb	r2, [r3, #70]
 8384 10a8 07F54B73 		add	r3, r7, #812
 8385 10ac 3222     		movs	r2, #50
 8386 10ae 83F84720 		strb	r2, [r3, #71]
 8387 10b2 07F54B73 		add	r3, r7, #812
 8388 10b6 3222     		movs	r2, #50
 8389 10b8 83F84820 		strb	r2, [r3, #72]
 8390 10bc 07F54B73 		add	r3, r7, #812
 8391 10c0 6E22     		movs	r2, #110
 8392 10c2 83F84920 		strb	r2, [r3, #73]
 8393 10c6 07F54B73 		add	r3, r7, #812
 8394 10ca 6E22     		movs	r2, #110
 8395 10cc 83F84A20 		strb	r2, [r3, #74]
 8396 10d0 07F54B73 		add	r3, r7, #812
 8397 10d4 6E22     		movs	r2, #110
 8398 10d6 83F84B20 		strb	r2, [r3, #75]
 8399 10da 07F54B73 		add	r3, r7, #812
 8400 10de 0022     		movs	r2, #0
 8401 10e0 83F84C20 		strb	r2, [r3, #76]
 8402 10e4 07F54B73 		add	r3, r7, #812
 8403 10e8 6422     		movs	r2, #100
 8404 10ea 83F84D20 		strb	r2, [r3, #77]
 8405 10ee 07F54B73 		add	r3, r7, #812
 8406 10f2 6422     		movs	r2, #100
 8407 10f4 83F84E20 		strb	r2, [r3, #78]
 8408 10f8 07F54B73 		add	r3, r7, #812
 8409 10fc 6422     		movs	r2, #100
 8410 10fe 83F84F20 		strb	r2, [r3, #79]
 8411 1102 07F54B73 		add	r3, r7, #812
 8412 1106 5022     		movs	r2, #80
 8413 1108 83F85020 		strb	r2, [r3, #80]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 196


 8414 110c 07F54B73 		add	r3, r7, #812
 8415 1110 5022     		movs	r2, #80
 8416 1112 83F85120 		strb	r2, [r3, #81]
 8417 1116 07F54B73 		add	r3, r7, #812
 8418 111a 5A22     		movs	r2, #90
 8419 111c 83F85220 		strb	r2, [r3, #82]
 8420 1120 07F54B73 		add	r3, r7, #812
 8421 1124 5A22     		movs	r2, #90
 8422 1126 83F85320 		strb	r2, [r3, #83]
 8423 112a 07F54B73 		add	r3, r7, #812
 8424 112e 5A22     		movs	r2, #90
 8425 1130 83F85420 		strb	r2, [r3, #84]
1087:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1088:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1089:..\src/command_processing.c ****         ST_WR_SPEC,
1090:..\src/command_processing.c ****         
1091:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1092:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1093:..\src/command_processing.c ****         
1094:..\src/command_processing.c ****     };
1095:..\src/command_processing.c ****     
1096:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8426              		.loc 1 1096 0
 8427 1134 07F5EC73 		add	r3, r7, #472
 8428 1138 CC4A     		ldr	r2, .L379
 8429 113a 1846     		mov	r0, r3
 8430 113c 1146     		mov	r1, r2
 8431 113e 4FF4AA73 		mov	r3, #340
 8432 1142 1A46     		mov	r2, r3
 8433 1144 FFF7FEFF 		bl	memcpy
1097:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1098:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1099:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1100:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1101:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1102:..\src/command_processing.c ****         "22 - Current lookup:", "23 - Date of maintenance [D/M/Y]:", "24 - Rest position:", "25 - R
1103:..\src/command_processing.c ****         "26 - Rest vel closure (ticks/sec):", "27 - Rest position enabled:", "28 - EMG inversion:",
1104:..\src/command_processing.c ****         "30 - Enable IMUs:", "31 - Read Expansion port:", "32 - Reset counters:", "33 - Last checke
1105:..\src/command_processing.c ****         "34 - SPI read delay (IMU):", "35 - On board IMU conf. [a,g,m,q,t]:", "36 - User ID:", "37 
1106:..\src/command_processing.c ****         
1107:..\src/command_processing.c ****         // GENERIC PARAMS
1108:..\src/command_processing.c ****         "38 - Associated encoder line:", "39 - Driver type:", "40 - PWM rate limiter:", "41 - Not r
1109:..\src/command_processing.c ****         "42 - Enc idx used for control:", "43 - Gear params[N1, N2, I1]:", "44 - Use second motor:"
1110:..\src/command_processing.c ****         "46 - Current PID [P, I, D]:", "47 - Startup Activation:", "48 - Input mode:", "49 - Contro
1111:..\src/command_processing.c ****         "50 - Resolutions:", "51 - Measurement Offsets:", "52 - Multipliers:", "53 - Pos. limit act
1112:..\src/command_processing.c ****         "54 - Pos. limits [inf, sup]:", "55 - Max steps [neg, pos]:", "56 - Current limit:", "57 - 
1113:..\src/command_processing.c ****         "58 - Motor handle ratio:", "59 - PWM rescaling:", "60 - Motor 2 Voltage in mV:", "61 - Cur
1114:..\src/command_processing.c ****         "63 - Driver type:", "64 - PWM rate limiter:", "65 - Not reversible:", "66 - Enc idx used f
1115:..\src/command_processing.c ****         "67 - Gear params[N1, N2, I1]:", "68 - Read enc raw line 0:", "69 - Read enc raw line 1:", 
1116:..\src/command_processing.c ****         "71 - ADC channel [1-6]:", "72 - ADC channel [7-12]:", "73 - Record EMG on SD card:", "74 -
1117:..\src/command_processing.c ****         "75 - Joystick threshold:", "76 - Joystick gains:", "77 - Device type:", "78 - EMG FSM act.
1118:..\src/command_processing.c ****         "79 - Fast act.thresholds:",
1119:..\src/command_processing.c ****         
1120:..\src/command_processing.c ****                                      "80 - Wrist direction:", "81 - Slave communication active:", "
1121:..\src/command_processing.c ****         "83 - Maximum slave residual current:", "84 - Maximum pressure feedback (kPa):", "85 - Prop
1122:..\src/command_processing.c ****     };
1123:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 197


1124:..\src/command_processing.c ****     //Parameters menu
1125:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8434              		.loc 1 1125 0
 8435 1148 07F5B073 		add	r3, r7, #352
 8436 114c 0022     		movs	r2, #0
 8437 114e 1A60     		str	r2, [r3]
 8438 1150 0433     		adds	r3, r3, #4
 8439 1152 7222     		movs	r2, #114
 8440 1154 0021     		movs	r1, #0
 8441 1156 1846     		mov	r0, r3
 8442 1158 FFF7FEFF 		bl	memset
1126:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8443              		.loc 1 1126 0
 8444 115c 07F5B070 		add	r0, r7, #352
 8445 1160 6423     		movs	r3, #100
 8446 1162 0A22     		movs	r2, #10
 8447 1164 C249     		ldr	r1, .L379+4
 8448 1166 FFF7FEFF 		bl	sprintf
1127:..\src/command_processing.c **** 
1128:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8449              		.loc 1 1128 0
 8450 116a 07F59473 		add	r3, r7, #296
 8451 116e 0022     		movs	r2, #0
 8452 1170 1A60     		str	r2, [r3]
 8453 1172 0433     		adds	r3, r3, #4
 8454 1174 3422     		movs	r2, #52
 8455 1176 0021     		movs	r1, #0
 8456 1178 1846     		mov	r0, r3
 8457 117a FFF7FEFF 		bl	memset
1129:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8458              		.loc 1 1129 0
 8459 117e D7F8A035 		ldr	r3, [r7, #1440]
 8460 1182 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8461 1186 042B     		cmp	r3, #4
 8462 1188 10D1     		bne	.L311
1130:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8463              		.loc 1 1130 0
 8464 118a 07F59473 		add	r3, r7, #296
 8465 118e B94A     		ldr	r2, .L379+8
 8466 1190 1C46     		mov	r4, r3
 8467 1192 1546     		mov	r5, r2
 8468 1194 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8469 1196 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8470 1198 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8471 119a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8472 119c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8473 119e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8474 11a0 95E80300 		ldmia	r5, {r0, r1}
 8475 11a4 2060     		str	r0, [r4]
 8476 11a6 0434     		adds	r4, r4, #4
 8477 11a8 2170     		strb	r1, [r4]
 8478 11aa 0FE0     		b	.L312
 8479              	.L311:
1131:..\src/command_processing.c ****     }
1132:..\src/command_processing.c ****     else {
1133:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 8480              		.loc 1 1133 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 198


 8481 11ac 07F59473 		add	r3, r7, #296
 8482 11b0 B14A     		ldr	r2, .L379+12
 8483 11b2 1C46     		mov	r4, r3
 8484 11b4 1546     		mov	r5, r2
 8485 11b6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8486 11b8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8487 11ba 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8488 11bc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8489 11be 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8490 11c0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8491 11c2 95E80300 		ldmia	r5, {r0, r1}
 8492 11c6 2060     		str	r0, [r4]
 8493 11c8 0434     		adds	r4, r4, #4
 8494 11ca 2170     		strb	r1, [r4]
 8495              	.L312:
1134:..\src/command_processing.c ****     }
1135:..\src/command_processing.c ****     
1136:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8496              		.loc 1 1136 0
 8497 11cc 07F1F803 		add	r3, r7, #248
 8498 11d0 AA4A     		ldr	r2, .L379+16
 8499 11d2 1A60     		str	r2, [r3]
 8500 11d4 07F1F803 		add	r3, r7, #248
 8501 11d8 A94A     		ldr	r2, .L379+20
 8502 11da 5A60     		str	r2, [r3, #4]
 8503 11dc 07F1F803 		add	r3, r7, #248
 8504 11e0 A84A     		ldr	r2, .L379+24
 8505 11e2 9A60     		str	r2, [r3, #8]
 8506 11e4 07F1F803 		add	r3, r7, #248
 8507 11e8 A74A     		ldr	r2, .L379+28
 8508 11ea DA60     		str	r2, [r3, #12]
 8509 11ec 07F1F803 		add	r3, r7, #248
 8510 11f0 A64A     		ldr	r2, .L379+32
 8511 11f2 1A61     		str	r2, [r3, #16]
 8512 11f4 07F1F803 		add	r3, r7, #248
 8513 11f8 A54A     		ldr	r2, .L379+36
 8514 11fa 5A61     		str	r2, [r3, #20]
 8515 11fc 07F1F803 		add	r3, r7, #248
 8516 1200 07F5B072 		add	r2, r7, #352
 8517 1204 9A61     		str	r2, [r3, #24]
 8518 1206 07F1F803 		add	r3, r7, #248
 8519 120a A24A     		ldr	r2, .L379+40
 8520 120c DA61     		str	r2, [r3, #28]
 8521 120e 07F1F803 		add	r3, r7, #248
 8522 1212 A14A     		ldr	r2, .L379+44
 8523 1214 1A62     		str	r2, [r3, #32]
 8524 1216 07F1F803 		add	r3, r7, #248
 8525 121a A04A     		ldr	r2, .L379+48
 8526 121c 5A62     		str	r2, [r3, #36]
 8527 121e 07F1F803 		add	r3, r7, #248
 8528 1222 07F59472 		add	r2, r7, #296
 8529 1226 9A62     		str	r2, [r3, #40]
 8530 1228 07F1F803 		add	r3, r7, #248
 8531 122c 9C4A     		ldr	r2, .L379+52
 8532 122e DA62     		str	r2, [r3, #44]
1137:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1138:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 199


1139:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1140:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1141:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1142:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1143:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1144:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> R01\nThe board will reset\n",                         
1145:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\n2 -> ESC (Brushless)\nThe board will r
1146:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1147:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1148:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1149:..\src/command_processing.c ****     };   
1150:..\src/command_processing.c ****     
1151:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8533              		.loc 1 1151 0
 8534 1230 07F1D803 		add	r3, r7, #216
 8535 1234 9B4A     		ldr	r2, .L379+56
 8536 1236 1C46     		mov	r4, r3
 8537 1238 1546     		mov	r5, r2
 8538 123a 2868     		ldr	r0, [r5]	@ unaligned
 8539 123c 6968     		ldr	r1, [r5, #4]	@ unaligned
 8540 123e AA68     		ldr	r2, [r5, #8]	@ unaligned
 8541 1240 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8542 1242 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8543 1244 2869     		ldr	r0, [r5, #16]	@ unaligned
 8544 1246 6969     		ldr	r1, [r5, #20]	@ unaligned
 8545 1248 AA69     		ldr	r2, [r5, #24]	@ unaligned
 8546 124a EB69     		ldr	r3, [r5, #28]	@ unaligned
 8547 124c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1152:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 24, 45, 46, 51, 54};
 8548              		.loc 1 1152 0
 8549 124e 07F1CC03 		add	r3, r7, #204
 8550 1252 954A     		ldr	r2, .L379+60
 8551 1254 1068     		ldr	r0, [r2]	@ unaligned
 8552 1256 5168     		ldr	r1, [r2, #4]	@ unaligned
 8553 1258 03C3     		stmia	r3!, {r0, r1}
 8554 125a 127A     		ldrb	r2, [r2, #8]
 8555 125c 1A70     		strb	r2, [r3]
1153:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 24, 25, 29, 32, 33, 39, 45, 46, 48, 51, 54, 
 8556              		.loc 1 1153 0
 8557 125e 07F1B803 		add	r3, r7, #184
 8558 1262 924A     		ldr	r2, .L379+64
 8559 1264 1C46     		mov	r4, r3
 8560 1266 1546     		mov	r5, r2
 8561 1268 2868     		ldr	r0, [r5]	@ unaligned
 8562 126a 6968     		ldr	r1, [r5, #4]	@ unaligned
 8563 126c AA68     		ldr	r2, [r5, #8]	@ unaligned
 8564 126e EB68     		ldr	r3, [r5, #12]	@ unaligned
 8565 1270 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8566 1272 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8567 1274 2380     		strh	r3, [r4]	@ unaligned
1154:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 36;
 8568              		.loc 1 1154 0
 8569 1276 2423     		movs	r3, #36
 8570 1278 87F89B35 		strb	r3, [r7, #1435]
1155:..\src/command_processing.c **** 
1156:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1157:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 200


1158:..\src/command_processing.c ****     
1159:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1160:..\src/command_processing.c **** 
1161:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1162:..\src/command_processing.c ****     
1163:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1164:..\src/command_processing.c ****     j = 0;
 8571              		.loc 1 1164 0
 8572 127c 0023     		movs	r3, #0
 8573 127e 87F8A635 		strb	r3, [r7, #1446]
1165:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8574              		.loc 1 1165 0
 8575 1282 0023     		movs	r3, #0
 8576 1284 87F8A735 		strb	r3, [r7, #1447]
 8577 1288 21E0     		b	.L313
 8578              	.L316:
1166:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8579              		.loc 1 1166 0
 8580 128a 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 8581 128e 07F1CC02 		add	r2, r7, #204
 8582 1292 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8583 1294 1A46     		mov	r2, r3
 8584 1296 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8585 129a 0133     		adds	r3, r3, #1
 8586 129c 9A42     		cmp	r2, r3
 8587 129e 0BD1     		bne	.L314
1167:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8588              		.loc 1 1167 0
 8589 12a0 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8590 12a4 07F16002 		add	r2, r7, #96
 8591 12a8 0121     		movs	r1, #1
 8592 12aa D154     		strb	r1, [r2, r3]
1168:..\src/command_processing.c ****             j++;
 8593              		.loc 1 1168 0
 8594 12ac 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 8595 12b0 0133     		adds	r3, r3, #1
 8596 12b2 87F8A635 		strb	r3, [r7, #1446]
 8597 12b6 05E0     		b	.L315
 8598              	.L314:
1169:..\src/command_processing.c ****         }
1170:..\src/command_processing.c ****         else {
1171:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8599              		.loc 1 1171 0
 8600 12b8 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8601 12bc 07F16002 		add	r2, r7, #96
 8602 12c0 0021     		movs	r1, #0
 8603 12c2 D154     		strb	r1, [r2, r3]
 8604              	.L315:
1165:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8605              		.loc 1 1165 0 discriminator 2
 8606 12c4 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8607 12c8 0133     		adds	r3, r3, #1
 8608 12ca 87F8A735 		strb	r3, [r7, #1447]
 8609              	.L313:
1165:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8610              		.loc 1 1165 0 is_stmt 0 discriminator 1
 8611 12ce 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 201


 8612 12d2 542B     		cmp	r3, #84
 8613 12d4 D9D9     		bls	.L316
1172:..\src/command_processing.c ****         }
1173:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1174:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1175:..\src/command_processing.c ****     j = 0;
 8614              		.loc 1 1175 0 is_stmt 1
 8615 12d6 0023     		movs	r3, #0
 8616 12d8 87F8A635 		strb	r3, [r7, #1446]
1176:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8617              		.loc 1 1176 0
 8618 12dc 0023     		movs	r3, #0
 8619 12de 87F8A735 		strb	r3, [r7, #1447]
 8620 12e2 21E0     		b	.L317
 8621              	.L320:
1177:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8622              		.loc 1 1177 0
 8623 12e4 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 8624 12e8 07F1B802 		add	r2, r7, #184
 8625 12ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8626 12ee 1A46     		mov	r2, r3
 8627 12f0 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8628 12f4 0133     		adds	r3, r3, #1
 8629 12f6 9A42     		cmp	r2, r3
 8630 12f8 0BD1     		bne	.L318
1178:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8631              		.loc 1 1178 0
 8632 12fa 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8633 12fe 07F10802 		add	r2, r7, #8
 8634 1302 0121     		movs	r1, #1
 8635 1304 D154     		strb	r1, [r2, r3]
1179:..\src/command_processing.c ****             j++;
 8636              		.loc 1 1179 0
 8637 1306 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 8638 130a 0133     		adds	r3, r3, #1
 8639 130c 87F8A635 		strb	r3, [r7, #1446]
 8640 1310 05E0     		b	.L319
 8641              	.L318:
1180:..\src/command_processing.c ****         }
1181:..\src/command_processing.c ****         else {
1182:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8642              		.loc 1 1182 0
 8643 1312 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8644 1316 07F10802 		add	r2, r7, #8
 8645 131a 0021     		movs	r1, #0
 8646 131c D154     		strb	r1, [r2, r3]
 8647              	.L319:
1176:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8648              		.loc 1 1176 0 discriminator 2
 8649 131e 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8650 1322 0133     		adds	r3, r3, #1
 8651 1324 87F8A735 		strb	r3, [r7, #1447]
 8652              	.L317:
1176:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8653              		.loc 1 1176 0 is_stmt 0 discriminator 1
 8654 1328 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8655 132c 542B     		cmp	r3, #84
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 202


 8656 132e D9D9     		bls	.L320
1183:..\src/command_processing.c ****         }
1184:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1185:..\src/command_processing.c ****         
1186:..\src/command_processing.c ****     if (!index) {
 8657              		.loc 1 1186 0 is_stmt 1
 8658 1330 BB1D     		adds	r3, r7, #6
 8659 1332 1B88     		ldrh	r3, [r3]
 8660 1334 002B     		cmp	r3, #0
 8661 1336 17D1     		bne	.L321
1187:..\src/command_processing.c ****         // Get parameters list with relative types
1188:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8662              		.loc 1 1188 0
 8663 1338 07F54B74 		add	r4, r7, #812
 8664 133c 07F56172 		add	r2, r7, #900
 8665 1340 07F57771 		add	r1, r7, #988
 8666 1344 07F23440 		addw	r0, r7, #1076
 8667 1348 07F1F803 		add	r3, r7, #248
 8668 134c 0393     		str	r3, [sp, #12]
 8669 134e 07F16003 		add	r3, r7, #96
 8670 1352 0293     		str	r3, [sp, #8]
 8671 1354 07F5EC73 		add	r3, r7, #472
 8672 1358 0193     		str	r3, [sp, #4]
 8673 135a 07F1D803 		add	r3, r7, #216
 8674 135e 0093     		str	r3, [sp]
 8675 1360 2346     		mov	r3, r4
 8676 1362 FFF7FEFF 		bl	get_param_list
1189:..\src/command_processing.c ****     }
1190:..\src/command_processing.c ****     else {
1191:..\src/command_processing.c ****         // Set specific parameter        
1192:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1193:..\src/command_processing.c ****         
1194:..\src/command_processing.c ****         // Find size of data
1195:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1196:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1197:..\src/command_processing.c ****                 sod = 1; break;
1198:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1199:..\src/command_processing.c ****                 sod = 2; break;
1200:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1201:..\src/command_processing.c ****                 sod = 4; break;
1202:..\src/command_processing.c ****         }   
1203:..\src/command_processing.c ****             
1204:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1205:..\src/command_processing.c ****             // Use default specifications for param setting
1206:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1207:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1208:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1209:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1210:..\src/command_processing.c ****                     }
1211:..\src/command_processing.c ****                     break;                
1212:..\src/command_processing.c ****                 case TYPE_STRING:
1213:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1214:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1215:..\src/command_processing.c ****                     }
1216:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1217:..\src/command_processing.c ****                 break; 
1218:..\src/command_processing.c ****                 case TYPE_INT8:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 203


1219:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1220:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1221:..\src/command_processing.c ****                     }
1222:..\src/command_processing.c ****                     break;                    
1223:..\src/command_processing.c ****                 case TYPE_INT16:
1224:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1225:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1226:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1227:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1228:..\src/command_processing.c ****                         }
1229:..\src/command_processing.c ****                     }                   
1230:..\src/command_processing.c ****                     break;
1231:..\src/command_processing.c ****                 case TYPE_UINT16:
1232:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1233:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1234:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1235:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1236:..\src/command_processing.c ****                         }
1237:..\src/command_processing.c ****                     }
1238:..\src/command_processing.c ****                     break;
1239:..\src/command_processing.c ****                 case TYPE_INT32:
1240:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1241:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1242:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1243:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1244:..\src/command_processing.c ****                         }
1245:..\src/command_processing.c ****                     }
1246:..\src/command_processing.c ****                     break;
1247:..\src/command_processing.c ****                 case TYPE_UINT32:
1248:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1249:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1250:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1251:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1252:..\src/command_processing.c ****                         }
1253:..\src/command_processing.c ****                     }
1254:..\src/command_processing.c ****                     break;
1255:..\src/command_processing.c ****                 case TYPE_FLOAT:
1256:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1257:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1258:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1259:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1260:..\src/command_processing.c ****                         }
1261:..\src/command_processing.c ****                     }
1262:..\src/command_processing.c ****                     break;
1263:..\src/command_processing.c ****                 default:
1264:..\src/command_processing.c ****                     break;
1265:..\src/command_processing.c ****             }
1266:..\src/command_processing.c ****         }
1267:..\src/command_processing.c ****         else {  
1268:..\src/command_processing.c ****             // Use custom specifications for param setting
1269:..\src/command_processing.c ****             set_custom_param(index);
1270:..\src/command_processing.c ****         }
1271:..\src/command_processing.c ****         
1272:..\src/command_processing.c ****         // Store param also in user_emg structure
1273:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1274:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1275:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 204


1276:..\src/command_processing.c ****         
1277:..\src/command_processing.c ****         // Perform chip reset if needed
1278:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1279:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1280:..\src/command_processing.c ****             do {
1281:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1282:..\src/command_processing.c ****                 idx++;
1283:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1284:..\src/command_processing.c ****             
1285:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1286:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1287:..\src/command_processing.c ****             }   
1288:..\src/command_processing.c ****         }
1289:..\src/command_processing.c ****     }
1290:..\src/command_processing.c **** } 
 8677              		.loc 1 1290 0
 8678 1366 DFE2     		b	.L372
 8679              	.L321:
1192:..\src/command_processing.c ****         
 8680              		.loc 1 1192 0
 8681 1368 BB1D     		adds	r3, r7, #6
 8682 136a 1B88     		ldrh	r3, [r3]	@ movhi
 8683 136c DBB2     		uxtb	r3, r3
 8684 136e 013B     		subs	r3, r3, #1
 8685 1370 87F89A35 		strb	r3, [r7, #1434]
1195:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8686              		.loc 1 1195 0
 8687 1374 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 8688 1378 07F57772 		add	r2, r7, #988
 8689 137c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8690 137e 092B     		cmp	r3, #9
 8691 1380 22D8     		bhi	.L323
 8692 1382 01A2     		adr	r2, .L325
 8693 1384 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8694              		.p2align 2
 8695              	.L325:
 8696 1388 B1130000 		.word	.L324+1
 8697 138c B1130000 		.word	.L324+1
 8698 1390 B1130000 		.word	.L324+1
 8699 1394 B9130000 		.word	.L326+1
 8700 1398 B9130000 		.word	.L326+1
 8701 139c C1130000 		.word	.L327+1
 8702 13a0 C1130000 		.word	.L327+1
 8703 13a4 C1130000 		.word	.L327+1
 8704 13a8 C9130000 		.word	.L323+1
 8705 13ac B1130000 		.word	.L324+1
 8706              		.p2align 1
 8707              	.L324:
1197:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8708              		.loc 1 1197 0
 8709 13b0 0123     		movs	r3, #1
 8710 13b2 87F8A535 		strb	r3, [r7, #1445]
 8711 13b6 07E0     		b	.L323
 8712              	.L326:
1199:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8713              		.loc 1 1199 0
 8714 13b8 0223     		movs	r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 205


 8715 13ba 87F8A535 		strb	r3, [r7, #1445]
 8716 13be 03E0     		b	.L323
 8717              	.L327:
1201:..\src/command_processing.c ****         }   
 8718              		.loc 1 1201 0
 8719 13c0 0423     		movs	r3, #4
 8720 13c2 87F8A535 		strb	r3, [r7, #1445]
 8721 13c6 00BF     		nop
 8722              	.L323:
1204:..\src/command_processing.c ****             // Use default specifications for param setting
 8723              		.loc 1 1204 0
 8724 13c8 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 8725 13cc 07F10802 		add	r2, r7, #8
 8726 13d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8727 13d2 002B     		cmp	r3, #0
 8728 13d4 40F03B82 		bne	.L328
1206:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8729              		.loc 1 1206 0
 8730 13d8 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 8731 13dc 07F57772 		add	r2, r7, #988
 8732 13e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8733 13e2 092B     		cmp	r3, #9
 8734 13e4 00F23C82 		bhi	.L371
 8735 13e8 01A2     		adr	r2, .L331
 8736 13ea 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8737 13ee 00BF     		.p2align 2
 8738              	.L331:
 8739 13f0 19140000 		.word	.L330+1
 8740 13f4 17150000 		.word	.L332+1
 8741 13f8 19140000 		.word	.L330+1
 8742 13fc 69150000 		.word	.L333+1
 8743 1400 FF150000 		.word	.L334+1
 8744 1404 93160000 		.word	.L335+1
 8745 1408 27170000 		.word	.L336+1
 8746 140c BB170000 		.word	.L337+1
 8747 1410 61180000 		.word	.L371+1
 8748 1414 65140000 		.word	.L338+1
 8749              		.p2align 1
 8750              	.L330:
1208:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8751              		.loc 1 1208 0
 8752 1418 0023     		movs	r3, #0
 8753 141a 87F8A735 		strb	r3, [r7, #1447]
 8754 141e 17E0     		b	.L339
 8755              	.L340:
1209:..\src/command_processing.c ****                     }
 8756              		.loc 1 1209 0 discriminator 3
 8757 1420 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 8758 1424 07F23443 		addw	r3, r7, #1076
 8759 1428 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8760 142c 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8761 1430 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 8762 1434 01FB02F2 		mul	r2, r1, r2
 8763 1438 1344     		add	r3, r3, r2
 8764 143a 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8765 143e 0332     		adds	r2, r2, #3
 8766 1440 1B49     		ldr	r1, .L379+68
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 206


 8767 1442 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8768 1444 1A70     		strb	r2, [r3]
1208:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8769              		.loc 1 1208 0 discriminator 3
 8770 1446 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8771 144a 0133     		adds	r3, r3, #1
 8772 144c 87F8A735 		strb	r3, [r7, #1447]
 8773              	.L339:
1208:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8774              		.loc 1 1208 0 is_stmt 0 discriminator 1
 8775 1450 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 8776 1454 07F56172 		add	r2, r7, #900
 8777 1458 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8778 145a 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8779 145e 9A42     		cmp	r2, r3
 8780 1460 DED3     		bcc	.L340
1211:..\src/command_processing.c ****                 case TYPE_STRING:
 8781              		.loc 1 1211 0 is_stmt 1
 8782 1462 FEE1     		b	.L366
 8783              	.L338:
1213:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8784              		.loc 1 1213 0
 8785 1464 0023     		movs	r3, #0
 8786 1466 87F8A735 		strb	r3, [r7, #1447]
 8787 146a 3BE0     		b	.L342
 8788              	.L380:
 8789              		.align	2
 8790              	.L379:
 8791 146c 700F0000 		.word	.LC131
 8792 1470 88020000 		.word	.LC132
 8793 1474 FC020000 		.word	.LC133
 8794 1478 34030000 		.word	.LC134
 8795 147c 6C030000 		.word	.LC135
 8796 1480 F8030000 		.word	.LC136
 8797 1484 38040000 		.word	.LC137
 8798 1488 64040000 		.word	.LC138
 8799 148c 7C040000 		.word	.LC139
 8800 1490 A4040000 		.word	.LC140
 8801 1494 00050000 		.word	.LC141
 8802 1498 3C050000 		.word	.LC142
 8803 149c 9C050000 		.word	.LC143
 8804 14a0 18060000 		.word	.LC144
 8805 14a4 C4100000 		.word	.LC87
 8806 14a8 E4100000 		.word	.LC88
 8807 14ac F0100000 		.word	.LC89
 8808 14b0 00000000 		.word	g_rx
 8809              	.L343:
1214:..\src/command_processing.c ****                     }
 8810              		.loc 1 1214 0 discriminator 3
 8811 14b4 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 8812 14b8 07F23443 		addw	r3, r7, #1076
 8813 14bc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8814 14c0 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8815 14c4 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 8816 14c8 01FB02F2 		mul	r2, r1, r2
 8817 14cc 1344     		add	r3, r3, r2
 8818 14ce 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 207


 8819 14d2 0332     		adds	r2, r2, #3
 8820 14d4 E149     		ldr	r1, .L381
 8821 14d6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8822 14d8 1A70     		strb	r2, [r3]
1213:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8823              		.loc 1 1213 0 discriminator 3
 8824 14da 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8825 14de 0133     		adds	r3, r3, #1
 8826 14e0 87F8A735 		strb	r3, [r7, #1447]
 8827              	.L342:
1213:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8828              		.loc 1 1213 0 is_stmt 0 discriminator 1
 8829 14e4 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 8830 14e8 07F56172 		add	r2, r7, #900
 8831 14ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8832 14ee 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8833 14f2 9A42     		cmp	r2, r3
 8834 14f4 DED3     		bcc	.L343
1216:..\src/command_processing.c ****                 break; 
 8835              		.loc 1 1216 0 is_stmt 1
 8836 14f6 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 8837 14fa 07F23443 		addw	r3, r7, #1076
 8838 14fe 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8839 1502 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8840 1506 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 8841 150a 01FB02F2 		mul	r2, r1, r2
 8842 150e 1344     		add	r3, r3, r2
 8843 1510 0022     		movs	r2, #0
 8844 1512 1A70     		strb	r2, [r3]
1217:..\src/command_processing.c ****                 case TYPE_INT8:
 8845              		.loc 1 1217 0
 8846 1514 A5E1     		b	.L366
 8847              	.L332:
1219:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8848              		.loc 1 1219 0
 8849 1516 0023     		movs	r3, #0
 8850 1518 87F8A735 		strb	r3, [r7, #1447]
 8851 151c 1AE0     		b	.L344
 8852              	.L345:
1220:..\src/command_processing.c ****                     }
 8853              		.loc 1 1220 0 discriminator 3
 8854 151e 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 8855 1522 07F23443 		addw	r3, r7, #1076
 8856 1526 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8857 152a 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8858 152e 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 8859 1532 01FB02F2 		mul	r2, r1, r2
 8860 1536 1344     		add	r3, r3, r2
 8861 1538 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8862 153c 0332     		adds	r2, r2, #3
 8863 153e C749     		ldr	r1, .L381
 8864 1540 0A44     		add	r2, r2, r1
 8865 1542 92F90020 		ldrsb	r2, [r2]
 8866 1546 D2B2     		uxtb	r2, r2
 8867 1548 1A70     		strb	r2, [r3]
1219:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8868              		.loc 1 1219 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 208


 8869 154a 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8870 154e 0133     		adds	r3, r3, #1
 8871 1550 87F8A735 		strb	r3, [r7, #1447]
 8872              	.L344:
1219:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8873              		.loc 1 1219 0 is_stmt 0 discriminator 1
 8874 1554 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 8875 1558 07F56172 		add	r2, r7, #900
 8876 155c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8877 155e 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8878 1562 9A42     		cmp	r2, r3
 8879 1564 DBD3     		bcc	.L345
1222:..\src/command_processing.c ****                 case TYPE_INT16:
 8880              		.loc 1 1222 0 is_stmt 1
 8881 1566 7CE1     		b	.L366
 8882              	.L333:
1224:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8883              		.loc 1 1224 0
 8884 1568 0023     		movs	r3, #0
 8885 156a 87F8A735 		strb	r3, [r7, #1447]
 8886 156e 3CE0     		b	.L346
 8887              	.L349:
1225:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8888              		.loc 1 1225 0
 8889 1570 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8890 1574 97F8A525 		ldrb	r2, [r7, #1445]	@ zero_extendqisi2
 8891 1578 02FB03F3 		mul	r3, r2, r3
 8892 157c 0333     		adds	r3, r3, #3
 8893 157e B74A     		ldr	r2, .L381
 8894 1580 1344     		add	r3, r3, r2
 8895 1582 B3F90030 		ldrsh	r3, [r3]
 8896 1586 A7F89835 		strh	r3, [r7, #1432]	@ movhi
1226:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8897              		.loc 1 1226 0
 8898 158a 0023     		movs	r3, #0
 8899 158c 87F8A635 		strb	r3, [r7, #1446]
 8900 1590 20E0     		b	.L347
 8901              	.L348:
1227:..\src/command_processing.c ****                         }
 8902              		.loc 1 1227 0 discriminator 3
 8903 1592 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 8904 1596 07F23443 		addw	r3, r7, #1076
 8905 159a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8906 159e 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8907 15a2 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 8908 15a6 01FB03F3 		mul	r3, r1, r3
 8909 15aa 1846     		mov	r0, r3
 8910 15ac 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 8911 15b0 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 8912 15b4 CB1A     		subs	r3, r1, r3
 8913 15b6 0344     		add	r3, r3, r0
 8914 15b8 013B     		subs	r3, r3, #1
 8915 15ba 1344     		add	r3, r3, r2
 8916 15bc 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 8917 15c0 07F5B361 		add	r1, r7, #1432
 8918 15c4 0A44     		add	r2, r2, r1
 8919 15c6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 209


 8920 15c8 1A70     		strb	r2, [r3]
1226:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8921              		.loc 1 1226 0 discriminator 3
 8922 15ca 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 8923 15ce 0133     		adds	r3, r3, #1
 8924 15d0 87F8A635 		strb	r3, [r7, #1446]
 8925              	.L347:
1226:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8926              		.loc 1 1226 0 is_stmt 0 discriminator 1
 8927 15d4 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 8928 15d8 97F8A535 		ldrb	r3, [r7, #1445]	@ zero_extendqisi2
 8929 15dc 9A42     		cmp	r2, r3
 8930 15de D8D3     		bcc	.L348
1224:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8931              		.loc 1 1224 0 is_stmt 1 discriminator 2
 8932 15e0 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8933 15e4 0133     		adds	r3, r3, #1
 8934 15e6 87F8A735 		strb	r3, [r7, #1447]
 8935              	.L346:
1224:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8936              		.loc 1 1224 0 is_stmt 0 discriminator 1
 8937 15ea 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 8938 15ee 07F56172 		add	r2, r7, #900
 8939 15f2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8940 15f4 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 8941 15f8 9A42     		cmp	r2, r3
 8942 15fa B9D3     		bcc	.L349
1230:..\src/command_processing.c ****                 case TYPE_UINT16:
 8943              		.loc 1 1230 0 is_stmt 1
 8944 15fc 31E1     		b	.L366
 8945              	.L334:
1232:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8946              		.loc 1 1232 0
 8947 15fe 0023     		movs	r3, #0
 8948 1600 87F8A735 		strb	r3, [r7, #1447]
 8949 1604 3BE0     		b	.L350
 8950              	.L353:
1233:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8951              		.loc 1 1233 0
 8952 1606 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8953 160a 97F8A525 		ldrb	r2, [r7, #1445]	@ zero_extendqisi2
 8954 160e 02FB03F3 		mul	r3, r2, r3
 8955 1612 0333     		adds	r3, r3, #3
 8956 1614 914A     		ldr	r2, .L381
 8957 1616 1344     		add	r3, r3, r2
 8958 1618 1B88     		ldrh	r3, [r3]
 8959 161a A7F89635 		strh	r3, [r7, #1430]	@ movhi
1234:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8960              		.loc 1 1234 0
 8961 161e 0023     		movs	r3, #0
 8962 1620 87F8A635 		strb	r3, [r7, #1446]
 8963 1624 20E0     		b	.L351
 8964              	.L352:
1235:..\src/command_processing.c ****                         }
 8965              		.loc 1 1235 0 discriminator 3
 8966 1626 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 8967 162a 07F23443 		addw	r3, r7, #1076
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 210


 8968 162e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8969 1632 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8970 1636 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 8971 163a 01FB03F3 		mul	r3, r1, r3
 8972 163e 1846     		mov	r0, r3
 8973 1640 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 8974 1644 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 8975 1648 CB1A     		subs	r3, r1, r3
 8976 164a 0344     		add	r3, r3, r0
 8977 164c 013B     		subs	r3, r3, #1
 8978 164e 1344     		add	r3, r3, r2
 8979 1650 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 8980 1654 07F29651 		addw	r1, r7, #1430
 8981 1658 0A44     		add	r2, r2, r1
 8982 165a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8983 165c 1A70     		strb	r2, [r3]
1234:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8984              		.loc 1 1234 0 discriminator 3
 8985 165e 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 8986 1662 0133     		adds	r3, r3, #1
 8987 1664 87F8A635 		strb	r3, [r7, #1446]
 8988              	.L351:
1234:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8989              		.loc 1 1234 0 is_stmt 0 discriminator 1
 8990 1668 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 8991 166c 97F8A535 		ldrb	r3, [r7, #1445]	@ zero_extendqisi2
 8992 1670 9A42     		cmp	r2, r3
 8993 1672 D8D3     		bcc	.L352
1232:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8994              		.loc 1 1232 0 is_stmt 1 discriminator 2
 8995 1674 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 8996 1678 0133     		adds	r3, r3, #1
 8997 167a 87F8A735 		strb	r3, [r7, #1447]
 8998              	.L350:
1232:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8999              		.loc 1 1232 0 is_stmt 0 discriminator 1
 9000 167e 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 9001 1682 07F56172 		add	r2, r7, #900
 9002 1686 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9003 1688 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 9004 168c 9A42     		cmp	r2, r3
 9005 168e BAD3     		bcc	.L353
1238:..\src/command_processing.c ****                 case TYPE_INT32:
 9006              		.loc 1 1238 0 is_stmt 1
 9007 1690 E7E0     		b	.L366
 9008              	.L335:
1240:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9009              		.loc 1 1240 0
 9010 1692 0023     		movs	r3, #0
 9011 1694 87F8A735 		strb	r3, [r7, #1447]
 9012 1698 3BE0     		b	.L354
 9013              	.L357:
1241:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9014              		.loc 1 1241 0
 9015 169a 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9016 169e 97F8A525 		ldrb	r2, [r7, #1445]	@ zero_extendqisi2
 9017 16a2 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 211


 9018 16a6 0333     		adds	r3, r3, #3
 9019 16a8 6C4A     		ldr	r2, .L381
 9020 16aa 1344     		add	r3, r3, r2
 9021 16ac 1B68     		ldr	r3, [r3]
 9022 16ae C7F89035 		str	r3, [r7, #1424]
1242:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9023              		.loc 1 1242 0
 9024 16b2 0023     		movs	r3, #0
 9025 16b4 87F8A635 		strb	r3, [r7, #1446]
 9026 16b8 20E0     		b	.L355
 9027              	.L356:
1243:..\src/command_processing.c ****                         }
 9028              		.loc 1 1243 0 discriminator 3
 9029 16ba 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 9030 16be 07F23443 		addw	r3, r7, #1076
 9031 16c2 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9032 16c6 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9033 16ca 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 9034 16ce 01FB03F3 		mul	r3, r1, r3
 9035 16d2 1846     		mov	r0, r3
 9036 16d4 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 9037 16d8 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 9038 16dc CB1A     		subs	r3, r1, r3
 9039 16de 0344     		add	r3, r3, r0
 9040 16e0 013B     		subs	r3, r3, #1
 9041 16e2 1344     		add	r3, r3, r2
 9042 16e4 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 9043 16e8 07F5B261 		add	r1, r7, #1424
 9044 16ec 0A44     		add	r2, r2, r1
 9045 16ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9046 16f0 1A70     		strb	r2, [r3]
1242:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9047              		.loc 1 1242 0 discriminator 3
 9048 16f2 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 9049 16f6 0133     		adds	r3, r3, #1
 9050 16f8 87F8A635 		strb	r3, [r7, #1446]
 9051              	.L355:
1242:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9052              		.loc 1 1242 0 is_stmt 0 discriminator 1
 9053 16fc 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 9054 1700 97F8A535 		ldrb	r3, [r7, #1445]	@ zero_extendqisi2
 9055 1704 9A42     		cmp	r2, r3
 9056 1706 D8D3     		bcc	.L356
1240:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9057              		.loc 1 1240 0 is_stmt 1 discriminator 2
 9058 1708 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9059 170c 0133     		adds	r3, r3, #1
 9060 170e 87F8A735 		strb	r3, [r7, #1447]
 9061              	.L354:
1240:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9062              		.loc 1 1240 0 is_stmt 0 discriminator 1
 9063 1712 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 9064 1716 07F56172 		add	r2, r7, #900
 9065 171a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9066 171c 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 9067 1720 9A42     		cmp	r2, r3
 9068 1722 BAD3     		bcc	.L357
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 212


1246:..\src/command_processing.c ****                 case TYPE_UINT32:
 9069              		.loc 1 1246 0 is_stmt 1
 9070 1724 9DE0     		b	.L366
 9071              	.L336:
1248:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9072              		.loc 1 1248 0
 9073 1726 0023     		movs	r3, #0
 9074 1728 87F8A735 		strb	r3, [r7, #1447]
 9075 172c 3BE0     		b	.L358
 9076              	.L361:
1249:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9077              		.loc 1 1249 0
 9078 172e 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9079 1732 97F8A525 		ldrb	r2, [r7, #1445]	@ zero_extendqisi2
 9080 1736 02FB03F3 		mul	r3, r2, r3
 9081 173a 0333     		adds	r3, r3, #3
 9082 173c 474A     		ldr	r2, .L381
 9083 173e 1344     		add	r3, r3, r2
 9084 1740 1B68     		ldr	r3, [r3]
 9085 1742 C7F88C35 		str	r3, [r7, #1420]
1250:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9086              		.loc 1 1250 0
 9087 1746 0023     		movs	r3, #0
 9088 1748 87F8A635 		strb	r3, [r7, #1446]
 9089 174c 20E0     		b	.L359
 9090              	.L360:
1251:..\src/command_processing.c ****                         }
 9091              		.loc 1 1251 0 discriminator 3
 9092 174e 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 9093 1752 07F23443 		addw	r3, r7, #1076
 9094 1756 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9095 175a 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9096 175e 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 9097 1762 01FB03F3 		mul	r3, r1, r3
 9098 1766 1846     		mov	r0, r3
 9099 1768 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 9100 176c 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 9101 1770 CB1A     		subs	r3, r1, r3
 9102 1772 0344     		add	r3, r3, r0
 9103 1774 013B     		subs	r3, r3, #1
 9104 1776 1344     		add	r3, r3, r2
 9105 1778 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 9106 177c 07F28C51 		addw	r1, r7, #1420
 9107 1780 0A44     		add	r2, r2, r1
 9108 1782 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9109 1784 1A70     		strb	r2, [r3]
1250:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9110              		.loc 1 1250 0 discriminator 3
 9111 1786 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 9112 178a 0133     		adds	r3, r3, #1
 9113 178c 87F8A635 		strb	r3, [r7, #1446]
 9114              	.L359:
1250:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9115              		.loc 1 1250 0 is_stmt 0 discriminator 1
 9116 1790 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 9117 1794 97F8A535 		ldrb	r3, [r7, #1445]	@ zero_extendqisi2
 9118 1798 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 213


 9119 179a D8D3     		bcc	.L360
1248:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9120              		.loc 1 1248 0 is_stmt 1 discriminator 2
 9121 179c 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9122 17a0 0133     		adds	r3, r3, #1
 9123 17a2 87F8A735 		strb	r3, [r7, #1447]
 9124              	.L358:
1248:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9125              		.loc 1 1248 0 is_stmt 0 discriminator 1
 9126 17a6 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 9127 17aa 07F56172 		add	r2, r7, #900
 9128 17ae D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9129 17b0 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 9130 17b4 9A42     		cmp	r2, r3
 9131 17b6 BAD3     		bcc	.L361
1254:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9132              		.loc 1 1254 0 is_stmt 1
 9133 17b8 53E0     		b	.L366
 9134              	.L337:
1256:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9135              		.loc 1 1256 0
 9136 17ba 0023     		movs	r3, #0
 9137 17bc 87F8A735 		strb	r3, [r7, #1447]
 9138 17c0 3BE0     		b	.L362
 9139              	.L365:
1257:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9140              		.loc 1 1257 0
 9141 17c2 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9142 17c6 97F8A525 		ldrb	r2, [r7, #1445]	@ zero_extendqisi2
 9143 17ca 02FB03F3 		mul	r3, r2, r3
 9144 17ce 0333     		adds	r3, r3, #3
 9145 17d0 224A     		ldr	r2, .L381
 9146 17d2 1344     		add	r3, r3, r2
 9147 17d4 1B68     		ldr	r3, [r3]	@ float
 9148 17d6 C7F88835 		str	r3, [r7, #1416]	@ float
1258:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9149              		.loc 1 1258 0
 9150 17da 0023     		movs	r3, #0
 9151 17dc 87F8A635 		strb	r3, [r7, #1446]
 9152 17e0 20E0     		b	.L363
 9153              	.L364:
1259:..\src/command_processing.c ****                         }
 9154              		.loc 1 1259 0 discriminator 3
 9155 17e2 97F89A25 		ldrb	r2, [r7, #1434]	@ zero_extendqisi2
 9156 17e6 07F23443 		addw	r3, r7, #1076
 9157 17ea 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9158 17ee 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9159 17f2 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 9160 17f6 01FB03F3 		mul	r3, r1, r3
 9161 17fa 1846     		mov	r0, r3
 9162 17fc 97F8A515 		ldrb	r1, [r7, #1445]	@ zero_extendqisi2
 9163 1800 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 9164 1804 CB1A     		subs	r3, r1, r3
 9165 1806 0344     		add	r3, r3, r0
 9166 1808 013B     		subs	r3, r3, #1
 9167 180a 1344     		add	r3, r3, r2
 9168 180c 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 214


 9169 1810 07F5B161 		add	r1, r7, #1416
 9170 1814 0A44     		add	r2, r2, r1
 9171 1816 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9172 1818 1A70     		strb	r2, [r3]
1258:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9173              		.loc 1 1258 0 discriminator 3
 9174 181a 97F8A635 		ldrb	r3, [r7, #1446]	@ zero_extendqisi2
 9175 181e 0133     		adds	r3, r3, #1
 9176 1820 87F8A635 		strb	r3, [r7, #1446]
 9177              	.L363:
1258:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9178              		.loc 1 1258 0 is_stmt 0 discriminator 1
 9179 1824 97F8A625 		ldrb	r2, [r7, #1446]	@ zero_extendqisi2
 9180 1828 97F8A535 		ldrb	r3, [r7, #1445]	@ zero_extendqisi2
 9181 182c 9A42     		cmp	r2, r3
 9182 182e D8D3     		bcc	.L364
1256:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9183              		.loc 1 1256 0 is_stmt 1 discriminator 2
 9184 1830 97F8A735 		ldrb	r3, [r7, #1447]	@ zero_extendqisi2
 9185 1834 0133     		adds	r3, r3, #1
 9186 1836 87F8A735 		strb	r3, [r7, #1447]
 9187              	.L362:
1256:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9188              		.loc 1 1256 0 is_stmt 0 discriminator 1
 9189 183a 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 9190 183e 07F56172 		add	r2, r7, #900
 9191 1842 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9192 1844 97F8A725 		ldrb	r2, [r7, #1447]	@ zero_extendqisi2
 9193 1848 9A42     		cmp	r2, r3
 9194 184a BAD3     		bcc	.L365
1262:..\src/command_processing.c ****                 default:
 9195              		.loc 1 1262 0 is_stmt 1
 9196 184c 09E0     		b	.L366
 9197              	.L328:
1269:..\src/command_processing.c ****         }
 9198              		.loc 1 1269 0
 9199 184e BB1D     		adds	r3, r7, #6
 9200 1850 1B88     		ldrh	r3, [r3]
 9201 1852 1846     		mov	r0, r3
 9202 1854 FFF7FEFF 		bl	set_custom_param
 9203 1858 03E0     		b	.L366
 9204              	.L382:
 9205 185a 00BF     		.align	2
 9206              	.L381:
 9207 185c 00000000 		.word	g_rx
 9208              	.L371:
1264:..\src/command_processing.c ****             }
 9209              		.loc 1 1264 0
 9210 1860 00BF     		nop
 9211              	.L366:
1273:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9212              		.loc 1 1273 0
 9213 1862 97F89B35 		ldrb	r3, [r7, #1435]	@ zero_extendqisi2
 9214 1866 9BB2     		uxth	r3, r3
 9215 1868 BA1D     		adds	r2, r7, #6
 9216 186a 1288     		ldrh	r2, [r2]
 9217 186c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 215


 9218 186e 11D0     		beq	.L367
1274:..\src/command_processing.c ****         }
 9219              		.loc 1 1274 0
 9220 1870 D7F8A035 		ldr	r3, [r7, #1440]
 9221 1874 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9222 1878 5B01     		lsls	r3, r3, #5
 9223 187a 03F51473 		add	r3, r3, #592
 9224 187e D7F8A025 		ldr	r2, [r7, #1440]
 9225 1882 D018     		adds	r0, r2, r3
 9226 1884 D7F8A035 		ldr	r3, [r7, #1440]
 9227 1888 03F5FC73 		add	r3, r3, #504
 9228 188c 1022     		movs	r2, #16
 9229 188e 1946     		mov	r1, r3
 9230 1890 FFF7FEFF 		bl	memcpy
 9231              	.L367:
1278:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9232              		.loc 1 1278 0
 9233 1894 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 9234 1898 07F57772 		add	r2, r7, #988
 9235 189c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9236 189e 002B     		cmp	r3, #0
 9237 18a0 42D1     		bne	.L372
 9238              	.LBB22:
1279:..\src/command_processing.c ****             do {
 9239              		.loc 1 1279 0
 9240 18a2 0023     		movs	r3, #0
 9241 18a4 87F89F35 		strb	r3, [r7, #1439]
 9242 18a8 FF23     		movs	r3, #255
 9243 18aa 87F89E35 		strb	r3, [r7, #1438]
 9244              	.L369:
1281:..\src/command_processing.c ****                 idx++;
 9245              		.loc 1 1281 0
 9246 18ae 97F89F35 		ldrb	r3, [r7, #1439]	@ zero_extendqisi2
 9247 18b2 07F57772 		add	r2, r7, #988
 9248 18b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9249 18b8 002B     		cmp	r3, #0
 9250 18ba 04D1     		bne	.L368
1281:..\src/command_processing.c ****                 idx++;
 9251              		.loc 1 1281 0 is_stmt 0 discriminator 1
 9252 18bc 97F89E35 		ldrb	r3, [r7, #1438]	@ zero_extendqisi2
 9253 18c0 0133     		adds	r3, r3, #1
 9254 18c2 87F89E35 		strb	r3, [r7, #1438]
 9255              	.L368:
1282:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9256              		.loc 1 1282 0 is_stmt 1
 9257 18c6 97F89F35 		ldrb	r3, [r7, #1439]	@ zero_extendqisi2
 9258 18ca 0133     		adds	r3, r3, #1
 9259 18cc 87F89F35 		strb	r3, [r7, #1439]
1283:..\src/command_processing.c ****             
 9260              		.loc 1 1283 0
 9261 18d0 97F89F25 		ldrb	r2, [r7, #1439]	@ zero_extendqisi2
 9262 18d4 97F89A35 		ldrb	r3, [r7, #1434]	@ zero_extendqisi2
 9263 18d8 9A42     		cmp	r2, r3
 9264 18da E8D9     		bls	.L369
1285:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9265              		.loc 1 1285 0
 9266 18dc 97F89E35 		ldrb	r3, [r7, #1438]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 216


 9267 18e0 07F1D802 		add	r2, r7, #216
 9268 18e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9269 18e6 052B     		cmp	r3, #5
 9270 18e8 1BD0     		beq	.L370
1285:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9271              		.loc 1 1285 0 is_stmt 0 discriminator 1
 9272 18ea 97F89E35 		ldrb	r3, [r7, #1438]	@ zero_extendqisi2
 9273 18ee 07F1D802 		add	r2, r7, #216
 9274 18f2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9275 18f4 062B     		cmp	r3, #6
 9276 18f6 14D0     		beq	.L370
1285:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9277              		.loc 1 1285 0 discriminator 2
 9278 18f8 97F89E35 		ldrb	r3, [r7, #1438]	@ zero_extendqisi2
 9279 18fc 07F1D802 		add	r2, r7, #216
 9280 1900 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9281 1902 082B     		cmp	r3, #8
 9282 1904 0DD0     		beq	.L370
1285:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9283              		.loc 1 1285 0 discriminator 3
 9284 1906 97F89E35 		ldrb	r3, [r7, #1438]	@ zero_extendqisi2
 9285 190a 07F1D802 		add	r2, r7, #216
 9286 190e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9287 1910 092B     		cmp	r3, #9
 9288 1912 06D0     		beq	.L370
1285:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9289              		.loc 1 1285 0 discriminator 4
 9290 1914 97F89E35 		ldrb	r3, [r7, #1438]	@ zero_extendqisi2
 9291 1918 07F1D802 		add	r2, r7, #216
 9292 191c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9293 191e 0A2B     		cmp	r3, #10
 9294 1920 02D1     		bne	.L372
 9295              	.L370:
1286:..\src/command_processing.c ****             }   
 9296              		.loc 1 1286 0 is_stmt 1
 9297 1922 044B     		ldr	r3, .L383
 9298 1924 0122     		movs	r2, #1
 9299 1926 1A70     		strb	r2, [r3]
 9300              	.L372:
 9301              	.LBE22:
 9302              		.loc 1 1290 0
 9303 1928 00BF     		nop
 9304 192a 07F5B567 		add	r7, r7, #1448
 9305              		.cfi_def_cfa_offset 16
 9306 192e BD46     		mov	sp, r7
 9307              		.cfi_def_cfa_register 13
 9308              		@ sp needed
 9309 1930 B0BD     		pop	{r4, r5, r7, pc}
 9310              	.L384:
 9311 1932 00BF     		.align	2
 9312              	.L383:
 9313 1934 00000000 		.word	reset_PSoC_flag
 9314              		.cfi_endproc
 9315              	.LFE68:
 9316              		.size	manage_param_list, .-manage_param_list
 9317              		.global	__aeabi_fmul
 9318              		.global	__aeabi_f2iz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 217


 9319              		.section	.text.set_custom_param,"ax",%progbits
 9320              		.align	2
 9321              		.global	set_custom_param
 9322              		.thumb
 9323              		.thumb_func
 9324              		.type	set_custom_param, %function
 9325              	set_custom_param:
 9326              	.LFB69:
1291:..\src/command_processing.c **** 
1292:..\src/command_processing.c **** //==============================================================================
1293:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1294:..\src/command_processing.c **** //==============================================================================
1295:..\src/command_processing.c **** 
1296:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9327              		.loc 1 1296 0
 9328              		.cfi_startproc
 9329              		@ args = 0, pretend = 0, frame = 24
 9330              		@ frame_needed = 1, uses_anonymous_args = 0
 9331 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9332              		.cfi_def_cfa_offset 20
 9333              		.cfi_offset 4, -20
 9334              		.cfi_offset 5, -16
 9335              		.cfi_offset 6, -12
 9336              		.cfi_offset 7, -8
 9337              		.cfi_offset 14, -4
 9338 0002 87B0     		sub	sp, sp, #28
 9339              		.cfi_def_cfa_offset 48
 9340 0004 00AF     		add	r7, sp, #0
 9341              		.cfi_def_cfa_register 7
 9342 0006 0346     		mov	r3, r0
 9343 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1297:..\src/command_processing.c **** 
1298:..\src/command_processing.c ****     uint8 CYDATA i, j;
1299:..\src/command_processing.c ****     uint8 aux_uchar;
1300:..\src/command_processing.c ****     float aux_float, aux_float2;
1301:..\src/command_processing.c **** 
1302:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9344              		.loc 1 1302 0
 9345 000a 0023     		movs	r3, #0
 9346 000c 3B75     		strb	r3, [r7, #20]
1303:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9347              		.loc 1 1303 0
 9348 000e 0123     		movs	r3, #1
 9349 0010 FB74     		strb	r3, [r7, #19]
1304:..\src/command_processing.c ****     
1305:..\src/command_processing.c ****     switch(index){
 9350              		.loc 1 1305 0
 9351 0012 FB88     		ldrh	r3, [r7, #6]
 9352 0014 023B     		subs	r3, r3, #2
 9353 0016 4B2B     		cmp	r3, #75
 9354 0018 01F2F281 		bhi	.L480
 9355 001c 01A2     		adr	r2, .L388
 9356 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9357 0022 00BF     		.p2align 2
 9358              	.L388:
 9359 0024 55010000 		.word	.L387+1
 9360 0028 79030000 		.word	.L389+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 218


 9361 002c 01140000 		.word	.L480+1
 9362 0030 B3050000 		.word	.L390+1
 9363 0034 01140000 		.word	.L480+1
 9364 0038 01140000 		.word	.L480+1
 9365 003c F9050000 		.word	.L391+1
 9366 0040 01140000 		.word	.L480+1
 9367 0044 01140000 		.word	.L480+1
 9368 0048 25070000 		.word	.L392+1
 9369 004c 01140000 		.word	.L480+1
 9370 0050 01140000 		.word	.L480+1
 9371 0054 01140000 		.word	.L480+1
 9372 0058 01140000 		.word	.L480+1
 9373 005c 01140000 		.word	.L480+1
 9374 0060 01140000 		.word	.L480+1
 9375 0064 01140000 		.word	.L480+1
 9376 0068 01140000 		.word	.L480+1
 9377 006c 01140000 		.word	.L480+1
 9378 0070 01140000 		.word	.L480+1
 9379 0074 01140000 		.word	.L480+1
 9380 0078 01140000 		.word	.L480+1
 9381 007c 11080000 		.word	.L393+1
 9382 0080 6D080000 		.word	.L394+1
 9383 0084 01140000 		.word	.L480+1
 9384 0088 01140000 		.word	.L480+1
 9385 008c 01140000 		.word	.L480+1
 9386 0090 A7080000 		.word	.L395+1
 9387 0094 01140000 		.word	.L480+1
 9388 0098 01140000 		.word	.L480+1
 9389 009c 110A0000 		.word	.L396+1
 9390 00a0 BD0A0000 		.word	.L397+1
 9391 00a4 01140000 		.word	.L480+1
 9392 00a8 01140000 		.word	.L480+1
 9393 00ac 01140000 		.word	.L480+1
 9394 00b0 01140000 		.word	.L480+1
 9395 00b4 01140000 		.word	.L480+1
 9396 00b8 F70A0000 		.word	.L398+1
 9397 00bc 01140000 		.word	.L480+1
 9398 00c0 01140000 		.word	.L480+1
 9399 00c4 01140000 		.word	.L480+1
 9400 00c8 01140000 		.word	.L480+1
 9401 00cc 01140000 		.word	.L480+1
 9402 00d0 150B0000 		.word	.L399+1
 9403 00d4 4D0D0000 		.word	.L400+1
 9404 00d8 01140000 		.word	.L480+1
 9405 00dc 6D0F0000 		.word	.L401+1
 9406 00e0 01140000 		.word	.L480+1
 9407 00e4 01140000 		.word	.L480+1
 9408 00e8 B10F0000 		.word	.L402+1
 9409 00ec 01140000 		.word	.L480+1
 9410 00f0 01140000 		.word	.L480+1
 9411 00f4 DB100000 		.word	.L403+1
 9412 00f8 01140000 		.word	.L480+1
 9413 00fc 01140000 		.word	.L480+1
 9414 0100 01140000 		.word	.L480+1
 9415 0104 01140000 		.word	.L480+1
 9416 0108 01140000 		.word	.L480+1
 9417 010c 01140000 		.word	.L480+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 219


 9418 0110 01140000 		.word	.L480+1
 9419 0114 01140000 		.word	.L480+1
 9420 0118 C5110000 		.word	.L404+1
 9421 011c 01140000 		.word	.L480+1
 9422 0120 01140000 		.word	.L480+1
 9423 0124 01140000 		.word	.L480+1
 9424 0128 01140000 		.word	.L480+1
 9425 012c 01140000 		.word	.L480+1
 9426 0130 01140000 		.word	.L480+1
 9427 0134 01140000 		.word	.L480+1
 9428 0138 01140000 		.word	.L480+1
 9429 013c 01140000 		.word	.L480+1
 9430 0140 01140000 		.word	.L480+1
 9431 0144 01140000 		.word	.L480+1
 9432 0148 01140000 		.word	.L480+1
 9433 014c 01140000 		.word	.L480+1
 9434 0150 F1110000 		.word	.L405+1
 9435              		.p2align 1
 9436              	.L387:
1306:..\src/command_processing.c ****         case 2:         // Position PID
1307:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9437              		.loc 1 1307 0
 9438 0154 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 9439 0156 A74A     		ldr	r2, .L486
 9440 0158 7421     		movs	r1, #116
 9441 015a 01FB03F3 		mul	r3, r1, r3
 9442 015e 1344     		add	r3, r3, r2
 9443 0160 03F20F13 		addw	r3, r3, #271
 9444 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9445 0166 032B     		cmp	r3, #3
 9446 0168 00F08380 		beq	.L406
1308:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9447              		.loc 1 1308 0
 9448 016c A24B     		ldr	r3, .L486+4
 9449 016e 1B68     		ldr	r3, [r3]	@ float
 9450 0170 FB60     		str	r3, [r7, #12]	@ float
1309:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9451              		.loc 1 1309 0
 9452 0172 0023     		movs	r3, #0
 9453 0174 BB75     		strb	r3, [r7, #22]
 9454 0176 0EE0     		b	.L407
 9455              	.L408:
1310:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9456              		.loc 1 1310 0 discriminator 3
 9457 0178 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9458 017a C3F10303 		rsb	r3, r3, #3
 9459 017e 07F10802 		add	r2, r7, #8
 9460 0182 1344     		add	r3, r3, r2
 9461 0184 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9462 0186 07F10C01 		add	r1, r7, #12
 9463 018a 0A44     		add	r2, r2, r1
 9464 018c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9465 018e 1A70     		strb	r2, [r3]
1309:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9466              		.loc 1 1309 0 discriminator 3
 9467 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9468 0192 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 220


 9469 0194 BB75     		strb	r3, [r7, #22]
 9470              	.L407:
1309:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9471              		.loc 1 1309 0 is_stmt 0 discriminator 1
 9472 0196 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9473 0198 032B     		cmp	r3, #3
 9474 019a EDD9     		bls	.L408
1311:..\src/command_processing.c ****                 }
1312:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9475              		.loc 1 1312 0 is_stmt 1
 9476 019c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9477 019e BB68     		ldr	r3, [r7, #8]	@ float
 9478 01a0 4FF08F41 		mov	r1, #1199570944
 9479 01a4 1846     		mov	r0, r3
 9480 01a6 FFF7FEFF 		bl	__aeabi_fmul
 9481 01aa 0346     		mov	r3, r0
 9482 01ac 1846     		mov	r0, r3
 9483 01ae FFF7FEFF 		bl	__aeabi_f2iz
 9484 01b2 0146     		mov	r1, r0
 9485 01b4 914A     		ldr	r2, .L486+8
 9486 01b6 7423     		movs	r3, #116
 9487 01b8 03FB04F3 		mul	r3, r3, r4
 9488 01bc 1344     		add	r3, r3, r2
 9489 01be B033     		adds	r3, r3, #176
 9490 01c0 1960     		str	r1, [r3]
1313:..\src/command_processing.c ****                 
1314:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9491              		.loc 1 1314 0
 9492 01c2 8F4B     		ldr	r3, .L486+12
 9493 01c4 1B68     		ldr	r3, [r3]	@ float
 9494 01c6 FB60     		str	r3, [r7, #12]	@ float
1315:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9495              		.loc 1 1315 0
 9496 01c8 0023     		movs	r3, #0
 9497 01ca BB75     		strb	r3, [r7, #22]
 9498 01cc 0EE0     		b	.L409
 9499              	.L410:
1316:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9500              		.loc 1 1316 0 discriminator 3
 9501 01ce BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9502 01d0 C3F10303 		rsb	r3, r3, #3
 9503 01d4 07F10802 		add	r2, r7, #8
 9504 01d8 1344     		add	r3, r3, r2
 9505 01da BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9506 01dc 07F10C01 		add	r1, r7, #12
 9507 01e0 0A44     		add	r2, r2, r1
 9508 01e2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9509 01e4 1A70     		strb	r2, [r3]
1315:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9510              		.loc 1 1315 0 discriminator 3
 9511 01e6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9512 01e8 0133     		adds	r3, r3, #1
 9513 01ea BB75     		strb	r3, [r7, #22]
 9514              	.L409:
1315:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9515              		.loc 1 1315 0 is_stmt 0 discriminator 1
 9516 01ec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 221


 9517 01ee 032B     		cmp	r3, #3
 9518 01f0 EDD9     		bls	.L410
1317:..\src/command_processing.c ****                 }
1318:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9519              		.loc 1 1318 0 is_stmt 1
 9520 01f2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9521 01f4 BB68     		ldr	r3, [r7, #8]	@ float
 9522 01f6 4FF08F41 		mov	r1, #1199570944
 9523 01fa 1846     		mov	r0, r3
 9524 01fc FFF7FEFF 		bl	__aeabi_fmul
 9525 0200 0346     		mov	r3, r0
 9526 0202 1846     		mov	r0, r3
 9527 0204 FFF7FEFF 		bl	__aeabi_f2iz
 9528 0208 0146     		mov	r1, r0
 9529 020a 7C4A     		ldr	r2, .L486+8
 9530 020c 7423     		movs	r3, #116
 9531 020e 03FB04F3 		mul	r3, r3, r4
 9532 0212 1344     		add	r3, r3, r2
 9533 0214 B433     		adds	r3, r3, #180
 9534 0216 1960     		str	r1, [r3]
1319:..\src/command_processing.c ****                 
1320:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9535              		.loc 1 1320 0
 9536 0218 7A4B     		ldr	r3, .L486+16
 9537 021a 1B68     		ldr	r3, [r3]	@ float
 9538 021c FB60     		str	r3, [r7, #12]	@ float
1321:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9539              		.loc 1 1321 0
 9540 021e 0023     		movs	r3, #0
 9541 0220 BB75     		strb	r3, [r7, #22]
 9542 0222 0EE0     		b	.L411
 9543              	.L412:
1322:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9544              		.loc 1 1322 0 discriminator 3
 9545 0224 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9546 0226 C3F10303 		rsb	r3, r3, #3
 9547 022a 07F10802 		add	r2, r7, #8
 9548 022e 1344     		add	r3, r3, r2
 9549 0230 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9550 0232 07F10C01 		add	r1, r7, #12
 9551 0236 0A44     		add	r2, r2, r1
 9552 0238 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9553 023a 1A70     		strb	r2, [r3]
1321:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9554              		.loc 1 1321 0 discriminator 3
 9555 023c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9556 023e 0133     		adds	r3, r3, #1
 9557 0240 BB75     		strb	r3, [r7, #22]
 9558              	.L411:
1321:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9559              		.loc 1 1321 0 is_stmt 0 discriminator 1
 9560 0242 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9561 0244 032B     		cmp	r3, #3
 9562 0246 EDD9     		bls	.L412
1323:..\src/command_processing.c ****                 }
1324:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9563              		.loc 1 1324 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 222


 9564 0248 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9565 024a BB68     		ldr	r3, [r7, #8]	@ float
 9566 024c 4FF08F41 		mov	r1, #1199570944
 9567 0250 1846     		mov	r0, r3
 9568 0252 FFF7FEFF 		bl	__aeabi_fmul
 9569 0256 0346     		mov	r3, r0
 9570 0258 1846     		mov	r0, r3
 9571 025a FFF7FEFF 		bl	__aeabi_f2iz
 9572 025e 0146     		mov	r1, r0
 9573 0260 664A     		ldr	r2, .L486+8
 9574 0262 7423     		movs	r3, #116
 9575 0264 03FB04F3 		mul	r3, r3, r4
 9576 0268 1344     		add	r3, r3, r2
 9577 026a B833     		adds	r3, r3, #184
 9578 026c 1960     		str	r1, [r3]
1325:..\src/command_processing.c ****             }
1326:..\src/command_processing.c ****             else {
1327:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1328:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1329:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1330:..\src/command_processing.c ****                 }
1331:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1332:..\src/command_processing.c ****                 
1333:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1334:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1335:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1336:..\src/command_processing.c ****                 }
1337:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1338:..\src/command_processing.c ****                 
1339:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1340:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1341:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1342:..\src/command_processing.c ****                 }
1343:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1344:..\src/command_processing.c ****             }
1345:..\src/command_processing.c ****             break;
 9579              		.loc 1 1345 0
 9580 026e 01F0D2B8 		b	.L420
 9581              	.L406:
1327:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9582              		.loc 1 1327 0
 9583 0272 614B     		ldr	r3, .L486+4
 9584 0274 1B68     		ldr	r3, [r3]	@ float
 9585 0276 FB60     		str	r3, [r7, #12]	@ float
1328:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9586              		.loc 1 1328 0
 9587 0278 0023     		movs	r3, #0
 9588 027a BB75     		strb	r3, [r7, #22]
 9589 027c 0EE0     		b	.L414
 9590              	.L415:
1329:..\src/command_processing.c ****                 }
 9591              		.loc 1 1329 0 discriminator 3
 9592 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9593 0280 C3F10303 		rsb	r3, r3, #3
 9594 0284 07F10802 		add	r2, r7, #8
 9595 0288 1344     		add	r3, r3, r2
 9596 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 223


 9597 028c 07F10C01 		add	r1, r7, #12
 9598 0290 0A44     		add	r2, r2, r1
 9599 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9600 0294 1A70     		strb	r2, [r3]
1328:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9601              		.loc 1 1328 0 discriminator 3
 9602 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9603 0298 0133     		adds	r3, r3, #1
 9604 029a BB75     		strb	r3, [r7, #22]
 9605              	.L414:
1328:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9606              		.loc 1 1328 0 is_stmt 0 discriminator 1
 9607 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9608 029e 032B     		cmp	r3, #3
 9609 02a0 EDD9     		bls	.L415
1331:..\src/command_processing.c ****                 
 9610              		.loc 1 1331 0 is_stmt 1
 9611 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9612 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9613 02a6 4FF08F41 		mov	r1, #1199570944
 9614 02aa 1846     		mov	r0, r3
 9615 02ac FFF7FEFF 		bl	__aeabi_fmul
 9616 02b0 0346     		mov	r3, r0
 9617 02b2 1846     		mov	r0, r3
 9618 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9619 02b8 0146     		mov	r1, r0
 9620 02ba 504A     		ldr	r2, .L486+8
 9621 02bc 7423     		movs	r3, #116
 9622 02be 03FB04F3 		mul	r3, r3, r4
 9623 02c2 1344     		add	r3, r3, r2
 9624 02c4 C833     		adds	r3, r3, #200
 9625 02c6 1960     		str	r1, [r3]
1333:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9626              		.loc 1 1333 0
 9627 02c8 4D4B     		ldr	r3, .L486+12
 9628 02ca 1B68     		ldr	r3, [r3]	@ float
 9629 02cc FB60     		str	r3, [r7, #12]	@ float
1334:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9630              		.loc 1 1334 0
 9631 02ce 0023     		movs	r3, #0
 9632 02d0 BB75     		strb	r3, [r7, #22]
 9633 02d2 0EE0     		b	.L416
 9634              	.L417:
1335:..\src/command_processing.c ****                 }
 9635              		.loc 1 1335 0 discriminator 3
 9636 02d4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9637 02d6 C3F10303 		rsb	r3, r3, #3
 9638 02da 07F10802 		add	r2, r7, #8
 9639 02de 1344     		add	r3, r3, r2
 9640 02e0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9641 02e2 07F10C01 		add	r1, r7, #12
 9642 02e6 0A44     		add	r2, r2, r1
 9643 02e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9644 02ea 1A70     		strb	r2, [r3]
1334:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9645              		.loc 1 1334 0 discriminator 3
 9646 02ec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 224


 9647 02ee 0133     		adds	r3, r3, #1
 9648 02f0 BB75     		strb	r3, [r7, #22]
 9649              	.L416:
1334:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9650              		.loc 1 1334 0 is_stmt 0 discriminator 1
 9651 02f2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9652 02f4 032B     		cmp	r3, #3
 9653 02f6 EDD9     		bls	.L417
1337:..\src/command_processing.c ****                 
 9654              		.loc 1 1337 0 is_stmt 1
 9655 02f8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9656 02fa BB68     		ldr	r3, [r7, #8]	@ float
 9657 02fc 4FF08F41 		mov	r1, #1199570944
 9658 0300 1846     		mov	r0, r3
 9659 0302 FFF7FEFF 		bl	__aeabi_fmul
 9660 0306 0346     		mov	r3, r0
 9661 0308 1846     		mov	r0, r3
 9662 030a FFF7FEFF 		bl	__aeabi_f2iz
 9663 030e 0146     		mov	r1, r0
 9664 0310 3A4A     		ldr	r2, .L486+8
 9665 0312 7423     		movs	r3, #116
 9666 0314 03FB04F3 		mul	r3, r3, r4
 9667 0318 1344     		add	r3, r3, r2
 9668 031a CC33     		adds	r3, r3, #204
 9669 031c 1960     		str	r1, [r3]
1339:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9670              		.loc 1 1339 0
 9671 031e 394B     		ldr	r3, .L486+16
 9672 0320 1B68     		ldr	r3, [r3]	@ float
 9673 0322 FB60     		str	r3, [r7, #12]	@ float
1340:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9674              		.loc 1 1340 0
 9675 0324 0023     		movs	r3, #0
 9676 0326 BB75     		strb	r3, [r7, #22]
 9677 0328 0EE0     		b	.L418
 9678              	.L419:
1341:..\src/command_processing.c ****                 }
 9679              		.loc 1 1341 0 discriminator 3
 9680 032a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9681 032c C3F10303 		rsb	r3, r3, #3
 9682 0330 07F10802 		add	r2, r7, #8
 9683 0334 1344     		add	r3, r3, r2
 9684 0336 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9685 0338 07F10C01 		add	r1, r7, #12
 9686 033c 0A44     		add	r2, r2, r1
 9687 033e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9688 0340 1A70     		strb	r2, [r3]
1340:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9689              		.loc 1 1340 0 discriminator 3
 9690 0342 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9691 0344 0133     		adds	r3, r3, #1
 9692 0346 BB75     		strb	r3, [r7, #22]
 9693              	.L418:
1340:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9694              		.loc 1 1340 0 is_stmt 0 discriminator 1
 9695 0348 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9696 034a 032B     		cmp	r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 225


 9697 034c EDD9     		bls	.L419
1343:..\src/command_processing.c ****             }
 9698              		.loc 1 1343 0 is_stmt 1
 9699 034e 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9700 0350 BB68     		ldr	r3, [r7, #8]	@ float
 9701 0352 4FF08F41 		mov	r1, #1199570944
 9702 0356 1846     		mov	r0, r3
 9703 0358 FFF7FEFF 		bl	__aeabi_fmul
 9704 035c 0346     		mov	r3, r0
 9705 035e 1846     		mov	r0, r3
 9706 0360 FFF7FEFF 		bl	__aeabi_f2iz
 9707 0364 0146     		mov	r1, r0
 9708 0366 254A     		ldr	r2, .L486+8
 9709 0368 7423     		movs	r3, #116
 9710 036a 03FB04F3 		mul	r3, r3, r4
 9711 036e 1344     		add	r3, r3, r2
 9712 0370 D033     		adds	r3, r3, #208
 9713 0372 1960     		str	r1, [r3]
 9714              		.loc 1 1345 0
 9715 0374 01F04FB8 		b	.L420
 9716              	.L389:
1346:..\src/command_processing.c ****             
1347:..\src/command_processing.c ****         case 3:         //Current PID
1348:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9717              		.loc 1 1348 0
 9718 0378 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 9719 037a 1E4A     		ldr	r2, .L486
 9720 037c 7421     		movs	r1, #116
 9721 037e 01FB03F3 		mul	r3, r1, r3
 9722 0382 1344     		add	r3, r3, r2
 9723 0384 03F20F13 		addw	r3, r3, #271
 9724 0388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9725 038a 032B     		cmp	r3, #3
 9726 038c 00F08E80 		beq	.L421
1349:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9727              		.loc 1 1349 0
 9728 0390 194B     		ldr	r3, .L486+4
 9729 0392 1B68     		ldr	r3, [r3]	@ float
 9730 0394 FB60     		str	r3, [r7, #12]	@ float
1350:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9731              		.loc 1 1350 0
 9732 0396 0023     		movs	r3, #0
 9733 0398 BB75     		strb	r3, [r7, #22]
 9734 039a 0EE0     		b	.L422
 9735              	.L423:
1351:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9736              		.loc 1 1351 0 discriminator 3
 9737 039c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9738 039e C3F10303 		rsb	r3, r3, #3
 9739 03a2 07F10802 		add	r2, r7, #8
 9740 03a6 1344     		add	r3, r3, r2
 9741 03a8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9742 03aa 07F10C01 		add	r1, r7, #12
 9743 03ae 0A44     		add	r2, r2, r1
 9744 03b0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9745 03b2 1A70     		strb	r2, [r3]
1350:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 226


 9746              		.loc 1 1350 0 discriminator 3
 9747 03b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9748 03b6 0133     		adds	r3, r3, #1
 9749 03b8 BB75     		strb	r3, [r7, #22]
 9750              	.L422:
1350:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9751              		.loc 1 1350 0 is_stmt 0 discriminator 1
 9752 03ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9753 03bc 032B     		cmp	r3, #3
 9754 03be EDD9     		bls	.L423
1352:..\src/command_processing.c ****                 }
1353:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9755              		.loc 1 1353 0 is_stmt 1
 9756 03c0 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9757 03c2 BB68     		ldr	r3, [r7, #8]	@ float
 9758 03c4 4FF08F41 		mov	r1, #1199570944
 9759 03c8 1846     		mov	r0, r3
 9760 03ca FFF7FEFF 		bl	__aeabi_fmul
 9761 03ce 0346     		mov	r3, r0
 9762 03d0 1846     		mov	r0, r3
 9763 03d2 FFF7FEFF 		bl	__aeabi_f2iz
 9764 03d6 0146     		mov	r1, r0
 9765 03d8 084A     		ldr	r2, .L486+8
 9766 03da 7423     		movs	r3, #116
 9767 03dc 03FB04F3 		mul	r3, r3, r4
 9768 03e0 1344     		add	r3, r3, r2
 9769 03e2 BC33     		adds	r3, r3, #188
 9770 03e4 1960     		str	r1, [r3]
1354:..\src/command_processing.c ****                 
1355:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9771              		.loc 1 1355 0
 9772 03e6 064B     		ldr	r3, .L486+12
 9773 03e8 1B68     		ldr	r3, [r3]	@ float
 9774 03ea FB60     		str	r3, [r7, #12]	@ float
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9775              		.loc 1 1356 0
 9776 03ec 0023     		movs	r3, #0
 9777 03ee BB75     		strb	r3, [r7, #22]
 9778 03f0 19E0     		b	.L424
 9779              	.L487:
 9780 03f2 00BF     		.align	2
 9781              	.L486:
 9782 03f4 00000000 		.word	c_mem
 9783 03f8 03000000 		.word	g_rx+3
 9784 03fc 00000000 		.word	g_mem
 9785 0400 07000000 		.word	g_rx+7
 9786 0404 0B000000 		.word	g_rx+11
 9787              	.L425:
1357:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9788              		.loc 1 1357 0 discriminator 3
 9789 0408 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9790 040a C3F10303 		rsb	r3, r3, #3
 9791 040e 07F10802 		add	r2, r7, #8
 9792 0412 1344     		add	r3, r3, r2
 9793 0414 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9794 0416 07F10C01 		add	r1, r7, #12
 9795 041a 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 227


 9796 041c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9797 041e 1A70     		strb	r2, [r3]
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9798              		.loc 1 1356 0 discriminator 3
 9799 0420 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9800 0422 0133     		adds	r3, r3, #1
 9801 0424 BB75     		strb	r3, [r7, #22]
 9802              	.L424:
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9803              		.loc 1 1356 0 is_stmt 0 discriminator 1
 9804 0426 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9805 0428 032B     		cmp	r3, #3
 9806 042a EDD9     		bls	.L425
1358:..\src/command_processing.c ****                 }
1359:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9807              		.loc 1 1359 0 is_stmt 1
 9808 042c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9809 042e BB68     		ldr	r3, [r7, #8]	@ float
 9810 0430 4FF08F41 		mov	r1, #1199570944
 9811 0434 1846     		mov	r0, r3
 9812 0436 FFF7FEFF 		bl	__aeabi_fmul
 9813 043a 0346     		mov	r3, r0
 9814 043c 1846     		mov	r0, r3
 9815 043e FFF7FEFF 		bl	__aeabi_f2iz
 9816 0442 0146     		mov	r1, r0
 9817 0444 AF4A     		ldr	r2, .L488
 9818 0446 7423     		movs	r3, #116
 9819 0448 03FB04F3 		mul	r3, r3, r4
 9820 044c 1344     		add	r3, r3, r2
 9821 044e C033     		adds	r3, r3, #192
 9822 0450 1960     		str	r1, [r3]
1360:..\src/command_processing.c ****                 
1361:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9823              		.loc 1 1361 0
 9824 0452 AD4B     		ldr	r3, .L488+4
 9825 0454 1B68     		ldr	r3, [r3]	@ float
 9826 0456 FB60     		str	r3, [r7, #12]	@ float
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9827              		.loc 1 1362 0
 9828 0458 0023     		movs	r3, #0
 9829 045a BB75     		strb	r3, [r7, #22]
 9830 045c 0EE0     		b	.L426
 9831              	.L427:
1363:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9832              		.loc 1 1363 0 discriminator 3
 9833 045e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9834 0460 C3F10303 		rsb	r3, r3, #3
 9835 0464 07F10802 		add	r2, r7, #8
 9836 0468 1344     		add	r3, r3, r2
 9837 046a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9838 046c 07F10C01 		add	r1, r7, #12
 9839 0470 0A44     		add	r2, r2, r1
 9840 0472 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9841 0474 1A70     		strb	r2, [r3]
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9842              		.loc 1 1362 0 discriminator 3
 9843 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 228


 9844 0478 0133     		adds	r3, r3, #1
 9845 047a BB75     		strb	r3, [r7, #22]
 9846              	.L426:
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9847              		.loc 1 1362 0 is_stmt 0 discriminator 1
 9848 047c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9849 047e 032B     		cmp	r3, #3
 9850 0480 EDD9     		bls	.L427
1364:..\src/command_processing.c ****                 }
1365:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9851              		.loc 1 1365 0 is_stmt 1
 9852 0482 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9853 0484 BB68     		ldr	r3, [r7, #8]	@ float
 9854 0486 4FF08F41 		mov	r1, #1199570944
 9855 048a 1846     		mov	r0, r3
 9856 048c FFF7FEFF 		bl	__aeabi_fmul
 9857 0490 0346     		mov	r3, r0
 9858 0492 1846     		mov	r0, r3
 9859 0494 FFF7FEFF 		bl	__aeabi_f2iz
 9860 0498 0146     		mov	r1, r0
 9861 049a 9A4A     		ldr	r2, .L488
 9862 049c 7423     		movs	r3, #116
 9863 049e 03FB04F3 		mul	r3, r3, r4
 9864 04a2 1344     		add	r3, r3, r2
 9865 04a4 C433     		adds	r3, r3, #196
 9866 04a6 1960     		str	r1, [r3]
1366:..\src/command_processing.c ****             }
1367:..\src/command_processing.c ****             else {
1368:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1369:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1370:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1371:..\src/command_processing.c ****                 }
1372:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1373:..\src/command_processing.c ****                 
1374:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1375:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1376:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1377:..\src/command_processing.c ****                 }
1378:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1379:..\src/command_processing.c ****                 
1380:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1381:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1382:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1383:..\src/command_processing.c ****                 }
1384:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1385:..\src/command_processing.c ****             }            
1386:..\src/command_processing.c ****             break;  
 9867              		.loc 1 1386 0
 9868 04a8 00F0B5BF 		b	.L420
 9869              	.L421:
1368:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9870              		.loc 1 1368 0
 9871 04ac 974B     		ldr	r3, .L488+8
 9872 04ae 1B68     		ldr	r3, [r3]	@ float
 9873 04b0 FB60     		str	r3, [r7, #12]	@ float
1369:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9874              		.loc 1 1369 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 229


 9875 04b2 0023     		movs	r3, #0
 9876 04b4 BB75     		strb	r3, [r7, #22]
 9877 04b6 0EE0     		b	.L429
 9878              	.L430:
1370:..\src/command_processing.c ****                 }
 9879              		.loc 1 1370 0 discriminator 3
 9880 04b8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9881 04ba C3F10303 		rsb	r3, r3, #3
 9882 04be 07F10802 		add	r2, r7, #8
 9883 04c2 1344     		add	r3, r3, r2
 9884 04c4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9885 04c6 07F10C01 		add	r1, r7, #12
 9886 04ca 0A44     		add	r2, r2, r1
 9887 04cc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9888 04ce 1A70     		strb	r2, [r3]
1369:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9889              		.loc 1 1369 0 discriminator 3
 9890 04d0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9891 04d2 0133     		adds	r3, r3, #1
 9892 04d4 BB75     		strb	r3, [r7, #22]
 9893              	.L429:
1369:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9894              		.loc 1 1369 0 is_stmt 0 discriminator 1
 9895 04d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9896 04d8 032B     		cmp	r3, #3
 9897 04da EDD9     		bls	.L430
1372:..\src/command_processing.c ****                 
 9898              		.loc 1 1372 0 is_stmt 1
 9899 04dc 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9900 04de BB68     		ldr	r3, [r7, #8]	@ float
 9901 04e0 4FF08F41 		mov	r1, #1199570944
 9902 04e4 1846     		mov	r0, r3
 9903 04e6 FFF7FEFF 		bl	__aeabi_fmul
 9904 04ea 0346     		mov	r3, r0
 9905 04ec 1846     		mov	r0, r3
 9906 04ee FFF7FEFF 		bl	__aeabi_f2iz
 9907 04f2 0146     		mov	r1, r0
 9908 04f4 834A     		ldr	r2, .L488
 9909 04f6 7423     		movs	r3, #116
 9910 04f8 03FB04F3 		mul	r3, r3, r4
 9911 04fc 1344     		add	r3, r3, r2
 9912 04fe D433     		adds	r3, r3, #212
 9913 0500 1960     		str	r1, [r3]
1374:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9914              		.loc 1 1374 0
 9915 0502 834B     		ldr	r3, .L488+12
 9916 0504 1B68     		ldr	r3, [r3]	@ float
 9917 0506 FB60     		str	r3, [r7, #12]	@ float
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9918              		.loc 1 1375 0
 9919 0508 0023     		movs	r3, #0
 9920 050a BB75     		strb	r3, [r7, #22]
 9921 050c 0EE0     		b	.L431
 9922              	.L432:
1376:..\src/command_processing.c ****                 }
 9923              		.loc 1 1376 0 discriminator 3
 9924 050e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 230


 9925 0510 C3F10303 		rsb	r3, r3, #3
 9926 0514 07F10802 		add	r2, r7, #8
 9927 0518 1344     		add	r3, r3, r2
 9928 051a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9929 051c 07F10C01 		add	r1, r7, #12
 9930 0520 0A44     		add	r2, r2, r1
 9931 0522 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9932 0524 1A70     		strb	r2, [r3]
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9933              		.loc 1 1375 0 discriminator 3
 9934 0526 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9935 0528 0133     		adds	r3, r3, #1
 9936 052a BB75     		strb	r3, [r7, #22]
 9937              	.L431:
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9938              		.loc 1 1375 0 is_stmt 0 discriminator 1
 9939 052c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9940 052e 032B     		cmp	r3, #3
 9941 0530 EDD9     		bls	.L432
1378:..\src/command_processing.c ****                 
 9942              		.loc 1 1378 0 is_stmt 1
 9943 0532 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9944 0534 BB68     		ldr	r3, [r7, #8]	@ float
 9945 0536 4FF08F41 		mov	r1, #1199570944
 9946 053a 1846     		mov	r0, r3
 9947 053c FFF7FEFF 		bl	__aeabi_fmul
 9948 0540 0346     		mov	r3, r0
 9949 0542 1846     		mov	r0, r3
 9950 0544 FFF7FEFF 		bl	__aeabi_f2iz
 9951 0548 0146     		mov	r1, r0
 9952 054a 6E4A     		ldr	r2, .L488
 9953 054c 7423     		movs	r3, #116
 9954 054e 03FB04F3 		mul	r3, r3, r4
 9955 0552 1344     		add	r3, r3, r2
 9956 0554 D833     		adds	r3, r3, #216
 9957 0556 1960     		str	r1, [r3]
1380:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9958              		.loc 1 1380 0
 9959 0558 6B4B     		ldr	r3, .L488+4
 9960 055a 1B68     		ldr	r3, [r3]	@ float
 9961 055c FB60     		str	r3, [r7, #12]	@ float
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9962              		.loc 1 1381 0
 9963 055e 0023     		movs	r3, #0
 9964 0560 BB75     		strb	r3, [r7, #22]
 9965 0562 0EE0     		b	.L433
 9966              	.L434:
1382:..\src/command_processing.c ****                 }
 9967              		.loc 1 1382 0 discriminator 3
 9968 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9969 0566 C3F10303 		rsb	r3, r3, #3
 9970 056a 07F10802 		add	r2, r7, #8
 9971 056e 1344     		add	r3, r3, r2
 9972 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9973 0572 07F10C01 		add	r1, r7, #12
 9974 0576 0A44     		add	r2, r2, r1
 9975 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 231


 9976 057a 1A70     		strb	r2, [r3]
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9977              		.loc 1 1381 0 discriminator 3
 9978 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9979 057e 0133     		adds	r3, r3, #1
 9980 0580 BB75     		strb	r3, [r7, #22]
 9981              	.L433:
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9982              		.loc 1 1381 0 is_stmt 0 discriminator 1
 9983 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9984 0584 032B     		cmp	r3, #3
 9985 0586 EDD9     		bls	.L434
1384:..\src/command_processing.c ****             }            
 9986              		.loc 1 1384 0 is_stmt 1
 9987 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9988 058a BB68     		ldr	r3, [r7, #8]	@ float
 9989 058c 4FF08F41 		mov	r1, #1199570944
 9990 0590 1846     		mov	r0, r3
 9991 0592 FFF7FEFF 		bl	__aeabi_fmul
 9992 0596 0346     		mov	r3, r0
 9993 0598 1846     		mov	r0, r3
 9994 059a FFF7FEFF 		bl	__aeabi_f2iz
 9995 059e 0146     		mov	r1, r0
 9996 05a0 584A     		ldr	r2, .L488
 9997 05a2 7423     		movs	r3, #116
 9998 05a4 03FB04F3 		mul	r3, r3, r4
 9999 05a8 1344     		add	r3, r3, r2
 10000 05aa DC33     		adds	r3, r3, #220
 10001 05ac 1960     		str	r1, [r3]
 10002              		.loc 1 1386 0
 10003 05ae 00F032BF 		b	.L420
 10004              	.L390:
1387:..\src/command_processing.c ****             
1388:..\src/command_processing.c ****         case 5:         //Input mode
1389:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10005              		.loc 1 1389 0
 10006 05b2 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10007 05b4 574A     		ldr	r2, .L488+16
 10008 05b6 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 10009 05b8 524A     		ldr	r2, .L488
 10010 05ba 7421     		movs	r1, #116
 10011 05bc 01FB03F3 		mul	r3, r1, r3
 10012 05c0 1344     		add	r3, r3, r2
 10013 05c2 03F58773 		add	r3, r3, #270
 10014 05c6 0246     		mov	r2, r0
 10015 05c8 1A70     		strb	r2, [r3]
1390:..\src/command_processing.c ****             
1391:..\src/command_processing.c ****             // Hold the actual position
1392:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10016              		.loc 1 1392 0
 10017 05ca 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10018 05cc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10019 05ce 4D49     		ldr	r1, .L488
 10020 05d0 7420     		movs	r0, #116
 10021 05d2 00FB02F2 		mul	r2, r0, r2
 10022 05d6 0A44     		add	r2, r2, r1
 10023 05d8 02F58872 		add	r2, r2, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 232


 10024 05dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10025 05de 1046     		mov	r0, r2
 10026 05e0 4D49     		ldr	r1, .L488+20
 10027 05e2 3422     		movs	r2, #52
 10028 05e4 02FB00F2 		mul	r2, r2, r0
 10029 05e8 0A44     		add	r2, r2, r1
 10030 05ea 1268     		ldr	r2, [r2]
 10031 05ec 4B49     		ldr	r1, .L488+24
 10032 05ee 1B01     		lsls	r3, r3, #4
 10033 05f0 0B44     		add	r3, r3, r1
 10034 05f2 1A60     		str	r2, [r3]
1393:..\src/command_processing.c ****             break;   
 10035              		.loc 1 1393 0
 10036 05f4 00F00FBF 		b	.L420
 10037              	.L391:
1394:..\src/command_processing.c **** 
1395:..\src/command_processing.c ****         case 8:         //Measurement Offset
1396:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10038              		.loc 1 1396 0
 10039 05f8 0023     		movs	r3, #0
 10040 05fa FB75     		strb	r3, [r7, #23]
 10041 05fc 78E0     		b	.L435
 10042              	.L436:
1397:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10043              		.loc 1 1397 0 discriminator 3
 10044 05fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10045 0600 404A     		ldr	r2, .L488
 10046 0602 7421     		movs	r1, #116
 10047 0604 01FB03F3 		mul	r3, r1, r3
 10048 0608 1344     		add	r3, r3, r2
 10049 060a 03F58873 		add	r3, r3, #272
 10050 060e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10051 0610 1C46     		mov	r4, r3
 10052 0612 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10053 0614 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10054 0616 5B00     		lsls	r3, r3, #1
 10055 0618 0333     		adds	r3, r3, #3
 10056 061a 3E49     		ldr	r1, .L488+16
 10057 061c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10058 061e 1B02     		lsls	r3, r3, #8
 10059 0620 19B2     		sxth	r1, r3
 10060 0622 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10061 0624 0233     		adds	r3, r3, #2
 10062 0626 5B00     		lsls	r3, r3, #1
 10063 0628 3A48     		ldr	r0, .L488+16
 10064 062a C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10065 062c 1BB2     		sxth	r3, r3
 10066 062e 0B43     		orrs	r3, r3, r1
 10067 0630 1BB2     		sxth	r3, r3
 10068 0632 1846     		mov	r0, r3
 10069 0634 3349     		ldr	r1, .L488
 10070 0636 2346     		mov	r3, r4
 10071 0638 5B00     		lsls	r3, r3, #1
 10072 063a 2344     		add	r3, r3, r4
 10073 063c 9B00     		lsls	r3, r3, #2
 10074 063e 1344     		add	r3, r3, r2
 10075 0640 6833     		adds	r3, r3, #104
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 233


 10076 0642 41F82300 		str	r0, [r1, r3, lsl #2]
1398:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10077              		.loc 1 1398 0 discriminator 3
 10078 0646 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10079 0648 2E4A     		ldr	r2, .L488
 10080 064a 7421     		movs	r1, #116
 10081 064c 01FB03F3 		mul	r3, r1, r3
 10082 0650 1344     		add	r3, r3, r2
 10083 0652 03F58873 		add	r3, r3, #272
 10084 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10085 0658 1D46     		mov	r5, r3
 10086 065a F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10087 065c 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10088 065e 294A     		ldr	r2, .L488
 10089 0660 7420     		movs	r0, #116
 10090 0662 00FB03F3 		mul	r3, r0, r3
 10091 0666 1344     		add	r3, r3, r2
 10092 0668 03F58873 		add	r3, r3, #272
 10093 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10094 066e 1C46     		mov	r4, r3
 10095 0670 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10096 0672 2448     		ldr	r0, .L488
 10097 0674 2346     		mov	r3, r4
 10098 0676 5B00     		lsls	r3, r3, #1
 10099 0678 2344     		add	r3, r3, r4
 10100 067a 9B00     		lsls	r3, r3, #2
 10101 067c 1344     		add	r3, r3, r2
 10102 067e 6833     		adds	r3, r3, #104
 10103 0680 50F82320 		ldr	r2, [r0, r3, lsl #2]
 10104 0684 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10105 0686 1F48     		ldr	r0, .L488
 10106 0688 7424     		movs	r4, #116
 10107 068a 04FB03F3 		mul	r3, r4, r3
 10108 068e 0344     		add	r3, r3, r0
 10109 0690 03F58873 		add	r3, r3, #272
 10110 0694 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10111 0696 1E46     		mov	r6, r3
 10112 0698 F87D     		ldrb	r0, [r7, #23]	@ zero_extendqisi2
 10113 069a 1A4C     		ldr	r4, .L488
 10114 069c 3346     		mov	r3, r6
 10115 069e 5B00     		lsls	r3, r3, #1
 10116 06a0 3344     		add	r3, r3, r6
 10117 06a2 1B01     		lsls	r3, r3, #4
 10118 06a4 2344     		add	r3, r3, r4
 10119 06a6 0344     		add	r3, r3, r0
 10120 06a8 03F29D13 		addw	r3, r3, #413
 10121 06ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10122 06ae 9A40     		lsls	r2, r2, r3
 10123 06b0 1448     		ldr	r0, .L488
 10124 06b2 2B46     		mov	r3, r5
 10125 06b4 5B00     		lsls	r3, r3, #1
 10126 06b6 2B44     		add	r3, r3, r5
 10127 06b8 9B00     		lsls	r3, r3, #2
 10128 06ba 0B44     		add	r3, r3, r1
 10129 06bc 6833     		adds	r3, r3, #104
 10130 06be 40F82320 		str	r2, [r0, r3, lsl #2]
1399:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 234


1400:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10131              		.loc 1 1400 0 discriminator 3
 10132 06c2 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10133 06c4 0F4A     		ldr	r2, .L488
 10134 06c6 7421     		movs	r1, #116
 10135 06c8 01FB03F3 		mul	r3, r1, r3
 10136 06cc 1344     		add	r3, r3, r2
 10137 06ce 03F58873 		add	r3, r3, #272
 10138 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10139 06d4 1846     		mov	r0, r3
 10140 06d6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10141 06d8 0F49     		ldr	r1, .L488+20
 10142 06da 3422     		movs	r2, #52
 10143 06dc 02FB00F2 		mul	r2, r2, r0
 10144 06e0 0A44     		add	r2, r2, r1
 10145 06e2 1344     		add	r3, r3, r2
 10146 06e4 1833     		adds	r3, r3, #24
 10147 06e6 0022     		movs	r2, #0
 10148 06e8 1A70     		strb	r2, [r3]
1396:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10149              		.loc 1 1396 0 discriminator 3
 10150 06ea FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10151 06ec 0133     		adds	r3, r3, #1
 10152 06ee FB75     		strb	r3, [r7, #23]
 10153              	.L435:
1396:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10154              		.loc 1 1396 0 is_stmt 0 discriminator 1
 10155 06f0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10156 06f2 022B     		cmp	r3, #2
 10157 06f4 83D9     		bls	.L436
1401:..\src/command_processing.c ****             }
1402:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 10158              		.loc 1 1402 0 is_stmt 1
 10159 06f6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10160 06f8 094A     		ldr	r2, .L488+28
 10161 06fa 0121     		movs	r1, #1
 10162 06fc D154     		strb	r1, [r2, r3]
1403:..\src/command_processing.c ****             break;
 10163              		.loc 1 1403 0
 10164 06fe 00F08ABE 		b	.L420
 10165              	.L489:
 10166 0702 00BF     		.align	2
 10167              	.L488:
 10168 0704 00000000 		.word	g_mem
 10169 0708 0B000000 		.word	g_rx+11
 10170 070c 03000000 		.word	g_rx+3
 10171 0710 07000000 		.word	g_rx+7
 10172 0714 00000000 		.word	g_rx
 10173 0718 00000000 		.word	g_meas
 10174 071c 00000000 		.word	g_refNew
 10175 0720 00000000 		.word	reset_last_value_flag
 10176              	.L392:
1404:..\src/command_processing.c ****     
1405:..\src/command_processing.c ****         case 11:        //Position limits
1406:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10177              		.loc 1 1406 0
 10178 0724 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 235


 10179 0726 B74A     		ldr	r2, .L490
 10180 0728 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 10181 072a 1106     		lsls	r1, r2, #24
 10182 072c B54A     		ldr	r2, .L490
 10183 072e 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 10184 0730 1204     		lsls	r2, r2, #16
 10185 0732 1143     		orrs	r1, r1, r2
 10186 0734 B34A     		ldr	r2, .L490
 10187 0736 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 10188 0738 1202     		lsls	r2, r2, #8
 10189 073a 0A43     		orrs	r2, r2, r1
 10190 073c B149     		ldr	r1, .L490
 10191 073e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10192 0740 0A43     		orrs	r2, r2, r1
 10193 0742 B149     		ldr	r1, .L490+4
 10194 0744 7420     		movs	r0, #116
 10195 0746 00FB03F3 		mul	r3, r0, r3
 10196 074a 0B44     		add	r3, r3, r1
 10197 074c E433     		adds	r3, r3, #228
 10198 074e 1A60     		str	r2, [r3]
1407:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10199              		.loc 1 1407 0
 10200 0750 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10201 0752 AC4A     		ldr	r2, .L490
 10202 0754 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 10203 0756 1106     		lsls	r1, r2, #24
 10204 0758 AA4A     		ldr	r2, .L490
 10205 075a 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 10206 075c 1204     		lsls	r2, r2, #16
 10207 075e 1143     		orrs	r1, r1, r2
 10208 0760 A84A     		ldr	r2, .L490
 10209 0762 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 10210 0764 1202     		lsls	r2, r2, #8
 10211 0766 0A43     		orrs	r2, r2, r1
 10212 0768 A649     		ldr	r1, .L490
 10213 076a 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10214 076c 0A43     		orrs	r2, r2, r1
 10215 076e A649     		ldr	r1, .L490+4
 10216 0770 7420     		movs	r0, #116
 10217 0772 00FB03F3 		mul	r3, r0, r3
 10218 0776 0B44     		add	r3, r3, r1
 10219 0778 E833     		adds	r3, r3, #232
 10220 077a 1A60     		str	r2, [r3]
1408:..\src/command_processing.c **** 
1409:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10221              		.loc 1 1409 0
 10222 077c 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10223 077e 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10224 0780 A14A     		ldr	r2, .L490+4
 10225 0782 7420     		movs	r0, #116
 10226 0784 00FB03F3 		mul	r3, r0, r3
 10227 0788 1344     		add	r3, r3, r2
 10228 078a E433     		adds	r3, r3, #228
 10229 078c 1A68     		ldr	r2, [r3]
 10230 078e 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10231 0790 9D48     		ldr	r0, .L490+4
 10232 0792 7424     		movs	r4, #116
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 236


 10233 0794 04FB03F3 		mul	r3, r4, r3
 10234 0798 0344     		add	r3, r3, r0
 10235 079a 03F58873 		add	r3, r3, #272
 10236 079e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10237 07a0 1C46     		mov	r4, r3
 10238 07a2 9948     		ldr	r0, .L490+4
 10239 07a4 2346     		mov	r3, r4
 10240 07a6 5B00     		lsls	r3, r3, #1
 10241 07a8 2344     		add	r3, r3, r4
 10242 07aa 1B01     		lsls	r3, r3, #4
 10243 07ac 0344     		add	r3, r3, r0
 10244 07ae 03F29D13 		addw	r3, r3, #413
 10245 07b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10246 07b4 9A40     		lsls	r2, r2, r3
 10247 07b6 9448     		ldr	r0, .L490+4
 10248 07b8 7423     		movs	r3, #116
 10249 07ba 03FB01F3 		mul	r3, r3, r1
 10250 07be 0344     		add	r3, r3, r0
 10251 07c0 E433     		adds	r3, r3, #228
 10252 07c2 1A60     		str	r2, [r3]
1410:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10253              		.loc 1 1410 0
 10254 07c4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10255 07c6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10256 07c8 8F4A     		ldr	r2, .L490+4
 10257 07ca 7420     		movs	r0, #116
 10258 07cc 00FB03F3 		mul	r3, r0, r3
 10259 07d0 1344     		add	r3, r3, r2
 10260 07d2 E833     		adds	r3, r3, #232
 10261 07d4 1A68     		ldr	r2, [r3]
 10262 07d6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10263 07d8 8B48     		ldr	r0, .L490+4
 10264 07da 7424     		movs	r4, #116
 10265 07dc 04FB03F3 		mul	r3, r4, r3
 10266 07e0 0344     		add	r3, r3, r0
 10267 07e2 03F58873 		add	r3, r3, #272
 10268 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10269 07e8 1C46     		mov	r4, r3
 10270 07ea 8748     		ldr	r0, .L490+4
 10271 07ec 2346     		mov	r3, r4
 10272 07ee 5B00     		lsls	r3, r3, #1
 10273 07f0 2344     		add	r3, r3, r4
 10274 07f2 1B01     		lsls	r3, r3, #4
 10275 07f4 0344     		add	r3, r3, r0
 10276 07f6 03F29D13 		addw	r3, r3, #413
 10277 07fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10278 07fc 9A40     		lsls	r2, r2, r3
 10279 07fe 8248     		ldr	r0, .L490+4
 10280 0800 7423     		movs	r3, #116
 10281 0802 03FB01F3 		mul	r3, r3, r1
 10282 0806 0344     		add	r3, r3, r0
 10283 0808 E833     		adds	r3, r3, #232
 10284 080a 1A60     		str	r2, [r3]
1411:..\src/command_processing.c ****             break;            
 10285              		.loc 1 1411 0
 10286 080c 00F003BE 		b	.L420
 10287              	.L393:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 237


1412:..\src/command_processing.c **** 
1413:..\src/command_processing.c ****         case 24:        //Rest Position
1414:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10288              		.loc 1 1414 0
 10289 0810 7C4B     		ldr	r3, .L490
 10290 0812 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10291 0814 1A06     		lsls	r2, r3, #24
 10292 0816 7B4B     		ldr	r3, .L490
 10293 0818 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10294 081a 1B04     		lsls	r3, r3, #16
 10295 081c 1A43     		orrs	r2, r2, r3
 10296 081e 794B     		ldr	r3, .L490
 10297 0820 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10298 0822 1B02     		lsls	r3, r3, #8
 10299 0824 1343     		orrs	r3, r3, r2
 10300 0826 774A     		ldr	r2, .L490
 10301 0828 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10302 082a 1343     		orrs	r3, r3, r2
 10303 082c 764A     		ldr	r2, .L490+4
 10304 082e C2F8A832 		str	r3, [r2, #680]
1415:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10305              		.loc 1 1415 0
 10306 0832 754B     		ldr	r3, .L490+4
 10307 0834 D3F8A822 		ldr	r2, [r3, #680]
 10308 0838 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10309 083a 7349     		ldr	r1, .L490+4
 10310 083c 7420     		movs	r0, #116
 10311 083e 00FB03F3 		mul	r3, r0, r3
 10312 0842 0B44     		add	r3, r3, r1
 10313 0844 03F58873 		add	r3, r3, #272
 10314 0848 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10315 084a 1846     		mov	r0, r3
 10316 084c 6E49     		ldr	r1, .L490+4
 10317 084e 0346     		mov	r3, r0
 10318 0850 5B00     		lsls	r3, r3, #1
 10319 0852 0344     		add	r3, r3, r0
 10320 0854 1B01     		lsls	r3, r3, #4
 10321 0856 0B44     		add	r3, r3, r1
 10322 0858 03F29D13 		addw	r3, r3, #413
 10323 085c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10324 085e 02FA03F3 		lsl	r3, r2, r3
 10325 0862 694A     		ldr	r2, .L490+4
 10326 0864 C2F8A832 		str	r3, [r2, #680]
1416:..\src/command_processing.c ****             break; 
 10327              		.loc 1 1416 0
 10328 0868 00F0D5BD 		b	.L420
 10329              	.L394:
1417:..\src/command_processing.c ****             
1418:..\src/command_processing.c ****         case 25:        //Rest Position Time Delay
1419:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10330              		.loc 1 1419 0
 10331 086c 654B     		ldr	r3, .L490
 10332 086e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10333 0870 1A06     		lsls	r2, r3, #24
 10334 0872 644B     		ldr	r3, .L490
 10335 0874 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10336 0876 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 238


 10337 0878 1A43     		orrs	r2, r2, r3
 10338 087a 624B     		ldr	r3, .L490
 10339 087c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10340 087e 1B02     		lsls	r3, r3, #8
 10341 0880 1343     		orrs	r3, r3, r2
 10342 0882 604A     		ldr	r2, .L490
 10343 0884 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10344 0886 1343     		orrs	r3, r3, r2
 10345 0888 5F4A     		ldr	r2, .L490+4
 10346 088a C2F8AC32 		str	r3, [r2, #684]
1420:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10347              		.loc 1 1420 0
 10348 088e 5E4B     		ldr	r3, .L490+4
 10349 0890 D3F8AC32 		ldr	r3, [r3, #684]
 10350 0894 092B     		cmp	r3, #9
 10351 0896 00F3B585 		bgt	.L481
 10352              		.loc 1 1420 0 is_stmt 0 discriminator 1
 10353 089a 5B4B     		ldr	r3, .L490+4
 10354 089c 0A22     		movs	r2, #10
 10355 089e C3F8AC22 		str	r2, [r3, #684]
1421:..\src/command_processing.c ****            break; 
 10356              		.loc 1 1421 0 is_stmt 1 discriminator 1
 10357 08a2 00F0AFBD 		b	.L481
 10358              	.L395:
1422:..\src/command_processing.c ****             
1423:..\src/command_processing.c ****         case 29:        //Right/Left hand flag
1424:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10359              		.loc 1 1424 0
 10360 08a6 574B     		ldr	r3, .L490
 10361 08a8 DB78     		ldrb	r3, [r3, #3]
 10362 08aa BB74     		strb	r3, [r7, #18]
1425:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10363              		.loc 1 1425 0
 10364 08ac BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10365 08ae 002B     		cmp	r3, #0
 10366 08b0 04D0     		beq	.L438
1426:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10367              		.loc 1 1426 0
 10368 08b2 554B     		ldr	r3, .L490+4
 10369 08b4 0122     		movs	r2, #1
 10370 08b6 83F8A720 		strb	r2, [r3, #167]
 10371 08ba 03E0     		b	.L439
 10372              	.L438:
1427:..\src/command_processing.c ****             } else {            // 0
1428:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10373              		.loc 1 1428 0
 10374 08bc 524B     		ldr	r3, .L490+4
 10375 08be 0022     		movs	r2, #0
 10376 08c0 83F8A720 		strb	r2, [r3, #167]
 10377              	.L439:
1429:..\src/command_processing.c ****             }
1430:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
 10378              		.loc 1 1430 0
 10379 08c4 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10380 08c6 514A     		ldr	r2, .L490+8
 10381 08c8 0121     		movs	r1, #1
 10382 08ca D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 239


1431:..\src/command_processing.c **** 
1432:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10383              		.loc 1 1432 0
 10384 08cc 4E4B     		ldr	r3, .L490+4
 10385 08ce 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10386 08d2 002B     		cmp	r3, #0
 10387 08d4 40F09885 		bne	.L482
1433:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1434:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10388              		.loc 1 1434 0
 10389 08d8 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10390 08da 4B4A     		ldr	r2, .L490+4
 10391 08dc 92F8A700 		ldrb	r0, [r2, #167]	@ zero_extendqisi2
 10392 08e0 494A     		ldr	r2, .L490+4
 10393 08e2 7421     		movs	r1, #116
 10394 08e4 01FB03F3 		mul	r3, r1, r3
 10395 08e8 1344     		add	r3, r3, r2
 10396 08ea 03F58873 		add	r3, r3, #272
 10397 08ee 0246     		mov	r2, r0
 10398 08f0 1A70     		strb	r2, [r3]
1435:..\src/command_processing.c ****                 
1436:..\src/command_processing.c ****                 // Change also gears parameters
1437:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10399              		.loc 1 1437 0
 10400 08f2 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10401 08f4 444A     		ldr	r2, .L490+4
 10402 08f6 7421     		movs	r1, #116
 10403 08f8 01FB03F3 		mul	r3, r1, r3
 10404 08fc 1344     		add	r3, r3, r2
 10405 08fe 03F58873 		add	r3, r3, #272
 10406 0902 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10407 0904 1946     		mov	r1, r3
 10408 0906 404A     		ldr	r2, .L490+4
 10409 0908 0B46     		mov	r3, r1
 10410 090a 5B00     		lsls	r3, r3, #1
 10411 090c 0B44     		add	r3, r3, r1
 10412 090e 1B01     		lsls	r3, r3, #4
 10413 0910 1344     		add	r3, r3, r2
 10414 0912 03F5DC73 		add	r3, r3, #440
 10415 0916 0122     		movs	r2, #1
 10416 0918 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10417              		.loc 1 1438 0
 10418 091a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10419 091c 3A4A     		ldr	r2, .L490+4
 10420 091e 7421     		movs	r1, #116
 10421 0920 01FB03F3 		mul	r3, r1, r3
 10422 0924 1344     		add	r3, r3, r2
 10423 0926 03F58873 		add	r3, r3, #272
 10424 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10425 092c 1946     		mov	r1, r3
 10426 092e 364A     		ldr	r2, .L490+4
 10427 0930 0B46     		mov	r3, r1
 10428 0932 5B00     		lsls	r3, r3, #1
 10429 0934 0B44     		add	r3, r3, r1
 10430 0936 1B01     		lsls	r3, r3, #4
 10431 0938 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 240


 10432 093a 03F2BD13 		addw	r3, r3, #445
 10433 093e 2322     		movs	r2, #35
 10434 0940 1A70     		strb	r2, [r3]
1439:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10435              		.loc 1 1439 0
 10436 0942 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10437 0944 304A     		ldr	r2, .L490+4
 10438 0946 7421     		movs	r1, #116
 10439 0948 01FB03F3 		mul	r3, r1, r3
 10440 094c 1344     		add	r3, r3, r2
 10441 094e 03F58873 		add	r3, r3, #272
 10442 0952 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10443 0954 1946     		mov	r1, r3
 10444 0956 2C4A     		ldr	r2, .L490+4
 10445 0958 0B46     		mov	r3, r1
 10446 095a 5B00     		lsls	r3, r3, #1
 10447 095c 0B44     		add	r3, r3, r1
 10448 095e 1B01     		lsls	r3, r3, #4
 10449 0960 1344     		add	r3, r3, r2
 10450 0962 03F5DF73 		add	r3, r3, #446
 10451 0966 0322     		movs	r2, #3
 10452 0968 1A70     		strb	r2, [r3]
1440:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10453              		.loc 1 1440 0
 10454 096a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10455 096c 264A     		ldr	r2, .L490+4
 10456 096e 7421     		movs	r1, #116
 10457 0970 01FB03F3 		mul	r3, r1, r3
 10458 0974 1344     		add	r3, r3, r2
 10459 0976 03F58873 		add	r3, r3, #272
 10460 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10461 097c 1946     		mov	r1, r3
 10462 097e 224A     		ldr	r2, .L490+4
 10463 0980 0B46     		mov	r3, r1
 10464 0982 5B00     		lsls	r3, r3, #1
 10465 0984 0B44     		add	r3, r3, r1
 10466 0986 1B01     		lsls	r3, r3, #4
 10467 0988 1344     		add	r3, r3, r2
 10468 098a 03F2BF13 		addw	r3, r3, #447
 10469 098e FF22     		movs	r2, #255
 10470 0990 1A70     		strb	r2, [r3]
1441:..\src/command_processing.c ****                 
1442:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1443:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10471              		.loc 1 1443 0
 10472 0992 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10473 0994 1C4A     		ldr	r2, .L490+4
 10474 0996 7421     		movs	r1, #116
 10475 0998 01FB03F3 		mul	r3, r1, r3
 10476 099c 1344     		add	r3, r3, r2
 10477 099e 03F21113 		addw	r3, r3, #273
 10478 09a2 0122     		movs	r2, #1
 10479 09a4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10480              		.loc 1 1444 0
 10481 09a6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10482 09a8 174A     		ldr	r2, .L490+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 241


 10483 09aa 7421     		movs	r1, #116
 10484 09ac 01FB03F3 		mul	r3, r1, r3
 10485 09b0 1344     		add	r3, r3, r2
 10486 09b2 03F58973 		add	r3, r3, #274
 10487 09b6 0122     		movs	r2, #1
 10488 09b8 1A70     		strb	r2, [r3]
1445:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10489              		.loc 1 1445 0
 10490 09ba 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10491 09bc 124A     		ldr	r2, .L490+4
 10492 09be 7421     		movs	r1, #116
 10493 09c0 01FB03F3 		mul	r3, r1, r3
 10494 09c4 1344     		add	r3, r3, r2
 10495 09c6 E433     		adds	r3, r3, #228
 10496 09c8 0022     		movs	r2, #0
 10497 09ca 1A60     		str	r2, [r3]
1446:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10498              		.loc 1 1446 0
 10499 09cc 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10500 09ce 0E4B     		ldr	r3, .L490+4
 10501 09d0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10502 09d4 1846     		mov	r0, r3
 10503 09d6 0C4A     		ldr	r2, .L490+4
 10504 09d8 0346     		mov	r3, r0
 10505 09da 5B00     		lsls	r3, r3, #1
 10506 09dc 0344     		add	r3, r3, r0
 10507 09de 1B01     		lsls	r3, r3, #4
 10508 09e0 1344     		add	r3, r3, r2
 10509 09e2 03F29D13 		addw	r3, r3, #413
 10510 09e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10511 09e8 1A46     		mov	r2, r3
 10512 09ea 4FF47A53 		mov	r3, #16000
 10513 09ee 03FA02F2 		lsl	r2, r3, r2
 10514 09f2 0548     		ldr	r0, .L490+4
 10515 09f4 7423     		movs	r3, #116
 10516 09f6 03FB01F3 		mul	r3, r3, r1
 10517 09fa 0344     		add	r3, r3, r0
 10518 09fc E833     		adds	r3, r3, #232
 10519 09fe 1A60     		str	r2, [r3]
1447:..\src/command_processing.c ****             }    
1448:..\src/command_processing.c **** 
1449:..\src/command_processing.c ****             break; 
 10520              		.loc 1 1449 0
 10521 0a00 00F002BD 		b	.L482
 10522              	.L491:
 10523              		.align	2
 10524              	.L490:
 10525 0a04 00000000 		.word	g_rx
 10526 0a08 00000000 		.word	g_mem
 10527 0a0c 00000000 		.word	reset_last_value_flag
 10528              	.L396:
1450:..\src/command_processing.c **** 
1451:..\src/command_processing.c ****         case 32:        //Reset counters - uint8
1452:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10529              		.loc 1 1452 0
 10530 0a10 B54B     		ldr	r3, .L492
 10531 0a12 DB78     		ldrb	r3, [r3, #3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 242


 10532 0a14 BB74     		strb	r3, [r7, #18]
1453:..\src/command_processing.c ****             if (aux_uchar) {
 10533              		.loc 1 1453 0
 10534 0a16 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10535 0a18 002B     		cmp	r3, #0
 10536 0a1a 05D0     		beq	.L441
1454:..\src/command_processing.c ****                 reset_counters();
 10537              		.loc 1 1454 0
 10538 0a1c FFF7FEFF 		bl	reset_counters
1455:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10539              		.loc 1 1455 0
 10540 0a20 B24B     		ldr	r3, .L492+4
 10541 0a22 0022     		movs	r2, #0
 10542 0a24 83F8A820 		strb	r2, [r3, #168]
 10543              	.L441:
1456:..\src/command_processing.c ****             }
1457:..\src/command_processing.c ****             
1458:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10544              		.loc 1 1458 0
 10545 0a28 B14B     		ldr	r3, .L492+8
 10546 0a2a 93F82E32 		ldrb	r3, [r3, #558]	@ zero_extendqisi2
 10547 0a2e 012B     		cmp	r3, #1
 10548 0a30 40F0EC84 		bne	.L483
1459:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1460:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10549              		.loc 1 1460 0
 10550 0a34 8720     		movs	r0, #135
 10551 0a36 FFF7FEFF 		bl	DS1302_read
 10552 0a3a 0346     		mov	r3, r0
 10553 0a3c BB74     		strb	r3, [r7, #18]
1461:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10554              		.loc 1 1461 0
 10555 0a3e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10556 0a40 1B09     		lsrs	r3, r3, #4
 10557 0a42 DBB2     		uxtb	r3, r3
 10558 0a44 1A46     		mov	r2, r3
 10559 0a46 9200     		lsls	r2, r2, #2
 10560 0a48 1344     		add	r3, r3, r2
 10561 0a4a 5B00     		lsls	r3, r3, #1
 10562 0a4c DAB2     		uxtb	r2, r3
 10563 0a4e BB7C     		ldrb	r3, [r7, #18]
 10564 0a50 03F00F03 		and	r3, r3, #15
 10565 0a54 DBB2     		uxtb	r3, r3
 10566 0a56 1344     		add	r3, r3, r2
 10567 0a58 DAB2     		uxtb	r2, r3
 10568 0a5a A44B     		ldr	r3, .L492+4
 10569 0a5c 83F8A420 		strb	r2, [r3, #164]
1462:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10570              		.loc 1 1462 0
 10571 0a60 8920     		movs	r0, #137
 10572 0a62 FFF7FEFF 		bl	DS1302_read
 10573 0a66 0346     		mov	r3, r0
 10574 0a68 BB74     		strb	r3, [r7, #18]
1463:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10575              		.loc 1 1463 0
 10576 0a6a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10577 0a6c 1B09     		lsrs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 243


 10578 0a6e DBB2     		uxtb	r3, r3
 10579 0a70 1A46     		mov	r2, r3
 10580 0a72 9200     		lsls	r2, r2, #2
 10581 0a74 1344     		add	r3, r3, r2
 10582 0a76 5B00     		lsls	r3, r3, #1
 10583 0a78 DAB2     		uxtb	r2, r3
 10584 0a7a BB7C     		ldrb	r3, [r7, #18]
 10585 0a7c 03F00F03 		and	r3, r3, #15
 10586 0a80 DBB2     		uxtb	r3, r3
 10587 0a82 1344     		add	r3, r3, r2
 10588 0a84 DAB2     		uxtb	r2, r3
 10589 0a86 994B     		ldr	r3, .L492+4
 10590 0a88 83F8A520 		strb	r2, [r3, #165]
1464:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10591              		.loc 1 1464 0
 10592 0a8c 8D20     		movs	r0, #141
 10593 0a8e FFF7FEFF 		bl	DS1302_read
 10594 0a92 0346     		mov	r3, r0
 10595 0a94 BB74     		strb	r3, [r7, #18]
1465:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10596              		.loc 1 1465 0
 10597 0a96 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10598 0a98 1B09     		lsrs	r3, r3, #4
 10599 0a9a DBB2     		uxtb	r3, r3
 10600 0a9c 1A46     		mov	r2, r3
 10601 0a9e 9200     		lsls	r2, r2, #2
 10602 0aa0 1344     		add	r3, r3, r2
 10603 0aa2 5B00     		lsls	r3, r3, #1
 10604 0aa4 DAB2     		uxtb	r2, r3
 10605 0aa6 BB7C     		ldrb	r3, [r7, #18]
 10606 0aa8 03F00F03 		and	r3, r3, #15
 10607 0aac DBB2     		uxtb	r3, r3
 10608 0aae 1344     		add	r3, r3, r2
 10609 0ab0 DAB2     		uxtb	r2, r3
 10610 0ab2 8E4B     		ldr	r3, .L492+4
 10611 0ab4 83F8A620 		strb	r2, [r3, #166]
1466:..\src/command_processing.c ****             }
1467:..\src/command_processing.c ****             break;             
 10612              		.loc 1 1467 0
 10613 0ab8 00F0A8BC 		b	.L483
 10614              	.L397:
 10615              	.LBB23:
1468:..\src/command_processing.c ****             
1469:..\src/command_processing.c ****         case 33:         //Current Time
1470:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10616              		.loc 1 1470 0
 10617 0abc 0023     		movs	r3, #0
 10618 0abe 7B75     		strb	r3, [r7, #21]
 10619 0ac0 0CE0     		b	.L443
 10620              	.L444:
1471:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10621              		.loc 1 1471 0 discriminator 3
 10622 0ac2 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10623 0ac4 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10624 0ac6 0332     		adds	r2, r2, #3
 10625 0ac8 8749     		ldr	r1, .L492
 10626 0aca 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 244


 10627 0acc 874A     		ldr	r2, .L492+4
 10628 0ace 1344     		add	r3, r3, r2
 10629 0ad0 0A46     		mov	r2, r1
 10630 0ad2 83F82822 		strb	r2, [r3, #552]
1470:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10631              		.loc 1 1470 0 discriminator 3
 10632 0ad6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10633 0ad8 0133     		adds	r3, r3, #1
 10634 0ada 7B75     		strb	r3, [r7, #21]
 10635              	.L443:
1470:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10636              		.loc 1 1470 0 is_stmt 0 discriminator 1
 10637 0adc 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10638 0ade 052B     		cmp	r3, #5
 10639 0ae0 EFD9     		bls	.L444
 10640              	.LBE23:
1472:..\src/command_processing.c ****             }
1473:..\src/command_processing.c ****             
1474:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10641              		.loc 1 1474 0 is_stmt 1
 10642 0ae2 824B     		ldr	r3, .L492+4
 10643 0ae4 93F82E32 		ldrb	r3, [r3, #558]	@ zero_extendqisi2
 10644 0ae8 012B     		cmp	r3, #1
 10645 0aea 40F09184 		bne	.L484
1475:..\src/command_processing.c ****                 set_RTC_time();
 10646              		.loc 1 1475 0
 10647 0aee FFF7FEFF 		bl	set_RTC_time
1476:..\src/command_processing.c ****             }
1477:..\src/command_processing.c ****             break;
 10648              		.loc 1 1477 0
 10649 0af2 00F08DBC 		b	.L484
 10650              	.L398:
1478:..\src/command_processing.c ****            
1479:..\src/command_processing.c ****         case 39:        // First Motor Driver Type
1480:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10651              		.loc 1 1480 0
 10652 0af6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10653 0af8 7B4A     		ldr	r2, .L492
 10654 0afa D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 10655 0afc 7B4A     		ldr	r2, .L492+4
 10656 0afe 7421     		movs	r1, #116
 10657 0b00 01FB03F3 		mul	r3, r1, r3
 10658 0b04 1344     		add	r3, r3, r2
 10659 0b06 E233     		adds	r3, r3, #226
 10660 0b08 0246     		mov	r2, r0
 10661 0b0a 1A70     		strb	r2, [r3]
1481:..\src/command_processing.c ****             set_motor_driver_type();            
 10662              		.loc 1 1481 0
 10663 0b0c FFF7FEFF 		bl	set_motor_driver_type
1482:..\src/command_processing.c ****             break;
 10664              		.loc 1 1482 0
 10665 0b10 00F081BC 		b	.L420
 10666              	.L399:
1483:..\src/command_processing.c ****             
1484:..\src/command_processing.c ****         case 45:         // Second Motor Position PID
1485:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10667              		.loc 1 1485 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 245


 10668 0b14 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 10669 0b16 764A     		ldr	r2, .L492+8
 10670 0b18 7421     		movs	r1, #116
 10671 0b1a 01FB03F3 		mul	r3, r1, r3
 10672 0b1e 1344     		add	r3, r3, r2
 10673 0b20 03F20F13 		addw	r3, r3, #271
 10674 0b24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10675 0b26 032B     		cmp	r3, #3
 10676 0b28 00F08280 		beq	.L446
1486:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10677              		.loc 1 1486 0
 10678 0b2c 714B     		ldr	r3, .L492+12
 10679 0b2e 1B68     		ldr	r3, [r3]	@ float
 10680 0b30 FB60     		str	r3, [r7, #12]	@ float
1487:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10681              		.loc 1 1487 0
 10682 0b32 0023     		movs	r3, #0
 10683 0b34 BB75     		strb	r3, [r7, #22]
 10684 0b36 0EE0     		b	.L447
 10685              	.L448:
1488:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10686              		.loc 1 1488 0 discriminator 3
 10687 0b38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10688 0b3a C3F10303 		rsb	r3, r3, #3
 10689 0b3e 07F10802 		add	r2, r7, #8
 10690 0b42 1344     		add	r3, r3, r2
 10691 0b44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10692 0b46 07F10C01 		add	r1, r7, #12
 10693 0b4a 0A44     		add	r2, r2, r1
 10694 0b4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10695 0b4e 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10696              		.loc 1 1487 0 discriminator 3
 10697 0b50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10698 0b52 0133     		adds	r3, r3, #1
 10699 0b54 BB75     		strb	r3, [r7, #22]
 10700              	.L447:
1487:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10701              		.loc 1 1487 0 is_stmt 0 discriminator 1
 10702 0b56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10703 0b58 032B     		cmp	r3, #3
 10704 0b5a EDD9     		bls	.L448
1489:..\src/command_processing.c ****                 }
1490:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10705              		.loc 1 1490 0 is_stmt 1
 10706 0b5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10707 0b5e BB68     		ldr	r3, [r7, #8]	@ float
 10708 0b60 4FF08F41 		mov	r1, #1199570944
 10709 0b64 1846     		mov	r0, r3
 10710 0b66 FFF7FEFF 		bl	__aeabi_fmul
 10711 0b6a 0346     		mov	r3, r0
 10712 0b6c 1846     		mov	r0, r3
 10713 0b6e FFF7FEFF 		bl	__aeabi_f2iz
 10714 0b72 0146     		mov	r1, r0
 10715 0b74 5D4A     		ldr	r2, .L492+4
 10716 0b76 7423     		movs	r3, #116
 10717 0b78 03FB04F3 		mul	r3, r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 246


 10718 0b7c 1344     		add	r3, r3, r2
 10719 0b7e B033     		adds	r3, r3, #176
 10720 0b80 1960     		str	r1, [r3]
1491:..\src/command_processing.c ****                 
1492:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10721              		.loc 1 1492 0
 10722 0b82 5D4B     		ldr	r3, .L492+16
 10723 0b84 1B68     		ldr	r3, [r3]	@ float
 10724 0b86 FB60     		str	r3, [r7, #12]	@ float
1493:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10725              		.loc 1 1493 0
 10726 0b88 0023     		movs	r3, #0
 10727 0b8a BB75     		strb	r3, [r7, #22]
 10728 0b8c 0EE0     		b	.L449
 10729              	.L450:
1494:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10730              		.loc 1 1494 0 discriminator 3
 10731 0b8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10732 0b90 C3F10303 		rsb	r3, r3, #3
 10733 0b94 07F10802 		add	r2, r7, #8
 10734 0b98 1344     		add	r3, r3, r2
 10735 0b9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10736 0b9c 07F10C01 		add	r1, r7, #12
 10737 0ba0 0A44     		add	r2, r2, r1
 10738 0ba2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10739 0ba4 1A70     		strb	r2, [r3]
1493:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10740              		.loc 1 1493 0 discriminator 3
 10741 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10742 0ba8 0133     		adds	r3, r3, #1
 10743 0baa BB75     		strb	r3, [r7, #22]
 10744              	.L449:
1493:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10745              		.loc 1 1493 0 is_stmt 0 discriminator 1
 10746 0bac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10747 0bae 032B     		cmp	r3, #3
 10748 0bb0 EDD9     		bls	.L450
1495:..\src/command_processing.c ****                 }
1496:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10749              		.loc 1 1496 0 is_stmt 1
 10750 0bb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10751 0bb4 BB68     		ldr	r3, [r7, #8]	@ float
 10752 0bb6 4FF08F41 		mov	r1, #1199570944
 10753 0bba 1846     		mov	r0, r3
 10754 0bbc FFF7FEFF 		bl	__aeabi_fmul
 10755 0bc0 0346     		mov	r3, r0
 10756 0bc2 1846     		mov	r0, r3
 10757 0bc4 FFF7FEFF 		bl	__aeabi_f2iz
 10758 0bc8 0146     		mov	r1, r0
 10759 0bca 484A     		ldr	r2, .L492+4
 10760 0bcc 7423     		movs	r3, #116
 10761 0bce 03FB04F3 		mul	r3, r3, r4
 10762 0bd2 1344     		add	r3, r3, r2
 10763 0bd4 B433     		adds	r3, r3, #180
 10764 0bd6 1960     		str	r1, [r3]
1497:..\src/command_processing.c ****                 
1498:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 247


 10765              		.loc 1 1498 0
 10766 0bd8 484B     		ldr	r3, .L492+20
 10767 0bda 1B68     		ldr	r3, [r3]	@ float
 10768 0bdc FB60     		str	r3, [r7, #12]	@ float
1499:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10769              		.loc 1 1499 0
 10770 0bde 0023     		movs	r3, #0
 10771 0be0 BB75     		strb	r3, [r7, #22]
 10772 0be2 0EE0     		b	.L451
 10773              	.L452:
1500:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10774              		.loc 1 1500 0 discriminator 3
 10775 0be4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10776 0be6 C3F10303 		rsb	r3, r3, #3
 10777 0bea 07F10802 		add	r2, r7, #8
 10778 0bee 1344     		add	r3, r3, r2
 10779 0bf0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10780 0bf2 07F10C01 		add	r1, r7, #12
 10781 0bf6 0A44     		add	r2, r2, r1
 10782 0bf8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10783 0bfa 1A70     		strb	r2, [r3]
1499:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10784              		.loc 1 1499 0 discriminator 3
 10785 0bfc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10786 0bfe 0133     		adds	r3, r3, #1
 10787 0c00 BB75     		strb	r3, [r7, #22]
 10788              	.L451:
1499:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10789              		.loc 1 1499 0 is_stmt 0 discriminator 1
 10790 0c02 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10791 0c04 032B     		cmp	r3, #3
 10792 0c06 EDD9     		bls	.L452
1501:..\src/command_processing.c ****                 }
1502:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10793              		.loc 1 1502 0 is_stmt 1
 10794 0c08 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10795 0c0a BB68     		ldr	r3, [r7, #8]	@ float
 10796 0c0c 4FF08F41 		mov	r1, #1199570944
 10797 0c10 1846     		mov	r0, r3
 10798 0c12 FFF7FEFF 		bl	__aeabi_fmul
 10799 0c16 0346     		mov	r3, r0
 10800 0c18 1846     		mov	r0, r3
 10801 0c1a FFF7FEFF 		bl	__aeabi_f2iz
 10802 0c1e 0146     		mov	r1, r0
 10803 0c20 324A     		ldr	r2, .L492+4
 10804 0c22 7423     		movs	r3, #116
 10805 0c24 03FB04F3 		mul	r3, r3, r4
 10806 0c28 1344     		add	r3, r3, r2
 10807 0c2a B833     		adds	r3, r3, #184
 10808 0c2c 1960     		str	r1, [r3]
1503:..\src/command_processing.c ****             }
1504:..\src/command_processing.c ****             else {
1505:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1506:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1507:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1508:..\src/command_processing.c ****                 }
1509:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 248


1510:..\src/command_processing.c ****                 
1511:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1512:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1513:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1514:..\src/command_processing.c ****                 }
1515:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1516:..\src/command_processing.c ****                 
1517:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1518:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1519:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1520:..\src/command_processing.c ****                 }
1521:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1522:..\src/command_processing.c ****             }
1523:..\src/command_processing.c ****             break;
 10809              		.loc 1 1523 0
 10810 0c2e F2E3     		b	.L420
 10811              	.L446:
1505:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10812              		.loc 1 1505 0
 10813 0c30 304B     		ldr	r3, .L492+12
 10814 0c32 1B68     		ldr	r3, [r3]	@ float
 10815 0c34 FB60     		str	r3, [r7, #12]	@ float
1506:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10816              		.loc 1 1506 0
 10817 0c36 0023     		movs	r3, #0
 10818 0c38 BB75     		strb	r3, [r7, #22]
 10819 0c3a 0EE0     		b	.L454
 10820              	.L455:
1507:..\src/command_processing.c ****                 }
 10821              		.loc 1 1507 0 discriminator 3
 10822 0c3c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10823 0c3e C3F10303 		rsb	r3, r3, #3
 10824 0c42 07F10802 		add	r2, r7, #8
 10825 0c46 1344     		add	r3, r3, r2
 10826 0c48 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10827 0c4a 07F10C01 		add	r1, r7, #12
 10828 0c4e 0A44     		add	r2, r2, r1
 10829 0c50 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10830 0c52 1A70     		strb	r2, [r3]
1506:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10831              		.loc 1 1506 0 discriminator 3
 10832 0c54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10833 0c56 0133     		adds	r3, r3, #1
 10834 0c58 BB75     		strb	r3, [r7, #22]
 10835              	.L454:
1506:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10836              		.loc 1 1506 0 is_stmt 0 discriminator 1
 10837 0c5a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10838 0c5c 032B     		cmp	r3, #3
 10839 0c5e EDD9     		bls	.L455
1509:..\src/command_processing.c ****                 
 10840              		.loc 1 1509 0 is_stmt 1
 10841 0c60 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10842 0c62 BB68     		ldr	r3, [r7, #8]	@ float
 10843 0c64 4FF08F41 		mov	r1, #1199570944
 10844 0c68 1846     		mov	r0, r3
 10845 0c6a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 249


 10846 0c6e 0346     		mov	r3, r0
 10847 0c70 1846     		mov	r0, r3
 10848 0c72 FFF7FEFF 		bl	__aeabi_f2iz
 10849 0c76 0146     		mov	r1, r0
 10850 0c78 1C4A     		ldr	r2, .L492+4
 10851 0c7a 7423     		movs	r3, #116
 10852 0c7c 03FB04F3 		mul	r3, r3, r4
 10853 0c80 1344     		add	r3, r3, r2
 10854 0c82 C833     		adds	r3, r3, #200
 10855 0c84 1960     		str	r1, [r3]
1511:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10856              		.loc 1 1511 0
 10857 0c86 1C4B     		ldr	r3, .L492+16
 10858 0c88 1B68     		ldr	r3, [r3]	@ float
 10859 0c8a FB60     		str	r3, [r7, #12]	@ float
1512:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10860              		.loc 1 1512 0
 10861 0c8c 0023     		movs	r3, #0
 10862 0c8e BB75     		strb	r3, [r7, #22]
 10863 0c90 0EE0     		b	.L456
 10864              	.L457:
1513:..\src/command_processing.c ****                 }
 10865              		.loc 1 1513 0 discriminator 3
 10866 0c92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10867 0c94 C3F10303 		rsb	r3, r3, #3
 10868 0c98 07F10802 		add	r2, r7, #8
 10869 0c9c 1344     		add	r3, r3, r2
 10870 0c9e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10871 0ca0 07F10C01 		add	r1, r7, #12
 10872 0ca4 0A44     		add	r2, r2, r1
 10873 0ca6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10874 0ca8 1A70     		strb	r2, [r3]
1512:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10875              		.loc 1 1512 0 discriminator 3
 10876 0caa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10877 0cac 0133     		adds	r3, r3, #1
 10878 0cae BB75     		strb	r3, [r7, #22]
 10879              	.L456:
1512:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10880              		.loc 1 1512 0 is_stmt 0 discriminator 1
 10881 0cb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10882 0cb2 032B     		cmp	r3, #3
 10883 0cb4 EDD9     		bls	.L457
1515:..\src/command_processing.c ****                 
 10884              		.loc 1 1515 0 is_stmt 1
 10885 0cb6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10886 0cb8 BB68     		ldr	r3, [r7, #8]	@ float
 10887 0cba 4FF08F41 		mov	r1, #1199570944
 10888 0cbe 1846     		mov	r0, r3
 10889 0cc0 FFF7FEFF 		bl	__aeabi_fmul
 10890 0cc4 0346     		mov	r3, r0
 10891 0cc6 1846     		mov	r0, r3
 10892 0cc8 FFF7FEFF 		bl	__aeabi_f2iz
 10893 0ccc 0146     		mov	r1, r0
 10894 0cce 074A     		ldr	r2, .L492+4
 10895 0cd0 7423     		movs	r3, #116
 10896 0cd2 03FB04F3 		mul	r3, r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 250


 10897 0cd6 1344     		add	r3, r3, r2
 10898 0cd8 CC33     		adds	r3, r3, #204
 10899 0cda 1960     		str	r1, [r3]
1517:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10900              		.loc 1 1517 0
 10901 0cdc 074B     		ldr	r3, .L492+20
 10902 0cde 1B68     		ldr	r3, [r3]	@ float
 10903 0ce0 FB60     		str	r3, [r7, #12]	@ float
1518:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10904              		.loc 1 1518 0
 10905 0ce2 0023     		movs	r3, #0
 10906 0ce4 BB75     		strb	r3, [r7, #22]
 10907 0ce6 1AE0     		b	.L458
 10908              	.L493:
 10909              		.align	2
 10910              	.L492:
 10911 0ce8 00000000 		.word	g_rx
 10912 0cec 00000000 		.word	g_mem
 10913 0cf0 00000000 		.word	c_mem
 10914 0cf4 03000000 		.word	g_rx+3
 10915 0cf8 07000000 		.word	g_rx+7
 10916 0cfc 0B000000 		.word	g_rx+11
 10917              	.L459:
1519:..\src/command_processing.c ****                 }
 10918              		.loc 1 1519 0 discriminator 3
 10919 0d00 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10920 0d02 C3F10303 		rsb	r3, r3, #3
 10921 0d06 07F10802 		add	r2, r7, #8
 10922 0d0a 1344     		add	r3, r3, r2
 10923 0d0c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10924 0d0e 07F10C01 		add	r1, r7, #12
 10925 0d12 0A44     		add	r2, r2, r1
 10926 0d14 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10927 0d16 1A70     		strb	r2, [r3]
1518:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10928              		.loc 1 1518 0 discriminator 3
 10929 0d18 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10930 0d1a 0133     		adds	r3, r3, #1
 10931 0d1c BB75     		strb	r3, [r7, #22]
 10932              	.L458:
1518:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10933              		.loc 1 1518 0 is_stmt 0 discriminator 1
 10934 0d1e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10935 0d20 032B     		cmp	r3, #3
 10936 0d22 EDD9     		bls	.L459
1521:..\src/command_processing.c ****             }
 10937              		.loc 1 1521 0 is_stmt 1
 10938 0d24 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10939 0d26 BB68     		ldr	r3, [r7, #8]	@ float
 10940 0d28 4FF08F41 		mov	r1, #1199570944
 10941 0d2c 1846     		mov	r0, r3
 10942 0d2e FFF7FEFF 		bl	__aeabi_fmul
 10943 0d32 0346     		mov	r3, r0
 10944 0d34 1846     		mov	r0, r3
 10945 0d36 FFF7FEFF 		bl	__aeabi_f2iz
 10946 0d3a 0146     		mov	r1, r0
 10947 0d3c 9E4A     		ldr	r2, .L494
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 251


 10948 0d3e 7423     		movs	r3, #116
 10949 0d40 03FB04F3 		mul	r3, r3, r4
 10950 0d44 1344     		add	r3, r3, r2
 10951 0d46 D033     		adds	r3, r3, #208
 10952 0d48 1960     		str	r1, [r3]
 10953              		.loc 1 1523 0
 10954 0d4a 64E3     		b	.L420
 10955              	.L400:
1524:..\src/command_processing.c ****             
1525:..\src/command_processing.c ****         case 46:         // Second Motor Current PID
1526:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10956              		.loc 1 1526 0
 10957 0d4c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 10958 0d4e 9B4A     		ldr	r2, .L494+4
 10959 0d50 7421     		movs	r1, #116
 10960 0d52 01FB03F3 		mul	r3, r1, r3
 10961 0d56 1344     		add	r3, r3, r2
 10962 0d58 03F20F13 		addw	r3, r3, #271
 10963 0d5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10964 0d5e 032B     		cmp	r3, #3
 10965 0d60 00F08280 		beq	.L460
1527:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10966              		.loc 1 1527 0
 10967 0d64 964B     		ldr	r3, .L494+8
 10968 0d66 1B68     		ldr	r3, [r3]	@ float
 10969 0d68 FB60     		str	r3, [r7, #12]	@ float
1528:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10970              		.loc 1 1528 0
 10971 0d6a 0023     		movs	r3, #0
 10972 0d6c BB75     		strb	r3, [r7, #22]
 10973 0d6e 0EE0     		b	.L461
 10974              	.L462:
1529:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10975              		.loc 1 1529 0 discriminator 3
 10976 0d70 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10977 0d72 C3F10303 		rsb	r3, r3, #3
 10978 0d76 07F10802 		add	r2, r7, #8
 10979 0d7a 1344     		add	r3, r3, r2
 10980 0d7c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10981 0d7e 07F10C01 		add	r1, r7, #12
 10982 0d82 0A44     		add	r2, r2, r1
 10983 0d84 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10984 0d86 1A70     		strb	r2, [r3]
1528:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10985              		.loc 1 1528 0 discriminator 3
 10986 0d88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10987 0d8a 0133     		adds	r3, r3, #1
 10988 0d8c BB75     		strb	r3, [r7, #22]
 10989              	.L461:
1528:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10990              		.loc 1 1528 0 is_stmt 0 discriminator 1
 10991 0d8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10992 0d90 032B     		cmp	r3, #3
 10993 0d92 EDD9     		bls	.L462
1530:..\src/command_processing.c ****                 }
1531:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10994              		.loc 1 1531 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 252


 10995 0d94 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10996 0d96 BB68     		ldr	r3, [r7, #8]	@ float
 10997 0d98 4FF08F41 		mov	r1, #1199570944
 10998 0d9c 1846     		mov	r0, r3
 10999 0d9e FFF7FEFF 		bl	__aeabi_fmul
 11000 0da2 0346     		mov	r3, r0
 11001 0da4 1846     		mov	r0, r3
 11002 0da6 FFF7FEFF 		bl	__aeabi_f2iz
 11003 0daa 0146     		mov	r1, r0
 11004 0dac 824A     		ldr	r2, .L494
 11005 0dae 7423     		movs	r3, #116
 11006 0db0 03FB04F3 		mul	r3, r3, r4
 11007 0db4 1344     		add	r3, r3, r2
 11008 0db6 BC33     		adds	r3, r3, #188
 11009 0db8 1960     		str	r1, [r3]
1532:..\src/command_processing.c ****                 
1533:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11010              		.loc 1 1533 0
 11011 0dba 824B     		ldr	r3, .L494+12
 11012 0dbc 1B68     		ldr	r3, [r3]	@ float
 11013 0dbe FB60     		str	r3, [r7, #12]	@ float
1534:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11014              		.loc 1 1534 0
 11015 0dc0 0023     		movs	r3, #0
 11016 0dc2 BB75     		strb	r3, [r7, #22]
 11017 0dc4 0EE0     		b	.L463
 11018              	.L464:
1535:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11019              		.loc 1 1535 0 discriminator 3
 11020 0dc6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11021 0dc8 C3F10303 		rsb	r3, r3, #3
 11022 0dcc 07F10802 		add	r2, r7, #8
 11023 0dd0 1344     		add	r3, r3, r2
 11024 0dd2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11025 0dd4 07F10C01 		add	r1, r7, #12
 11026 0dd8 0A44     		add	r2, r2, r1
 11027 0dda 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11028 0ddc 1A70     		strb	r2, [r3]
1534:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11029              		.loc 1 1534 0 discriminator 3
 11030 0dde BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11031 0de0 0133     		adds	r3, r3, #1
 11032 0de2 BB75     		strb	r3, [r7, #22]
 11033              	.L463:
1534:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11034              		.loc 1 1534 0 is_stmt 0 discriminator 1
 11035 0de4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11036 0de6 032B     		cmp	r3, #3
 11037 0de8 EDD9     		bls	.L464
1536:..\src/command_processing.c ****                 }
1537:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11038              		.loc 1 1537 0 is_stmt 1
 11039 0dea FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11040 0dec BB68     		ldr	r3, [r7, #8]	@ float
 11041 0dee 4FF08F41 		mov	r1, #1199570944
 11042 0df2 1846     		mov	r0, r3
 11043 0df4 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 253


 11044 0df8 0346     		mov	r3, r0
 11045 0dfa 1846     		mov	r0, r3
 11046 0dfc FFF7FEFF 		bl	__aeabi_f2iz
 11047 0e00 0146     		mov	r1, r0
 11048 0e02 6D4A     		ldr	r2, .L494
 11049 0e04 7423     		movs	r3, #116
 11050 0e06 03FB04F3 		mul	r3, r3, r4
 11051 0e0a 1344     		add	r3, r3, r2
 11052 0e0c C033     		adds	r3, r3, #192
 11053 0e0e 1960     		str	r1, [r3]
1538:..\src/command_processing.c ****                 
1539:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11054              		.loc 1 1539 0
 11055 0e10 6D4B     		ldr	r3, .L494+16
 11056 0e12 1B68     		ldr	r3, [r3]	@ float
 11057 0e14 FB60     		str	r3, [r7, #12]	@ float
1540:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11058              		.loc 1 1540 0
 11059 0e16 0023     		movs	r3, #0
 11060 0e18 BB75     		strb	r3, [r7, #22]
 11061 0e1a 0EE0     		b	.L465
 11062              	.L466:
1541:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11063              		.loc 1 1541 0 discriminator 3
 11064 0e1c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11065 0e1e C3F10303 		rsb	r3, r3, #3
 11066 0e22 07F10802 		add	r2, r7, #8
 11067 0e26 1344     		add	r3, r3, r2
 11068 0e28 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11069 0e2a 07F10C01 		add	r1, r7, #12
 11070 0e2e 0A44     		add	r2, r2, r1
 11071 0e30 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11072 0e32 1A70     		strb	r2, [r3]
1540:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11073              		.loc 1 1540 0 discriminator 3
 11074 0e34 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11075 0e36 0133     		adds	r3, r3, #1
 11076 0e38 BB75     		strb	r3, [r7, #22]
 11077              	.L465:
1540:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11078              		.loc 1 1540 0 is_stmt 0 discriminator 1
 11079 0e3a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11080 0e3c 032B     		cmp	r3, #3
 11081 0e3e EDD9     		bls	.L466
1542:..\src/command_processing.c ****                 }
1543:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11082              		.loc 1 1543 0 is_stmt 1
 11083 0e40 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11084 0e42 BB68     		ldr	r3, [r7, #8]	@ float
 11085 0e44 4FF08F41 		mov	r1, #1199570944
 11086 0e48 1846     		mov	r0, r3
 11087 0e4a FFF7FEFF 		bl	__aeabi_fmul
 11088 0e4e 0346     		mov	r3, r0
 11089 0e50 1846     		mov	r0, r3
 11090 0e52 FFF7FEFF 		bl	__aeabi_f2iz
 11091 0e56 0146     		mov	r1, r0
 11092 0e58 574A     		ldr	r2, .L494
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 254


 11093 0e5a 7423     		movs	r3, #116
 11094 0e5c 03FB04F3 		mul	r3, r3, r4
 11095 0e60 1344     		add	r3, r3, r2
 11096 0e62 C433     		adds	r3, r3, #196
 11097 0e64 1960     		str	r1, [r3]
1544:..\src/command_processing.c ****             }
1545:..\src/command_processing.c ****             else {
1546:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1547:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1548:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1549:..\src/command_processing.c ****                 }
1550:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1551:..\src/command_processing.c ****                 
1552:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1553:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1554:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1555:..\src/command_processing.c ****                 }
1556:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1557:..\src/command_processing.c ****                 
1558:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1559:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1560:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1561:..\src/command_processing.c ****                 }
1562:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1563:..\src/command_processing.c ****             }            
1564:..\src/command_processing.c ****             break;  
 11098              		.loc 1 1564 0
 11099 0e66 D6E2     		b	.L420
 11100              	.L460:
1546:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11101              		.loc 1 1546 0
 11102 0e68 554B     		ldr	r3, .L494+8
 11103 0e6a 1B68     		ldr	r3, [r3]	@ float
 11104 0e6c FB60     		str	r3, [r7, #12]	@ float
1547:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11105              		.loc 1 1547 0
 11106 0e6e 0023     		movs	r3, #0
 11107 0e70 BB75     		strb	r3, [r7, #22]
 11108 0e72 0EE0     		b	.L468
 11109              	.L469:
1548:..\src/command_processing.c ****                 }
 11110              		.loc 1 1548 0 discriminator 3
 11111 0e74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11112 0e76 C3F10303 		rsb	r3, r3, #3
 11113 0e7a 07F10802 		add	r2, r7, #8
 11114 0e7e 1344     		add	r3, r3, r2
 11115 0e80 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11116 0e82 07F10C01 		add	r1, r7, #12
 11117 0e86 0A44     		add	r2, r2, r1
 11118 0e88 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11119 0e8a 1A70     		strb	r2, [r3]
1547:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11120              		.loc 1 1547 0 discriminator 3
 11121 0e8c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11122 0e8e 0133     		adds	r3, r3, #1
 11123 0e90 BB75     		strb	r3, [r7, #22]
 11124              	.L468:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 255


1547:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11125              		.loc 1 1547 0 is_stmt 0 discriminator 1
 11126 0e92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11127 0e94 032B     		cmp	r3, #3
 11128 0e96 EDD9     		bls	.L469
1550:..\src/command_processing.c ****                 
 11129              		.loc 1 1550 0 is_stmt 1
 11130 0e98 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11131 0e9a BB68     		ldr	r3, [r7, #8]	@ float
 11132 0e9c 4FF08F41 		mov	r1, #1199570944
 11133 0ea0 1846     		mov	r0, r3
 11134 0ea2 FFF7FEFF 		bl	__aeabi_fmul
 11135 0ea6 0346     		mov	r3, r0
 11136 0ea8 1846     		mov	r0, r3
 11137 0eaa FFF7FEFF 		bl	__aeabi_f2iz
 11138 0eae 0146     		mov	r1, r0
 11139 0eb0 414A     		ldr	r2, .L494
 11140 0eb2 7423     		movs	r3, #116
 11141 0eb4 03FB04F3 		mul	r3, r3, r4
 11142 0eb8 1344     		add	r3, r3, r2
 11143 0eba D433     		adds	r3, r3, #212
 11144 0ebc 1960     		str	r1, [r3]
1552:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11145              		.loc 1 1552 0
 11146 0ebe 414B     		ldr	r3, .L494+12
 11147 0ec0 1B68     		ldr	r3, [r3]	@ float
 11148 0ec2 FB60     		str	r3, [r7, #12]	@ float
1553:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11149              		.loc 1 1553 0
 11150 0ec4 0023     		movs	r3, #0
 11151 0ec6 BB75     		strb	r3, [r7, #22]
 11152 0ec8 0EE0     		b	.L470
 11153              	.L471:
1554:..\src/command_processing.c ****                 }
 11154              		.loc 1 1554 0 discriminator 3
 11155 0eca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11156 0ecc C3F10303 		rsb	r3, r3, #3
 11157 0ed0 07F10802 		add	r2, r7, #8
 11158 0ed4 1344     		add	r3, r3, r2
 11159 0ed6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11160 0ed8 07F10C01 		add	r1, r7, #12
 11161 0edc 0A44     		add	r2, r2, r1
 11162 0ede 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11163 0ee0 1A70     		strb	r2, [r3]
1553:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11164              		.loc 1 1553 0 discriminator 3
 11165 0ee2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11166 0ee4 0133     		adds	r3, r3, #1
 11167 0ee6 BB75     		strb	r3, [r7, #22]
 11168              	.L470:
1553:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11169              		.loc 1 1553 0 is_stmt 0 discriminator 1
 11170 0ee8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11171 0eea 032B     		cmp	r3, #3
 11172 0eec EDD9     		bls	.L471
1556:..\src/command_processing.c ****                 
 11173              		.loc 1 1556 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 256


 11174 0eee FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11175 0ef0 BB68     		ldr	r3, [r7, #8]	@ float
 11176 0ef2 4FF08F41 		mov	r1, #1199570944
 11177 0ef6 1846     		mov	r0, r3
 11178 0ef8 FFF7FEFF 		bl	__aeabi_fmul
 11179 0efc 0346     		mov	r3, r0
 11180 0efe 1846     		mov	r0, r3
 11181 0f00 FFF7FEFF 		bl	__aeabi_f2iz
 11182 0f04 0146     		mov	r1, r0
 11183 0f06 2C4A     		ldr	r2, .L494
 11184 0f08 7423     		movs	r3, #116
 11185 0f0a 03FB04F3 		mul	r3, r3, r4
 11186 0f0e 1344     		add	r3, r3, r2
 11187 0f10 D833     		adds	r3, r3, #216
 11188 0f12 1960     		str	r1, [r3]
1558:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11189              		.loc 1 1558 0
 11190 0f14 2C4B     		ldr	r3, .L494+16
 11191 0f16 1B68     		ldr	r3, [r3]	@ float
 11192 0f18 FB60     		str	r3, [r7, #12]	@ float
1559:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11193              		.loc 1 1559 0
 11194 0f1a 0023     		movs	r3, #0
 11195 0f1c BB75     		strb	r3, [r7, #22]
 11196 0f1e 0EE0     		b	.L472
 11197              	.L473:
1560:..\src/command_processing.c ****                 }
 11198              		.loc 1 1560 0 discriminator 3
 11199 0f20 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11200 0f22 C3F10303 		rsb	r3, r3, #3
 11201 0f26 07F10802 		add	r2, r7, #8
 11202 0f2a 1344     		add	r3, r3, r2
 11203 0f2c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11204 0f2e 07F10C01 		add	r1, r7, #12
 11205 0f32 0A44     		add	r2, r2, r1
 11206 0f34 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11207 0f36 1A70     		strb	r2, [r3]
1559:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11208              		.loc 1 1559 0 discriminator 3
 11209 0f38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11210 0f3a 0133     		adds	r3, r3, #1
 11211 0f3c BB75     		strb	r3, [r7, #22]
 11212              	.L472:
1559:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11213              		.loc 1 1559 0 is_stmt 0 discriminator 1
 11214 0f3e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11215 0f40 032B     		cmp	r3, #3
 11216 0f42 EDD9     		bls	.L473
1562:..\src/command_processing.c ****             }            
 11217              		.loc 1 1562 0 is_stmt 1
 11218 0f44 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11219 0f46 BB68     		ldr	r3, [r7, #8]	@ float
 11220 0f48 4FF08F41 		mov	r1, #1199570944
 11221 0f4c 1846     		mov	r0, r3
 11222 0f4e FFF7FEFF 		bl	__aeabi_fmul
 11223 0f52 0346     		mov	r3, r0
 11224 0f54 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 257


 11225 0f56 FFF7FEFF 		bl	__aeabi_f2iz
 11226 0f5a 0146     		mov	r1, r0
 11227 0f5c 164A     		ldr	r2, .L494
 11228 0f5e 7423     		movs	r3, #116
 11229 0f60 03FB04F3 		mul	r3, r3, r4
 11230 0f64 1344     		add	r3, r3, r2
 11231 0f66 DC33     		adds	r3, r3, #220
 11232 0f68 1960     		str	r1, [r3]
 11233              		.loc 1 1564 0
 11234 0f6a 54E2     		b	.L420
 11235              	.L401:
1565:..\src/command_processing.c ****             
1566:..\src/command_processing.c ****         case 48:         // Second Motor Input mode
1567:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11236              		.loc 1 1567 0
 11237 0f6c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11238 0f6e 174A     		ldr	r2, .L494+20
 11239 0f70 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 11240 0f72 114A     		ldr	r2, .L494
 11241 0f74 7421     		movs	r1, #116
 11242 0f76 01FB03F3 		mul	r3, r1, r3
 11243 0f7a 1344     		add	r3, r3, r2
 11244 0f7c 03F58773 		add	r3, r3, #270
 11245 0f80 0246     		mov	r2, r0
 11246 0f82 1A70     		strb	r2, [r3]
1568:..\src/command_processing.c ****             
1569:..\src/command_processing.c ****             // Hold the actual position
1570:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11247              		.loc 1 1570 0
 11248 0f84 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11249 0f86 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11250 0f88 0B49     		ldr	r1, .L494
 11251 0f8a 7420     		movs	r0, #116
 11252 0f8c 00FB02F2 		mul	r2, r0, r2
 11253 0f90 0A44     		add	r2, r2, r1
 11254 0f92 02F58872 		add	r2, r2, #272
 11255 0f96 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11256 0f98 1046     		mov	r0, r2
 11257 0f9a 0D49     		ldr	r1, .L494+24
 11258 0f9c 3422     		movs	r2, #52
 11259 0f9e 02FB00F2 		mul	r2, r2, r0
 11260 0fa2 0A44     		add	r2, r2, r1
 11261 0fa4 1268     		ldr	r2, [r2]
 11262 0fa6 0B49     		ldr	r1, .L494+28
 11263 0fa8 1B01     		lsls	r3, r3, #4
 11264 0faa 0B44     		add	r3, r3, r1
 11265 0fac 1A60     		str	r2, [r3]
1571:..\src/command_processing.c ****             break;   
 11266              		.loc 1 1571 0
 11267 0fae 32E2     		b	.L420
 11268              	.L402:
1572:..\src/command_processing.c **** 
1573:..\src/command_processing.c ****         case 51:         // Second Motor Measurement Offset
1574:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11269              		.loc 1 1574 0
 11270 0fb0 0023     		movs	r3, #0
 11271 0fb2 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 258


 11272 0fb4 89E0     		b	.L474
 11273              	.L495:
 11274 0fb6 00BF     		.align	2
 11275              	.L494:
 11276 0fb8 00000000 		.word	g_mem
 11277 0fbc 00000000 		.word	c_mem
 11278 0fc0 03000000 		.word	g_rx+3
 11279 0fc4 07000000 		.word	g_rx+7
 11280 0fc8 0B000000 		.word	g_rx+11
 11281 0fcc 00000000 		.word	g_rx
 11282 0fd0 00000000 		.word	g_meas
 11283 0fd4 00000000 		.word	g_refNew
 11284              	.L475:
1575:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11285              		.loc 1 1575 0 discriminator 3
 11286 0fd8 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11287 0fda 814A     		ldr	r2, .L496
 11288 0fdc 7421     		movs	r1, #116
 11289 0fde 01FB03F3 		mul	r3, r1, r3
 11290 0fe2 1344     		add	r3, r3, r2
 11291 0fe4 03F58873 		add	r3, r3, #272
 11292 0fe8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11293 0fea 1C46     		mov	r4, r3
 11294 0fec FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11295 0fee FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11296 0ff0 5B00     		lsls	r3, r3, #1
 11297 0ff2 0333     		adds	r3, r3, #3
 11298 0ff4 7B49     		ldr	r1, .L496+4
 11299 0ff6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11300 0ff8 1B02     		lsls	r3, r3, #8
 11301 0ffa 19B2     		sxth	r1, r3
 11302 0ffc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11303 0ffe 0233     		adds	r3, r3, #2
 11304 1000 5B00     		lsls	r3, r3, #1
 11305 1002 7848     		ldr	r0, .L496+4
 11306 1004 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11307 1006 1BB2     		sxth	r3, r3
 11308 1008 0B43     		orrs	r3, r3, r1
 11309 100a 1BB2     		sxth	r3, r3
 11310 100c 1846     		mov	r0, r3
 11311 100e 7449     		ldr	r1, .L496
 11312 1010 2346     		mov	r3, r4
 11313 1012 5B00     		lsls	r3, r3, #1
 11314 1014 2344     		add	r3, r3, r4
 11315 1016 9B00     		lsls	r3, r3, #2
 11316 1018 1344     		add	r3, r3, r2
 11317 101a 6833     		adds	r3, r3, #104
 11318 101c 41F82300 		str	r0, [r1, r3, lsl #2]
1576:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11319              		.loc 1 1576 0 discriminator 3
 11320 1020 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11321 1022 6F4A     		ldr	r2, .L496
 11322 1024 7421     		movs	r1, #116
 11323 1026 01FB03F3 		mul	r3, r1, r3
 11324 102a 1344     		add	r3, r3, r2
 11325 102c 03F58873 		add	r3, r3, #272
 11326 1030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 259


 11327 1032 1D46     		mov	r5, r3
 11328 1034 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11329 1036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11330 1038 694A     		ldr	r2, .L496
 11331 103a 7420     		movs	r0, #116
 11332 103c 00FB03F3 		mul	r3, r0, r3
 11333 1040 1344     		add	r3, r3, r2
 11334 1042 03F58873 		add	r3, r3, #272
 11335 1046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11336 1048 1C46     		mov	r4, r3
 11337 104a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11338 104c 6448     		ldr	r0, .L496
 11339 104e 2346     		mov	r3, r4
 11340 1050 5B00     		lsls	r3, r3, #1
 11341 1052 2344     		add	r3, r3, r4
 11342 1054 9B00     		lsls	r3, r3, #2
 11343 1056 1344     		add	r3, r3, r2
 11344 1058 6833     		adds	r3, r3, #104
 11345 105a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 11346 105e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11347 1060 5F48     		ldr	r0, .L496
 11348 1062 7424     		movs	r4, #116
 11349 1064 04FB03F3 		mul	r3, r4, r3
 11350 1068 0344     		add	r3, r3, r0
 11351 106a 03F58873 		add	r3, r3, #272
 11352 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11353 1070 1E46     		mov	r6, r3
 11354 1072 F87D     		ldrb	r0, [r7, #23]	@ zero_extendqisi2
 11355 1074 5A4C     		ldr	r4, .L496
 11356 1076 3346     		mov	r3, r6
 11357 1078 5B00     		lsls	r3, r3, #1
 11358 107a 3344     		add	r3, r3, r6
 11359 107c 1B01     		lsls	r3, r3, #4
 11360 107e 2344     		add	r3, r3, r4
 11361 1080 0344     		add	r3, r3, r0
 11362 1082 03F29D13 		addw	r3, r3, #413
 11363 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11364 1088 9A40     		lsls	r2, r2, r3
 11365 108a 5548     		ldr	r0, .L496
 11366 108c 2B46     		mov	r3, r5
 11367 108e 5B00     		lsls	r3, r3, #1
 11368 1090 2B44     		add	r3, r3, r5
 11369 1092 9B00     		lsls	r3, r3, #2
 11370 1094 0B44     		add	r3, r3, r1
 11371 1096 6833     		adds	r3, r3, #104
 11372 1098 40F82320 		str	r2, [r0, r3, lsl #2]
1577:..\src/command_processing.c **** 
1578:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11373              		.loc 1 1578 0 discriminator 3
 11374 109c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11375 109e 504A     		ldr	r2, .L496
 11376 10a0 7421     		movs	r1, #116
 11377 10a2 01FB03F3 		mul	r3, r1, r3
 11378 10a6 1344     		add	r3, r3, r2
 11379 10a8 03F58873 		add	r3, r3, #272
 11380 10ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11381 10ae 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 260


 11382 10b0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11383 10b2 4D49     		ldr	r1, .L496+8
 11384 10b4 3422     		movs	r2, #52
 11385 10b6 02FB00F2 		mul	r2, r2, r0
 11386 10ba 0A44     		add	r2, r2, r1
 11387 10bc 1344     		add	r3, r3, r2
 11388 10be 1833     		adds	r3, r3, #24
 11389 10c0 0022     		movs	r2, #0
 11390 10c2 1A70     		strb	r2, [r3]
1574:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11391              		.loc 1 1574 0 discriminator 3
 11392 10c4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11393 10c6 0133     		adds	r3, r3, #1
 11394 10c8 FB75     		strb	r3, [r7, #23]
 11395              	.L474:
1574:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11396              		.loc 1 1574 0 is_stmt 0 discriminator 1
 11397 10ca FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11398 10cc 022B     		cmp	r3, #2
 11399 10ce 83D9     		bls	.L475
1579:..\src/command_processing.c ****             }
1580:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 11400              		.loc 1 1580 0 is_stmt 1
 11401 10d0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11402 10d2 464A     		ldr	r2, .L496+12
 11403 10d4 0121     		movs	r1, #1
 11404 10d6 D154     		strb	r1, [r2, r3]
1581:..\src/command_processing.c ****             break;
 11405              		.loc 1 1581 0
 11406 10d8 9DE1     		b	.L420
 11407              	.L403:
1582:..\src/command_processing.c ****     
1583:..\src/command_processing.c ****         case 54:        // Second Motor Position limits
1584:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11408              		.loc 1 1584 0
 11409 10da FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11410 10dc 414A     		ldr	r2, .L496+4
 11411 10de D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 11412 10e0 1106     		lsls	r1, r2, #24
 11413 10e2 404A     		ldr	r2, .L496+4
 11414 10e4 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 11415 10e6 1204     		lsls	r2, r2, #16
 11416 10e8 1143     		orrs	r1, r1, r2
 11417 10ea 3E4A     		ldr	r2, .L496+4
 11418 10ec 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 11419 10ee 1202     		lsls	r2, r2, #8
 11420 10f0 0A43     		orrs	r2, r2, r1
 11421 10f2 3C49     		ldr	r1, .L496+4
 11422 10f4 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11423 10f6 0A43     		orrs	r2, r2, r1
 11424 10f8 3949     		ldr	r1, .L496
 11425 10fa 7420     		movs	r0, #116
 11426 10fc 00FB03F3 		mul	r3, r0, r3
 11427 1100 0B44     		add	r3, r3, r1
 11428 1102 E433     		adds	r3, r3, #228
 11429 1104 1A60     		str	r2, [r3]
1585:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 261


 11430              		.loc 1 1585 0
 11431 1106 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11432 1108 364A     		ldr	r2, .L496+4
 11433 110a D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 11434 110c 1106     		lsls	r1, r2, #24
 11435 110e 354A     		ldr	r2, .L496+4
 11436 1110 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 11437 1112 1204     		lsls	r2, r2, #16
 11438 1114 1143     		orrs	r1, r1, r2
 11439 1116 334A     		ldr	r2, .L496+4
 11440 1118 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 11441 111a 1202     		lsls	r2, r2, #8
 11442 111c 0A43     		orrs	r2, r2, r1
 11443 111e 3149     		ldr	r1, .L496+4
 11444 1120 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11445 1122 0A43     		orrs	r2, r2, r1
 11446 1124 2E49     		ldr	r1, .L496
 11447 1126 7420     		movs	r0, #116
 11448 1128 00FB03F3 		mul	r3, r0, r3
 11449 112c 0B44     		add	r3, r3, r1
 11450 112e E833     		adds	r3, r3, #232
 11451 1130 1A60     		str	r2, [r3]
1586:..\src/command_processing.c **** 
1587:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11452              		.loc 1 1587 0
 11453 1132 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11454 1134 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11455 1136 2A4A     		ldr	r2, .L496
 11456 1138 7420     		movs	r0, #116
 11457 113a 00FB03F3 		mul	r3, r0, r3
 11458 113e 1344     		add	r3, r3, r2
 11459 1140 E433     		adds	r3, r3, #228
 11460 1142 1A68     		ldr	r2, [r3]
 11461 1144 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11462 1146 2648     		ldr	r0, .L496
 11463 1148 7424     		movs	r4, #116
 11464 114a 04FB03F3 		mul	r3, r4, r3
 11465 114e 0344     		add	r3, r3, r0
 11466 1150 03F58873 		add	r3, r3, #272
 11467 1154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11468 1156 1C46     		mov	r4, r3
 11469 1158 2148     		ldr	r0, .L496
 11470 115a 2346     		mov	r3, r4
 11471 115c 5B00     		lsls	r3, r3, #1
 11472 115e 2344     		add	r3, r3, r4
 11473 1160 1B01     		lsls	r3, r3, #4
 11474 1162 0344     		add	r3, r3, r0
 11475 1164 03F29D13 		addw	r3, r3, #413
 11476 1168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11477 116a 9A40     		lsls	r2, r2, r3
 11478 116c 1C48     		ldr	r0, .L496
 11479 116e 7423     		movs	r3, #116
 11480 1170 03FB01F3 		mul	r3, r3, r1
 11481 1174 0344     		add	r3, r3, r0
 11482 1176 E433     		adds	r3, r3, #228
 11483 1178 1A60     		str	r2, [r3]
1588:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 262


 11484              		.loc 1 1588 0
 11485 117a F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11486 117c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11487 117e 184A     		ldr	r2, .L496
 11488 1180 7420     		movs	r0, #116
 11489 1182 00FB03F3 		mul	r3, r0, r3
 11490 1186 1344     		add	r3, r3, r2
 11491 1188 E833     		adds	r3, r3, #232
 11492 118a 1A68     		ldr	r2, [r3]
 11493 118c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11494 118e 1448     		ldr	r0, .L496
 11495 1190 7424     		movs	r4, #116
 11496 1192 04FB03F3 		mul	r3, r4, r3
 11497 1196 0344     		add	r3, r3, r0
 11498 1198 03F58873 		add	r3, r3, #272
 11499 119c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11500 119e 1C46     		mov	r4, r3
 11501 11a0 0F48     		ldr	r0, .L496
 11502 11a2 2346     		mov	r3, r4
 11503 11a4 5B00     		lsls	r3, r3, #1
 11504 11a6 2344     		add	r3, r3, r4
 11505 11a8 1B01     		lsls	r3, r3, #4
 11506 11aa 0344     		add	r3, r3, r0
 11507 11ac 03F29D13 		addw	r3, r3, #413
 11508 11b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11509 11b2 9A40     		lsls	r2, r2, r3
 11510 11b4 0A48     		ldr	r0, .L496
 11511 11b6 7423     		movs	r3, #116
 11512 11b8 03FB01F3 		mul	r3, r3, r1
 11513 11bc 0344     		add	r3, r3, r0
 11514 11be E833     		adds	r3, r3, #232
 11515 11c0 1A60     		str	r2, [r3]
1589:..\src/command_processing.c ****             break;
 11516              		.loc 1 1589 0
 11517 11c2 28E1     		b	.L420
 11518              	.L404:
1590:..\src/command_processing.c ****             
1591:..\src/command_processing.c ****         case 63:        // Second Motor Driver Type
1592:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11519              		.loc 1 1592 0
 11520 11c4 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11521 11c6 074A     		ldr	r2, .L496+4
 11522 11c8 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 11523 11ca 054A     		ldr	r2, .L496
 11524 11cc 7421     		movs	r1, #116
 11525 11ce 01FB03F3 		mul	r3, r1, r3
 11526 11d2 1344     		add	r3, r3, r2
 11527 11d4 E233     		adds	r3, r3, #226
 11528 11d6 0246     		mov	r2, r0
 11529 11d8 1A70     		strb	r2, [r3]
1593:..\src/command_processing.c ****             set_motor_driver_type();
 11530              		.loc 1 1593 0
 11531 11da FFF7FEFF 		bl	set_motor_driver_type
1594:..\src/command_processing.c ****             break;
 11532              		.loc 1 1594 0
 11533 11de 1AE1     		b	.L420
 11534              	.L497:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 263


 11535              		.align	2
 11536              	.L496:
 11537 11e0 00000000 		.word	g_mem
 11538 11e4 00000000 		.word	g_rx
 11539 11e8 00000000 		.word	g_meas
 11540 11ec 00000000 		.word	reset_last_value_flag
 11541              	.L405:
1595:..\src/command_processing.c **** 
1596:..\src/command_processing.c ****         case 77:        // Device type
1597:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11542              		.loc 1 1597 0
 11543 11f0 8B4B     		ldr	r3, .L498
 11544 11f2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11545 11f4 8B4B     		ldr	r3, .L498+4
 11546 11f6 83F8AC20 		strb	r2, [r3, #172]
1598:..\src/command_processing.c ****             
1599:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11547              		.loc 1 1599 0
 11548 11fa 8A4B     		ldr	r3, .L498+4
 11549 11fc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11550 1200 002B     		cmp	r3, #0
 11551 1202 40F09A80 		bne	.L476
1600:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11552              		.loc 1 1600 0
 11553 1206 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11554 1208 864A     		ldr	r2, .L498+4
 11555 120a 7421     		movs	r1, #116
 11556 120c 01FB03F3 		mul	r3, r1, r3
 11557 1210 1344     		add	r3, r3, r2
 11558 1212 03F58873 		add	r3, r3, #272
 11559 1216 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11560 1218 1946     		mov	r1, r3
 11561 121a 824A     		ldr	r2, .L498+4
 11562 121c 0B46     		mov	r3, r1
 11563 121e 5B00     		lsls	r3, r3, #1
 11564 1220 0B44     		add	r3, r3, r1
 11565 1222 1B01     		lsls	r3, r3, #4
 11566 1224 1344     		add	r3, r3, r2
 11567 1226 03F5DC73 		add	r3, r3, #440
 11568 122a 0122     		movs	r2, #1
 11569 122c 1A70     		strb	r2, [r3]
1601:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11570              		.loc 1 1601 0
 11571 122e 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11572 1230 7C4A     		ldr	r2, .L498+4
 11573 1232 7421     		movs	r1, #116
 11574 1234 01FB03F3 		mul	r3, r1, r3
 11575 1238 1344     		add	r3, r3, r2
 11576 123a 03F58873 		add	r3, r3, #272
 11577 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11578 1240 1946     		mov	r1, r3
 11579 1242 784A     		ldr	r2, .L498+4
 11580 1244 0B46     		mov	r3, r1
 11581 1246 5B00     		lsls	r3, r3, #1
 11582 1248 0B44     		add	r3, r3, r1
 11583 124a 1B01     		lsls	r3, r3, #4
 11584 124c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 264


 11585 124e 03F2BD13 		addw	r3, r3, #445
 11586 1252 2322     		movs	r2, #35
 11587 1254 1A70     		strb	r2, [r3]
1602:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11588              		.loc 1 1602 0
 11589 1256 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11590 1258 724A     		ldr	r2, .L498+4
 11591 125a 7421     		movs	r1, #116
 11592 125c 01FB03F3 		mul	r3, r1, r3
 11593 1260 1344     		add	r3, r3, r2
 11594 1262 03F58873 		add	r3, r3, #272
 11595 1266 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11596 1268 1946     		mov	r1, r3
 11597 126a 6E4A     		ldr	r2, .L498+4
 11598 126c 0B46     		mov	r3, r1
 11599 126e 5B00     		lsls	r3, r3, #1
 11600 1270 0B44     		add	r3, r3, r1
 11601 1272 1B01     		lsls	r3, r3, #4
 11602 1274 1344     		add	r3, r3, r2
 11603 1276 03F5DF73 		add	r3, r3, #446
 11604 127a 0322     		movs	r2, #3
 11605 127c 1A70     		strb	r2, [r3]
1603:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11606              		.loc 1 1603 0
 11607 127e 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11608 1280 684A     		ldr	r2, .L498+4
 11609 1282 7421     		movs	r1, #116
 11610 1284 01FB03F3 		mul	r3, r1, r3
 11611 1288 1344     		add	r3, r3, r2
 11612 128a 03F58873 		add	r3, r3, #272
 11613 128e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11614 1290 1946     		mov	r1, r3
 11615 1292 644A     		ldr	r2, .L498+4
 11616 1294 0B46     		mov	r3, r1
 11617 1296 5B00     		lsls	r3, r3, #1
 11618 1298 0B44     		add	r3, r3, r1
 11619 129a 1B01     		lsls	r3, r3, #4
 11620 129c 1344     		add	r3, r3, r2
 11621 129e 03F2BF13 		addw	r3, r3, #447
 11622 12a2 FF22     		movs	r2, #255
 11623 12a4 1A70     		strb	r2, [r3]
1604:..\src/command_processing.c ****                 
1605:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1606:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11624              		.loc 1 1606 0
 11625 12a6 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11626 12a8 5E4A     		ldr	r2, .L498+4
 11627 12aa 92F8A700 		ldrb	r0, [r2, #167]	@ zero_extendqisi2
 11628 12ae 5D4A     		ldr	r2, .L498+4
 11629 12b0 7421     		movs	r1, #116
 11630 12b2 01FB03F3 		mul	r3, r1, r3
 11631 12b6 1344     		add	r3, r3, r2
 11632 12b8 03F58873 		add	r3, r3, #272
 11633 12bc 0246     		mov	r2, r0
 11634 12be 1A70     		strb	r2, [r3]
1607:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11635              		.loc 1 1607 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 265


 11636 12c0 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11637 12c2 584A     		ldr	r2, .L498+4
 11638 12c4 7421     		movs	r1, #116
 11639 12c6 01FB03F3 		mul	r3, r1, r3
 11640 12ca 1344     		add	r3, r3, r2
 11641 12cc 03F21113 		addw	r3, r3, #273
 11642 12d0 0122     		movs	r2, #1
 11643 12d2 1A70     		strb	r2, [r3]
1608:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11644              		.loc 1 1608 0
 11645 12d4 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11646 12d6 534A     		ldr	r2, .L498+4
 11647 12d8 7421     		movs	r1, #116
 11648 12da 01FB03F3 		mul	r3, r1, r3
 11649 12de 1344     		add	r3, r3, r2
 11650 12e0 03F58973 		add	r3, r3, #274
 11651 12e4 0122     		movs	r2, #1
 11652 12e6 1A70     		strb	r2, [r3]
1609:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11653              		.loc 1 1609 0
 11654 12e8 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11655 12ea 4E4A     		ldr	r2, .L498+4
 11656 12ec 7421     		movs	r1, #116
 11657 12ee 01FB03F3 		mul	r3, r1, r3
 11658 12f2 1344     		add	r3, r3, r2
 11659 12f4 E433     		adds	r3, r3, #228
 11660 12f6 0022     		movs	r2, #0
 11661 12f8 1A60     		str	r2, [r3]
1610:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 11662              		.loc 1 1610 0
 11663 12fa 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 11664 12fc 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11665 12fe 494A     		ldr	r2, .L498+4
 11666 1300 7420     		movs	r0, #116
 11667 1302 00FB03F3 		mul	r3, r0, r3
 11668 1306 1344     		add	r3, r3, r2
 11669 1308 03F58873 		add	r3, r3, #272
 11670 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11671 130e 1846     		mov	r0, r3
 11672 1310 444A     		ldr	r2, .L498+4
 11673 1312 0346     		mov	r3, r0
 11674 1314 5B00     		lsls	r3, r3, #1
 11675 1316 0344     		add	r3, r3, r0
 11676 1318 1B01     		lsls	r3, r3, #4
 11677 131a 1344     		add	r3, r3, r2
 11678 131c 03F29D13 		addw	r3, r3, #413
 11679 1320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11680 1322 1A46     		mov	r2, r3
 11681 1324 4FF47A53 		mov	r3, #16000
 11682 1328 03FA02F2 		lsl	r2, r3, r2
 11683 132c 3D48     		ldr	r0, .L498+4
 11684 132e 7423     		movs	r3, #116
 11685 1330 03FB01F3 		mul	r3, r3, r1
 11686 1334 0344     		add	r3, r3, r0
 11687 1336 E833     		adds	r3, r3, #232
 11688 1338 1A60     		str	r2, [r3]
 11689              	.L476:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 266


1611:..\src/command_processing.c ****             }      
1612:..\src/command_processing.c ****             
1613:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 11690              		.loc 1 1613 0
 11691 133a 3A4B     		ldr	r3, .L498+4
 11692 133c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11693 1340 042B     		cmp	r3, #4
 11694 1342 67D1     		bne	.L485
1614:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 11695              		.loc 1 1614 0
 11696 1344 374B     		ldr	r3, .L498+4
 11697 1346 0122     		movs	r2, #1
 11698 1348 83F8A920 		strb	r2, [r3, #169]
1615:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11699              		.loc 1 1615 0
 11700 134c 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 11701 134e 354A     		ldr	r2, .L498+4
 11702 1350 7421     		movs	r1, #116
 11703 1352 01FB03F3 		mul	r3, r1, r3
 11704 1356 1344     		add	r3, r3, r2
 11705 1358 03F58873 		add	r3, r3, #272
 11706 135c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11707 135e 1946     		mov	r1, r3
 11708 1360 304A     		ldr	r2, .L498+4
 11709 1362 0B46     		mov	r3, r1
 11710 1364 5B00     		lsls	r3, r3, #1
 11711 1366 0B44     		add	r3, r3, r1
 11712 1368 1B01     		lsls	r3, r3, #4
 11713 136a 1344     		add	r3, r3, r2
 11714 136c 03F5DC73 		add	r3, r3, #440
 11715 1370 0122     		movs	r2, #1
 11716 1372 1A70     		strb	r2, [r3]
1616:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11717              		.loc 1 1616 0
 11718 1374 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11719 1376 2B4A     		ldr	r2, .L498+4
 11720 1378 7421     		movs	r1, #116
 11721 137a 01FB03F3 		mul	r3, r1, r3
 11722 137e 1344     		add	r3, r3, r2
 11723 1380 03F58873 		add	r3, r3, #272
 11724 1384 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11725 1386 1946     		mov	r1, r3
 11726 1388 264A     		ldr	r2, .L498+4
 11727 138a 0B46     		mov	r3, r1
 11728 138c 5B00     		lsls	r3, r3, #1
 11729 138e 0B44     		add	r3, r3, r1
 11730 1390 1B01     		lsls	r3, r3, #4
 11731 1392 1344     		add	r3, r3, r2
 11732 1394 03F5DC73 		add	r3, r3, #440
 11733 1398 0122     		movs	r2, #1
 11734 139a 1A70     		strb	r2, [r3]
1617:..\src/command_processing.c ****             /*    
1618:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1619:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1620:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1621:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1622:..\src/command_processing.c ****             */    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 267


1623:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 11735              		.loc 1 1623 0
 11736 139c 0023     		movs	r3, #0
 11737 139e FB75     		strb	r3, [r7, #23]
 11738 13a0 2AE0     		b	.L478
 11739              	.L479:
1624:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 11740              		.loc 1 1624 0 discriminator 3
 11741 13a2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11742 13a4 1F4A     		ldr	r2, .L498+4
 11743 13a6 7421     		movs	r1, #116
 11744 13a8 01FB03F3 		mul	r3, r1, r3
 11745 13ac 1344     		add	r3, r3, r2
 11746 13ae 03F58673 		add	r3, r3, #268
 11747 13b2 4FF44872 		mov	r2, #800
 11748 13b6 1A80     		strh	r2, [r3]	@ movhi
1625:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 11749              		.loc 1 1625 0 discriminator 3
 11750 13b8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11751 13ba 1A4A     		ldr	r2, .L498+4
 11752 13bc 7421     		movs	r1, #116
 11753 13be 01FB03F3 		mul	r3, r1, r3
 11754 13c2 1344     		add	r3, r3, r2
 11755 13c4 B033     		adds	r3, r3, #176
 11756 13c6 41F6B862 		movw	r2, #7864
 11757 13ca 1A60     		str	r2, [r3]
1626:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 11758              		.loc 1 1626 0 discriminator 3
 11759 13cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11760 13ce 154A     		ldr	r2, .L498+4
 11761 13d0 7421     		movs	r1, #116
 11762 13d2 01FB03F3 		mul	r3, r1, r3
 11763 13d6 1344     		add	r3, r3, r2
 11764 13d8 B433     		adds	r3, r3, #180
 11765 13da 0022     		movs	r2, #0
 11766 13dc 1A60     		str	r2, [r3]
1627:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 11767              		.loc 1 1627 0 discriminator 3
 11768 13de FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11769 13e0 104A     		ldr	r2, .L498+4
 11770 13e2 7421     		movs	r1, #116
 11771 13e4 01FB03F3 		mul	r3, r1, r3
 11772 13e8 1344     		add	r3, r3, r2
 11773 13ea B833     		adds	r3, r3, #184
 11774 13ec 40F6CC42 		movw	r2, #3276
 11775 13f0 1A60     		str	r2, [r3]
1623:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 11776              		.loc 1 1623 0 discriminator 3
 11777 13f2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11778 13f4 0133     		adds	r3, r3, #1
 11779 13f6 FB75     		strb	r3, [r7, #23]
 11780              	.L478:
1623:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 11781              		.loc 1 1623 0 is_stmt 0 discriminator 1
 11782 13f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11783 13fa 012B     		cmp	r3, #1
 11784 13fc D1D9     		bls	.L479
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 268


1628:..\src/command_processing.c ****                 }
1629:..\src/command_processing.c ****             }      
1630:..\src/command_processing.c ****             
1631:..\src/command_processing.c ****             break;
 11785              		.loc 1 1631 0 is_stmt 1
 11786 13fe 09E0     		b	.L485
 11787              	.L480:
1632:..\src/command_processing.c ****             
1633:..\src/command_processing.c ****         default:
1634:..\src/command_processing.c ****             break;
 11788              		.loc 1 1634 0
 11789 1400 00BF     		nop
 11790 1402 08E0     		b	.L420
 11791              	.L481:
1421:..\src/command_processing.c ****             
 11792              		.loc 1 1421 0
 11793 1404 00BF     		nop
 11794 1406 06E0     		b	.L420
 11795              	.L482:
1449:..\src/command_processing.c **** 
 11796              		.loc 1 1449 0
 11797 1408 00BF     		nop
 11798 140a 04E0     		b	.L420
 11799              	.L483:
1467:..\src/command_processing.c ****             
 11800              		.loc 1 1467 0
 11801 140c 00BF     		nop
 11802 140e 02E0     		b	.L420
 11803              	.L484:
1477:..\src/command_processing.c ****            
 11804              		.loc 1 1477 0
 11805 1410 00BF     		nop
 11806 1412 00E0     		b	.L420
 11807              	.L485:
1631:..\src/command_processing.c ****             
 11808              		.loc 1 1631 0
 11809 1414 00BF     		nop
 11810              	.L420:
1635:..\src/command_processing.c ****     }
1636:..\src/command_processing.c **** }
 11811              		.loc 1 1636 0 discriminator 1
 11812 1416 00BF     		nop
 11813 1418 1C37     		adds	r7, r7, #28
 11814              		.cfi_def_cfa_offset 20
 11815 141a BD46     		mov	sp, r7
 11816              		.cfi_def_cfa_register 13
 11817              		@ sp needed
 11818 141c F0BD     		pop	{r4, r5, r6, r7, pc}
 11819              	.L499:
 11820 141e 00BF     		.align	2
 11821              	.L498:
 11822 1420 00000000 		.word	g_rx
 11823 1424 00000000 		.word	g_mem
 11824              		.cfi_endproc
 11825              	.LFE69:
 11826              		.size	set_custom_param, .-set_custom_param
 11827              		.section	.rodata
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 269


 11828 1102 0000     		.align	2
 11829              	.LC147:
 11830 1104 506F7274 		.ascii	"Port %u ID:\000"
 11830      20257520 
 11830      49443A00 
 11831              		.align	2
 11832              	.LC148:
 11833 1110 2575202D 		.ascii	"%u - Device ID:\000"
 11833      20446576 
 11833      69636520 
 11833      49443A00 
 11834              		.align	2
 11835              	.LC149:
 11836 1120 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 11836      20494D55 
 11836      20256420 
 11836      636F6E66 
 11836      69677572 
 11837 113b 00       		.align	2
 11838              	.LC150:
 11839 113c 2575202D 		.ascii	"%u - SPI read delay:\000"
 11839      20535049 
 11839      20726561 
 11839      64206465 
 11839      6C61793A 
 11840 1151 000000   		.align	2
 11841              	.LC151:
 11842 1154 204E6F6E 		.ascii	" None\000"
 11842      6500
 11843 115a 0000     		.align	2
 11844              	.LC152:
 11845 115c 204C6F77 		.ascii	" Low\000"
 11845      00
 11846 1161 000000   		.align	2
 11847              	.LC153:
 11848 1164 20486967 		.ascii	" High\000"
 11848      6800
 11849 116a 0000     		.align	2
 11850              	.LC145:
 11851 116c 4E756D62 		.ascii	"Number of connected IMUs:\000"
 11851      6572206F 
 11851      6620636F 
 11851      6E6E6563 
 11851      74656420 
 11852 1186 0000     		.align	2
 11853              	.LC146:
 11854 1188 4D616720 		.ascii	"Mag cal parameters:\000"
 11854      63616C20 
 11854      70617261 
 11854      6D657465 
 11854      72733A00 
 11855              		.section	.text.get_IMU_param_list,"ax",%progbits
 11856              		.align	2
 11857              		.global	get_IMU_param_list
 11858              		.thumb
 11859              		.thumb_func
 11860              		.type	get_IMU_param_list, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 270


 11861              	get_IMU_param_list:
 11862              	.LFB70:
1637:..\src/command_processing.c **** 
1638:..\src/command_processing.c **** //==============================================================================
1639:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1640:..\src/command_processing.c **** //==============================================================================
1641:..\src/command_processing.c **** 
1642:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1643:..\src/command_processing.c **** {
 11863              		.loc 1 1643 0
 11864              		.cfi_startproc
 11865              		@ args = 0, pretend = 0, frame = 1704
 11866              		@ frame_needed = 1, uses_anonymous_args = 0
 11867 0000 B0B5     		push	{r4, r5, r7, lr}
 11868              		.cfi_def_cfa_offset 16
 11869              		.cfi_offset 4, -16
 11870              		.cfi_offset 5, -12
 11871              		.cfi_offset 7, -8
 11872              		.cfi_offset 14, -4
 11873 0002 ADF5D56D 		sub	sp, sp, #1704
 11874              		.cfi_def_cfa_offset 1720
 11875 0006 00AF     		add	r7, sp, #0
 11876              		.cfi_def_cfa_register 7
 11877 0008 0246     		mov	r2, r0
 11878 000a BB1D     		adds	r3, r7, #6
 11879 000c 1A80     		strh	r2, [r3]	@ movhi
1644:..\src/command_processing.c ****     //Package to be sent variables
1645:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 11880              		.loc 1 1645 0
 11881 000e 07F58A73 		add	r3, r7, #276
 11882 0012 0022     		movs	r2, #0
 11883 0014 1A60     		str	r2, [r3]
 11884 0016 0433     		adds	r3, r3, #4
 11885 0018 40F27552 		movw	r2, #1397
 11886 001c 0021     		movs	r1, #0
 11887 001e 1846     		mov	r0, r3
 11888 0020 FFF7FEFF 		bl	memset
1646:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1647:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1648:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1649:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1650:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1651:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1652:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 11889              		.loc 1 1652 0
 11890 0024 0723     		movs	r3, #7
 11891 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1653:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 11892              		.loc 1 1653 0
 11893 002a 0023     		movs	r3, #0
 11894 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1654:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 11895              		.loc 1 1654 0
 11896 0030 0223     		movs	r3, #2
 11897 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1655:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11898              		.loc 1 1655 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 271


 11899 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 11900 003a 5A1C     		adds	r2, r3, #1
1656:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 11901              		.loc 1 1656 0
 11902 003c B7F8A636 		ldrh	r3, [r7, #1702]
 11903 0040 1344     		add	r3, r3, r2
1657:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 11904              		.loc 1 1657 0
 11905 0042 0133     		adds	r3, r3, #1
1655:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11906              		.loc 1 1655 0
 11907 0044 9AB2     		uxth	r2, r3
 11908 0046 D24B     		ldr	r3, .L546
 11909 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11910 004a 9BB2     		uxth	r3, r3
 11911 004c 1344     		add	r3, r3, r2
 11912 004e 9BB2     		uxth	r3, r3
 11913 0050 1A46     		mov	r2, r3	@ movhi
 11914 0052 9200     		lsls	r2, r2, #2
 11915 0054 1344     		add	r3, r3, r2
 11916 0056 1A46     		mov	r2, r3	@ movhi
 11917 0058 9100     		lsls	r1, r2, #2
 11918 005a 1A46     		mov	r2, r3	@ movhi
 11919 005c 0B46     		mov	r3, r1	@ movhi
 11920 005e 1344     		add	r3, r3, r2
 11921 0060 5B00     		lsls	r3, r3, #1
 11922 0062 9BB2     		uxth	r3, r3
 11923 0064 FB33     		adds	r3, r3, #251
 11924 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1658:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1659:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1660:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1661:..\src/command_processing.c **** 
1662:..\src/command_processing.c ****     //Auxiliary variables
1663:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1664:..\src/command_processing.c ****     uint16 start_byte = 0;
 11925              		.loc 1 1664 0
 11926 006a 0023     		movs	r3, #0
 11927 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1665:..\src/command_processing.c **** 
1666:..\src/command_processing.c ****     //Parameters menu string definitions
1667:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 11928              		.loc 1 1667 0
 11929 0070 07F1F803 		add	r3, r7, #248
 11930 0074 C74A     		ldr	r2, .L546+4
 11931 0076 1C46     		mov	r4, r3
 11932 0078 1546     		mov	r5, r2
 11933 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11934 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11935 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 11936 0082 03C4     		stmia	r4!, {r0, r1}
 11937 0084 2280     		strh	r2, [r4]	@ movhi
1668:..\src/command_processing.c ****     char ids_str[11]            = "";
 11938              		.loc 1 1668 0
 11939 0086 07F1EC03 		add	r3, r7, #236
 11940 008a 0022     		movs	r2, #0
 11941 008c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 272


 11942 008e 0433     		adds	r3, r3, #4
 11943 0090 0022     		movs	r2, #0
 11944 0092 1A60     		str	r2, [r3]
 11945 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1669:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 11946              		.loc 1 1669 0
 11947 0098 07F1D803 		add	r3, r7, #216
 11948 009c BE4A     		ldr	r2, .L546+8
 11949 009e 1C46     		mov	r4, r3
 11950 00a0 1546     		mov	r5, r2
 11951 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11952 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11953 00a6 2B68     		ldr	r3, [r5]
 11954 00a8 2360     		str	r3, [r4]
1670:..\src/command_processing.c ****     char id_str[16]             = "";
 11955              		.loc 1 1670 0
 11956 00aa 07F1C803 		add	r3, r7, #200
 11957 00ae 0022     		movs	r2, #0
 11958 00b0 1A60     		str	r2, [r3]
 11959 00b2 0433     		adds	r3, r3, #4
 11960 00b4 0022     		movs	r2, #0
 11961 00b6 1A60     		str	r2, [r3]
 11962 00b8 5A60     		str	r2, [r3, #4]
 11963 00ba 9A60     		str	r2, [r3, #8]
1671:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 11964              		.loc 1 1671 0
 11965 00bc 07F19C03 		add	r3, r7, #156
 11966 00c0 0022     		movs	r2, #0
 11967 00c2 1A60     		str	r2, [r3]
 11968 00c4 0433     		adds	r3, r3, #4
 11969 00c6 2622     		movs	r2, #38
 11970 00c8 0021     		movs	r1, #0
 11971 00ca 1846     		mov	r0, r3
 11972 00cc FFF7FEFF 		bl	memset
1672:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 11973              		.loc 1 1672 0
 11974 00d0 07F18003 		add	r3, r7, #128
 11975 00d4 0022     		movs	r2, #0
 11976 00d6 1A60     		str	r2, [r3]
 11977 00d8 0433     		adds	r3, r3, #4
 11978 00da 0022     		movs	r2, #0
 11979 00dc 1A60     		str	r2, [r3]
 11980 00de 5A60     		str	r2, [r3, #4]
 11981 00e0 9A60     		str	r2, [r3, #8]
 11982 00e2 DA60     		str	r2, [r3, #12]
 11983 00e4 1A61     		str	r2, [r3, #16]
 11984 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1673:..\src/command_processing.c ****     
1674:..\src/command_processing.c ****     //Strings lenghts
1675:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 11985              		.loc 1 1675 0
 11986 00e8 07F1C803 		add	r3, r7, #200
 11987 00ec 1846     		mov	r0, r3
 11988 00ee FFF7FEFF 		bl	strlen
 11989 00f2 0346     		mov	r3, r0
 11990 00f4 87F89336 		strb	r3, [r7, #1683]
1676:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 273


 11991              		.loc 1 1676 0
 11992 00f8 07F1F803 		add	r3, r7, #248
 11993 00fc 1846     		mov	r0, r3
 11994 00fe FFF7FEFF 		bl	strlen
 11995 0102 0346     		mov	r3, r0
 11996 0104 87F89236 		strb	r3, [r7, #1682]
1677:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 11997              		.loc 1 1677 0
 11998 0108 07F1EC03 		add	r3, r7, #236
 11999 010c 1846     		mov	r0, r3
 12000 010e FFF7FEFF 		bl	strlen
 12001 0112 0346     		mov	r3, r0
 12002 0114 87F89136 		strb	r3, [r7, #1681]
1678:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12003              		.loc 1 1678 0
 12004 0118 07F1D803 		add	r3, r7, #216
 12005 011c 1846     		mov	r0, r3
 12006 011e FFF7FEFF 		bl	strlen
 12007 0122 0346     		mov	r3, r0
 12008 0124 87F89036 		strb	r3, [r7, #1680]
1679:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12009              		.loc 1 1679 0
 12010 0128 07F19C03 		add	r3, r7, #156
 12011 012c 1846     		mov	r0, r3
 12012 012e FFF7FEFF 		bl	strlen
 12013 0132 0346     		mov	r3, r0
 12014 0134 87F88F36 		strb	r3, [r7, #1679]
1680:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12015              		.loc 1 1680 0
 12016 0138 07F18003 		add	r3, r7, #128
 12017 013c 1846     		mov	r0, r3
 12018 013e FFF7FEFF 		bl	strlen
 12019 0142 0346     		mov	r3, r0
 12020 0144 87F89D36 		strb	r3, [r7, #1693]
1681:..\src/command_processing.c ****     
1682:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12021              		.loc 1 1682 0
 12022 0148 07F10803 		add	r3, r7, #8
 12023 014c 0022     		movs	r2, #0
 12024 014e 1A60     		str	r2, [r3]
 12025 0150 0433     		adds	r3, r3, #4
 12026 0152 7222     		movs	r2, #114
 12027 0154 0021     		movs	r1, #0
 12028 0156 1846     		mov	r0, r3
 12029 0158 FFF7FEFF 		bl	memset
1683:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1684:..\src/command_processing.c ****  
1685:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12030              		.loc 1 1685 0
 12031 015c 07F10800 		add	r0, r7, #8
 12032 0160 6423     		movs	r3, #100
 12033 0162 0A22     		movs	r2, #10
 12034 0164 8D49     		ldr	r1, .L546+12
 12035 0166 FFF7FEFF 		bl	sprintf
1686:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12036              		.loc 1 1686 0
 12037 016a 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 274


 12038 016e 1846     		mov	r0, r3
 12039 0170 FFF7FEFF 		bl	strlen
 12040 0174 0346     		mov	r3, r0
 12041 0176 87F88E36 		strb	r3, [r7, #1678]
1687:..\src/command_processing.c **** 
1688:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1689:..\src/command_processing.c ****     // update packet_length
1690:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12042              		.loc 1 1690 0
 12043 017a 854B     		ldr	r3, .L546
 12044 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12045 017e 5B08     		lsrs	r3, r3, #1
 12046 0180 DBB2     		uxtb	r3, r3
 12047 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1691:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12048              		.loc 1 1691 0
 12049 0186 824B     		ldr	r3, .L546
 12050 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12051 018a 1A46     		mov	r2, r3
 12052 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12053 0190 5B00     		lsls	r3, r3, #1
 12054 0192 D31A     		subs	r3, r2, r3
 12055 0194 002B     		cmp	r3, #0
 12056 0196 04DD     		ble	.L501
 12057              		.loc 1 1691 0 is_stmt 0 discriminator 1
 12058 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12059 019c 0133     		adds	r3, r3, #1
 12060 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12061              	.L501:
1692:..\src/command_processing.c ****     
1693:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12062              		.loc 1 1693 0 is_stmt 1
 12063 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12064 01a6 5A1C     		adds	r2, r3, #1
1694:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12065              		.loc 1 1694 0
 12066 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12067 01ac 1344     		add	r3, r3, r2
1695:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12068              		.loc 1 1695 0
 12069 01ae 0133     		adds	r3, r3, #1
1693:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12070              		.loc 1 1693 0
 12071 01b0 9AB2     		uxth	r2, r3
 12072 01b2 774B     		ldr	r3, .L546
 12073 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12074 01b6 9BB2     		uxth	r3, r3
 12075 01b8 1344     		add	r3, r3, r2
 12076 01ba 9BB2     		uxth	r3, r3
 12077 01bc 1A46     		mov	r2, r3	@ movhi
 12078 01be 9200     		lsls	r2, r2, #2
 12079 01c0 1344     		add	r3, r3, r2
 12080 01c2 1A46     		mov	r2, r3	@ movhi
 12081 01c4 9100     		lsls	r1, r2, #2
 12082 01c6 1A46     		mov	r2, r3	@ movhi
 12083 01c8 0B46     		mov	r3, r1	@ movhi
 12084 01ca 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 275


 12085 01cc 5B00     		lsls	r3, r3, #1
 12086 01ce 9BB2     		uxth	r3, r3
 12087 01d0 C933     		adds	r3, r3, #201
 12088 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1696:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1697:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1698:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1699:..\src/command_processing.c **** 
1700:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12089              		.loc 1 1700 0
 12090 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12091 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12092 01de 1344     		add	r3, r3, r2
 12093 01e0 9BB2     		uxth	r3, r3
 12094 01e2 0333     		adds	r3, r3, #3
 12095 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1701:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12096              		.loc 1 1701 0
 12097 01e8 07F58A73 		add	r3, r7, #276
 12098 01ec A222     		movs	r2, #162
 12099 01ee 1A70     		strb	r2, [r3]
1702:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12100              		.loc 1 1702 0
 12101 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12102 01f4 DAB2     		uxtb	r2, r3
 12103 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12104 01fa DBB2     		uxtb	r3, r3
 12105 01fc 1344     		add	r3, r3, r2
 12106 01fe DAB2     		uxtb	r2, r3
 12107 0200 634B     		ldr	r3, .L546
 12108 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12109 0204 1344     		add	r3, r3, r2
 12110 0206 DBB2     		uxtb	r3, r3
 12111 0208 0333     		adds	r3, r3, #3
 12112 020a DAB2     		uxtb	r2, r3
 12113 020c 07F58A73 		add	r3, r7, #276
 12114 0210 5A70     		strb	r2, [r3, #1]
1703:..\src/command_processing.c **** 
1704:..\src/command_processing.c ****     switch(index) {
 12115              		.loc 1 1704 0
 12116 0212 BB1D     		adds	r3, r7, #6
 12117 0214 1B88     		ldrh	r3, [r3]
 12118 0216 002B     		cmp	r3, #0
 12119 0218 40F0D084 		bne	.L544
1705:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1706:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1707:..\src/command_processing.c ****             start_byte = 0;
 12120              		.loc 1 1707 0
 12121 021c 0023     		movs	r3, #0
 12122 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1708:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12123              		.loc 1 1708 0
 12124 0222 07F58A73 		add	r3, r7, #276
 12125 0226 0222     		movs	r2, #2
 12126 0228 9A70     		strb	r2, [r3, #2]
1709:..\src/command_processing.c ****             packet_data[3] = 1;
 12127              		.loc 1 1709 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 276


 12128 022a 07F58A73 		add	r3, r7, #276
 12129 022e 0122     		movs	r2, #1
 12130 0230 DA70     		strb	r2, [r3, #3]
1710:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12131              		.loc 1 1710 0
 12132 0232 574B     		ldr	r3, .L546
 12133 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12134 0236 07F58A73 		add	r3, r7, #276
 12135 023a 1A71     		strb	r2, [r3, #4]
1711:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12136              		.loc 1 1711 0
 12137 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12138 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12139 0244 15E0     		b	.L504
 12140              	.L505:
1712:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12141              		.loc 1 1712 0 discriminator 3
 12142 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12143 024a 5A1D     		adds	r2, r3, #5
 12144 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12145 0250 D31A     		subs	r3, r2, r3
 12146 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12147 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12148 025a 8A1A     		subs	r2, r1, r2
 12149 025c 07F1F801 		add	r1, r7, #248
 12150 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12151 0262 07F58A72 		add	r2, r7, #276
 12152 0266 D154     		strb	r1, [r2, r3]
1711:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12153              		.loc 1 1711 0 discriminator 3
 12154 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12155 026c 013B     		subs	r3, r3, #1
 12156 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12157              	.L504:
1711:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12158              		.loc 1 1711 0 is_stmt 0 discriminator 1
 12159 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12160 0276 002B     		cmp	r3, #0
 12161 0278 E5D1     		bne	.L505
1713:..\src/command_processing.c ****                 
1714:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1715:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12162              		.loc 1 1715 0 is_stmt 1
 12163 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12164 027e 3233     		adds	r3, r3, #50
 12165 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1716:..\src/command_processing.c ****             i = 0;
 12166              		.loc 1 1716 0
 12167 0284 0023     		movs	r3, #0
 12168 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1717:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12169              		.loc 1 1717 0
 12170 028a 0023     		movs	r3, #0
 12171 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12172 0290 B2E0     		b	.L506
 12173              	.L513:
1718:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 277


 12174              		.loc 1 1718 0
 12175 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12176 0296 07F1EC03 		add	r3, r7, #236
 12177 029a 4149     		ldr	r1, .L546+16
 12178 029c 1846     		mov	r0, r3
 12179 029e FFF7FEFF 		bl	sprintf
1719:..\src/command_processing.c ****                 h = 4;
 12180              		.loc 1 1719 0
 12181 02a2 0423     		movs	r3, #4
 12182 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1720:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12183              		.loc 1 1720 0
 12184 02a8 07F1EC03 		add	r3, r7, #236
 12185 02ac 1846     		mov	r0, r3
 12186 02ae FFF7FEFF 		bl	strlen
 12187 02b2 0346     		mov	r3, r0
 12188 02b4 87F89136 		strb	r3, [r7, #1681]
1721:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12189              		.loc 1 1721 0
 12190 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12191 02bc 9A1C     		adds	r2, r3, #2
 12192 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12193 02c2 3221     		movs	r1, #50
 12194 02c4 01FB03F3 		mul	r3, r1, r3
 12195 02c8 1344     		add	r3, r3, r2
 12196 02ca 07F58A72 		add	r2, r7, #276
 12197 02ce 0221     		movs	r1, #2
 12198 02d0 D154     		strb	r1, [r2, r3]
1722:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12199              		.loc 1 1722 0
 12200 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12201 02d6 DA1C     		adds	r2, r3, #3
 12202 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12203 02dc 3221     		movs	r1, #50
 12204 02de 01FB03F3 		mul	r3, r1, r3
 12205 02e2 1344     		add	r3, r3, r2
 12206 02e4 07F58A72 		add	r2, r7, #276
 12207 02e8 0321     		movs	r1, #3
 12208 02ea D154     		strb	r1, [r2, r3]
1723:..\src/command_processing.c ****                 
1724:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12209              		.loc 1 1724 0
 12210 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12211 02f0 1A46     		mov	r2, r3	@ movhi
 12212 02f2 5200     		lsls	r2, r2, #1
 12213 02f4 1344     		add	r3, r3, r2
 12214 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12215 02fa 39E0     		b	.L507
 12216              	.L510:
1725:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12217              		.loc 1 1725 0
 12218 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12219 0300 284A     		ldr	r2, .L546+20
 12220 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12221 0304 9BB2     		uxth	r3, r3
 12222 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12223 030a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 278


 12224 030c 17D1     		bne	.L508
1726:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12225              		.loc 1 1726 0
 12226 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12227 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12228 0316 1A44     		add	r2, r2, r3
 12229 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12230 031c 3221     		movs	r1, #50
 12231 031e 01FB03F3 		mul	r3, r1, r3
 12232 0322 1344     		add	r3, r3, r2
 12233 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12234 0328 1E49     		ldr	r1, .L546+20
 12235 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12236 032c 07F58A72 		add	r2, r7, #276
 12237 0330 D154     		strb	r1, [r2, r3]
1727:..\src/command_processing.c ****                         i++;
 12238              		.loc 1 1727 0
 12239 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12240 0336 0133     		adds	r3, r3, #1
 12241 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12242 033c 0EE0     		b	.L509
 12243              	.L508:
1728:..\src/command_processing.c ****                     } 
1729:..\src/command_processing.c ****                     else {
1730:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12244              		.loc 1 1730 0
 12245 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12246 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12247 0346 1A44     		add	r2, r2, r3
 12248 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12249 034c 3221     		movs	r1, #50
 12250 034e 01FB03F3 		mul	r3, r1, r3
 12251 0352 1344     		add	r3, r3, r2
 12252 0354 07F58A72 		add	r2, r7, #276
 12253 0358 FF21     		movs	r1, #255
 12254 035a D154     		strb	r1, [r2, r3]
 12255              	.L509:
1731:..\src/command_processing.c ****                     }
1732:..\src/command_processing.c ****                     h++;
 12256              		.loc 1 1732 0 discriminator 2
 12257 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12258 0360 0133     		adds	r3, r3, #1
 12259 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1724:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12260              		.loc 1 1724 0 discriminator 2
 12261 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12262 036a 0133     		adds	r3, r3, #1
 12263 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12264              	.L507:
1724:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12265              		.loc 1 1724 0 is_stmt 0 discriminator 1
 12266 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12267 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12268 0378 1346     		mov	r3, r2
 12269 037a 5B00     		lsls	r3, r3, #1
 12270 037c 1344     		add	r3, r3, r2
 12271 037e 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 279


 12272 0380 9942     		cmp	r1, r3
 12273 0382 BBDD     		ble	.L510
1733:..\src/command_processing.c ****                 }
1734:..\src/command_processing.c **** 
1735:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1736:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12274              		.loc 1 1736 0 is_stmt 1
 12275 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12276 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12277 038c 2BE0     		b	.L511
 12278              	.L547:
 12279 038e 00BF     		.align	2
 12280              	.L546:
 12281 0390 00000000 		.word	N_IMU_Connected
 12282 0394 6C110000 		.word	.LC145
 12283 0398 88110000 		.word	.LC146
 12284 039c 88020000 		.word	.LC132
 12285 03a0 04110000 		.word	.LC147
 12286 03a4 00000000 		.word	IMU_connected
 12287              	.L512:
1737:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12288              		.loc 1 1737 0 discriminator 3
 12289 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12290 03ac DA1D     		adds	r2, r3, #7
 12291 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12292 03b2 3221     		movs	r1, #50
 12293 03b4 01FB03F3 		mul	r3, r1, r3
 12294 03b8 1A44     		add	r2, r2, r3
 12295 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12296 03be 1A44     		add	r2, r2, r3
 12297 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12298 03c4 D31A     		subs	r3, r2, r3
 12299 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12300 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12301 03ce 8A1A     		subs	r2, r1, r2
 12302 03d0 07F1EC01 		add	r1, r7, #236
 12303 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12304 03d6 07F58A72 		add	r2, r7, #276
 12305 03da D154     		strb	r1, [r2, r3]
1736:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12306              		.loc 1 1736 0 discriminator 3
 12307 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12308 03e0 013B     		subs	r3, r3, #1
 12309 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12310              	.L511:
1736:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12311              		.loc 1 1736 0 is_stmt 0 discriminator 1
 12312 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12313 03ea 002B     		cmp	r3, #0
 12314 03ec DCD1     		bne	.L512
1717:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12315              		.loc 1 1717 0 is_stmt 1 discriminator 2
 12316 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12317 03f2 0133     		adds	r3, r3, #1
 12318 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12319              	.L506:
1717:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 280


 12320              		.loc 1 1717 0 is_stmt 0 discriminator 1
 12321 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12322 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12323 0400 9A42     		cmp	r2, r3
 12324 0402 FFF446AF 		bcc	.L513
1738:..\src/command_processing.c ****             }
1739:..\src/command_processing.c ****             
1740:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1741:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12325              		.loc 1 1741 0 is_stmt 1
 12326 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12327 040a 1A46     		mov	r2, r3	@ movhi
 12328 040c 9200     		lsls	r2, r2, #2
 12329 040e 1344     		add	r3, r3, r2
 12330 0410 1A46     		mov	r2, r3	@ movhi
 12331 0412 9100     		lsls	r1, r2, #2
 12332 0414 1A46     		mov	r2, r3	@ movhi
 12333 0416 0B46     		mov	r3, r1	@ movhi
 12334 0418 1344     		add	r3, r3, r2
 12335 041a 5B00     		lsls	r3, r3, #1
 12336 041c 9AB2     		uxth	r2, r3
 12337 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12338 0422 1344     		add	r3, r3, r2
 12339 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1742:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12340              		.loc 1 1742 0
 12341 0428 0023     		movs	r3, #0
 12342 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12343 042e 1FE1     		b	.L514
 12344              	.L521:
1743:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12345              		.loc 1 1743 0
 12346 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12347 0434 9A1C     		adds	r2, r3, #2
 12348 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12349 043a 3221     		movs	r1, #50
 12350 043c 01FB03F3 		mul	r3, r1, r3
 12351 0440 1344     		add	r3, r3, r2
 12352 0442 07F58A72 		add	r2, r7, #276
 12353 0446 0221     		movs	r1, #2
 12354 0448 D154     		strb	r1, [r2, r3]
1744:..\src/command_processing.c ****                 
1745:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12355              		.loc 1 1745 0
 12356 044a B7F89436 		ldrh	r3, [r7, #1684]
 12357 044e DA1C     		adds	r2, r3, #3
 12358 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12359 0454 3221     		movs	r1, #50
 12360 0456 01FB03F3 		mul	r3, r1, r3
 12361 045a 1344     		add	r3, r3, r2
 12362 045c 07F58A72 		add	r2, r7, #276
 12363 0460 0321     		movs	r1, #3
 12364 0462 D154     		strb	r1, [r2, r3]
1746:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12365              		.loc 1 1746 0
 12366 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12367 0468 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 281


 12368 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12369 046e 3221     		movs	r1, #50
 12370 0470 01FB03F3 		mul	r3, r1, r3
 12371 0474 1A44     		add	r2, r2, r3
 12372 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12373 047a 5B00     		lsls	r3, r3, #1
 12374 047c B249     		ldr	r1, .L548
 12375 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12376 0480 1846     		mov	r0, r3
 12377 0482 B249     		ldr	r1, .L548+4
 12378 0484 0346     		mov	r3, r0
 12379 0486 5B00     		lsls	r3, r3, #1
 12380 0488 0344     		add	r3, r3, r0
 12381 048a 0B44     		add	r3, r3, r1
 12382 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12383 048e 07F58A73 		add	r3, r7, #276
 12384 0492 9954     		strb	r1, [r3, r2]
1747:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12385              		.loc 1 1747 0
 12386 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12387 0498 5A1D     		adds	r2, r3, #5
 12388 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12389 049e 3221     		movs	r1, #50
 12390 04a0 01FB03F3 		mul	r3, r1, r3
 12391 04a4 1A44     		add	r2, r2, r3
 12392 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12393 04aa 5B00     		lsls	r3, r3, #1
 12394 04ac A649     		ldr	r1, .L548
 12395 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12396 04b0 1846     		mov	r0, r3
 12397 04b2 A649     		ldr	r1, .L548+4
 12398 04b4 0346     		mov	r3, r0
 12399 04b6 5B00     		lsls	r3, r3, #1
 12400 04b8 0344     		add	r3, r3, r0
 12401 04ba 0B44     		add	r3, r3, r1
 12402 04bc 0133     		adds	r3, r3, #1
 12403 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12404 04c0 07F58A73 		add	r3, r7, #276
 12405 04c4 9954     		strb	r1, [r3, r2]
1748:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12406              		.loc 1 1748 0
 12407 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12408 04ca 9A1D     		adds	r2, r3, #6
 12409 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12410 04d0 3221     		movs	r1, #50
 12411 04d2 01FB03F3 		mul	r3, r1, r3
 12412 04d6 1A44     		add	r2, r2, r3
 12413 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12414 04dc 5B00     		lsls	r3, r3, #1
 12415 04de 9A49     		ldr	r1, .L548
 12416 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12417 04e2 1846     		mov	r0, r3
 12418 04e4 9949     		ldr	r1, .L548+4
 12419 04e6 0346     		mov	r3, r0
 12420 04e8 5B00     		lsls	r3, r3, #1
 12421 04ea 0344     		add	r3, r3, r0
 12422 04ec 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 282


 12423 04ee 0233     		adds	r3, r3, #2
 12424 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12425 04f2 07F58A73 		add	r3, r7, #276
 12426 04f6 9954     		strb	r1, [r3, r2]
1749:..\src/command_processing.c ****                 
1750:..\src/command_processing.c ****                 // check if there is a second value
1751:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12427              		.loc 1 1751 0
 12428 04f8 954B     		ldr	r3, .L548+8
 12429 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12430 04fc 1A46     		mov	r2, r3
 12431 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12432 0502 0133     		adds	r3, r3, #1
 12433 0504 5B00     		lsls	r3, r3, #1
 12434 0506 9A42     		cmp	r2, r3
 12435 0508 28DA     		bge	.L515
1752:..\src/command_processing.c ****                     // there is only one value
1753:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12436              		.loc 1 1753 0
 12437 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12438 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12439 0512 1EE0     		b	.L516
 12440              	.L517:
1754:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12441              		.loc 1 1754 0 discriminator 3
 12442 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12443 0518 DA1D     		adds	r2, r3, #7
 12444 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12445 051e 3221     		movs	r1, #50
 12446 0520 01FB03F3 		mul	r3, r1, r3
 12447 0524 1A44     		add	r2, r2, r3
 12448 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12449 052a 1A44     		add	r2, r2, r3
 12450 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12451 0530 D31A     		subs	r3, r2, r3
 12452 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12453 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12454 053a 8A1A     		subs	r2, r1, r2
 12455 053c 07F1D801 		add	r1, r7, #216
 12456 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12457 0542 07F58A72 		add	r2, r7, #276
 12458 0546 D154     		strb	r1, [r2, r3]
1753:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12459              		.loc 1 1753 0 discriminator 3
 12460 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12461 054c 013B     		subs	r3, r3, #1
 12462 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12463              	.L516:
1753:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12464              		.loc 1 1753 0 is_stmt 0 discriminator 1
 12465 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12466 0556 002B     		cmp	r3, #0
 12467 0558 DCD1     		bne	.L517
 12468 055a 84E0     		b	.L518
 12469              	.L515:
1755:..\src/command_processing.c ****                 }
1756:..\src/command_processing.c ****                 else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 283


1757:..\src/command_processing.c ****                     // fill the second value
1758:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12470              		.loc 1 1758 0 is_stmt 1
 12471 055c B7F89436 		ldrh	r3, [r7, #1684]
 12472 0560 DA1C     		adds	r2, r3, #3
 12473 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12474 0566 3221     		movs	r1, #50
 12475 0568 01FB03F3 		mul	r3, r1, r3
 12476 056c 1344     		add	r3, r3, r2
 12477 056e 07F58A72 		add	r2, r7, #276
 12478 0572 0621     		movs	r1, #6
 12479 0574 D154     		strb	r1, [r2, r3]
1759:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12480              		.loc 1 1759 0
 12481 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12482 057a DA1D     		adds	r2, r3, #7
 12483 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12484 0580 3221     		movs	r1, #50
 12485 0582 01FB03F3 		mul	r3, r1, r3
 12486 0586 1A44     		add	r2, r2, r3
 12487 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12488 058c 5B00     		lsls	r3, r3, #1
 12489 058e 0133     		adds	r3, r3, #1
 12490 0590 6D49     		ldr	r1, .L548
 12491 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12492 0594 1846     		mov	r0, r3
 12493 0596 6D49     		ldr	r1, .L548+4
 12494 0598 0346     		mov	r3, r0
 12495 059a 5B00     		lsls	r3, r3, #1
 12496 059c 0344     		add	r3, r3, r0
 12497 059e 0B44     		add	r3, r3, r1
 12498 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12499 05a2 07F58A73 		add	r3, r7, #276
 12500 05a6 9954     		strb	r1, [r3, r2]
1760:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12501              		.loc 1 1760 0
 12502 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12503 05ac 03F10802 		add	r2, r3, #8
 12504 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12505 05b4 3221     		movs	r1, #50
 12506 05b6 01FB03F3 		mul	r3, r1, r3
 12507 05ba 1A44     		add	r2, r2, r3
 12508 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12509 05c0 5B00     		lsls	r3, r3, #1
 12510 05c2 0133     		adds	r3, r3, #1
 12511 05c4 6049     		ldr	r1, .L548
 12512 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12513 05c8 1846     		mov	r0, r3
 12514 05ca 6049     		ldr	r1, .L548+4
 12515 05cc 0346     		mov	r3, r0
 12516 05ce 5B00     		lsls	r3, r3, #1
 12517 05d0 0344     		add	r3, r3, r0
 12518 05d2 0B44     		add	r3, r3, r1
 12519 05d4 0133     		adds	r3, r3, #1
 12520 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12521 05d8 07F58A73 		add	r3, r7, #276
 12522 05dc 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 284


1761:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12523              		.loc 1 1761 0
 12524 05de B7F89436 		ldrh	r3, [r7, #1684]
 12525 05e2 03F10902 		add	r2, r3, #9
 12526 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12527 05ea 3221     		movs	r1, #50
 12528 05ec 01FB03F3 		mul	r3, r1, r3
 12529 05f0 1A44     		add	r2, r2, r3
 12530 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12531 05f6 5B00     		lsls	r3, r3, #1
 12532 05f8 0133     		adds	r3, r3, #1
 12533 05fa 5349     		ldr	r1, .L548
 12534 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12535 05fe 1846     		mov	r0, r3
 12536 0600 5249     		ldr	r1, .L548+4
 12537 0602 0346     		mov	r3, r0
 12538 0604 5B00     		lsls	r3, r3, #1
 12539 0606 0344     		add	r3, r3, r0
 12540 0608 0B44     		add	r3, r3, r1
 12541 060a 0233     		adds	r3, r3, #2
 12542 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12543 060e 07F58A73 		add	r3, r7, #276
 12544 0612 9954     		strb	r1, [r3, r2]
1762:..\src/command_processing.c ****                 
1763:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12545              		.loc 1 1763 0
 12546 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12547 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12548 061c 1FE0     		b	.L519
 12549              	.L520:
1764:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12550              		.loc 1 1764 0 discriminator 3
 12551 061e B7F89436 		ldrh	r3, [r7, #1684]
 12552 0622 03F10A02 		add	r2, r3, #10
 12553 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12554 062a 3221     		movs	r1, #50
 12555 062c 01FB03F3 		mul	r3, r1, r3
 12556 0630 1A44     		add	r2, r2, r3
 12557 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12558 0636 1A44     		add	r2, r2, r3
 12559 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12560 063c D31A     		subs	r3, r2, r3
 12561 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12562 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12563 0646 8A1A     		subs	r2, r1, r2
 12564 0648 07F1D801 		add	r1, r7, #216
 12565 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12566 064e 07F58A72 		add	r2, r7, #276
 12567 0652 D154     		strb	r1, [r2, r3]
1763:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12568              		.loc 1 1763 0 discriminator 3
 12569 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12570 0658 013B     		subs	r3, r3, #1
 12571 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12572              	.L519:
1763:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12573              		.loc 1 1763 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 285


 12574 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12575 0662 002B     		cmp	r3, #0
 12576 0664 DBD1     		bne	.L520
 12577              	.L518:
1742:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12578              		.loc 1 1742 0 is_stmt 1 discriminator 2
 12579 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12580 066a 0133     		adds	r3, r3, #1
 12581 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12582              	.L514:
1742:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12583              		.loc 1 1742 0 is_stmt 0 discriminator 1
 12584 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12585 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12586 0678 9A42     		cmp	r2, r3
 12587 067a FFF4D9AE 		bcc	.L521
1765:..\src/command_processing.c ****                 }
1766:..\src/command_processing.c ****             }
1767:..\src/command_processing.c ****             
1768:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1769:..\src/command_processing.c ****             
1770:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12588              		.loc 1 1770 0 is_stmt 1
 12589 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12590 0682 1A46     		mov	r2, r3	@ movhi
 12591 0684 9200     		lsls	r2, r2, #2
 12592 0686 1344     		add	r3, r3, r2
 12593 0688 1A46     		mov	r2, r3	@ movhi
 12594 068a 9100     		lsls	r1, r2, #2
 12595 068c 1A46     		mov	r2, r3	@ movhi
 12596 068e 0B46     		mov	r3, r1	@ movhi
 12597 0690 1344     		add	r3, r3, r2
 12598 0692 5B00     		lsls	r3, r3, #1
 12599 0694 9AB2     		uxth	r2, r3
 12600 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12601 069a 1344     		add	r3, r3, r2
 12602 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1771:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12603              		.loc 1 1771 0
 12604 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12605 06a4 5A1E     		subs	r2, r3, #1
 12606 06a6 07F1C803 		add	r3, r7, #200
 12607 06aa 2A49     		ldr	r1, .L548+12
 12608 06ac 1846     		mov	r0, r3
 12609 06ae FFF7FEFF 		bl	sprintf
1772:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12610              		.loc 1 1772 0
 12611 06b2 07F1C803 		add	r3, r7, #200
 12612 06b6 1846     		mov	r0, r3
 12613 06b8 FFF7FEFF 		bl	strlen
 12614 06bc 0346     		mov	r3, r0
 12615 06be 87F89336 		strb	r3, [r7, #1683]
1773:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12616              		.loc 1 1773 0
 12617 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12618 06c6 0233     		adds	r3, r3, #2
 12619 06c8 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 286


 12620 06cc 0221     		movs	r1, #2
 12621 06ce D154     		strb	r1, [r2, r3]
1774:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12622              		.loc 1 1774 0
 12623 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12624 06d4 0333     		adds	r3, r3, #3
 12625 06d6 07F58A72 		add	r2, r7, #276
 12626 06da 0121     		movs	r1, #1
 12627 06dc D154     		strb	r1, [r2, r3]
1775:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12628              		.loc 1 1775 0
 12629 06de B7F89436 		ldrh	r3, [r7, #1684]
 12630 06e2 0433     		adds	r3, r3, #4
 12631 06e4 1C4A     		ldr	r2, .L548+16
 12632 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12633 06ea 07F58A72 		add	r2, r7, #276
 12634 06ee D154     		strb	r1, [r2, r3]
1776:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12635              		.loc 1 1776 0
 12636 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12637 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12638 06f8 18E0     		b	.L522
 12639              	.L523:
1777:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12640              		.loc 1 1777 0 discriminator 3
 12641 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12642 06fe 5A1D     		adds	r2, r3, #5
 12643 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12644 0704 1A44     		add	r2, r2, r3
 12645 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12646 070a D31A     		subs	r3, r2, r3
 12647 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12648 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12649 0714 8A1A     		subs	r2, r1, r2
 12650 0716 07F1C801 		add	r1, r7, #200
 12651 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12652 071c 07F58A72 		add	r2, r7, #276
 12653 0720 D154     		strb	r1, [r2, r3]
1776:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12654              		.loc 1 1776 0 discriminator 3
 12655 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12656 0726 013B     		subs	r3, r3, #1
 12657 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12658              	.L522:
1776:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12659              		.loc 1 1776 0 is_stmt 0 discriminator 1
 12660 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12661 0730 002B     		cmp	r3, #0
 12662 0732 E2D1     		bne	.L523
1778:..\src/command_processing.c ****                 
1779:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1780:..\src/command_processing.c ****             
1781:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12663              		.loc 1 1781 0 is_stmt 1
 12664 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12665 0738 3233     		adds	r3, r3, #50
 12666 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 287


1782:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12667              		.loc 1 1782 0
 12668 073e 0023     		movs	r3, #0
 12669 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12670 0744 38E1     		b	.L524
 12671              	.L549:
 12672 0746 00BF     		.align	2
 12673              	.L548:
 12674 0748 00000000 		.word	IMU_connected
 12675 074c 00000000 		.word	MagCal
 12676 0750 00000000 		.word	N_IMU_Connected
 12677 0754 10110000 		.word	.LC148
 12678 0758 00000000 		.word	c_mem
 12679              	.L527:
1783:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12680              		.loc 1 1783 0
 12681 075c B7F89826 		ldrh	r2, [r7, #1688]
 12682 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12683 0764 D118     		adds	r1, r2, r3
 12684 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12685 076a D54A     		ldr	r2, .L550
 12686 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12687 076e 07F19C00 		add	r0, r7, #156
 12688 0772 0A46     		mov	r2, r1
 12689 0774 D349     		ldr	r1, .L550+4
 12690 0776 FFF7FEFF 		bl	sprintf
1784:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12691              		.loc 1 1784 0
 12692 077a 07F19C03 		add	r3, r7, #156
 12693 077e 1846     		mov	r0, r3
 12694 0780 FFF7FEFF 		bl	strlen
 12695 0784 0346     		mov	r3, r0
 12696 0786 87F88F36 		strb	r3, [r7, #1679]
1785:..\src/command_processing.c ****             
1786:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12697              		.loc 1 1786 0
 12698 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12699 078e 1A46     		mov	r2, r3	@ movhi
 12700 0790 9200     		lsls	r2, r2, #2
 12701 0792 1344     		add	r3, r3, r2
 12702 0794 1A46     		mov	r2, r3	@ movhi
 12703 0796 9100     		lsls	r1, r2, #2
 12704 0798 1A46     		mov	r2, r3	@ movhi
 12705 079a 0B46     		mov	r3, r1	@ movhi
 12706 079c 1344     		add	r3, r3, r2
 12707 079e 5B00     		lsls	r3, r3, #1
 12708 07a0 9AB2     		uxth	r2, r3
 12709 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12710 07a6 1344     		add	r3, r3, r2
 12711 07a8 9BB2     		uxth	r3, r3
 12712 07aa 0233     		adds	r3, r3, #2
 12713 07ac 9BB2     		uxth	r3, r3
 12714 07ae 1A46     		mov	r2, r3
 12715 07b0 07F58A73 		add	r3, r7, #276
 12716 07b4 0221     		movs	r1, #2
 12717 07b6 9954     		strb	r1, [r3, r2]
1787:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 288


 12718              		.loc 1 1787 0
 12719 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12720 07bc 1A46     		mov	r2, r3	@ movhi
 12721 07be 9200     		lsls	r2, r2, #2
 12722 07c0 1344     		add	r3, r3, r2
 12723 07c2 1A46     		mov	r2, r3	@ movhi
 12724 07c4 9100     		lsls	r1, r2, #2
 12725 07c6 1A46     		mov	r2, r3	@ movhi
 12726 07c8 0B46     		mov	r3, r1	@ movhi
 12727 07ca 1344     		add	r3, r3, r2
 12728 07cc 5B00     		lsls	r3, r3, #1
 12729 07ce 9AB2     		uxth	r2, r3
 12730 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12731 07d4 1344     		add	r3, r3, r2
 12732 07d6 9BB2     		uxth	r3, r3
 12733 07d8 0333     		adds	r3, r3, #3
 12734 07da 9BB2     		uxth	r3, r3
 12735 07dc 1A46     		mov	r2, r3
 12736 07de 07F58A73 		add	r3, r7, #276
 12737 07e2 0521     		movs	r1, #5
 12738 07e4 9954     		strb	r1, [r3, r2]
1788:..\src/command_processing.c ****                 
1789:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12739              		.loc 1 1789 0
 12740 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12741 07ea 1A46     		mov	r2, r3	@ movhi
 12742 07ec 9200     		lsls	r2, r2, #2
 12743 07ee 1344     		add	r3, r3, r2
 12744 07f0 1A46     		mov	r2, r3	@ movhi
 12745 07f2 9100     		lsls	r1, r2, #2
 12746 07f4 1A46     		mov	r2, r3	@ movhi
 12747 07f6 0B46     		mov	r3, r1	@ movhi
 12748 07f8 1344     		add	r3, r3, r2
 12749 07fa 5B00     		lsls	r3, r3, #1
 12750 07fc 9AB2     		uxth	r2, r3
 12751 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12752 0802 1344     		add	r3, r3, r2
 12753 0804 9BB2     		uxth	r3, r3
 12754 0806 0433     		adds	r3, r3, #4
 12755 0808 9BB2     		uxth	r3, r3
 12756 080a 1846     		mov	r0, r3
 12757 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12758 0810 AB4A     		ldr	r2, .L550
 12759 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12760 0814 1946     		mov	r1, r3
 12761 0816 AC4A     		ldr	r2, .L550+8
 12762 0818 0B46     		mov	r3, r1
 12763 081a 9B00     		lsls	r3, r3, #2
 12764 081c 0B44     		add	r3, r3, r1
 12765 081e 1344     		add	r3, r3, r2
 12766 0820 03F20A23 		addw	r3, r3, #522
 12767 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12768 0826 07F58A73 		add	r3, r7, #276
 12769 082a 1A54     		strb	r2, [r3, r0]
1790:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12770              		.loc 1 1790 0
 12771 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 289


 12772 0830 1A46     		mov	r2, r3	@ movhi
 12773 0832 9200     		lsls	r2, r2, #2
 12774 0834 1344     		add	r3, r3, r2
 12775 0836 1A46     		mov	r2, r3	@ movhi
 12776 0838 9100     		lsls	r1, r2, #2
 12777 083a 1A46     		mov	r2, r3	@ movhi
 12778 083c 0B46     		mov	r3, r1	@ movhi
 12779 083e 1344     		add	r3, r3, r2
 12780 0840 5B00     		lsls	r3, r3, #1
 12781 0842 9AB2     		uxth	r2, r3
 12782 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12783 0848 1344     		add	r3, r3, r2
 12784 084a 9BB2     		uxth	r3, r3
 12785 084c 0533     		adds	r3, r3, #5
 12786 084e 9BB2     		uxth	r3, r3
 12787 0850 1846     		mov	r0, r3
 12788 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 12789 0856 9A4A     		ldr	r2, .L550
 12790 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12791 085a 1946     		mov	r1, r3
 12792 085c 9A4A     		ldr	r2, .L550+8
 12793 085e 0B46     		mov	r3, r1
 12794 0860 9B00     		lsls	r3, r3, #2
 12795 0862 0B44     		add	r3, r3, r1
 12796 0864 1344     		add	r3, r3, r2
 12797 0866 03F20B23 		addw	r3, r3, #523
 12798 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12799 086c 07F58A73 		add	r3, r7, #276
 12800 0870 1A54     		strb	r2, [r3, r0]
1791:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12801              		.loc 1 1791 0
 12802 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12803 0876 1A46     		mov	r2, r3	@ movhi
 12804 0878 9200     		lsls	r2, r2, #2
 12805 087a 1344     		add	r3, r3, r2
 12806 087c 1A46     		mov	r2, r3	@ movhi
 12807 087e 9100     		lsls	r1, r2, #2
 12808 0880 1A46     		mov	r2, r3	@ movhi
 12809 0882 0B46     		mov	r3, r1	@ movhi
 12810 0884 1344     		add	r3, r3, r2
 12811 0886 5B00     		lsls	r3, r3, #1
 12812 0888 9AB2     		uxth	r2, r3
 12813 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12814 088e 1344     		add	r3, r3, r2
 12815 0890 9BB2     		uxth	r3, r3
 12816 0892 0633     		adds	r3, r3, #6
 12817 0894 9BB2     		uxth	r3, r3
 12818 0896 1846     		mov	r0, r3
 12819 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 12820 089c 884A     		ldr	r2, .L550
 12821 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12822 08a0 1946     		mov	r1, r3
 12823 08a2 894A     		ldr	r2, .L550+8
 12824 08a4 0B46     		mov	r3, r1
 12825 08a6 9B00     		lsls	r3, r3, #2
 12826 08a8 0B44     		add	r3, r3, r1
 12827 08aa 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 290


 12828 08ac 03F50373 		add	r3, r3, #524
 12829 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12830 08b2 07F58A73 		add	r3, r7, #276
 12831 08b6 1A54     		strb	r2, [r3, r0]
1792:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12832              		.loc 1 1792 0
 12833 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12834 08bc 1A46     		mov	r2, r3	@ movhi
 12835 08be 9200     		lsls	r2, r2, #2
 12836 08c0 1344     		add	r3, r3, r2
 12837 08c2 1A46     		mov	r2, r3	@ movhi
 12838 08c4 9100     		lsls	r1, r2, #2
 12839 08c6 1A46     		mov	r2, r3	@ movhi
 12840 08c8 0B46     		mov	r3, r1	@ movhi
 12841 08ca 1344     		add	r3, r3, r2
 12842 08cc 5B00     		lsls	r3, r3, #1
 12843 08ce 9AB2     		uxth	r2, r3
 12844 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12845 08d4 1344     		add	r3, r3, r2
 12846 08d6 9BB2     		uxth	r3, r3
 12847 08d8 0733     		adds	r3, r3, #7
 12848 08da 9BB2     		uxth	r3, r3
 12849 08dc 1846     		mov	r0, r3
 12850 08de B7F8A436 		ldrh	r3, [r7, #1700]
 12851 08e2 774A     		ldr	r2, .L550
 12852 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12853 08e6 1946     		mov	r1, r3
 12854 08e8 774A     		ldr	r2, .L550+8
 12855 08ea 0B46     		mov	r3, r1
 12856 08ec 9B00     		lsls	r3, r3, #2
 12857 08ee 0B44     		add	r3, r3, r1
 12858 08f0 1344     		add	r3, r3, r2
 12859 08f2 03F20D23 		addw	r3, r3, #525
 12860 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12861 08f8 07F58A73 		add	r3, r7, #276
 12862 08fc 1A54     		strb	r2, [r3, r0]
1793:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12863              		.loc 1 1793 0
 12864 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12865 0902 1A46     		mov	r2, r3	@ movhi
 12866 0904 9200     		lsls	r2, r2, #2
 12867 0906 1344     		add	r3, r3, r2
 12868 0908 1A46     		mov	r2, r3	@ movhi
 12869 090a 9100     		lsls	r1, r2, #2
 12870 090c 1A46     		mov	r2, r3	@ movhi
 12871 090e 0B46     		mov	r3, r1	@ movhi
 12872 0910 1344     		add	r3, r3, r2
 12873 0912 5B00     		lsls	r3, r3, #1
 12874 0914 9AB2     		uxth	r2, r3
 12875 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12876 091a 1344     		add	r3, r3, r2
 12877 091c 9BB2     		uxth	r3, r3
 12878 091e 0833     		adds	r3, r3, #8
 12879 0920 9BB2     		uxth	r3, r3
 12880 0922 1846     		mov	r0, r3
 12881 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 12882 0928 654A     		ldr	r2, .L550
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 291


 12883 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12884 092c 1946     		mov	r1, r3
 12885 092e 664A     		ldr	r2, .L550+8
 12886 0930 0B46     		mov	r3, r1
 12887 0932 9B00     		lsls	r3, r3, #2
 12888 0934 0B44     		add	r3, r3, r1
 12889 0936 1344     		add	r3, r3, r2
 12890 0938 03F20E23 		addw	r3, r3, #526
 12891 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12892 093e 07F58A73 		add	r3, r7, #276
 12893 0942 1A54     		strb	r2, [r3, r0]
1794:..\src/command_processing.c **** 
1795:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 12894              		.loc 1 1795 0
 12895 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12896 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12897 094c 2BE0     		b	.L525
 12898              	.L526:
1796:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12899              		.loc 1 1796 0 discriminator 3
 12900 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12901 0952 1A46     		mov	r2, r3	@ movhi
 12902 0954 9200     		lsls	r2, r2, #2
 12903 0956 1344     		add	r3, r3, r2
 12904 0958 1A46     		mov	r2, r3	@ movhi
 12905 095a 9100     		lsls	r1, r2, #2
 12906 095c 1A46     		mov	r2, r3	@ movhi
 12907 095e 0B46     		mov	r3, r1	@ movhi
 12908 0960 1344     		add	r3, r3, r2
 12909 0962 5B00     		lsls	r3, r3, #1
 12910 0964 9AB2     		uxth	r2, r3
 12911 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12912 096a 1344     		add	r3, r3, r2
 12913 096c 9AB2     		uxth	r2, r3
 12914 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12915 0972 9BB2     		uxth	r3, r3
 12916 0974 1344     		add	r3, r3, r2
 12917 0976 9AB2     		uxth	r2, r3
 12918 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 12919 097c D31A     		subs	r3, r2, r3
 12920 097e 9BB2     		uxth	r3, r3
 12921 0980 0933     		adds	r3, r3, #9
 12922 0982 9BB2     		uxth	r3, r3
 12923 0984 1946     		mov	r1, r3
 12924 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 12925 098a B7F8A236 		ldrh	r3, [r7, #1698]
 12926 098e D31A     		subs	r3, r2, r3
 12927 0990 07F19C02 		add	r2, r7, #156
 12928 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 12929 0996 07F58A73 		add	r3, r7, #276
 12930 099a 5A54     		strb	r2, [r3, r1]
1795:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12931              		.loc 1 1795 0 discriminator 3
 12932 099c B7F8A236 		ldrh	r3, [r7, #1698]
 12933 09a0 013B     		subs	r3, r3, #1
 12934 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12935              	.L525:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 292


1795:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12936              		.loc 1 1795 0 is_stmt 0 discriminator 1
 12937 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 12938 09aa 002B     		cmp	r3, #0
 12939 09ac CFD1     		bne	.L526
1782:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12940              		.loc 1 1782 0 is_stmt 1 discriminator 2
 12941 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 12942 09b2 0133     		adds	r3, r3, #1
 12943 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12944              	.L524:
1782:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12945              		.loc 1 1782 0 is_stmt 0 discriminator 1
 12946 09b8 444B     		ldr	r3, .L550+12
 12947 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12948 09bc 9BB2     		uxth	r3, r3
 12949 09be B7F8A426 		ldrh	r2, [r7, #1700]
 12950 09c2 9A42     		cmp	r2, r3
 12951 09c4 FFF4CAAE 		bcc	.L527
1797:..\src/command_processing.c ****             }  
1798:..\src/command_processing.c ****           
1799:..\src/command_processing.c **** 
1800:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1801:..\src/command_processing.c ****             
1802:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 12952              		.loc 1 1802 0 is_stmt 1
 12953 09c8 404B     		ldr	r3, .L550+12
 12954 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12955 09cc 9BB2     		uxth	r3, r3
 12956 09ce 1A46     		mov	r2, r3	@ movhi
 12957 09d0 9200     		lsls	r2, r2, #2
 12958 09d2 1344     		add	r3, r3, r2
 12959 09d4 1A46     		mov	r2, r3	@ movhi
 12960 09d6 9100     		lsls	r1, r2, #2
 12961 09d8 1A46     		mov	r2, r3	@ movhi
 12962 09da 0B46     		mov	r3, r1	@ movhi
 12963 09dc 1344     		add	r3, r3, r2
 12964 09de 5B00     		lsls	r3, r3, #1
 12965 09e0 9AB2     		uxth	r2, r3
 12966 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12967 09e6 1344     		add	r3, r3, r2
 12968 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1803:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 12969              		.loc 1 1803 0
 12970 09ec B7F89836 		ldrh	r3, [r7, #1688]
 12971 09f0 364A     		ldr	r2, .L550+12
 12972 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12973 09f4 1A44     		add	r2, r2, r3
 12974 09f6 07F18003 		add	r3, r7, #128
 12975 09fa 3549     		ldr	r1, .L550+16
 12976 09fc 1846     		mov	r0, r3
 12977 09fe FFF7FEFF 		bl	sprintf
1804:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 12978              		.loc 1 1804 0
 12979 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 12980 0a06 0233     		adds	r3, r3, #2
 12981 0a08 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 293


 12982 0a0c 0021     		movs	r1, #0
 12983 0a0e D154     		strb	r1, [r2, r3]
1805:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12984              		.loc 1 1805 0
 12985 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 12986 0a14 0333     		adds	r3, r3, #3
 12987 0a16 07F58A72 		add	r2, r7, #276
 12988 0a1a 0121     		movs	r1, #1
 12989 0a1c D154     		strb	r1, [r2, r3]
1806:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 12990              		.loc 1 1806 0
 12991 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 12992 0a22 0433     		adds	r3, r3, #4
 12993 0a24 284A     		ldr	r2, .L550+8
 12994 0a26 92F80912 		ldrb	r1, [r2, #521]	@ zero_extendqisi2
 12995 0a2a 07F58A72 		add	r2, r7, #276
 12996 0a2e D154     		strb	r1, [r2, r3]
1807:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 12997              		.loc 1 1807 0
 12998 0a30 254B     		ldr	r3, .L550+8
 12999 0a32 93F80932 		ldrb	r3, [r3, #521]	@ zero_extendqisi2
 13000 0a36 012B     		cmp	r3, #1
 13001 0a38 17D0     		beq	.L529
 13002 0a3a 022B     		cmp	r3, #2
 13003 0a3c 28D0     		beq	.L530
 13004 0a3e 002B     		cmp	r3, #0
 13005 0a40 00D0     		beq	.L531
1808:..\src/command_processing.c ****                 case 0: 
1809:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1810:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1811:..\src/command_processing.c ****                     break;
1812:..\src/command_processing.c ****                 case 1: 
1813:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1814:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1815:..\src/command_processing.c ****                     break;
1816:..\src/command_processing.c ****                 case 2: 
1817:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1818:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1819:..\src/command_processing.c ****                     break;
1820:..\src/command_processing.c ****                 default:
1821:..\src/command_processing.c ****                     break;
 13006              		.loc 1 1821 0
 13007 0a42 38E0     		b	.L532
 13008              	.L531:
1809:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13009              		.loc 1 1809 0
 13010 0a44 07F18003 		add	r3, r7, #128
 13011 0a48 1846     		mov	r0, r3
 13012 0a4a FFF7FEFF 		bl	strlen
 13013 0a4e 0346     		mov	r3, r0
 13014 0a50 1A46     		mov	r2, r3
 13015 0a52 07F18003 		add	r3, r7, #128
 13016 0a56 1344     		add	r3, r3, r2
 13017 0a58 1E4A     		ldr	r2, .L550+20
 13018 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13019 0a5c 1860     		str	r0, [r3]	@ unaligned
 13020 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 294


 13021 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1810:..\src/command_processing.c ****                     break;
 13022              		.loc 1 1810 0
 13023 0a62 1A23     		movs	r3, #26
 13024 0a64 87F89D36 		strb	r3, [r7, #1693]
1811:..\src/command_processing.c ****                 case 1: 
 13025              		.loc 1 1811 0
 13026 0a68 25E0     		b	.L532
 13027              	.L529:
1813:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13028              		.loc 1 1813 0
 13029 0a6a 07F18003 		add	r3, r7, #128
 13030 0a6e 1846     		mov	r0, r3
 13031 0a70 FFF7FEFF 		bl	strlen
 13032 0a74 0346     		mov	r3, r0
 13033 0a76 1A46     		mov	r2, r3
 13034 0a78 07F18003 		add	r3, r7, #128
 13035 0a7c 1344     		add	r3, r3, r2
 13036 0a7e 164A     		ldr	r2, .L550+24
 13037 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13038 0a82 1860     		str	r0, [r3]	@ unaligned
 13039 0a84 1279     		ldrb	r2, [r2, #4]
 13040 0a86 1A71     		strb	r2, [r3, #4]
1814:..\src/command_processing.c ****                     break;
 13041              		.loc 1 1814 0
 13042 0a88 1923     		movs	r3, #25
 13043 0a8a 87F89D36 		strb	r3, [r7, #1693]
1815:..\src/command_processing.c ****                 case 2: 
 13044              		.loc 1 1815 0
 13045 0a8e 12E0     		b	.L532
 13046              	.L530:
1817:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13047              		.loc 1 1817 0
 13048 0a90 07F18003 		add	r3, r7, #128
 13049 0a94 1846     		mov	r0, r3
 13050 0a96 FFF7FEFF 		bl	strlen
 13051 0a9a 0346     		mov	r3, r0
 13052 0a9c 1A46     		mov	r2, r3
 13053 0a9e 07F18003 		add	r3, r7, #128
 13054 0aa2 1344     		add	r3, r3, r2
 13055 0aa4 0D4A     		ldr	r2, .L550+28
 13056 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13057 0aa8 1860     		str	r0, [r3]	@ unaligned
 13058 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13059 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1818:..\src/command_processing.c ****                     break;
 13060              		.loc 1 1818 0
 13061 0aae 1A23     		movs	r3, #26
 13062 0ab0 87F89D36 		strb	r3, [r7, #1693]
1819:..\src/command_processing.c ****                 default:
 13063              		.loc 1 1819 0
 13064 0ab4 00BF     		nop
 13065              	.L532:
1822:..\src/command_processing.c ****             }            
1823:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13066              		.loc 1 1823 0
 13067 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 295


 13068 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13069 0abe 28E0     		b	.L533
 13070              	.L551:
 13071              		.align	2
 13072              	.L550:
 13073 0ac0 00000000 		.word	IMU_connected
 13074 0ac4 20110000 		.word	.LC149
 13075 0ac8 00000000 		.word	c_mem
 13076 0acc 00000000 		.word	N_IMU_Connected
 13077 0ad0 3C110000 		.word	.LC150
 13078 0ad4 54110000 		.word	.LC151
 13079 0ad8 5C110000 		.word	.LC152
 13080 0adc 64110000 		.word	.LC153
 13081              	.L534:
1824:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13082              		.loc 1 1824 0 discriminator 3
 13083 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13084 0ae4 5A1D     		adds	r2, r3, #5
 13085 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13086 0aea 1A44     		add	r2, r2, r3
 13087 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13088 0af0 D31A     		subs	r3, r2, r3
 13089 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13090 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13091 0afa 8A1A     		subs	r2, r1, r2
 13092 0afc 07F18001 		add	r1, r7, #128
 13093 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13094 0b02 07F58A72 		add	r2, r7, #276
 13095 0b06 D154     		strb	r1, [r2, r3]
1823:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13096              		.loc 1 1823 0 discriminator 3
 13097 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13098 0b0c 013B     		subs	r3, r3, #1
 13099 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13100              	.L533:
1823:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13101              		.loc 1 1823 0 is_stmt 0 discriminator 1
 13102 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13103 0b16 002B     		cmp	r3, #0
 13104 0b18 E2D1     		bne	.L534
1825:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1826:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13105              		.loc 1 1826 0 is_stmt 1
 13106 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13107 0b1e 5A1D     		adds	r2, r3, #5
 13108 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13109 0b24 1344     		add	r3, r3, r2
 13110 0b26 07F58A72 		add	r2, r7, #276
 13111 0b2a 0121     		movs	r1, #1
 13112 0b2c D154     		strb	r1, [r2, r3]
1827:..\src/command_processing.c ****                   
1828:..\src/command_processing.c ****             
1829:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1830:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13113              		.loc 1 1830 0
 13114 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13115 0b32 3233     		adds	r3, r3, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 296


 13116 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1831:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13117              		.loc 1 1831 0
 13118 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13119 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13120 0b40 1AE0     		b	.L535
 13121              	.L536:
1832:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13122              		.loc 1 1832 0 discriminator 3
 13123 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13124 0b46 0233     		adds	r3, r3, #2
 13125 0b48 9BB2     		uxth	r3, r3
 13126 0b4a 1A46     		mov	r2, r3
 13127 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13128 0b50 1A44     		add	r2, r2, r3
 13129 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13130 0b56 D31A     		subs	r3, r2, r3
 13131 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13132 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13133 0b60 8A1A     		subs	r2, r1, r2
 13134 0b62 07F10801 		add	r1, r7, #8
 13135 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13136 0b68 07F58A72 		add	r2, r7, #276
 13137 0b6c D154     		strb	r1, [r2, r3]
1831:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13138              		.loc 1 1831 0 discriminator 3
 13139 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13140 0b72 013B     		subs	r3, r3, #1
 13141 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13142              	.L535:
1831:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13143              		.loc 1 1831 0 is_stmt 0 discriminator 1
 13144 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13145 0b7c 002B     		cmp	r3, #0
 13146 0b7e E0D1     		bne	.L536
1833:..\src/command_processing.c **** 
1834:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13147              		.loc 1 1834 0 is_stmt 1
 13148 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13149 0b84 5C1E     		subs	r4, r3, #1
 13150 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13151 0b8a DBB2     		uxtb	r3, r3
 13152 0b8c 013B     		subs	r3, r3, #1
 13153 0b8e DAB2     		uxtb	r2, r3
 13154 0b90 07F58A73 		add	r3, r7, #276
 13155 0b94 1146     		mov	r1, r2
 13156 0b96 1846     		mov	r0, r3
 13157 0b98 FFF7FEFF 		bl	LCRChecksum
 13158 0b9c 0346     		mov	r3, r0
 13159 0b9e 1A46     		mov	r2, r3
 13160 0ba0 07F58A73 		add	r3, r7, #276
 13161 0ba4 1A55     		strb	r2, [r3, r4]
1835:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13162              		.loc 1 1835 0
 13163 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13164 0baa 07F58A73 		add	r3, r7, #276
 13165 0bae 1146     		mov	r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 297


 13166 0bb0 1846     		mov	r0, r3
 13167 0bb2 FFF7FEFF 		bl	commWrite
1836:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13168              		.loc 1 1836 0
 13169 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1837:..\src/command_processing.c ****         break;
 13170              		.loc 1 1837 0
 13171 0bba 09E1     		b	.L537
 13172              	.L544:
1838:..\src/command_processing.c **** 
1839:..\src/command_processing.c **** //=========================================================     other_params
1840:..\src/command_processing.c ****         default: 
1841:..\src/command_processing.c ****             
1842:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13173              		.loc 1 1842 0
 13174 0bbc BB1D     		adds	r3, r7, #6
 13175 0bbe 1A88     		ldrh	r2, [r3]
 13176 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13177 0bc4 013B     		subs	r3, r3, #1
 13178 0bc6 9A42     		cmp	r2, r3
 13179 0bc8 C0F20181 		blt	.L545
1843:..\src/command_processing.c ****                 break;
1844:..\src/command_processing.c ****             
1845:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13180              		.loc 1 1845 0
 13181 0bcc BB1D     		adds	r3, r7, #6
 13182 0bce 1A88     		ldrh	r2, [r3]
 13183 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13184 0bd4 8149     		ldr	r1, .L552
 13185 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13186 0bd8 0B44     		add	r3, r3, r1
 13187 0bda 9A42     		cmp	r2, r3
 13188 0bdc 05D1     		bne	.L539
1846:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13189              		.loc 1 1846 0
 13190 0bde 804B     		ldr	r3, .L552+4
 13191 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13192 0be2 804B     		ldr	r3, .L552+8
 13193 0be4 83F80922 		strb	r2, [r3, #521]
1847:..\src/command_processing.c ****                 break;
 13194              		.loc 1 1847 0
 13195 0be8 F2E0     		b	.L537
 13196              	.L539:
1848:..\src/command_processing.c ****             }
1849:..\src/command_processing.c ****             
1850:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13197              		.loc 1 1850 0
 13198 0bea BB1D     		adds	r3, r7, #6
 13199 0bec 1A88     		ldrh	r2, [r3]
 13200 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13201 0bf2 013B     		subs	r3, r3, #1
 13202 0bf4 9A42     		cmp	r2, r3
 13203 0bf6 05D1     		bne	.L540
1851:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13204              		.loc 1 1851 0
 13205 0bf8 794B     		ldr	r3, .L552+4
 13206 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 298


 13207 0bfc 794B     		ldr	r3, .L552+8
 13208 0bfe 83F8A020 		strb	r2, [r3, #160]
1852:..\src/command_processing.c ****             }
1853:..\src/command_processing.c ****             else {
1854:..\src/command_processing.c ****             
1855:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1856:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1857:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1858:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1861:..\src/command_processing.c ****                 
1862:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1863:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1864:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1865:..\src/command_processing.c ****                 {
1866:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1867:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1868:..\src/command_processing.c ****                 }
1869:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1870:..\src/command_processing.c ****             
1871:..\src/command_processing.c ****             }
1872:..\src/command_processing.c ****             
1873:..\src/command_processing.c ****         break;
 13209              		.loc 1 1873 0
 13210 0c02 E5E0     		b	.L537
 13211              	.L540:
1856:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13212              		.loc 1 1856 0
 13213 0c04 BB1D     		adds	r3, r7, #6
 13214 0c06 1A88     		ldrh	r2, [r3]
 13215 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13216 0c0c D31A     		subs	r3, r2, r3
 13217 0c0e 764A     		ldr	r2, .L552+12
 13218 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13219 0c12 1946     		mov	r1, r3
 13220 0c14 724B     		ldr	r3, .L552+4
 13221 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13222 0c18 724A     		ldr	r2, .L552+8
 13223 0c1a 0B46     		mov	r3, r1
 13224 0c1c 9B00     		lsls	r3, r3, #2
 13225 0c1e 0B44     		add	r3, r3, r1
 13226 0c20 1344     		add	r3, r3, r2
 13227 0c22 03F20A23 		addw	r3, r3, #522
 13228 0c26 0246     		mov	r2, r0
 13229 0c28 1A70     		strb	r2, [r3]
1857:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13230              		.loc 1 1857 0
 13231 0c2a BB1D     		adds	r3, r7, #6
 13232 0c2c 1A88     		ldrh	r2, [r3]
 13233 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13234 0c32 D31A     		subs	r3, r2, r3
 13235 0c34 6C4A     		ldr	r2, .L552+12
 13236 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13237 0c38 1946     		mov	r1, r3
 13238 0c3a 694B     		ldr	r3, .L552+4
 13239 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 299


 13240 0c3e 694A     		ldr	r2, .L552+8
 13241 0c40 0B46     		mov	r3, r1
 13242 0c42 9B00     		lsls	r3, r3, #2
 13243 0c44 0B44     		add	r3, r3, r1
 13244 0c46 1344     		add	r3, r3, r2
 13245 0c48 03F20B23 		addw	r3, r3, #523
 13246 0c4c 0246     		mov	r2, r0
 13247 0c4e 1A70     		strb	r2, [r3]
1858:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13248              		.loc 1 1858 0
 13249 0c50 BB1D     		adds	r3, r7, #6
 13250 0c52 1A88     		ldrh	r2, [r3]
 13251 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13252 0c58 D31A     		subs	r3, r2, r3
 13253 0c5a 634A     		ldr	r2, .L552+12
 13254 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13255 0c5e 1946     		mov	r1, r3
 13256 0c60 5F4B     		ldr	r3, .L552+4
 13257 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13258 0c64 5F4A     		ldr	r2, .L552+8
 13259 0c66 0B46     		mov	r3, r1
 13260 0c68 9B00     		lsls	r3, r3, #2
 13261 0c6a 0B44     		add	r3, r3, r1
 13262 0c6c 1344     		add	r3, r3, r2
 13263 0c6e 03F50373 		add	r3, r3, #524
 13264 0c72 0246     		mov	r2, r0
 13265 0c74 1A70     		strb	r2, [r3]
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13266              		.loc 1 1859 0
 13267 0c76 BB1D     		adds	r3, r7, #6
 13268 0c78 1A88     		ldrh	r2, [r3]
 13269 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13270 0c7e D31A     		subs	r3, r2, r3
 13271 0c80 594A     		ldr	r2, .L552+12
 13272 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13273 0c84 1946     		mov	r1, r3
 13274 0c86 564B     		ldr	r3, .L552+4
 13275 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13276 0c8a 564A     		ldr	r2, .L552+8
 13277 0c8c 0B46     		mov	r3, r1
 13278 0c8e 9B00     		lsls	r3, r3, #2
 13279 0c90 0B44     		add	r3, r3, r1
 13280 0c92 1344     		add	r3, r3, r2
 13281 0c94 03F20D23 		addw	r3, r3, #525
 13282 0c98 0246     		mov	r2, r0
 13283 0c9a 1A70     		strb	r2, [r3]
1860:..\src/command_processing.c ****                 
 13284              		.loc 1 1860 0
 13285 0c9c BB1D     		adds	r3, r7, #6
 13286 0c9e 1A88     		ldrh	r2, [r3]
 13287 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13288 0ca4 D31A     		subs	r3, r2, r3
 13289 0ca6 504A     		ldr	r2, .L552+12
 13290 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13291 0caa 1946     		mov	r1, r3
 13292 0cac 4C4B     		ldr	r3, .L552+4
 13293 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 300


 13294 0cb0 4C4A     		ldr	r2, .L552+8
 13295 0cb2 0B46     		mov	r3, r1
 13296 0cb4 9B00     		lsls	r3, r3, #2
 13297 0cb6 0B44     		add	r3, r3, r1
 13298 0cb8 1344     		add	r3, r3, r2
 13299 0cba 03F20E23 		addw	r3, r3, #526
 13300 0cbe 0246     		mov	r2, r0
 13301 0cc0 1A70     		strb	r2, [r3]
1863:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13302              		.loc 1 1863 0
 13303 0cc2 4A4B     		ldr	r3, .L552+16
 13304 0cc4 0122     		movs	r2, #1
 13305 0cc6 1A60     		str	r2, [r3]
1864:..\src/command_processing.c ****                 {
 13306              		.loc 1 1864 0
 13307 0cc8 0023     		movs	r3, #0
 13308 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13309 0cce 71E0     		b	.L542
 13310              	.L543:
1866:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13311              		.loc 1 1866 0 discriminator 3
 13312 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13313 0cd4 444A     		ldr	r2, .L552+12
 13314 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13315 0cd8 1C46     		mov	r4, r3
 13316 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13317 0cde 424A     		ldr	r2, .L552+12
 13318 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13319 0ce2 1946     		mov	r1, r3
 13320 0ce4 3F4A     		ldr	r2, .L552+8
 13321 0ce6 0B46     		mov	r3, r1
 13322 0ce8 9B00     		lsls	r3, r3, #2
 13323 0cea 0B44     		add	r3, r3, r1
 13324 0cec 1344     		add	r3, r3, r2
 13325 0cee 03F20A23 		addw	r3, r3, #522
 13326 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13327 0cf4 1A46     		mov	r2, r3
 13328 0cf6 1346     		mov	r3, r2
 13329 0cf8 5B00     		lsls	r3, r3, #1
 13330 0cfa 1344     		add	r3, r3, r2
 13331 0cfc 5B00     		lsls	r3, r3, #1
 13332 0cfe 5A1C     		adds	r2, r3, #1
 13333 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13334 0d04 3849     		ldr	r1, .L552+12
 13335 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13336 0d08 1846     		mov	r0, r3
 13337 0d0a 3649     		ldr	r1, .L552+8
 13338 0d0c 0346     		mov	r3, r0
 13339 0d0e 9B00     		lsls	r3, r3, #2
 13340 0d10 0344     		add	r3, r3, r0
 13341 0d12 0B44     		add	r3, r3, r1
 13342 0d14 03F20B23 		addw	r3, r3, #523
 13343 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13344 0d1a 1946     		mov	r1, r3
 13345 0d1c 0B46     		mov	r3, r1
 13346 0d1e 5B00     		lsls	r3, r3, #1
 13347 0d20 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 301


 13348 0d22 5B00     		lsls	r3, r3, #1
 13349 0d24 1A44     		add	r2, r2, r3
 13350 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13351 0d2a 2F49     		ldr	r1, .L552+12
 13352 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13353 0d2e 1846     		mov	r0, r3
 13354 0d30 2C49     		ldr	r1, .L552+8
 13355 0d32 0346     		mov	r3, r0
 13356 0d34 9B00     		lsls	r3, r3, #2
 13357 0d36 0344     		add	r3, r3, r0
 13358 0d38 0B44     		add	r3, r3, r1
 13359 0d3a 03F50373 		add	r3, r3, #524
 13360 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13361 0d40 1946     		mov	r1, r3
 13362 0d42 0B46     		mov	r3, r1
 13363 0d44 5B00     		lsls	r3, r3, #1
 13364 0d46 0B44     		add	r3, r3, r1
 13365 0d48 5B00     		lsls	r3, r3, #1
 13366 0d4a 1A44     		add	r2, r2, r3
 13367 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13368 0d50 2549     		ldr	r1, .L552+12
 13369 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13370 0d54 1846     		mov	r0, r3
 13371 0d56 2349     		ldr	r1, .L552+8
 13372 0d58 0346     		mov	r3, r0
 13373 0d5a 9B00     		lsls	r3, r3, #2
 13374 0d5c 0344     		add	r3, r3, r0
 13375 0d5e 0B44     		add	r3, r3, r1
 13376 0d60 03F20D23 		addw	r3, r3, #525
 13377 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13378 0d66 1B01     		lsls	r3, r3, #4
 13379 0d68 1A44     		add	r2, r2, r3
 13380 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13381 0d6e 1E49     		ldr	r1, .L552+12
 13382 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13383 0d72 1846     		mov	r0, r3
 13384 0d74 1B49     		ldr	r1, .L552+8
 13385 0d76 0346     		mov	r3, r0
 13386 0d78 9B00     		lsls	r3, r3, #2
 13387 0d7a 0344     		add	r3, r3, r0
 13388 0d7c 0B44     		add	r3, r3, r1
 13389 0d7e 03F20E23 		addw	r3, r3, #526
 13390 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13391 0d84 5B00     		lsls	r3, r3, #1
 13392 0d86 1344     		add	r3, r3, r2
 13393 0d88 0133     		adds	r3, r3, #1
 13394 0d8a 194A     		ldr	r2, .L552+20
 13395 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1867:..\src/command_processing.c ****                 }
 13396              		.loc 1 1867 0 discriminator 3
 13397 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13398 0d94 144A     		ldr	r2, .L552+12
 13399 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13400 0d98 1A46     		mov	r2, r3
 13401 0d9a 154B     		ldr	r3, .L552+20
 13402 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13403 0da0 124B     		ldr	r3, .L552+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 302


 13404 0da2 1B68     		ldr	r3, [r3]
 13405 0da4 1344     		add	r3, r3, r2
 13406 0da6 114A     		ldr	r2, .L552+16
 13407 0da8 1360     		str	r3, [r2]
1864:..\src/command_processing.c ****                 {
 13408              		.loc 1 1864 0 discriminator 3
 13409 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13410 0dae 0133     		adds	r3, r3, #1
 13411 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13412              	.L542:
1864:..\src/command_processing.c ****                 {
 13413              		.loc 1 1864 0 is_stmt 0 discriminator 1
 13414 0db4 094B     		ldr	r3, .L552
 13415 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13416 0db8 9BB2     		uxth	r3, r3
 13417 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13418 0dbe 9A42     		cmp	r2, r3
 13419 0dc0 86D3     		bcc	.L543
1869:..\src/command_processing.c ****             
 13420              		.loc 1 1869 0 is_stmt 1
 13421 0dc2 0A4B     		ldr	r3, .L552+16
 13422 0dc4 1B68     		ldr	r3, [r3]
 13423 0dc6 0133     		adds	r3, r3, #1
 13424 0dc8 084A     		ldr	r2, .L552+16
 13425 0dca 1360     		str	r3, [r2]
 13426              		.loc 1 1873 0
 13427 0dcc 00E0     		b	.L537
 13428              	.L545:
1843:..\src/command_processing.c ****             
 13429              		.loc 1 1843 0
 13430 0dce 00BF     		nop
 13431              	.L537:
1874:..\src/command_processing.c ****     }
1875:..\src/command_processing.c **** }
 13432              		.loc 1 1875 0 discriminator 1
 13433 0dd0 00BF     		nop
 13434 0dd2 07F5D567 		add	r7, r7, #1704
 13435              		.cfi_def_cfa_offset 16
 13436 0dd6 BD46     		mov	sp, r7
 13437              		.cfi_def_cfa_register 13
 13438              		@ sp needed
 13439 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13440              	.L553:
 13441 0dda 00BF     		.align	2
 13442              	.L552:
 13443 0ddc 00000000 		.word	N_IMU_Connected
 13444 0de0 00000000 		.word	g_rx
 13445 0de4 00000000 		.word	g_mem
 13446 0de8 00000000 		.word	IMU_connected
 13447 0dec 00000000 		.word	imus_data_size
 13448 0df0 00000000 		.word	single_imu_size
 13449              		.cfi_endproc
 13450              	.LFE70:
 13451              		.size	get_IMU_param_list, .-get_IMU_param_list
 13452              		.section	.text.setZeros,"ax",%progbits
 13453              		.align	2
 13454              		.global	setZeros
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 303


 13455              		.thumb
 13456              		.thumb_func
 13457              		.type	setZeros, %function
 13458              	setZeros:
 13459              	.LFB71:
1876:..\src/command_processing.c **** 
1877:..\src/command_processing.c **** //==============================================================================
1878:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1879:..\src/command_processing.c **** //==============================================================================
1880:..\src/command_processing.c **** 
1881:..\src/command_processing.c **** void setZeros()
1882:..\src/command_processing.c **** {
 13460              		.loc 1 1882 0
 13461              		.cfi_startproc
 13462              		@ args = 0, pretend = 0, frame = 8
 13463              		@ frame_needed = 1, uses_anonymous_args = 0
 13464 0000 B0B5     		push	{r4, r5, r7, lr}
 13465              		.cfi_def_cfa_offset 16
 13466              		.cfi_offset 4, -16
 13467              		.cfi_offset 5, -12
 13468              		.cfi_offset 7, -8
 13469              		.cfi_offset 14, -4
 13470 0002 82B0     		sub	sp, sp, #8
 13471              		.cfi_def_cfa_offset 24
 13472 0004 00AF     		add	r7, sp, #0
 13473              		.cfi_def_cfa_register 7
1883:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1884:..\src/command_processing.c ****     
1885:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13474              		.loc 1 1885 0
 13475 0006 0023     		movs	r3, #0
 13476 0008 BB71     		strb	r3, [r7, #6]
 13477 000a 2FE0     		b	.L555
 13478              	.L558:
1886:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13479              		.loc 1 1886 0
 13480 000c 0023     		movs	r3, #0
 13481 000e FB71     		strb	r3, [r7, #7]
 13482 0010 22E0     		b	.L556
 13483              	.L557:
1887:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 13484              		.loc 1 1887 0 discriminator 3
 13485 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13486 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13487 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13488 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13489 001a 194D     		ldr	r5, .L559
 13490 001c 0B46     		mov	r3, r1
 13491 001e 9B00     		lsls	r3, r3, #2
 13492 0020 0B44     		add	r3, r3, r1
 13493 0022 2344     		add	r3, r3, r4
 13494 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13495 0028 1C46     		mov	r4, r3
 13496 002a 1649     		ldr	r1, .L559+4
 13497 002c 1346     		mov	r3, r2
 13498 002e 5B00     		lsls	r3, r3, #1
 13499 0030 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 304


 13500 0032 9B00     		lsls	r3, r3, #2
 13501 0034 0344     		add	r3, r3, r0
 13502 0036 6833     		adds	r3, r3, #104
 13503 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1888:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 13504              		.loc 1 1888 0 discriminator 3
 13505 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13506 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13507 0040 1149     		ldr	r1, .L559+8
 13508 0042 3420     		movs	r0, #52
 13509 0044 00FB02F2 		mul	r2, r0, r2
 13510 0048 0A44     		add	r2, r2, r1
 13511 004a 1344     		add	r3, r3, r2
 13512 004c 1833     		adds	r3, r3, #24
 13513 004e 0022     		movs	r2, #0
 13514 0050 1A70     		strb	r2, [r3]
1886:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13515              		.loc 1 1886 0 discriminator 3
 13516 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13517 0054 0133     		adds	r3, r3, #1
 13518 0056 FB71     		strb	r3, [r7, #7]
 13519              	.L556:
1886:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13520              		.loc 1 1886 0 is_stmt 0 discriminator 1
 13521 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13522 005a 022B     		cmp	r3, #2
 13523 005c D9D9     		bls	.L557
1889:..\src/command_processing.c ****         }
1890:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 13524              		.loc 1 1890 0 is_stmt 1 discriminator 2
 13525 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13526 0060 0A4A     		ldr	r2, .L559+12
 13527 0062 0121     		movs	r1, #1
 13528 0064 D154     		strb	r1, [r2, r3]
1885:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13529              		.loc 1 1885 0 discriminator 2
 13530 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13531 0068 0133     		adds	r3, r3, #1
 13532 006a BB71     		strb	r3, [r7, #6]
 13533              	.L555:
1885:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13534              		.loc 1 1885 0 is_stmt 0 discriminator 1
 13535 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13536 006e 012B     		cmp	r3, #1
 13537 0070 CCD9     		bls	.L558
1891:..\src/command_processing.c ****     }
1892:..\src/command_processing.c **** 
1893:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13538              		.loc 1 1893 0 is_stmt 1
 13539 0072 0120     		movs	r0, #1
 13540 0074 FFF7FEFF 		bl	sendAcknowledgment
1894:..\src/command_processing.c **** }
 13541              		.loc 1 1894 0
 13542 0078 00BF     		nop
 13543 007a 0837     		adds	r7, r7, #8
 13544              		.cfi_def_cfa_offset 16
 13545 007c BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 305


 13546              		.cfi_def_cfa_register 13
 13547              		@ sp needed
 13548 007e B0BD     		pop	{r4, r5, r7, pc}
 13549              	.L560:
 13550              		.align	2
 13551              	.L559:
 13552 0080 00000000 		.word	data_encoder_raw
 13553 0084 00000000 		.word	g_mem
 13554 0088 00000000 		.word	g_meas
 13555 008c 00000000 		.word	reset_last_value_flag
 13556              		.cfi_endproc
 13557              	.LFE71:
 13558              		.size	setZeros, .-setZeros
 13559              		.section	.rodata
 13560              		.align	2
 13561              	.LC154:
 13562 119c 0D0A00   		.ascii	"\015\012\000"
 13563 119f 00       		.align	2
 13564              	.LC155:
 13565 11a0 4669726D 		.ascii	"Firmware version: \000"
 13565      77617265 
 13565      20766572 
 13565      73696F6E 
 13565      3A2000
 13566 11b3 00       		.align	2
 13567              	.LC156:
 13568 11b4 47656E65 		.ascii	"Generic firmware v. 1.10.1 (PSoC5)- Parametric PWM "
 13568      72696320 
 13568      6669726D 
 13568      77617265 
 13568      20762E20 
 13569 11e7 72657363 		.ascii	"rescaling, PWM 500KHz\000"
 13569      616C696E 
 13569      672C2050 
 13569      574D2035 
 13569      30304B48 
 13570 11fd 000000   		.align	2
 13571              	.LC157:
 13572 1200 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13572      0A00
 13573 1206 0000     		.align	2
 13574              	.LC158:
 13575 1208 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13575      43452049 
 13575      4E464F0D 
 13575      0A00
 13576 1216 0000     		.align	2
 13577              	.LC159:
 13578 1218 49443A20 		.ascii	"ID: %d\015\012\000"
 13578      25640D0A 
 13578      00
 13579 1221 000000   		.align	2
 13580              	.LC160:
 13581 1224 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13581      63653A20 
 13581      534F4654 
 13581      48414E44 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 306


 13581      2050524F 
 13582 123b 00       		.align	2
 13583              	.LC161:
 13584 123c 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13584      63653A20 
 13584      47454E45 
 13584      52494320 
 13584      32204D4F 
 13585 1257 00       		.align	2
 13586              	.LC162:
 13587 1258 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13587      63653A20 
 13587      41495220 
 13587      4348414D 
 13587      42455253 
 13588 127f 00       		.align	2
 13589              	.LC163:
 13590 1280 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13590      63653A20 
 13590      4F54544F 
 13590      424F434B 
 13590      20367620 
 13591 12aa 0000     		.align	2
 13592              	.LC164:
 13593 12ac 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13593      63653A20 
 13593      534F4654 
 13593      48414E44 
 13593      2032204D 
 13594              		.align	2
 13595              	.LC165:
 13596 12c8 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13596      20736964 
 13596      653A2052 
 13596      49474854 
 13596      0D0A00
 13597 12db 00       		.align	2
 13598              	.LC166:
 13599 12dc 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13599      20736964 
 13599      653A204C 
 13599      4546540D 
 13599      0A00
 13600 12ee 0000     		.align	2
 13601              	.LC167:
 13602 12f0 55736572 		.ascii	"User: MARIA\015\012\000"
 13602      3A204D41 
 13602      5249410D 
 13602      0A00
 13603 12fe 0000     		.align	2
 13604              	.LC168:
 13605 1300 55736572 		.ascii	"User: R01\015\012\000"
 13605      3A205230 
 13605      310D0A00 
 13606              		.align	2
 13607              	.LC169:
 13608 130c 55736572 		.ascii	"User: GENERIC USER\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 307


 13608      3A204745 
 13608      4E455249 
 13608      43205553 
 13608      45520D0A 
 13609 1321 000000   		.align	2
 13610              	.LC170:
 13611 1324 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13611      52202564 
 13611      20494E46 
 13611      4F0D0A00 
 13612              		.align	2
 13613              	.LC171:
 13614 1334 4D6F746F 		.ascii	"Motor reference\000"
 13614      72207265 
 13614      66657265 
 13614      6E636500 
 13615              		.align	2
 13616              	.LC172:
 13617 1344 202D2043 		.ascii	" - Currents: \000"
 13617      75727265 
 13617      6E74733A 
 13617      2000
 13618 1352 0000     		.align	2
 13619              	.LC173:
 13620 1354 202D2050 		.ascii	" - Pwm: \000"
 13620      776D3A20 
 13620      00
 13621 135d 000000   		.align	2
 13622              	.LC174:
 13623 1360 202D2050 		.ascii	" - Position: \000"
 13623      6F736974 
 13623      696F6E3A 
 13623      2000
 13624 136e 0000     		.align	2
 13625              	.LC175:
 13626 1370 25642000 		.ascii	"%d \000"
 13627              		.align	2
 13628              	.LC176:
 13629 1374 4D6F746F 		.ascii	"Motor enabled: \000"
 13629      7220656E 
 13629      61626C65 
 13629      643A2000 
 13630              		.align	2
 13631              	.LC177:
 13632 1384 5945530D 		.ascii	"YES\015\012\000"
 13632      0A00
 13633 138a 0000     		.align	2
 13634              	.LC178:
 13635 138c 4E4F0D0A 		.ascii	"NO\015\012\000"
 13635      00
 13636 1391 000000   		.align	2
 13637              	.LC179:
 13638 1394 50574D20 		.ascii	"PWM rescaling activation: \000"
 13638      72657363 
 13638      616C696E 
 13638      67206163 
 13638      74697661 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 308


 13639 13af 00       		.align	2
 13640              	.LC180:
 13641 13b0 5945530A 		.ascii	"YES\012\000"
 13641      00
 13642 13b5 000000   		.align	2
 13643              	.LC181:
 13644 13b8 4E4F0A00 		.ascii	"NO\012\000"
 13645              		.align	2
 13646              	.LC182:
 13647 13bc 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13647      4C696D69 
 13647      743A2025 
 13647      640D0A00 
 13648              		.align	2
 13649              	.LC183:
 13650 13cc 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13650      41535552 
 13650      454D454E 
 13650      54532049 
 13650      4E464F0D 
 13651 13e2 0000     		.align	2
 13652              	.LC184:
 13653 13e4 53656E73 		.ascii	"Sensor value: \000"
 13653      6F722076 
 13653      616C7565 
 13653      3A2000
 13654 13f3 00       		.align	2
 13655              	.LC185:
 13656 13f4 256400   		.ascii	"%d\000"
 13657 13f7 00       		.align	2
 13658              	.LC186:
 13659 13f8 2C2000   		.ascii	", \000"
 13660 13fb 00       		.align	2
 13661              	.LC187:
 13662 13fc 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 13662      7469636B 
 13662      206D6561 
 13662      73757265 
 13662      6D656E74 
 13663 141a 0000     		.align	2
 13664              	.LC188:
 13665 141c 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13665      65727920 
 13665      25642056 
 13665      6F6C7461 
 13665      67652028 
 13666 1439 000000   		.align	2
 13667              	.LC189:
 13668 143c 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13668      20636861 
 13668      72676520 
 13668      706F7765 
 13668      72207465 
 13669 1463 00       		.align	2
 13670              	.LC190:
 13671 1464 43757272 		.ascii	"Current %d (mA): %ld\000"
 13671      656E7420 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 309


 13671      25642028 
 13671      6D41293A 
 13671      20256C64 
 13672 1479 000000   		.align	2
 13673              	.LC191:
 13674 147c 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13674      20477261 
 13674      73702048 
 13674      6F6C6420 
 13674      43757272 
 13675 14a1 000000   		.align	2
 13676              	.LC192:
 13677 14a4 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13677      544F5220 
 13677      25642043 
 13677      4F4E4649 
 13677      47555241 
 13678 14bf 00       		.align	2
 13679              	.LC193:
 13680 14c0 50494420 		.ascii	"PID Controller: \000"
 13680      436F6E74 
 13680      726F6C6C 
 13680      65723A20 
 13680      00
 13681              		.global	__aeabi_i2d
 13682              		.global	__aeabi_ddiv
 13683 14d1 000000   		.align	2
 13684              	.LC194:
 13685 14d4 50202D3E 		.ascii	"P -> %f  \000"
 13685      20256620 
 13685      2000
 13686 14de 0000     		.align	2
 13687              	.LC195:
 13688 14e0 49202D3E 		.ascii	"I -> %f  \000"
 13688      20256620 
 13688      2000
 13689 14ea 0000     		.align	2
 13690              	.LC196:
 13691 14ec 44202D3E 		.ascii	"D -> %f\015\012\000"
 13691      2025660D 
 13691      0A00
 13692 14f6 0000     		.align	2
 13693              	.LC197:
 13694 14f8 43757272 		.ascii	"Current PID Controller: \000"
 13694      656E7420 
 13694      50494420 
 13694      436F6E74 
 13694      726F6C6C 
 13695 1511 000000   		.align	2
 13696              	.LC198:
 13697 1514 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13697      74757020 
 13697      61637469 
 13697      76617469 
 13697      6F6E3A20 
 13698 152e 0000     		.align	2
 13699              	.LC199:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 310


 13700 1530 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13700      74757020 
 13700      61637469 
 13700      76617469 
 13700      6F6E3A20 
 13701 1549 000000   		.align	2
 13702              	.LC200:
 13703 154c 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13703      74206D6F 
 13703      64653A20 
 13703      5553420D 
 13703      0A00
 13704 155e 0000     		.align	2
 13705              	.LC201:
 13706 1560 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13706      74206D6F 
 13706      64653A20 
 13706      48616E64 
 13706      6C650D0A 
 13707 1575 000000   		.align	2
 13708              	.LC202:
 13709 1578 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13709      74206D6F 
 13709      64653A20 
 13709      454D4720 
 13709      70726F70 
 13710 1597 00       		.align	2
 13711              	.LC203:
 13712 1598 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13712      74206D6F 
 13712      64653A20 
 13712      454D4720 
 13712      696E7465 
 13713 15b3 00       		.align	2
 13714              	.LC204:
 13715 15b4 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13715      74206D6F 
 13715      64653A20 
 13715      454D4720 
 13715      46434653 
 13716 15cb 00       		.align	2
 13717              	.LC205:
 13718 15cc 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13718      74206D6F 
 13718      64653A20 
 13718      454D4720 
 13718      46434653 
 13719 15e7 00       		.align	2
 13720              	.LC206:
 13721 15e8 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 13721      74206D6F 
 13721      64653A20 
 13721      4A6F7973 
 13721      7469636B 
 13722 15ff 00       		.align	2
 13723              	.LC207:
 13724 1600 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 311


 13724      74206D6F 
 13724      64653A20 
 13724      454D4720 
 13724      70726F70 
 13725 162e 00       		.ascii	"\000"
 13726 162f 00       		.align	2
 13727              	.LC208:
 13728 1630 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13728      726F6C20 
 13728      6D6F6465 
 13728      3A20506F 
 13728      73697469 
 13729 1649 000000   		.align	2
 13730              	.LC209:
 13731 164c 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13731      726F6C20 
 13731      6D6F6465 
 13731      3A205057 
 13731      4D0D0A00 
 13732              		.align	2
 13733              	.LC210:
 13734 1660 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13734      726F6C20 
 13734      6D6F6465 
 13734      3A204375 
 13734      7272656E 
 13735              		.align	2
 13736              	.LC211:
 13737 1678 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13737      726F6C20 
 13737      6D6F6465 
 13737      3A20506F 
 13737      73697469 
 13738 169d 000000   		.align	2
 13739              	.LC212:
 13740 16a0 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13740      6C757465 
 13740      20656E63 
 13740      6F646572 
 13740      20706F73 
 13741 16c1 000000   		.align	2
 13742              	.LC213:
 13743 16c4 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13743      6C757465 
 13743      20656E63 
 13743      6F646572 
 13743      20706F73 
 13744              		.align	2
 13745              	.LC214:
 13746 16e4 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13746      722D4861 
 13746      6E646C65 
 13746      20526174 
 13746      696F3A20 
 13747 16fd 000000   		.align	2
 13748              	.LC215:
 13749 1700 456E636F 		.ascii	"Encoder indices used for motor control: \000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 312


 13749      64657220 
 13749      696E6469 
 13749      63657320 
 13749      75736564 
 13750 1729 000000   		.align	2
 13751              	.LC216:
 13752 172c 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 13752      74204765 
 13752      61723A20 
 13752      25642074 
 13752      65657468 
 13753 1743 00       		.align	2
 13754              	.LC217:
 13755 1744 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 13755      6E642047 
 13755      6561723A 
 13755      20256420 
 13755      74656574 
 13756              		.align	2
 13757              	.LC218:
 13758 175c 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 13758      20696E76 
 13758      61726961 
 13758      6E743A20 
 13758      25640D0A 
 13759 1771 000000   		.align	2
 13760              	.LC219:
 13761 1774 53656E73 		.ascii	"Sensor resolution: \000"
 13761      6F722072 
 13761      65736F6C 
 13761      7574696F 
 13761      6E3A2000 
 13762              		.align	2
 13763              	.LC220:
 13764 1788 4D656173 		.ascii	"Measurement Offset: \000"
 13764      7572656D 
 13764      656E7420 
 13764      4F666673 
 13764      65743A20 
 13765 179d 000000   		.align	2
 13766              	.LC221:
 13767 17a0 256C6400 		.ascii	"%ld\000"
 13768              		.align	2
 13769              	.LC222:
 13770 17a4 4D656173 		.ascii	"Measurement Multiplier: \000"
 13770      7572656D 
 13770      656E7420 
 13770      4D756C74 
 13770      69706C69 
 13771              		.global	__aeabi_f2d
 13772 17bd 000000   		.align	2
 13773              	.LC223:
 13774 17c0 256600   		.ascii	"%f\000"
 13775 17c3 00       		.align	2
 13776              	.LC224:
 13777 17c4 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 13777      656E7420 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 313


 13777      6C6F6F6B 
 13777      75702074 
 13777      61626C65 
 13778 17f2 00       		.ascii	"\000"
 13779 17f3 00       		.align	2
 13780              	.LC225:
 13781 17f4 506F7369 		.ascii	"Position limit active: %d\000"
 13781      74696F6E 
 13781      206C696D 
 13781      69742061 
 13781      63746976 
 13782 180e 0000     		.align	2
 13783              	.LC226:
 13784 1810 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13784      74696F6E 
 13784      206C696D 
 13784      6974206D 
 13784      6F746F72 
 13785 1833 00       		.align	2
 13786              	.LC227:
 13787 1834 73757020 		.ascii	"sup -> %ld\015\012\000"
 13787      2D3E2025 
 13787      6C640D0A 
 13787      00
 13788 1841 000000   		.align	2
 13789              	.LC228:
 13790 1844 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13790      73746570 
 13790      20706F73 
 13790      20616E64 
 13790      206E6567 
 13791              		.align	2
 13792              	.LC229:
 13793 1860 43757272 		.ascii	"Current limit: %d\015\012\000"
 13793      656E7420 
 13793      6C696D69 
 13793      743A2025 
 13793      640D0A00 
 13794              		.align	2
 13795              	.LC230:
 13796 1874 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 13796      7220626F 
 13796      61726420 
 13796      6173736F 
 13796      63696174 
 13797 189e 0000     		.align	2
 13798              	.LC231:
 13799 18a0 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 13799      65722074 
 13799      7970653A 
 13799      204D4333 
 13799      33383837 
 13800 18c2 0000     		.align	2
 13801              	.LC232:
 13802 18c4 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 13802      65722074 
 13802      7970653A 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 314


 13802      20564E48 
 13802      35303139 
 13803              		.align	2
 13804              	.LC233:
 13805 18e8 44726976 		.ascii	"Driver type: ESC (Brushless)\015\012\000"
 13805      65722074 
 13805      7970653A 
 13805      20455343 
 13805      20284272 
 13806 1907 00       		.align	2
 13807              	.LC234:
 13808 1908 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 13808      72617465 
 13808      206C696D 
 13808      69746572 
 13808      2076616C 
 13809 1925 000000   		.align	2
 13810              	.LC235:
 13811 1928 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 13811      72657665 
 13811      72736962 
 13811      6C65206D 
 13811      6F746F72 
 13812              		.align	2
 13813              	.LC236:
 13814 1944 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 13814      72657665 
 13814      72736962 
 13814      6C65206D 
 13814      6F746F72 
 13815 195f 00       		.align	2
 13816              	.LC237:
 13817 1960 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 13817      434F4E46 
 13817      49475552 
 13817      4154494F 
 13817      4E0D0A00 
 13818              		.align	2
 13819              	.LC238:
 13820 1974 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 13820      74687265 
 13820      73686F6C 
 13820      6473205B 
 13820      30202D20 
 13821 1996 0000     		.align	2
 13822              	.LC239:
 13823 1998 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 13823      6D617820 
 13823      76616C75 
 13823      6573205B 
 13823      30202D20 
 13824              		.align	2
 13825              	.LC240:
 13826 19bc 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 13826      696E7665 
 13826      7273696F 
 13826      6E3A2059 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 315


 13826      45530D0A 
 13827 19d1 000000   		.align	2
 13828              	.LC241:
 13829 19d4 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 13829      696E7665 
 13829      7273696F 
 13829      6E3A204E 
 13829      4F0D0A00 
 13830              		.align	2
 13831              	.LC242:
 13832 19e8 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 13832      62726174 
 13832      696F6E20 
 13832      656E6162 
 13832      6C65643A 
 13833 1a03 00       		.align	2
 13834              	.LC243:
 13835 1a04 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 13835      62726174 
 13835      696F6E20 
 13835      656E6162 
 13835      6C65643A 
 13836 1a1e 0000     		.align	2
 13837              	.LC244:
 13838 1a20 454D4720 		.ascii	"EMG max speed: %d %d\000"
 13838      6D617820 
 13838      73706565 
 13838      643A2025 
 13838      64202564 
 13839 1a35 000000   		.align	2
 13840              	.LC245:
 13841 1a38 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 13841      74696F6E 
 13841      616C2041 
 13841      44432073 
 13841      656E736F 
 13842              		.align	2
 13843              	.LC246:
 13844 1a58 41444320 		.ascii	"ADC %d -> %d\000"
 13844      2564202D 
 13844      3E202564 
 13844      00
 13845 1a65 000000   		.align	2
 13846              	.LC247:
 13847 1a68 454D4720 		.ascii	"EMG input %d -> %d\000"
 13847      696E7075 
 13847      74202564 
 13847      202D3E20 
 13847      256400
 13848 1a7b 00       		.align	2
 13849              	.LC248:
 13850 1a7c 4A4F5953 		.ascii	"JOYSTICK CONFIGURATION\015\012\000"
 13850      5449434B 
 13850      20434F4E 
 13850      46494755 
 13850      52415449 
 13851 1a95 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 316


 13852              	.LC249:
 13853 1a98 436C6F73 		.ascii	"Closure speed: %d\000"
 13853      75726520 
 13853      73706565 
 13853      643A2025 
 13853      6400
 13854 1aaa 0000     		.align	2
 13855              	.LC250:
 13856 1aac 4A6F7973 		.ascii	"Joystick Threshold: %d\000"
 13856      7469636B 
 13856      20546872 
 13856      6573686F 
 13856      6C643A20 
 13857 1ac3 00       		.align	2
 13858              	.LC251:
 13859 1ac4 4A6F7973 		.ascii	"Joystick Gains - X:%hu  Y:%hu\000"
 13859      7469636B 
 13859      20476169 
 13859      6E73202D 
 13859      20583A25 
 13860 1ae2 0000     		.align	2
 13861              	.LC252:
 13862 1ae4 52657374 		.ascii	"Rest time delay (ms): %d\000"
 13862      2074696D 
 13862      65206465 
 13862      6C617920 
 13862      286D7329 
 13863 1afd 000000   		.align	2
 13864              	.LC253:
 13865 1b00 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 13865      2076656C 
 13865      6F636974 
 13865      7920636C 
 13865      6F737572 
 13866 1b26 0000     		.align	2
 13867              	.LC254:
 13868 1b28 52657374 		.ascii	"Rest position: %d\000"
 13868      20706F73 
 13868      6974696F 
 13868      6E3A2025 
 13868      6400
 13869 1b3a 0000     		.align	2
 13870              	.LC255:
 13871 1b3c 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 13871      436F6E6E 
 13871      65637465 
 13871      643A2025 
 13871      640D0A00 
 13872              		.align	2
 13873              	.LC256:
 13874 1b50 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 13874      20434F4E 
 13874      46494755 
 13874      52415449 
 13874      4F4E0D0A 
 13875 1b65 000000   		.align	2
 13876              	.LC257:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 317


 13877 1b68 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 13877      2564200D 
 13877      0A094944 
 13877      3A202564 
 13877      0D0A00
 13878 1b7b 00       		.align	2
 13879              	.LC258:
 13880 1b7c 09416363 		.ascii	"\011Accelerometers: \000"
 13880      656C6572 
 13880      6F6D6574 
 13880      6572733A 
 13880      2000
 13881 1b8e 0000     		.align	2
 13882              	.LC259:
 13883 1b90 09477972 		.ascii	"\011Gyroscopes: \000"
 13883      6F73636F 
 13883      7065733A 
 13883      2000
 13884 1b9e 0000     		.align	2
 13885              	.LC260:
 13886 1ba0 094D6167 		.ascii	"\011Magnetometers: \000"
 13886      6E65746F 
 13886      6D657465 
 13886      72733A20 
 13886      00
 13887 1bb1 000000   		.align	2
 13888              	.LC261:
 13889 1bb4 09517561 		.ascii	"\011Quaternion: \000"
 13889      7465726E 
 13889      696F6E3A 
 13889      2000
 13890 1bc2 0000     		.align	2
 13891              	.LC262:
 13892 1bc4 0954656D 		.ascii	"\011Temperature: \000"
 13892      70657261 
 13892      74757265 
 13892      3A2000
 13893 1bd3 00       		.align	2
 13894              	.LC263:
 13895 1bd4 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 13895      44455220 
 13895      434F4E46 
 13895      49475552 
 13895      4154494F 
 13896              		.align	2
 13897              	.LC264:
 13898 1bec 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 13898      64657220 
 13898      436F6E6E 
 13898      65637465 
 13898      64204C69 
 13899 1c0a 0000     		.align	2
 13900              	.LC265:
 13901 1c0c 4C454654 		.ascii	"LEFT\000"
 13901      00
 13902 1c11 000000   		.align	2
 13903              	.LC266:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 318


 13904 1c14 52494748 		.ascii	"RIGHT\000"
 13904      5400
 13905 1c1a 0000     		.align	2
 13906              	.LC267:
 13907 1c1c 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 13907      2048414E 
 13907      44206D61 
 13907      696E2065 
 13907      6E636F64 
 13908 1c39 000000   		.align	2
 13909              	.LC268:
 13910 1c3c 52617720 		.ascii	"Raw value [status]:\015\012\000"
 13910      76616C75 
 13910      65205B73 
 13910      74617475 
 13910      735D3A0D 
 13911 1c52 0000     		.align	2
 13912              	.LC269:
 13913 1c54 4F4B00   		.ascii	"OK\000"
 13914 1c57 00       		.align	2
 13915              	.LC270:
 13916 1c58 5800     		.ascii	"X\000"
 13917 1c5a 0000     		.align	2
 13918              	.LC271:
 13919 1c5c 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 13919      25735D0D 
 13919      0A00
 13920 1c66 0000     		.align	2
 13921              	.LC272:
 13922 1c68 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 13922      20465720 
 13922      6379636C 
 13922      65207469 
 13922      6D653A20 
 13923              		.align	2
 13924              	.LC273:
 13925 1c84 0D0A0000 		.ascii	"\015\012\000\000"
 13926              		.section	.text.prepare_generic_info,"ax",%progbits
 13927              		.align	2
 13928              		.global	prepare_generic_info
 13929              		.thumb
 13930              		.thumb_func
 13931              		.type	prepare_generic_info, %function
 13932              	prepare_generic_info:
 13933              	.LFB72:
1895:..\src/command_processing.c **** 
1896:..\src/command_processing.c **** //==============================================================================
1897:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1898:..\src/command_processing.c **** //==============================================================================
1899:..\src/command_processing.c **** 
1900:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1901:..\src/command_processing.c **** {
 13934              		.loc 1 1901 0
 13935              		.cfi_startproc
 13936              		@ args = 0, pretend = 0, frame = 152
 13937              		@ frame_needed = 1, uses_anonymous_args = 0
 13938 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 319


 13939              		.cfi_def_cfa_offset 36
 13940              		.cfi_offset 4, -36
 13941              		.cfi_offset 5, -32
 13942              		.cfi_offset 6, -28
 13943              		.cfi_offset 7, -24
 13944              		.cfi_offset 8, -20
 13945              		.cfi_offset 9, -16
 13946              		.cfi_offset 10, -12
 13947              		.cfi_offset 11, -8
 13948              		.cfi_offset 14, -4
 13949 0004 B1B0     		sub	sp, sp, #196
 13950              		.cfi_def_cfa_offset 232
 13951 0006 0AAF     		add	r7, sp, #40
 13952              		.cfi_def_cfa 7, 192
 13953 0008 7861     		str	r0, [r7, #20]
1902:..\src/command_processing.c ****     int i;
1903:..\src/command_processing.c **** 
1904:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 13954              		.loc 1 1904 0
 13955 000a BF4B     		ldr	r3, .L684
 13956 000c C7F88830 		str	r3, [r7, #136]
1905:..\src/command_processing.c ****     
1906:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 13957              		.loc 1 1906 0
 13958 0010 BD4B     		ldr	r3, .L684
 13959 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13960 0016 FA2B     		cmp	r3, #250
 13961 0018 02F08C80 		beq	.L681
 13962              	.LBB24:
1907:..\src/command_processing.c ****         char str[100];
1908:..\src/command_processing.c ****         strcpy(info_string, "");
 13963              		.loc 1 1908 0
 13964 001c 7B69     		ldr	r3, [r7, #20]
 13965 001e 0022     		movs	r2, #0
 13966 0020 1A70     		strb	r2, [r3]
1909:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 13967              		.loc 1 1909 0
 13968 0022 7869     		ldr	r0, [r7, #20]
 13969 0024 FFF7FEFF 		bl	strlen
 13970 0028 0346     		mov	r3, r0
 13971 002a 1A46     		mov	r2, r3
 13972 002c 7B69     		ldr	r3, [r7, #20]
 13973 002e 1344     		add	r3, r3, r2
 13974 0030 B64A     		ldr	r2, .L684+4
 13975 0032 1188     		ldrh	r1, [r2]	@ unaligned
 13976 0034 9278     		ldrb	r2, [r2, #2]
 13977 0036 1980     		strh	r1, [r3]	@ unaligned
 13978 0038 9A70     		strb	r2, [r3, #2]
1910:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 13979              		.loc 1 1910 0
 13980 003a 7869     		ldr	r0, [r7, #20]
 13981 003c FFF7FEFF 		bl	strlen
 13982 0040 0346     		mov	r3, r0
 13983 0042 1A46     		mov	r2, r3
 13984 0044 7B69     		ldr	r3, [r7, #20]
 13985 0046 1344     		add	r3, r3, r2
 13986 0048 B14A     		ldr	r2, .L684+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 320


 13987 004a 1D46     		mov	r5, r3
 13988 004c 1446     		mov	r4, r2
 13989 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13990 0050 2860     		str	r0, [r5]	@ unaligned
 13991 0052 6960     		str	r1, [r5, #4]	@ unaligned
 13992 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 13993 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 13994 0058 2388     		ldrh	r3, [r4]	@ unaligned
 13995 005a A278     		ldrb	r2, [r4, #2]
 13996 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 13997 005e 1346     		mov	r3, r2
 13998 0060 AB74     		strb	r3, [r5, #18]
1911:..\src/command_processing.c ****         strcat(info_string, VERSION);
 13999              		.loc 1 1911 0
 14000 0062 7869     		ldr	r0, [r7, #20]
 14001 0064 FFF7FEFF 		bl	strlen
 14002 0068 0346     		mov	r3, r0
 14003 006a 1A46     		mov	r2, r3
 14004 006c 7B69     		ldr	r3, [r7, #20]
 14005 006e 1344     		add	r3, r3, r2
 14006 0070 A84A     		ldr	r2, .L684+12
 14007 0072 1846     		mov	r0, r3
 14008 0074 1146     		mov	r1, r2
 14009 0076 4923     		movs	r3, #73
 14010 0078 1A46     		mov	r2, r3
 14011 007a FFF7FEFF 		bl	memcpy
1912:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14012              		.loc 1 1912 0
 14013 007e 7869     		ldr	r0, [r7, #20]
 14014 0080 FFF7FEFF 		bl	strlen
 14015 0084 0346     		mov	r3, r0
 14016 0086 1A46     		mov	r2, r3
 14017 0088 7B69     		ldr	r3, [r7, #20]
 14018 008a 1344     		add	r3, r3, r2
 14019 008c A24A     		ldr	r2, .L684+16
 14020 008e 1068     		ldr	r0, [r2]	@ unaligned
 14021 0090 1860     		str	r0, [r3]	@ unaligned
 14022 0092 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14023 0094 9A80     		strh	r2, [r3, #4]	@ unaligned
1913:..\src/command_processing.c **** 
1914:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14024              		.loc 1 1914 0
 14025 0096 7869     		ldr	r0, [r7, #20]
 14026 0098 FFF7FEFF 		bl	strlen
 14027 009c 0346     		mov	r3, r0
 14028 009e 1A46     		mov	r2, r3
 14029 00a0 7B69     		ldr	r3, [r7, #20]
 14030 00a2 1344     		add	r3, r3, r2
 14031 00a4 9D4A     		ldr	r2, .L684+20
 14032 00a6 1C46     		mov	r4, r3
 14033 00a8 1346     		mov	r3, r2
 14034 00aa 07CB     		ldmia	r3!, {r0, r1, r2}
 14035 00ac 2060     		str	r0, [r4]	@ unaligned
 14036 00ae 6160     		str	r1, [r4, #4]	@ unaligned
 14037 00b0 A260     		str	r2, [r4, #8]	@ unaligned
 14038 00b2 1B88     		ldrh	r3, [r3]	@ unaligned
 14039 00b4 A381     		strh	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 321


1915:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14040              		.loc 1 1915 0
 14041 00b6 D7F88830 		ldr	r3, [r7, #136]
 14042 00ba 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14043 00be 1A46     		mov	r2, r3
 14044 00c0 07F11803 		add	r3, r7, #24
 14045 00c4 9649     		ldr	r1, .L684+24
 14046 00c6 1846     		mov	r0, r3
 14047 00c8 FFF7FEFF 		bl	sprintf
1916:..\src/command_processing.c ****         strcat(info_string, str);
 14048              		.loc 1 1916 0
 14049 00cc 07F11803 		add	r3, r7, #24
 14050 00d0 1946     		mov	r1, r3
 14051 00d2 7869     		ldr	r0, [r7, #20]
 14052 00d4 FFF7FEFF 		bl	strcat
1917:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14053              		.loc 1 1917 0
 14054 00d8 D7F88830 		ldr	r3, [r7, #136]
 14055 00dc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14056 00e0 042B     		cmp	r3, #4
 14057 00e2 00F29180 		bhi	.L682
 14058 00e6 01A2     		adr	r2, .L565
 14059 00e8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14060              		.p2align 2
 14061              	.L565:
 14062 00ec 01010000 		.word	.L564+1
 14063 00f0 2F010000 		.word	.L566+1
 14064 00f4 5F010000 		.word	.L567+1
 14065 00f8 A1010000 		.word	.L568+1
 14066 00fc E1010000 		.word	.L569+1
 14067              		.p2align 1
 14068              	.L564:
1918:..\src/command_processing.c ****             case SOFTHAND_PRO:
1919:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14069              		.loc 1 1919 0
 14070 0100 7869     		ldr	r0, [r7, #20]
 14071 0102 FFF7FEFF 		bl	strlen
 14072 0106 0346     		mov	r3, r0
 14073 0108 1A46     		mov	r2, r3
 14074 010a 7B69     		ldr	r3, [r7, #20]
 14075 010c 1344     		add	r3, r3, r2
 14076 010e 854A     		ldr	r2, .L684+28
 14077 0110 1C46     		mov	r4, r3
 14078 0112 1546     		mov	r5, r2
 14079 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14080 0116 2060     		str	r0, [r4]	@ unaligned
 14081 0118 6160     		str	r1, [r4, #4]	@ unaligned
 14082 011a A260     		str	r2, [r4, #8]	@ unaligned
 14083 011c E360     		str	r3, [r4, #12]	@ unaligned
 14084 011e 2868     		ldr	r0, [r5]	@ unaligned
 14085 0120 2061     		str	r0, [r4, #16]	@ unaligned
 14086 0122 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14087 0124 AA79     		ldrb	r2, [r5, #6]
 14088 0126 A382     		strh	r3, [r4, #20]	@ unaligned
 14089 0128 1346     		mov	r3, r2
 14090 012a A375     		strb	r3, [r4, #22]
1920:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 322


 14091              		.loc 1 1920 0
 14092 012c 6DE0     		b	.L570
 14093              	.L566:
1921:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1922:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14094              		.loc 1 1922 0
 14095 012e 7869     		ldr	r0, [r7, #20]
 14096 0130 FFF7FEFF 		bl	strlen
 14097 0134 0346     		mov	r3, r0
 14098 0136 1A46     		mov	r2, r3
 14099 0138 7B69     		ldr	r3, [r7, #20]
 14100 013a 1344     		add	r3, r3, r2
 14101 013c 7A4A     		ldr	r2, .L684+32
 14102 013e 1D46     		mov	r5, r3
 14103 0140 1446     		mov	r4, r2
 14104 0142 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14105 0144 2860     		str	r0, [r5]	@ unaligned
 14106 0146 6960     		str	r1, [r5, #4]	@ unaligned
 14107 0148 AA60     		str	r2, [r5, #8]	@ unaligned
 14108 014a EB60     		str	r3, [r5, #12]	@ unaligned
 14109 014c 03CC     		ldmia	r4!, {r0, r1}
 14110 014e 2861     		str	r0, [r5, #16]	@ unaligned
 14111 0150 6961     		str	r1, [r5, #20]	@ unaligned
 14112 0152 2388     		ldrh	r3, [r4]	@ unaligned
 14113 0154 A278     		ldrb	r2, [r4, #2]
 14114 0156 2B83     		strh	r3, [r5, #24]	@ unaligned
 14115 0158 1346     		mov	r3, r2
 14116 015a AB76     		strb	r3, [r5, #26]
1923:..\src/command_processing.c ****                 break;
 14117              		.loc 1 1923 0
 14118 015c 55E0     		b	.L570
 14119              	.L567:
1924:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1925:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14120              		.loc 1 1925 0
 14121 015e 7869     		ldr	r0, [r7, #20]
 14122 0160 FFF7FEFF 		bl	strlen
 14123 0164 0346     		mov	r3, r0
 14124 0166 1A46     		mov	r2, r3
 14125 0168 7B69     		ldr	r3, [r7, #20]
 14126 016a 1344     		add	r3, r3, r2
 14127 016c 6F4A     		ldr	r2, .L684+36
 14128 016e 1446     		mov	r4, r2
 14129 0170 9E46     		mov	lr, r3
 14130 0172 04F1200C 		add	ip, r4, #32
 14131              	.L571:
 14132 0176 7546     		mov	r5, lr
 14133 0178 2646     		mov	r6, r4
 14134 017a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14135 017c 2860     		str	r0, [r5]	@ unaligned
 14136 017e 6960     		str	r1, [r5, #4]	@ unaligned
 14137 0180 AA60     		str	r2, [r5, #8]	@ unaligned
 14138 0182 EB60     		str	r3, [r5, #12]	@ unaligned
 14139 0184 1034     		adds	r4, r4, #16
 14140 0186 0EF1100E 		add	lr, lr, #16
 14141 018a 6445     		cmp	r4, ip
 14142 018c F3D1     		bne	.L571
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 323


 14143 018e 7346     		mov	r3, lr
 14144 0190 2246     		mov	r2, r4
 14145 0192 1068     		ldr	r0, [r2]	@ unaligned
 14146 0194 1860     		str	r0, [r3]	@ unaligned
 14147 0196 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14148 0198 9279     		ldrb	r2, [r2, #6]
 14149 019a 9980     		strh	r1, [r3, #4]	@ unaligned
 14150 019c 9A71     		strb	r2, [r3, #6]
1926:..\src/command_processing.c ****                 break;
 14151              		.loc 1 1926 0
 14152 019e 34E0     		b	.L570
 14153              	.L568:
1927:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1928:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14154              		.loc 1 1928 0
 14155 01a0 7869     		ldr	r0, [r7, #20]
 14156 01a2 FFF7FEFF 		bl	strlen
 14157 01a6 0346     		mov	r3, r0
 14158 01a8 1A46     		mov	r2, r3
 14159 01aa 7B69     		ldr	r3, [r7, #20]
 14160 01ac 1344     		add	r3, r3, r2
 14161 01ae 604A     		ldr	r2, .L684+40
 14162 01b0 1446     		mov	r4, r2
 14163 01b2 9E46     		mov	lr, r3
 14164 01b4 04F1200C 		add	ip, r4, #32
 14165              	.L572:
 14166 01b8 7546     		mov	r5, lr
 14167 01ba 2646     		mov	r6, r4
 14168 01bc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14169 01be 2860     		str	r0, [r5]	@ unaligned
 14170 01c0 6960     		str	r1, [r5, #4]	@ unaligned
 14171 01c2 AA60     		str	r2, [r5, #8]	@ unaligned
 14172 01c4 EB60     		str	r3, [r5, #12]	@ unaligned
 14173 01c6 1034     		adds	r4, r4, #16
 14174 01c8 0EF1100E 		add	lr, lr, #16
 14175 01cc 6445     		cmp	r4, ip
 14176 01ce F3D1     		bne	.L572
 14177 01d0 7246     		mov	r2, lr
 14178 01d2 2346     		mov	r3, r4
 14179 01d4 03CB     		ldmia	r3!, {r0, r1}
 14180 01d6 1060     		str	r0, [r2]	@ unaligned
 14181 01d8 5160     		str	r1, [r2, #4]	@ unaligned
 14182 01da 1B88     		ldrh	r3, [r3]	@ unaligned
 14183 01dc 1381     		strh	r3, [r2, #8]	@ unaligned
1929:..\src/command_processing.c ****                 break;
 14184              		.loc 1 1929 0
 14185 01de 14E0     		b	.L570
 14186              	.L569:
1930:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1931:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14187              		.loc 1 1931 0
 14188 01e0 7869     		ldr	r0, [r7, #20]
 14189 01e2 FFF7FEFF 		bl	strlen
 14190 01e6 0346     		mov	r3, r0
 14191 01e8 1A46     		mov	r2, r3
 14192 01ea 7B69     		ldr	r3, [r7, #20]
 14193 01ec 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 324


 14194 01ee 514A     		ldr	r2, .L684+44
 14195 01f0 1D46     		mov	r5, r3
 14196 01f2 1446     		mov	r4, r2
 14197 01f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14198 01f6 2860     		str	r0, [r5]	@ unaligned
 14199 01f8 6960     		str	r1, [r5, #4]	@ unaligned
 14200 01fa AA60     		str	r2, [r5, #8]	@ unaligned
 14201 01fc EB60     		str	r3, [r5, #12]	@ unaligned
 14202 01fe 07CC     		ldmia	r4!, {r0, r1, r2}
 14203 0200 2861     		str	r0, [r5, #16]	@ unaligned
 14204 0202 6961     		str	r1, [r5, #20]	@ unaligned
 14205 0204 AA61     		str	r2, [r5, #24]	@ unaligned
1932:..\src/command_processing.c ****                 break;
 14206              		.loc 1 1932 0
 14207 0206 00E0     		b	.L570
 14208              	.L682:
1933:..\src/command_processing.c ****             default:
1934:..\src/command_processing.c ****                 break;
 14209              		.loc 1 1934 0
 14210 0208 00BF     		nop
 14211              	.L570:
1935:..\src/command_processing.c ****         }
1936:..\src/command_processing.c ****         
1937:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14212              		.loc 1 1937 0
 14213 020a D7F88830 		ldr	r3, [r7, #136]
 14214 020e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14215 0212 002B     		cmp	r3, #0
 14216 0214 02D0     		beq	.L574
 14217 0216 012B     		cmp	r3, #1
 14218 0218 15D0     		beq	.L575
 14219 021a 26E0     		b	.L573
 14220              	.L574:
1938:..\src/command_processing.c ****             case RIGHT_HAND:
1939:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14221              		.loc 1 1939 0
 14222 021c 7869     		ldr	r0, [r7, #20]
 14223 021e FFF7FEFF 		bl	strlen
 14224 0222 0346     		mov	r3, r0
 14225 0224 1A46     		mov	r2, r3
 14226 0226 7B69     		ldr	r3, [r7, #20]
 14227 0228 1344     		add	r3, r3, r2
 14228 022a 434A     		ldr	r2, .L684+48
 14229 022c 1D46     		mov	r5, r3
 14230 022e 1446     		mov	r4, r2
 14231 0230 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14232 0232 2860     		str	r0, [r5]	@ unaligned
 14233 0234 6960     		str	r1, [r5, #4]	@ unaligned
 14234 0236 AA60     		str	r2, [r5, #8]	@ unaligned
 14235 0238 EB60     		str	r3, [r5, #12]	@ unaligned
 14236 023a 2388     		ldrh	r3, [r4]	@ unaligned
 14237 023c A278     		ldrb	r2, [r4, #2]
 14238 023e 2B82     		strh	r3, [r5, #16]	@ unaligned
 14239 0240 1346     		mov	r3, r2
 14240 0242 AB74     		strb	r3, [r5, #18]
1940:..\src/command_processing.c ****                 break;
 14241              		.loc 1 1940 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 325


 14242 0244 11E0     		b	.L573
 14243              	.L575:
1941:..\src/command_processing.c ****             case LEFT_HAND:
1942:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14244              		.loc 1 1942 0
 14245 0246 7869     		ldr	r0, [r7, #20]
 14246 0248 FFF7FEFF 		bl	strlen
 14247 024c 0346     		mov	r3, r0
 14248 024e 1A46     		mov	r2, r3
 14249 0250 7B69     		ldr	r3, [r7, #20]
 14250 0252 1344     		add	r3, r3, r2
 14251 0254 394A     		ldr	r2, .L684+52
 14252 0256 1D46     		mov	r5, r3
 14253 0258 1446     		mov	r4, r2
 14254 025a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14255 025c 2860     		str	r0, [r5]	@ unaligned
 14256 025e 6960     		str	r1, [r5, #4]	@ unaligned
 14257 0260 AA60     		str	r2, [r5, #8]	@ unaligned
 14258 0262 EB60     		str	r3, [r5, #12]	@ unaligned
 14259 0264 2388     		ldrh	r3, [r4]	@ unaligned
 14260 0266 2B82     		strh	r3, [r5, #16]	@ unaligned
1943:..\src/command_processing.c ****                 break;
 14261              		.loc 1 1943 0
 14262 0268 00BF     		nop
 14263              	.L573:
1944:..\src/command_processing.c ****         }
1945:..\src/command_processing.c **** 
1946:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14264              		.loc 1 1946 0
 14265 026a D7F88830 		ldr	r3, [r7, #136]
 14266 026e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14267 0272 012B     		cmp	r3, #1
 14268 0274 02D0     		beq	.L577
 14269 0276 022B     		cmp	r3, #2
 14270 0278 11D0     		beq	.L578
 14271 027a 1FE0     		b	.L680
 14272              	.L577:
1947:..\src/command_processing.c ****             case MARIA:
1948:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14273              		.loc 1 1948 0
 14274 027c 7869     		ldr	r0, [r7, #20]
 14275 027e FFF7FEFF 		bl	strlen
 14276 0282 0346     		mov	r3, r0
 14277 0284 1A46     		mov	r2, r3
 14278 0286 7B69     		ldr	r3, [r7, #20]
 14279 0288 1344     		add	r3, r3, r2
 14280 028a 2D4A     		ldr	r2, .L684+56
 14281 028c 1C46     		mov	r4, r3
 14282 028e 1346     		mov	r3, r2
 14283 0290 07CB     		ldmia	r3!, {r0, r1, r2}
 14284 0292 2060     		str	r0, [r4]	@ unaligned
 14285 0294 6160     		str	r1, [r4, #4]	@ unaligned
 14286 0296 A260     		str	r2, [r4, #8]	@ unaligned
 14287 0298 1B88     		ldrh	r3, [r3]	@ unaligned
 14288 029a A381     		strh	r3, [r4, #12]	@ unaligned
1949:..\src/command_processing.c ****                 break;
 14289              		.loc 1 1949 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 326


 14290 029c 22E0     		b	.L579
 14291              	.L578:
1950:..\src/command_processing.c ****             case R01:
1951:..\src/command_processing.c ****                 strcat(info_string, "User: R01\r\n");
 14292              		.loc 1 1951 0
 14293 029e 7869     		ldr	r0, [r7, #20]
 14294 02a0 FFF7FEFF 		bl	strlen
 14295 02a4 0346     		mov	r3, r0
 14296 02a6 1A46     		mov	r2, r3
 14297 02a8 7B69     		ldr	r3, [r7, #20]
 14298 02aa 1344     		add	r3, r3, r2
 14299 02ac 254A     		ldr	r2, .L684+60
 14300 02ae 1C46     		mov	r4, r3
 14301 02b0 1346     		mov	r3, r2
 14302 02b2 07CB     		ldmia	r3!, {r0, r1, r2}
 14303 02b4 2060     		str	r0, [r4]	@ unaligned
 14304 02b6 6160     		str	r1, [r4, #4]	@ unaligned
 14305 02b8 A260     		str	r2, [r4, #8]	@ unaligned
1952:..\src/command_processing.c ****                 break;
 14306              		.loc 1 1952 0
 14307 02ba 13E0     		b	.L579
 14308              	.L680:
1953:..\src/command_processing.c ****             default:
1954:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14309              		.loc 1 1954 0
 14310 02bc 7869     		ldr	r0, [r7, #20]
 14311 02be FFF7FEFF 		bl	strlen
 14312 02c2 0346     		mov	r3, r0
 14313 02c4 1A46     		mov	r2, r3
 14314 02c6 7B69     		ldr	r3, [r7, #20]
 14315 02c8 1344     		add	r3, r3, r2
 14316 02ca 1F4A     		ldr	r2, .L684+64
 14317 02cc 1D46     		mov	r5, r3
 14318 02ce 1446     		mov	r4, r2
 14319 02d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14320 02d2 2860     		str	r0, [r5]	@ unaligned
 14321 02d4 6960     		str	r1, [r5, #4]	@ unaligned
 14322 02d6 AA60     		str	r2, [r5, #8]	@ unaligned
 14323 02d8 EB60     		str	r3, [r5, #12]	@ unaligned
 14324 02da 2068     		ldr	r0, [r4]	@ unaligned
 14325 02dc 2861     		str	r0, [r5, #16]	@ unaligned
 14326 02de 2379     		ldrb	r3, [r4, #4]
 14327 02e0 2B75     		strb	r3, [r5, #20]
1955:..\src/command_processing.c ****                 break;
 14328              		.loc 1 1955 0
 14329 02e2 00BF     		nop
 14330              	.L579:
1956:..\src/command_processing.c ****         }
1957:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14331              		.loc 1 1957 0
 14332 02e4 7869     		ldr	r0, [r7, #20]
 14333 02e6 FFF7FEFF 		bl	strlen
 14334 02ea 0346     		mov	r3, r0
 14335 02ec 1A46     		mov	r2, r3
 14336 02ee 7B69     		ldr	r3, [r7, #20]
 14337 02f0 1344     		add	r3, r3, r2
 14338 02f2 064A     		ldr	r2, .L684+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 327


 14339 02f4 1188     		ldrh	r1, [r2]	@ unaligned
 14340 02f6 9278     		ldrb	r2, [r2, #2]
 14341 02f8 1980     		strh	r1, [r3]	@ unaligned
 14342 02fa 9A70     		strb	r2, [r3, #2]
 14343              	.LBB25:
1958:..\src/command_processing.c ****         
1959:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14344              		.loc 1 1959 0
 14345 02fc 0023     		movs	r3, #0
 14346 02fe 87F89330 		strb	r3, [r7, #147]
 14347 0302 01F0F5B9 		b	.L580
 14348              	.L685:
 14349 0306 00BF     		.align	2
 14350              	.L684:
 14351 0308 00000000 		.word	c_mem
 14352 030c 9C110000 		.word	.LC154
 14353 0310 A0110000 		.word	.LC155
 14354 0314 B4110000 		.word	.LC156
 14355 0318 00120000 		.word	.LC157
 14356 031c 08120000 		.word	.LC158
 14357 0320 18120000 		.word	.LC159
 14358 0324 24120000 		.word	.LC160
 14359 0328 3C120000 		.word	.LC161
 14360 032c 58120000 		.word	.LC162
 14361 0330 80120000 		.word	.LC163
 14362 0334 AC120000 		.word	.LC164
 14363 0338 C8120000 		.word	.LC165
 14364 033c DC120000 		.word	.LC166
 14365 0340 F0120000 		.word	.LC167
 14366 0344 00130000 		.word	.LC168
 14367 0348 0C130000 		.word	.LC169
 14368              	.L646:
 14369              	.LBB26:
1960:..\src/command_processing.c ****             
1961:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14370              		.loc 1 1961 0
 14371 034c 97F89330 		ldrb	r3, [r7, #147]
 14372 0350 87F88730 		strb	r3, [r7, #135]
1962:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14373              		.loc 1 1962 0
 14374 0354 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14375 0358 7422     		movs	r2, #116
 14376 035a 02FB03F3 		mul	r3, r2, r3
 14377 035e B033     		adds	r3, r3, #176
 14378 0360 D7F88820 		ldr	r2, [r7, #136]
 14379 0364 1344     		add	r3, r3, r2
 14380 0366 C7F88030 		str	r3, [r7, #128]
1963:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14381              		.loc 1 1963 0
 14382 036a D7F88030 		ldr	r3, [r7, #128]
 14383 036e 93F86030 		ldrb	r3, [r3, #96]
 14384 0372 87F87F30 		strb	r3, [r7, #127]
1964:..\src/command_processing.c ****                   
1965:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14385              		.loc 1 1965 0
 14386 0376 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14387 037a 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 328


 14388 037c 07F11803 		add	r3, r7, #24
 14389 0380 AE49     		ldr	r1, .L686
 14390 0382 1846     		mov	r0, r3
 14391 0384 FFF7FEFF 		bl	sprintf
1966:..\src/command_processing.c ****             strcat(info_string, str);
 14392              		.loc 1 1966 0
 14393 0388 07F11803 		add	r3, r7, #24
 14394 038c 1946     		mov	r1, r3
 14395 038e 7869     		ldr	r0, [r7, #20]
 14396 0390 FFF7FEFF 		bl	strcat
1967:..\src/command_processing.c ****                         
1968:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14397              		.loc 1 1968 0
 14398 0394 7869     		ldr	r0, [r7, #20]
 14399 0396 FFF7FEFF 		bl	strlen
 14400 039a 0346     		mov	r3, r0
 14401 039c 1A46     		mov	r2, r3
 14402 039e 7B69     		ldr	r3, [r7, #20]
 14403 03a0 1344     		add	r3, r3, r2
 14404 03a2 A74A     		ldr	r2, .L686+4
 14405 03a4 1C46     		mov	r4, r3
 14406 03a6 1546     		mov	r5, r2
 14407 03a8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14408 03aa 2060     		str	r0, [r4]	@ unaligned
 14409 03ac 6160     		str	r1, [r4, #4]	@ unaligned
 14410 03ae A260     		str	r2, [r4, #8]	@ unaligned
 14411 03b0 E360     		str	r3, [r4, #12]	@ unaligned
1969:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14412              		.loc 1 1969 0
 14413 03b2 D7F88030 		ldr	r3, [r7, #128]
 14414 03b6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14415 03ba 022B     		cmp	r3, #2
 14416 03bc 10D1     		bne	.L581
1970:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14417              		.loc 1 1970 0
 14418 03be 7869     		ldr	r0, [r7, #20]
 14419 03c0 FFF7FEFF 		bl	strlen
 14420 03c4 0346     		mov	r3, r0
 14421 03c6 1A46     		mov	r2, r3
 14422 03c8 7B69     		ldr	r3, [r7, #20]
 14423 03ca 1344     		add	r3, r3, r2
 14424 03cc 9D4A     		ldr	r2, .L686+8
 14425 03ce 1C46     		mov	r4, r3
 14426 03d0 1346     		mov	r3, r2
 14427 03d2 07CB     		ldmia	r3!, {r0, r1, r2}
 14428 03d4 2060     		str	r0, [r4]	@ unaligned
 14429 03d6 6160     		str	r1, [r4, #4]	@ unaligned
 14430 03d8 A260     		str	r2, [r4, #8]	@ unaligned
 14431 03da 1B88     		ldrh	r3, [r3]	@ unaligned
 14432 03dc A381     		strh	r3, [r4, #12]	@ unaligned
 14433 03de 25E0     		b	.L582
 14434              	.L581:
1971:..\src/command_processing.c ****             else {
1972:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14435              		.loc 1 1972 0
 14436 03e0 D7F88030 		ldr	r3, [r7, #128]
 14437 03e4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 329


 14438 03e8 012B     		cmp	r3, #1
 14439 03ea 0FD1     		bne	.L583
1973:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14440              		.loc 1 1973 0
 14441 03ec 7869     		ldr	r0, [r7, #20]
 14442 03ee FFF7FEFF 		bl	strlen
 14443 03f2 0346     		mov	r3, r0
 14444 03f4 1A46     		mov	r2, r3
 14445 03f6 7B69     		ldr	r3, [r7, #20]
 14446 03f8 1344     		add	r3, r3, r2
 14447 03fa 9349     		ldr	r1, .L686+12
 14448 03fc 1A46     		mov	r2, r3
 14449 03fe 0B46     		mov	r3, r1
 14450 0400 03CB     		ldmia	r3!, {r0, r1}
 14451 0402 1060     		str	r0, [r2]	@ unaligned
 14452 0404 5160     		str	r1, [r2, #4]	@ unaligned
 14453 0406 1B78     		ldrb	r3, [r3]
 14454 0408 1372     		strb	r3, [r2, #8]
 14455 040a 0FE0     		b	.L582
 14456              	.L583:
1974:..\src/command_processing.c ****                 else
1975:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14457              		.loc 1 1975 0
 14458 040c 7869     		ldr	r0, [r7, #20]
 14459 040e FFF7FEFF 		bl	strlen
 14460 0412 0346     		mov	r3, r0
 14461 0414 1A46     		mov	r2, r3
 14462 0416 7B69     		ldr	r3, [r7, #20]
 14463 0418 1344     		add	r3, r3, r2
 14464 041a 8C4A     		ldr	r2, .L686+16
 14465 041c 1C46     		mov	r4, r3
 14466 041e 1346     		mov	r3, r2
 14467 0420 07CB     		ldmia	r3!, {r0, r1, r2}
 14468 0422 2060     		str	r0, [r4]	@ unaligned
 14469 0424 6160     		str	r1, [r4, #4]	@ unaligned
 14470 0426 A260     		str	r2, [r4, #8]	@ unaligned
 14471 0428 1B88     		ldrh	r3, [r3]	@ unaligned
 14472 042a A381     		strh	r3, [r4, #12]	@ unaligned
 14473              	.L582:
1976:..\src/command_processing.c ****             }
1977:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14474              		.loc 1 1977 0
 14475 042c D7F88030 		ldr	r3, [r7, #128]
 14476 0430 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14477 0434 022B     		cmp	r3, #2
 14478 0436 13D1     		bne	.L584
1978:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14479              		.loc 1 1978 0
 14480 0438 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14481 043c 844A     		ldr	r2, .L686+20
 14482 043e 1B01     		lsls	r3, r3, #4
 14483 0440 1344     		add	r3, r3, r2
 14484 0442 0433     		adds	r3, r3, #4
 14485 0444 1A68     		ldr	r2, [r3]
 14486 0446 07F11803 		add	r3, r7, #24
 14487 044a 8249     		ldr	r1, .L686+24
 14488 044c 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 330


 14489 044e FFF7FEFF 		bl	sprintf
1979:..\src/command_processing.c ****                 strcat(info_string,str);
 14490              		.loc 1 1979 0
 14491 0452 07F11803 		add	r3, r7, #24
 14492 0456 1946     		mov	r1, r3
 14493 0458 7869     		ldr	r0, [r7, #20]
 14494 045a FFF7FEFF 		bl	strcat
 14495 045e 39E0     		b	.L585
 14496              	.L584:
1980:..\src/command_processing.c ****             }
1981:..\src/command_processing.c ****             else {
1982:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14497              		.loc 1 1982 0
 14498 0460 D7F88030 		ldr	r3, [r7, #128]
 14499 0464 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14500 0468 012B     		cmp	r3, #1
 14501 046a 13D1     		bne	.L586
1983:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14502              		.loc 1 1983 0
 14503 046c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14504 0470 774A     		ldr	r2, .L686+20
 14505 0472 1B01     		lsls	r3, r3, #4
 14506 0474 1344     		add	r3, r3, r2
 14507 0476 0833     		adds	r3, r3, #8
 14508 0478 1A68     		ldr	r2, [r3]
 14509 047a 07F11803 		add	r3, r7, #24
 14510 047e 7549     		ldr	r1, .L686+24
 14511 0480 1846     		mov	r0, r3
 14512 0482 FFF7FEFF 		bl	sprintf
1984:..\src/command_processing.c ****                     strcat(info_string,str);
 14513              		.loc 1 1984 0
 14514 0486 07F11803 		add	r3, r7, #24
 14515 048a 1946     		mov	r1, r3
 14516 048c 7869     		ldr	r0, [r7, #20]
 14517 048e FFF7FEFF 		bl	strcat
 14518 0492 1FE0     		b	.L585
 14519              	.L586:
1985:..\src/command_processing.c ****                 }
1986:..\src/command_processing.c ****                 else {
1987:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14520              		.loc 1 1987 0
 14521 0494 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14522 0498 6D4A     		ldr	r2, .L686+20
 14523 049a 1B01     		lsls	r3, r3, #4
 14524 049c 1344     		add	r3, r3, r2
 14525 049e 1968     		ldr	r1, [r3]
 14526 04a0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14527 04a4 D7F88800 		ldr	r0, [r7, #136]
 14528 04a8 1346     		mov	r3, r2
 14529 04aa 5B00     		lsls	r3, r3, #1
 14530 04ac 1344     		add	r3, r3, r2
 14531 04ae 1B01     		lsls	r3, r3, #4
 14532 04b0 0344     		add	r3, r3, r0
 14533 04b2 03F29D13 		addw	r3, r3, #413
 14534 04b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14535 04b8 41FA03F2 		asr	r2, r1, r3
 14536 04bc 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 331


 14537 04c0 6449     		ldr	r1, .L686+24
 14538 04c2 1846     		mov	r0, r3
 14539 04c4 FFF7FEFF 		bl	sprintf
1988:..\src/command_processing.c ****                     strcat(info_string,str);
 14540              		.loc 1 1988 0
 14541 04c8 07F11803 		add	r3, r7, #24
 14542 04cc 1946     		mov	r1, r3
 14543 04ce 7869     		ldr	r0, [r7, #20]
 14544 04d0 FFF7FEFF 		bl	strcat
 14545              	.L585:
1989:..\src/command_processing.c ****                 }
1990:..\src/command_processing.c ****             }
1991:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14546              		.loc 1 1991 0
 14547 04d4 7869     		ldr	r0, [r7, #20]
 14548 04d6 FFF7FEFF 		bl	strlen
 14549 04da 0346     		mov	r3, r0
 14550 04dc 1A46     		mov	r2, r3
 14551 04de 7B69     		ldr	r3, [r7, #20]
 14552 04e0 1344     		add	r3, r3, r2
 14553 04e2 5D4A     		ldr	r2, .L686+28
 14554 04e4 1188     		ldrh	r1, [r2]	@ unaligned
 14555 04e6 9278     		ldrb	r2, [r2, #2]
 14556 04e8 1980     		strh	r1, [r3]	@ unaligned
 14557 04ea 9A70     		strb	r2, [r3, #2]
1992:..\src/command_processing.c **** 
1993:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14558              		.loc 1 1993 0
 14559 04ec 07F11803 		add	r3, r7, #24
 14560 04f0 5A4A     		ldr	r2, .L686+32
 14561 04f2 1C46     		mov	r4, r3
 14562 04f4 1346     		mov	r3, r2
 14563 04f6 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14564 04f8 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1994:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14565              		.loc 1 1994 0
 14566 04fc 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14567 0500 574A     		ldr	r2, .L686+36
 14568 0502 1B01     		lsls	r3, r3, #4
 14569 0504 1344     		add	r3, r3, r2
 14570 0506 0C33     		adds	r3, r3, #12
 14571 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14572 050a 03F00103 		and	r3, r3, #1
 14573 050e 002B     		cmp	r3, #0
 14574 0510 0FD0     		beq	.L587
1995:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14575              		.loc 1 1995 0
 14576 0512 07F11803 		add	r3, r7, #24
 14577 0516 1846     		mov	r0, r3
 14578 0518 FFF7FEFF 		bl	strlen
 14579 051c 0346     		mov	r3, r0
 14580 051e 1A46     		mov	r2, r3
 14581 0520 07F11803 		add	r3, r7, #24
 14582 0524 1344     		add	r3, r3, r2
 14583 0526 4F4A     		ldr	r2, .L686+40
 14584 0528 1068     		ldr	r0, [r2]	@ unaligned
 14585 052a 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 332


 14586 052c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14587 052e 9A80     		strh	r2, [r3, #4]	@ unaligned
 14588 0530 0EE0     		b	.L588
 14589              	.L587:
1996:..\src/command_processing.c ****             } else {
1997:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14590              		.loc 1 1997 0
 14591 0532 07F11803 		add	r3, r7, #24
 14592 0536 1846     		mov	r0, r3
 14593 0538 FFF7FEFF 		bl	strlen
 14594 053c 0346     		mov	r3, r0
 14595 053e 1A46     		mov	r2, r3
 14596 0540 07F11803 		add	r3, r7, #24
 14597 0544 1344     		add	r3, r3, r2
 14598 0546 484A     		ldr	r2, .L686+44
 14599 0548 1068     		ldr	r0, [r2]	@ unaligned
 14600 054a 1860     		str	r0, [r3]	@ unaligned
 14601 054c 1279     		ldrb	r2, [r2, #4]
 14602 054e 1A71     		strb	r2, [r3, #4]
 14603              	.L588:
1998:..\src/command_processing.c ****             }
1999:..\src/command_processing.c ****             strcat(info_string, str);
 14604              		.loc 1 1999 0
 14605 0550 07F11803 		add	r3, r7, #24
 14606 0554 1946     		mov	r1, r3
 14607 0556 7869     		ldr	r0, [r7, #20]
 14608 0558 FFF7FEFF 		bl	strcat
2000:..\src/command_processing.c ****                         
2001:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14609              		.loc 1 2001 0
 14610 055c 7869     		ldr	r0, [r7, #20]
 14611 055e FFF7FEFF 		bl	strlen
 14612 0562 0346     		mov	r3, r0
 14613 0564 1A46     		mov	r2, r3
 14614 0566 7B69     		ldr	r3, [r7, #20]
 14615 0568 1344     		add	r3, r3, r2
 14616 056a 404A     		ldr	r2, .L686+48
 14617 056c 1D46     		mov	r5, r3
 14618 056e 1446     		mov	r4, r2
 14619 0570 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14620 0572 2860     		str	r0, [r5]	@ unaligned
 14621 0574 6960     		str	r1, [r5, #4]	@ unaligned
 14622 0576 AA60     		str	r2, [r5, #8]	@ unaligned
 14623 0578 EB60     		str	r3, [r5, #12]	@ unaligned
 14624 057a 03CC     		ldmia	r4!, {r0, r1}
 14625 057c 2861     		str	r0, [r5, #16]	@ unaligned
 14626 057e 6961     		str	r1, [r5, #20]	@ unaligned
 14627 0580 2388     		ldrh	r3, [r4]	@ unaligned
 14628 0582 A278     		ldrb	r2, [r4, #2]
 14629 0584 2B83     		strh	r3, [r5, #24]	@ unaligned
 14630 0586 1346     		mov	r3, r2
 14631 0588 AB76     		strb	r3, [r5, #26]
2002:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14632              		.loc 1 2002 0
 14633 058a D7F88030 		ldr	r3, [r7, #128]
 14634 058e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14635 0592 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 333


 14636 0594 0CD1     		bne	.L589
2003:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14637              		.loc 1 2003 0
 14638 0596 7869     		ldr	r0, [r7, #20]
 14639 0598 FFF7FEFF 		bl	strlen
 14640 059c 0346     		mov	r3, r0
 14641 059e 1A46     		mov	r2, r3
 14642 05a0 7B69     		ldr	r3, [r7, #20]
 14643 05a2 1344     		add	r3, r3, r2
 14644 05a4 324A     		ldr	r2, .L686+52
 14645 05a6 1068     		ldr	r0, [r2]	@ unaligned
 14646 05a8 1860     		str	r0, [r3]	@ unaligned
 14647 05aa 1279     		ldrb	r2, [r2, #4]
 14648 05ac 1A71     		strb	r2, [r3, #4]
 14649 05ae 09E0     		b	.L590
 14650              	.L589:
2004:..\src/command_processing.c ****             else
2005:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14651              		.loc 1 2005 0
 14652 05b0 7869     		ldr	r0, [r7, #20]
 14653 05b2 FFF7FEFF 		bl	strlen
 14654 05b6 0346     		mov	r3, r0
 14655 05b8 1A46     		mov	r2, r3
 14656 05ba 7B69     		ldr	r3, [r7, #20]
 14657 05bc 1344     		add	r3, r3, r2
 14658 05be 2D4A     		ldr	r2, .L686+56
 14659 05c0 1068     		ldr	r0, [r2]	@ unaligned
 14660 05c2 1860     		str	r0, [r3]	@ unaligned
 14661              	.L590:
2006:..\src/command_processing.c ****             
2007:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14662              		.loc 1 2007 0
 14663 05c4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14664 05c8 2B4A     		ldr	r2, .L686+60
 14665 05ca 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 14666 05ce 1A46     		mov	r2, r3
 14667 05d0 07F11803 		add	r3, r7, #24
 14668 05d4 2949     		ldr	r1, .L686+64
 14669 05d6 1846     		mov	r0, r3
 14670 05d8 FFF7FEFF 		bl	sprintf
2008:..\src/command_processing.c ****             strcat(info_string, str);
 14671              		.loc 1 2008 0
 14672 05dc 07F11803 		add	r3, r7, #24
 14673 05e0 1946     		mov	r1, r3
 14674 05e2 7869     		ldr	r0, [r7, #20]
 14675 05e4 FFF7FEFF 		bl	strcat
2009:..\src/command_processing.c **** 
2010:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14676              		.loc 1 2010 0
 14677 05e8 7869     		ldr	r0, [r7, #20]
 14678 05ea FFF7FEFF 		bl	strlen
 14679 05ee 0346     		mov	r3, r0
 14680 05f0 1A46     		mov	r2, r3
 14681 05f2 7B69     		ldr	r3, [r7, #20]
 14682 05f4 1344     		add	r3, r3, r2
 14683 05f6 224A     		ldr	r2, .L686+68
 14684 05f8 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 334


 14685 05fa 1446     		mov	r4, r2
 14686 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14687 05fe 2860     		str	r0, [r5]	@ unaligned
 14688 0600 6960     		str	r1, [r5, #4]	@ unaligned
 14689 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 14690 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 14691 0606 2068     		ldr	r0, [r4]	@ unaligned
 14692 0608 2861     		str	r0, [r5, #16]	@ unaligned
 14693 060a A388     		ldrh	r3, [r4, #4]	@ unaligned
 14694 060c AB82     		strh	r3, [r5, #20]	@ unaligned
2011:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14695              		.loc 1 2011 0
 14696 060e 7869     		ldr	r0, [r7, #20]
 14697 0610 FFF7FEFF 		bl	strlen
 14698 0614 0346     		mov	r3, r0
 14699 0616 1A46     		mov	r2, r3
 14700 0618 7B69     		ldr	r3, [r7, #20]
 14701 061a 1344     		add	r3, r3, r2
 14702 061c 194A     		ldr	r2, .L686+72
 14703 061e 1C46     		mov	r4, r3
 14704 0620 1346     		mov	r3, r2
 14705 0622 07CB     		ldmia	r3!, {r0, r1, r2}
 14706 0624 2060     		str	r0, [r4]	@ unaligned
 14707 0626 6160     		str	r1, [r4, #4]	@ unaligned
 14708 0628 A260     		str	r2, [r4, #8]	@ unaligned
 14709 062a 1A88     		ldrh	r2, [r3]	@ unaligned
 14710 062c 9B78     		ldrb	r3, [r3, #2]
 14711 062e A281     		strh	r2, [r4, #12]	@ unaligned
 14712 0630 A373     		strb	r3, [r4, #14]
2012:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14713              		.loc 1 2012 0
 14714 0632 0023     		movs	r3, #0
 14715 0634 C7F89430 		str	r3, [r7, #148]
 14716 0638 65E0     		b	.L591
 14717              	.L687:
 14718 063a 00BF     		.align	2
 14719              	.L686:
 14720 063c 24130000 		.word	.LC170
 14721 0640 34130000 		.word	.LC171
 14722 0644 44130000 		.word	.LC172
 14723 0648 54130000 		.word	.LC173
 14724 064c 60130000 		.word	.LC174
 14725 0650 00000000 		.word	g_refOld
 14726 0654 70130000 		.word	.LC175
 14727 0658 9C110000 		.word	.LC154
 14728 065c 74130000 		.word	.LC176
 14729 0660 00000000 		.word	g_ref
 14730 0664 84130000 		.word	.LC177
 14731 0668 8C130000 		.word	.LC178
 14732 066c 94130000 		.word	.LC179
 14733 0670 B0130000 		.word	.LC180
 14734 0674 B8130000 		.word	.LC181
 14735 0678 00000000 		.word	dev_pwm_limit
 14736 067c BC130000 		.word	.LC182
 14737 0680 CC130000 		.word	.LC183
 14738 0684 E4130000 		.word	.LC184
 14739              	.L593:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 335


2013:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14740              		.loc 1 2013 0
 14741 0688 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14742 068c B849     		ldr	r1, .L688
 14743 068e 1346     		mov	r3, r2
 14744 0690 5B00     		lsls	r3, r3, #1
 14745 0692 1344     		add	r3, r3, r2
 14746 0694 9B00     		lsls	r3, r3, #2
 14747 0696 1344     		add	r3, r3, r2
 14748 0698 D7F89420 		ldr	r2, [r7, #148]
 14749 069c 1344     		add	r3, r3, r2
 14750 069e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14751 06a2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14752 06a6 D7F88800 		ldr	r0, [r7, #136]
 14753 06aa 1346     		mov	r3, r2
 14754 06ac 5B00     		lsls	r3, r3, #1
 14755 06ae 1344     		add	r3, r3, r2
 14756 06b0 1B01     		lsls	r3, r3, #4
 14757 06b2 C218     		adds	r2, r0, r3
 14758 06b4 D7F89430 		ldr	r3, [r7, #148]
 14759 06b8 1344     		add	r3, r3, r2
 14760 06ba 03F29D13 		addw	r3, r3, #413
 14761 06be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14762 06c0 41FA03F2 		asr	r2, r1, r3
 14763 06c4 07F11803 		add	r3, r7, #24
 14764 06c8 AA49     		ldr	r1, .L688+4
 14765 06ca 1846     		mov	r0, r3
 14766 06cc FFF7FEFF 		bl	sprintf
2014:..\src/command_processing.c ****                 strcat(info_string, str);
 14767              		.loc 1 2014 0
 14768 06d0 07F11803 		add	r3, r7, #24
 14769 06d4 1946     		mov	r1, r3
 14770 06d6 7869     		ldr	r0, [r7, #20]
 14771 06d8 FFF7FEFF 		bl	strcat
2015:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14772              		.loc 1 2015 0
 14773 06dc D7F89430 		ldr	r3, [r7, #148]
 14774 06e0 022B     		cmp	r3, #2
 14775 06e2 0BD0     		beq	.L592
2016:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14776              		.loc 1 2016 0
 14777 06e4 7869     		ldr	r0, [r7, #20]
 14778 06e6 FFF7FEFF 		bl	strlen
 14779 06ea 0346     		mov	r3, r0
 14780 06ec 1A46     		mov	r2, r3
 14781 06ee 7B69     		ldr	r3, [r7, #20]
 14782 06f0 1344     		add	r3, r3, r2
 14783 06f2 A14A     		ldr	r2, .L688+8
 14784 06f4 1188     		ldrh	r1, [r2]	@ unaligned
 14785 06f6 9278     		ldrb	r2, [r2, #2]
 14786 06f8 1980     		strh	r1, [r3]	@ unaligned
 14787 06fa 9A70     		strb	r2, [r3, #2]
 14788              	.L592:
2012:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14789              		.loc 1 2012 0 discriminator 2
 14790 06fc D7F89430 		ldr	r3, [r7, #148]
 14791 0700 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 336


 14792 0702 C7F89430 		str	r3, [r7, #148]
 14793              	.L591:
2012:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14794              		.loc 1 2012 0 is_stmt 0 discriminator 1
 14795 0706 D7F89430 		ldr	r3, [r7, #148]
 14796 070a 022B     		cmp	r3, #2
 14797 070c BCDD     		ble	.L593
2017:..\src/command_processing.c ****                 }                
2018:..\src/command_processing.c ****             }
2019:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14798              		.loc 1 2019 0 is_stmt 1
 14799 070e 7869     		ldr	r0, [r7, #20]
 14800 0710 FFF7FEFF 		bl	strlen
 14801 0714 0346     		mov	r3, r0
 14802 0716 1A46     		mov	r2, r3
 14803 0718 7B69     		ldr	r3, [r7, #20]
 14804 071a 1344     		add	r3, r3, r2
 14805 071c 974A     		ldr	r2, .L688+12
 14806 071e 1188     		ldrh	r1, [r2]	@ unaligned
 14807 0720 9278     		ldrb	r2, [r2, #2]
 14808 0722 1980     		strh	r1, [r3]	@ unaligned
 14809 0724 9A70     		strb	r2, [r3, #2]
2020:..\src/command_processing.c ****             
2021:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 14810              		.loc 1 2021 0
 14811 0726 D7F88030 		ldr	r3, [r7, #128]
 14812 072a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14813 072e 062B     		cmp	r3, #6
 14814 0730 1AD1     		bne	.L594
2022:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 14815              		.loc 1 2022 0
 14816 0732 934B     		ldr	r3, .L688+16
 14817 0734 1A6A     		ldr	r2, [r3, #32]
 14818 0736 924B     		ldr	r3, .L688+16
 14819 0738 5B6A     		ldr	r3, [r3, #36]
 14820 073a 07F11800 		add	r0, r7, #24
 14821 073e 9149     		ldr	r1, .L688+20
 14822 0740 FFF7FEFF 		bl	sprintf
2023:..\src/command_processing.c ****                 strcat(info_string, str);
 14823              		.loc 1 2023 0
 14824 0744 07F11803 		add	r3, r7, #24
 14825 0748 1946     		mov	r1, r3
 14826 074a 7869     		ldr	r0, [r7, #20]
 14827 074c FFF7FEFF 		bl	strcat
2024:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 14828              		.loc 1 2024 0
 14829 0750 7869     		ldr	r0, [r7, #20]
 14830 0752 FFF7FEFF 		bl	strlen
 14831 0756 0346     		mov	r3, r0
 14832 0758 1A46     		mov	r2, r3
 14833 075a 7B69     		ldr	r3, [r7, #20]
 14834 075c 1344     		add	r3, r3, r2
 14835 075e 874A     		ldr	r2, .L688+12
 14836 0760 1188     		ldrh	r1, [r2]	@ unaligned
 14837 0762 9278     		ldrb	r2, [r2, #2]
 14838 0764 1980     		strh	r1, [r3]	@ unaligned
 14839 0766 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 337


 14840              	.L594:
2025:..\src/command_processing.c ****             }
2026:..\src/command_processing.c **** 
2027:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 14841              		.loc 1 2027 0
 14842 0768 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14843 076c 591C     		adds	r1, r3, #1
 14844 076e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14845 0772 854A     		ldr	r2, .L688+24
 14846 0774 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14847 0778 07F11800 		add	r0, r7, #24
 14848 077c 0A46     		mov	r2, r1
 14849 077e 8349     		ldr	r1, .L688+28
 14850 0780 FFF7FEFF 		bl	sprintf
2028:..\src/command_processing.c ****             strcat(info_string, str);
 14851              		.loc 1 2028 0
 14852 0784 07F11803 		add	r3, r7, #24
 14853 0788 1946     		mov	r1, r3
 14854 078a 7869     		ldr	r0, [r7, #20]
 14855 078c FFF7FEFF 		bl	strcat
2029:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14856              		.loc 1 2029 0
 14857 0790 7869     		ldr	r0, [r7, #20]
 14858 0792 FFF7FEFF 		bl	strlen
 14859 0796 0346     		mov	r3, r0
 14860 0798 1A46     		mov	r2, r3
 14861 079a 7B69     		ldr	r3, [r7, #20]
 14862 079c 1344     		add	r3, r3, r2
 14863 079e 774A     		ldr	r2, .L688+12
 14864 07a0 1188     		ldrh	r1, [r2]	@ unaligned
 14865 07a2 9278     		ldrb	r2, [r2, #2]
 14866 07a4 1980     		strh	r1, [r3]	@ unaligned
 14867 07a6 9A70     		strb	r2, [r3, #2]
2030:..\src/command_processing.c ****             
2031:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 14868              		.loc 1 2031 0
 14869 07a8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14870 07ac 591C     		adds	r1, r3, #1
 14871 07ae 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14872 07b2 774A     		ldr	r2, .L688+32
 14873 07b4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14874 07b8 07F11800 		add	r0, r7, #24
 14875 07bc 0A46     		mov	r2, r1
 14876 07be 7549     		ldr	r1, .L688+36
 14877 07c0 FFF7FEFF 		bl	sprintf
2032:..\src/command_processing.c ****             strcat(info_string, str);
 14878              		.loc 1 2032 0
 14879 07c4 07F11803 		add	r3, r7, #24
 14880 07c8 1946     		mov	r1, r3
 14881 07ca 7869     		ldr	r0, [r7, #20]
 14882 07cc FFF7FEFF 		bl	strcat
2033:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14883              		.loc 1 2033 0
 14884 07d0 7869     		ldr	r0, [r7, #20]
 14885 07d2 FFF7FEFF 		bl	strlen
 14886 07d6 0346     		mov	r3, r0
 14887 07d8 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 338


 14888 07da 7B69     		ldr	r3, [r7, #20]
 14889 07dc 1344     		add	r3, r3, r2
 14890 07de 674A     		ldr	r2, .L688+12
 14891 07e0 1188     		ldrh	r1, [r2]	@ unaligned
 14892 07e2 9278     		ldrb	r2, [r2, #2]
 14893 07e4 1980     		strh	r1, [r3]	@ unaligned
 14894 07e6 9A70     		strb	r2, [r3, #2]
2034:..\src/command_processing.c **** 
2035:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 14895              		.loc 1 2035 0
 14896 07e8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14897 07ec 5C1C     		adds	r4, r3, #1
 14898 07ee 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 14899 07f2 5F4A     		ldr	r2, .L688
 14900 07f4 3421     		movs	r1, #52
 14901 07f6 01FB03F3 		mul	r3, r1, r3
 14902 07fa 1344     		add	r3, r3, r2
 14903 07fc 0C33     		adds	r3, r3, #12
 14904 07fe 1B68     		ldr	r3, [r3]
 14905 0800 07F11800 		add	r0, r7, #24
 14906 0804 2246     		mov	r2, r4
 14907 0806 6449     		ldr	r1, .L688+40
 14908 0808 FFF7FEFF 		bl	sprintf
2036:..\src/command_processing.c ****             strcat(info_string, str);
 14909              		.loc 1 2036 0
 14910 080c 07F11803 		add	r3, r7, #24
 14911 0810 1946     		mov	r1, r3
 14912 0812 7869     		ldr	r0, [r7, #20]
 14913 0814 FFF7FEFF 		bl	strcat
2037:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14914              		.loc 1 2037 0
 14915 0818 7869     		ldr	r0, [r7, #20]
 14916 081a FFF7FEFF 		bl	strlen
 14917 081e 0346     		mov	r3, r0
 14918 0820 1A46     		mov	r2, r3
 14919 0822 7B69     		ldr	r3, [r7, #20]
 14920 0824 1344     		add	r3, r3, r2
 14921 0826 554A     		ldr	r2, .L688+12
 14922 0828 1188     		ldrh	r1, [r2]	@ unaligned
 14923 082a 9278     		ldrb	r2, [r2, #2]
 14924 082c 1980     		strh	r1, [r3]	@ unaligned
 14925 082e 9A70     		strb	r2, [r3, #2]
2038:..\src/command_processing.c ****             
2039:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 14926              		.loc 1 2039 0
 14927 0830 D7F88030 		ldr	r3, [r7, #128]
 14928 0834 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 14929 0838 012B     		cmp	r3, #1
 14930 083a 23D1     		bne	.L595
2040:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 14931              		.loc 1 2040 0
 14932 083c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14933 0840 5C1C     		adds	r4, r3, #1
 14934 0842 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 14935 0846 4A4A     		ldr	r2, .L688
 14936 0848 3421     		movs	r1, #52
 14937 084a 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 339


 14938 084e 1344     		add	r3, r3, r2
 14939 0850 1433     		adds	r3, r3, #20
 14940 0852 1B68     		ldr	r3, [r3]
 14941 0854 07F11800 		add	r0, r7, #24
 14942 0858 2246     		mov	r2, r4
 14943 085a 5049     		ldr	r1, .L688+44
 14944 085c FFF7FEFF 		bl	sprintf
2041:..\src/command_processing.c ****                 strcat(info_string, str);
 14945              		.loc 1 2041 0
 14946 0860 07F11803 		add	r3, r7, #24
 14947 0864 1946     		mov	r1, r3
 14948 0866 7869     		ldr	r0, [r7, #20]
 14949 0868 FFF7FEFF 		bl	strcat
2042:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 14950              		.loc 1 2042 0
 14951 086c 7869     		ldr	r0, [r7, #20]
 14952 086e FFF7FEFF 		bl	strlen
 14953 0872 0346     		mov	r3, r0
 14954 0874 1A46     		mov	r2, r3
 14955 0876 7B69     		ldr	r3, [r7, #20]
 14956 0878 1344     		add	r3, r3, r2
 14957 087a 404A     		ldr	r2, .L688+12
 14958 087c 1188     		ldrh	r1, [r2]	@ unaligned
 14959 087e 9278     		ldrb	r2, [r2, #2]
 14960 0880 1980     		strh	r1, [r3]	@ unaligned
 14961 0882 9A70     		strb	r2, [r3, #2]
 14962              	.L595:
2043:..\src/command_processing.c ****             }
2044:..\src/command_processing.c ****             
2045:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 14963              		.loc 1 2045 0
 14964 0884 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14965 0888 5A1C     		adds	r2, r3, #1
 14966 088a 07F11803 		add	r3, r7, #24
 14967 088e 4449     		ldr	r1, .L688+48
 14968 0890 1846     		mov	r0, r3
 14969 0892 FFF7FEFF 		bl	sprintf
2046:..\src/command_processing.c ****             strcat(info_string, str);
 14970              		.loc 1 2046 0
 14971 0896 07F11803 		add	r3, r7, #24
 14972 089a 1946     		mov	r1, r3
 14973 089c 7869     		ldr	r0, [r7, #20]
 14974 089e FFF7FEFF 		bl	strcat
2047:..\src/command_processing.c **** 
2048:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 14975              		.loc 1 2048 0
 14976 08a2 7869     		ldr	r0, [r7, #20]
 14977 08a4 FFF7FEFF 		bl	strlen
 14978 08a8 0346     		mov	r3, r0
 14979 08aa 1A46     		mov	r2, r3
 14980 08ac 7B69     		ldr	r3, [r7, #20]
 14981 08ae 1344     		add	r3, r3, r2
 14982 08b0 3C4A     		ldr	r2, .L688+52
 14983 08b2 1D46     		mov	r5, r3
 14984 08b4 1446     		mov	r4, r2
 14985 08b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14986 08b8 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 340


 14987 08ba 6960     		str	r1, [r5, #4]	@ unaligned
 14988 08bc AA60     		str	r2, [r5, #8]	@ unaligned
 14989 08be EB60     		str	r3, [r5, #12]	@ unaligned
 14990 08c0 2378     		ldrb	r3, [r4]
 14991 08c2 2B74     		strb	r3, [r5, #16]
2049:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14992              		.loc 1 2049 0
 14993 08c4 D7F88030 		ldr	r3, [r7, #128]
 14994 08c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14995 08cc 032B     		cmp	r3, #3
 14996 08ce 73D0     		beq	.L596
2050:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 14997              		.loc 1 2050 0
 14998 08d0 D7F88030 		ldr	r3, [r7, #128]
 14999 08d4 1B68     		ldr	r3, [r3]
 15000 08d6 1846     		mov	r0, r3
 15001 08d8 FFF7FEFF 		bl	__aeabi_i2d
 15002 08dc 4FF00002 		mov	r2, #0
 15003 08e0 314B     		ldr	r3, .L688+56
 15004 08e2 FFF7FEFF 		bl	__aeabi_ddiv
 15005 08e6 0346     		mov	r3, r0
 15006 08e8 0C46     		mov	r4, r1
 15007 08ea 07F11800 		add	r0, r7, #24
 15008 08ee 1A46     		mov	r2, r3
 15009 08f0 2346     		mov	r3, r4
 15010 08f2 2E49     		ldr	r1, .L688+60
 15011 08f4 FFF7FEFF 		bl	sprintf
2051:..\src/command_processing.c ****                 strcat(info_string, str);
 15012              		.loc 1 2051 0
 15013 08f8 07F11803 		add	r3, r7, #24
 15014 08fc 1946     		mov	r1, r3
 15015 08fe 7869     		ldr	r0, [r7, #20]
 15016 0900 FFF7FEFF 		bl	strcat
2052:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15017              		.loc 1 2052 0
 15018 0904 D7F88030 		ldr	r3, [r7, #128]
 15019 0908 5B68     		ldr	r3, [r3, #4]
 15020 090a 1846     		mov	r0, r3
 15021 090c FFF7FEFF 		bl	__aeabi_i2d
 15022 0910 4FF00002 		mov	r2, #0
 15023 0914 244B     		ldr	r3, .L688+56
 15024 0916 FFF7FEFF 		bl	__aeabi_ddiv
 15025 091a 0346     		mov	r3, r0
 15026 091c 0C46     		mov	r4, r1
 15027 091e 07F11800 		add	r0, r7, #24
 15028 0922 1A46     		mov	r2, r3
 15029 0924 2346     		mov	r3, r4
 15030 0926 2249     		ldr	r1, .L688+64
 15031 0928 FFF7FEFF 		bl	sprintf
2053:..\src/command_processing.c ****                 strcat(info_string, str);
 15032              		.loc 1 2053 0
 15033 092c 07F11803 		add	r3, r7, #24
 15034 0930 1946     		mov	r1, r3
 15035 0932 7869     		ldr	r0, [r7, #20]
 15036 0934 FFF7FEFF 		bl	strcat
2054:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15037              		.loc 1 2054 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 341


 15038 0938 D7F88030 		ldr	r3, [r7, #128]
 15039 093c 9B68     		ldr	r3, [r3, #8]
 15040 093e 1846     		mov	r0, r3
 15041 0940 FFF7FEFF 		bl	__aeabi_i2d
 15042 0944 4FF00002 		mov	r2, #0
 15043 0948 174B     		ldr	r3, .L688+56
 15044 094a FFF7FEFF 		bl	__aeabi_ddiv
 15045 094e 0346     		mov	r3, r0
 15046 0950 0C46     		mov	r4, r1
 15047 0952 07F11800 		add	r0, r7, #24
 15048 0956 1A46     		mov	r2, r3
 15049 0958 2346     		mov	r3, r4
 15050 095a 1649     		ldr	r1, .L688+68
 15051 095c FFF7FEFF 		bl	sprintf
2055:..\src/command_processing.c ****                 strcat(info_string, str);
 15052              		.loc 1 2055 0
 15053 0960 07F11803 		add	r3, r7, #24
 15054 0964 1946     		mov	r1, r3
 15055 0966 7869     		ldr	r0, [r7, #20]
 15056 0968 FFF7FEFF 		bl	strcat
 15057 096c 72E0     		b	.L597
 15058              	.L689:
 15059 096e 00BF     		.align	2
 15060              	.L688:
 15061 0970 00000000 		.word	g_meas
 15062 0974 F4130000 		.word	.LC185
 15063 0978 F8130000 		.word	.LC186
 15064 097c 9C110000 		.word	.LC154
 15065 0980 00000000 		.word	g_adc_measOld
 15066 0984 FC130000 		.word	.LC187
 15067 0988 00000000 		.word	dev_tension
 15068 098c 1C140000 		.word	.LC188
 15069 0990 00000000 		.word	pow_tension
 15070 0994 3C140000 		.word	.LC189
 15071 0998 64140000 		.word	.LC190
 15072 099c 7C140000 		.word	.LC191
 15073 09a0 A4140000 		.word	.LC192
 15074 09a4 C0140000 		.word	.LC193
 15075 09a8 0000F040 		.word	1089470464
 15076 09ac D4140000 		.word	.LC194
 15077 09b0 E0140000 		.word	.LC195
 15078 09b4 EC140000 		.word	.LC196
 15079              	.L596:
2056:..\src/command_processing.c ****             }
2057:..\src/command_processing.c ****             else { 
2058:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15080              		.loc 1 2058 0
 15081 09b8 D7F88030 		ldr	r3, [r7, #128]
 15082 09bc 9B69     		ldr	r3, [r3, #24]
 15083 09be 1846     		mov	r0, r3
 15084 09c0 FFF7FEFF 		bl	__aeabi_i2d
 15085 09c4 4FF00002 		mov	r2, #0
 15086 09c8 CE4B     		ldr	r3, .L690
 15087 09ca FFF7FEFF 		bl	__aeabi_ddiv
 15088 09ce 0346     		mov	r3, r0
 15089 09d0 0C46     		mov	r4, r1
 15090 09d2 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 342


 15091 09d6 1A46     		mov	r2, r3
 15092 09d8 2346     		mov	r3, r4
 15093 09da CB49     		ldr	r1, .L690+4
 15094 09dc FFF7FEFF 		bl	sprintf
2059:..\src/command_processing.c ****                 strcat(info_string, str);
 15095              		.loc 1 2059 0
 15096 09e0 07F11803 		add	r3, r7, #24
 15097 09e4 1946     		mov	r1, r3
 15098 09e6 7869     		ldr	r0, [r7, #20]
 15099 09e8 FFF7FEFF 		bl	strcat
2060:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15100              		.loc 1 2060 0
 15101 09ec D7F88030 		ldr	r3, [r7, #128]
 15102 09f0 DB69     		ldr	r3, [r3, #28]
 15103 09f2 1846     		mov	r0, r3
 15104 09f4 FFF7FEFF 		bl	__aeabi_i2d
 15105 09f8 4FF00002 		mov	r2, #0
 15106 09fc C14B     		ldr	r3, .L690
 15107 09fe FFF7FEFF 		bl	__aeabi_ddiv
 15108 0a02 0346     		mov	r3, r0
 15109 0a04 0C46     		mov	r4, r1
 15110 0a06 07F11800 		add	r0, r7, #24
 15111 0a0a 1A46     		mov	r2, r3
 15112 0a0c 2346     		mov	r3, r4
 15113 0a0e BF49     		ldr	r1, .L690+8
 15114 0a10 FFF7FEFF 		bl	sprintf
2061:..\src/command_processing.c ****                 strcat(info_string, str);
 15115              		.loc 1 2061 0
 15116 0a14 07F11803 		add	r3, r7, #24
 15117 0a18 1946     		mov	r1, r3
 15118 0a1a 7869     		ldr	r0, [r7, #20]
 15119 0a1c FFF7FEFF 		bl	strcat
2062:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15120              		.loc 1 2062 0
 15121 0a20 D7F88030 		ldr	r3, [r7, #128]
 15122 0a24 1B6A     		ldr	r3, [r3, #32]
 15123 0a26 1846     		mov	r0, r3
 15124 0a28 FFF7FEFF 		bl	__aeabi_i2d
 15125 0a2c 4FF00002 		mov	r2, #0
 15126 0a30 B44B     		ldr	r3, .L690
 15127 0a32 FFF7FEFF 		bl	__aeabi_ddiv
 15128 0a36 0346     		mov	r3, r0
 15129 0a38 0C46     		mov	r4, r1
 15130 0a3a 07F11800 		add	r0, r7, #24
 15131 0a3e 1A46     		mov	r2, r3
 15132 0a40 2346     		mov	r3, r4
 15133 0a42 B349     		ldr	r1, .L690+12
 15134 0a44 FFF7FEFF 		bl	sprintf
2063:..\src/command_processing.c ****                 strcat(info_string, str);
 15135              		.loc 1 2063 0
 15136 0a48 07F11803 		add	r3, r7, #24
 15137 0a4c 1946     		mov	r1, r3
 15138 0a4e 7869     		ldr	r0, [r7, #20]
 15139 0a50 FFF7FEFF 		bl	strcat
 15140              	.L597:
2064:..\src/command_processing.c ****             }
2065:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 343


2066:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15141              		.loc 1 2066 0
 15142 0a54 7869     		ldr	r0, [r7, #20]
 15143 0a56 FFF7FEFF 		bl	strlen
 15144 0a5a 0346     		mov	r3, r0
 15145 0a5c 1A46     		mov	r2, r3
 15146 0a5e 7B69     		ldr	r3, [r7, #20]
 15147 0a60 1344     		add	r3, r3, r2
 15148 0a62 AC4A     		ldr	r2, .L690+16
 15149 0a64 1D46     		mov	r5, r3
 15150 0a66 1446     		mov	r4, r2
 15151 0a68 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15152 0a6a 2860     		str	r0, [r5]	@ unaligned
 15153 0a6c 6960     		str	r1, [r5, #4]	@ unaligned
 15154 0a6e AA60     		str	r2, [r5, #8]	@ unaligned
 15155 0a70 EB60     		str	r3, [r5, #12]	@ unaligned
 15156 0a72 03CC     		ldmia	r4!, {r0, r1}
 15157 0a74 2861     		str	r0, [r5, #16]	@ unaligned
 15158 0a76 6961     		str	r1, [r5, #20]	@ unaligned
 15159 0a78 2378     		ldrb	r3, [r4]
 15160 0a7a 2B76     		strb	r3, [r5, #24]
2067:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15161              		.loc 1 2067 0
 15162 0a7c D7F88030 		ldr	r3, [r7, #128]
 15163 0a80 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15164 0a84 032B     		cmp	r3, #3
 15165 0a86 4ED0     		beq	.L598
2068:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15166              		.loc 1 2068 0
 15167 0a88 D7F88030 		ldr	r3, [r7, #128]
 15168 0a8c DB68     		ldr	r3, [r3, #12]
 15169 0a8e 1846     		mov	r0, r3
 15170 0a90 FFF7FEFF 		bl	__aeabi_i2d
 15171 0a94 4FF00002 		mov	r2, #0
 15172 0a98 9A4B     		ldr	r3, .L690
 15173 0a9a FFF7FEFF 		bl	__aeabi_ddiv
 15174 0a9e 0346     		mov	r3, r0
 15175 0aa0 0C46     		mov	r4, r1
 15176 0aa2 07F11800 		add	r0, r7, #24
 15177 0aa6 1A46     		mov	r2, r3
 15178 0aa8 2346     		mov	r3, r4
 15179 0aaa 9749     		ldr	r1, .L690+4
 15180 0aac FFF7FEFF 		bl	sprintf
2069:..\src/command_processing.c ****                 strcat(info_string, str);
 15181              		.loc 1 2069 0
 15182 0ab0 07F11803 		add	r3, r7, #24
 15183 0ab4 1946     		mov	r1, r3
 15184 0ab6 7869     		ldr	r0, [r7, #20]
 15185 0ab8 FFF7FEFF 		bl	strcat
2070:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15186              		.loc 1 2070 0
 15187 0abc D7F88030 		ldr	r3, [r7, #128]
 15188 0ac0 1B69     		ldr	r3, [r3, #16]
 15189 0ac2 1846     		mov	r0, r3
 15190 0ac4 FFF7FEFF 		bl	__aeabi_i2d
 15191 0ac8 4FF00002 		mov	r2, #0
 15192 0acc 8D4B     		ldr	r3, .L690
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 344


 15193 0ace FFF7FEFF 		bl	__aeabi_ddiv
 15194 0ad2 0346     		mov	r3, r0
 15195 0ad4 0C46     		mov	r4, r1
 15196 0ad6 07F11800 		add	r0, r7, #24
 15197 0ada 1A46     		mov	r2, r3
 15198 0adc 2346     		mov	r3, r4
 15199 0ade 8B49     		ldr	r1, .L690+8
 15200 0ae0 FFF7FEFF 		bl	sprintf
2071:..\src/command_processing.c ****                 strcat(info_string, str);
 15201              		.loc 1 2071 0
 15202 0ae4 07F11803 		add	r3, r7, #24
 15203 0ae8 1946     		mov	r1, r3
 15204 0aea 7869     		ldr	r0, [r7, #20]
 15205 0aec FFF7FEFF 		bl	strcat
2072:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15206              		.loc 1 2072 0
 15207 0af0 D7F88030 		ldr	r3, [r7, #128]
 15208 0af4 5B69     		ldr	r3, [r3, #20]
 15209 0af6 1846     		mov	r0, r3
 15210 0af8 FFF7FEFF 		bl	__aeabi_i2d
 15211 0afc 4FF00002 		mov	r2, #0
 15212 0b00 804B     		ldr	r3, .L690
 15213 0b02 FFF7FEFF 		bl	__aeabi_ddiv
 15214 0b06 0346     		mov	r3, r0
 15215 0b08 0C46     		mov	r4, r1
 15216 0b0a 07F11800 		add	r0, r7, #24
 15217 0b0e 1A46     		mov	r2, r3
 15218 0b10 2346     		mov	r3, r4
 15219 0b12 7F49     		ldr	r1, .L690+12
 15220 0b14 FFF7FEFF 		bl	sprintf
2073:..\src/command_processing.c ****                 strcat(info_string, str);
 15221              		.loc 1 2073 0
 15222 0b18 07F11803 		add	r3, r7, #24
 15223 0b1c 1946     		mov	r1, r3
 15224 0b1e 7869     		ldr	r0, [r7, #20]
 15225 0b20 FFF7FEFF 		bl	strcat
 15226 0b24 4DE0     		b	.L599
 15227              	.L598:
2074:..\src/command_processing.c **** 
2075:..\src/command_processing.c ****             }
2076:..\src/command_processing.c ****             else {
2077:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15228              		.loc 1 2077 0
 15229 0b26 D7F88030 		ldr	r3, [r7, #128]
 15230 0b2a 5B6A     		ldr	r3, [r3, #36]
 15231 0b2c 1846     		mov	r0, r3
 15232 0b2e FFF7FEFF 		bl	__aeabi_i2d
 15233 0b32 4FF00002 		mov	r2, #0
 15234 0b36 734B     		ldr	r3, .L690
 15235 0b38 FFF7FEFF 		bl	__aeabi_ddiv
 15236 0b3c 0346     		mov	r3, r0
 15237 0b3e 0C46     		mov	r4, r1
 15238 0b40 07F11800 		add	r0, r7, #24
 15239 0b44 1A46     		mov	r2, r3
 15240 0b46 2346     		mov	r3, r4
 15241 0b48 6F49     		ldr	r1, .L690+4
 15242 0b4a FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 345


2078:..\src/command_processing.c ****                 strcat(info_string, str);
 15243              		.loc 1 2078 0
 15244 0b4e 07F11803 		add	r3, r7, #24
 15245 0b52 1946     		mov	r1, r3
 15246 0b54 7869     		ldr	r0, [r7, #20]
 15247 0b56 FFF7FEFF 		bl	strcat
2079:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15248              		.loc 1 2079 0
 15249 0b5a D7F88030 		ldr	r3, [r7, #128]
 15250 0b5e 9B6A     		ldr	r3, [r3, #40]
 15251 0b60 1846     		mov	r0, r3
 15252 0b62 FFF7FEFF 		bl	__aeabi_i2d
 15253 0b66 4FF00002 		mov	r2, #0
 15254 0b6a 664B     		ldr	r3, .L690
 15255 0b6c FFF7FEFF 		bl	__aeabi_ddiv
 15256 0b70 0346     		mov	r3, r0
 15257 0b72 0C46     		mov	r4, r1
 15258 0b74 07F11800 		add	r0, r7, #24
 15259 0b78 1A46     		mov	r2, r3
 15260 0b7a 2346     		mov	r3, r4
 15261 0b7c 6349     		ldr	r1, .L690+8
 15262 0b7e FFF7FEFF 		bl	sprintf
2080:..\src/command_processing.c ****                 strcat(info_string, str);
 15263              		.loc 1 2080 0
 15264 0b82 07F11803 		add	r3, r7, #24
 15265 0b86 1946     		mov	r1, r3
 15266 0b88 7869     		ldr	r0, [r7, #20]
 15267 0b8a FFF7FEFF 		bl	strcat
2081:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15268              		.loc 1 2081 0
 15269 0b8e D7F88030 		ldr	r3, [r7, #128]
 15270 0b92 DB6A     		ldr	r3, [r3, #44]
 15271 0b94 1846     		mov	r0, r3
 15272 0b96 FFF7FEFF 		bl	__aeabi_i2d
 15273 0b9a 4FF00002 		mov	r2, #0
 15274 0b9e 594B     		ldr	r3, .L690
 15275 0ba0 FFF7FEFF 		bl	__aeabi_ddiv
 15276 0ba4 0346     		mov	r3, r0
 15277 0ba6 0C46     		mov	r4, r1
 15278 0ba8 07F11800 		add	r0, r7, #24
 15279 0bac 1A46     		mov	r2, r3
 15280 0bae 2346     		mov	r3, r4
 15281 0bb0 5749     		ldr	r1, .L690+12
 15282 0bb2 FFF7FEFF 		bl	sprintf
2082:..\src/command_processing.c ****                 strcat(info_string, str);
 15283              		.loc 1 2082 0
 15284 0bb6 07F11803 		add	r3, r7, #24
 15285 0bba 1946     		mov	r1, r3
 15286 0bbc 7869     		ldr	r0, [r7, #20]
 15287 0bbe FFF7FEFF 		bl	strcat
 15288              	.L599:
2083:..\src/command_processing.c ****             }
2084:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15289              		.loc 1 2084 0
 15290 0bc2 D7F88030 		ldr	r3, [r7, #128]
 15291 0bc6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15292 0bca 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 346


 15293 0bcc 14D1     		bne	.L600
2085:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15294              		.loc 1 2085 0
 15295 0bce 7869     		ldr	r0, [r7, #20]
 15296 0bd0 FFF7FEFF 		bl	strlen
 15297 0bd4 0346     		mov	r3, r0
 15298 0bd6 1A46     		mov	r2, r3
 15299 0bd8 7B69     		ldr	r3, [r7, #20]
 15300 0bda 1344     		add	r3, r3, r2
 15301 0bdc 4E4A     		ldr	r2, .L690+20
 15302 0bde 1D46     		mov	r5, r3
 15303 0be0 1446     		mov	r4, r2
 15304 0be2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15305 0be4 2860     		str	r0, [r5]	@ unaligned
 15306 0be6 6960     		str	r1, [r5, #4]	@ unaligned
 15307 0be8 AA60     		str	r2, [r5, #8]	@ unaligned
 15308 0bea EB60     		str	r3, [r5, #12]	@ unaligned
 15309 0bec 03CC     		ldmia	r4!, {r0, r1}
 15310 0bee 2861     		str	r0, [r5, #16]	@ unaligned
 15311 0bf0 6961     		str	r1, [r5, #20]	@ unaligned
 15312 0bf2 2388     		ldrh	r3, [r4]	@ unaligned
 15313 0bf4 2B83     		strh	r3, [r5, #24]	@ unaligned
 15314 0bf6 13E0     		b	.L601
 15315              	.L600:
2086:..\src/command_processing.c ****             else
2087:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15316              		.loc 1 2087 0
 15317 0bf8 7869     		ldr	r0, [r7, #20]
 15318 0bfa FFF7FEFF 		bl	strlen
 15319 0bfe 0346     		mov	r3, r0
 15320 0c00 1A46     		mov	r2, r3
 15321 0c02 7B69     		ldr	r3, [r7, #20]
 15322 0c04 1344     		add	r3, r3, r2
 15323 0c06 454A     		ldr	r2, .L690+24
 15324 0c08 1D46     		mov	r5, r3
 15325 0c0a 1446     		mov	r4, r2
 15326 0c0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15327 0c0e 2860     		str	r0, [r5]	@ unaligned
 15328 0c10 6960     		str	r1, [r5, #4]	@ unaligned
 15329 0c12 AA60     		str	r2, [r5, #8]	@ unaligned
 15330 0c14 EB60     		str	r3, [r5, #12]	@ unaligned
 15331 0c16 03CC     		ldmia	r4!, {r0, r1}
 15332 0c18 2861     		str	r0, [r5, #16]	@ unaligned
 15333 0c1a 6961     		str	r1, [r5, #20]	@ unaligned
 15334 0c1c 2378     		ldrb	r3, [r4]
 15335 0c1e 2B76     		strb	r3, [r5, #24]
 15336              	.L601:
2088:..\src/command_processing.c **** 
2089:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15337              		.loc 1 2089 0
 15338 0c20 D7F88030 		ldr	r3, [r7, #128]
 15339 0c24 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15340 0c28 072B     		cmp	r3, #7
 15341 0c2a 00F2EA80 		bhi	.L602
 15342 0c2e 01A2     		adr	r2, .L604
 15343 0c30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15344              		.p2align 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 347


 15345              	.L604:
 15346 0c34 550C0000 		.word	.L603+1
 15347 0c38 790C0000 		.word	.L605+1
 15348 0c3c A10C0000 		.word	.L606+1
 15349 0c40 D30C0000 		.word	.L607+1
 15350 0c44 310D0000 		.word	.L608+1
 15351 0c48 5F0D0000 		.word	.L609+1
 15352 0c4c 8F0D0000 		.word	.L610+1
 15353 0c50 BD0D0000 		.word	.L611+1
 15354              		.p2align 1
 15355              	.L603:
2090:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2091:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15356              		.loc 1 2091 0
 15357 0c54 7869     		ldr	r0, [r7, #20]
 15358 0c56 FFF7FEFF 		bl	strlen
 15359 0c5a 0346     		mov	r3, r0
 15360 0c5c 1A46     		mov	r2, r3
 15361 0c5e 7B69     		ldr	r3, [r7, #20]
 15362 0c60 1344     		add	r3, r3, r2
 15363 0c62 2F4A     		ldr	r2, .L690+28
 15364 0c64 1D46     		mov	r5, r3
 15365 0c66 1446     		mov	r4, r2
 15366 0c68 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15367 0c6a 2860     		str	r0, [r5]	@ unaligned
 15368 0c6c 6960     		str	r1, [r5, #4]	@ unaligned
 15369 0c6e AA60     		str	r2, [r5, #8]	@ unaligned
 15370 0c70 EB60     		str	r3, [r5, #12]	@ unaligned
 15371 0c72 2388     		ldrh	r3, [r4]	@ unaligned
 15372 0c74 2B82     		strh	r3, [r5, #16]	@ unaligned
2092:..\src/command_processing.c ****                     break;
 15373              		.loc 1 2092 0
 15374 0c76 C4E0     		b	.L602
 15375              	.L605:
2093:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2094:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15376              		.loc 1 2094 0
 15377 0c78 7869     		ldr	r0, [r7, #20]
 15378 0c7a FFF7FEFF 		bl	strlen
 15379 0c7e 0346     		mov	r3, r0
 15380 0c80 1A46     		mov	r2, r3
 15381 0c82 7B69     		ldr	r3, [r7, #20]
 15382 0c84 1344     		add	r3, r3, r2
 15383 0c86 274A     		ldr	r2, .L690+32
 15384 0c88 1D46     		mov	r5, r3
 15385 0c8a 1446     		mov	r4, r2
 15386 0c8c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15387 0c8e 2860     		str	r0, [r5]	@ unaligned
 15388 0c90 6960     		str	r1, [r5, #4]	@ unaligned
 15389 0c92 AA60     		str	r2, [r5, #8]	@ unaligned
 15390 0c94 EB60     		str	r3, [r5, #12]	@ unaligned
 15391 0c96 2068     		ldr	r0, [r4]	@ unaligned
 15392 0c98 2861     		str	r0, [r5, #16]	@ unaligned
 15393 0c9a 2379     		ldrb	r3, [r4, #4]
 15394 0c9c 2B75     		strb	r3, [r5, #20]
2095:..\src/command_processing.c ****                     break;
 15395              		.loc 1 2095 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 348


 15396 0c9e B0E0     		b	.L602
 15397              	.L606:
2096:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2097:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15398              		.loc 1 2097 0
 15399 0ca0 7869     		ldr	r0, [r7, #20]
 15400 0ca2 FFF7FEFF 		bl	strlen
 15401 0ca6 0346     		mov	r3, r0
 15402 0ca8 1A46     		mov	r2, r3
 15403 0caa 7B69     		ldr	r3, [r7, #20]
 15404 0cac 1344     		add	r3, r3, r2
 15405 0cae 1E4A     		ldr	r2, .L690+36
 15406 0cb0 1D46     		mov	r5, r3
 15407 0cb2 1446     		mov	r4, r2
 15408 0cb4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15409 0cb6 2860     		str	r0, [r5]	@ unaligned
 15410 0cb8 6960     		str	r1, [r5, #4]	@ unaligned
 15411 0cba AA60     		str	r2, [r5, #8]	@ unaligned
 15412 0cbc EB60     		str	r3, [r5, #12]	@ unaligned
 15413 0cbe 07CC     		ldmia	r4!, {r0, r1, r2}
 15414 0cc0 2861     		str	r0, [r5, #16]	@ unaligned
 15415 0cc2 6961     		str	r1, [r5, #20]	@ unaligned
 15416 0cc4 AA61     		str	r2, [r5, #24]	@ unaligned
 15417 0cc6 2388     		ldrh	r3, [r4]	@ unaligned
 15418 0cc8 A278     		ldrb	r2, [r4, #2]
 15419 0cca AB83     		strh	r3, [r5, #28]	@ unaligned
 15420 0ccc 1346     		mov	r3, r2
 15421 0cce AB77     		strb	r3, [r5, #30]
2098:..\src/command_processing.c ****                     break;
 15422              		.loc 1 2098 0
 15423 0cd0 97E0     		b	.L602
 15424              	.L607:
2099:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2100:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15425              		.loc 1 2100 0
 15426 0cd2 7869     		ldr	r0, [r7, #20]
 15427 0cd4 FFF7FEFF 		bl	strlen
 15428 0cd8 0346     		mov	r3, r0
 15429 0cda 1A46     		mov	r2, r3
 15430 0cdc 7B69     		ldr	r3, [r7, #20]
 15431 0cde 1344     		add	r3, r3, r2
 15432 0ce0 124A     		ldr	r2, .L690+40
 15433 0ce2 1D46     		mov	r5, r3
 15434 0ce4 1446     		mov	r4, r2
 15435 0ce6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15436 0ce8 2860     		str	r0, [r5]	@ unaligned
 15437 0cea 6960     		str	r1, [r5, #4]	@ unaligned
 15438 0cec AA60     		str	r2, [r5, #8]	@ unaligned
 15439 0cee EB60     		str	r3, [r5, #12]	@ unaligned
 15440 0cf0 03CC     		ldmia	r4!, {r0, r1}
 15441 0cf2 2861     		str	r0, [r5, #16]	@ unaligned
 15442 0cf4 6961     		str	r1, [r5, #20]	@ unaligned
 15443 0cf6 2388     		ldrh	r3, [r4]	@ unaligned
 15444 0cf8 A278     		ldrb	r2, [r4, #2]
 15445 0cfa 2B83     		strh	r3, [r5, #24]	@ unaligned
 15446 0cfc 1346     		mov	r3, r2
 15447 0cfe AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 349


2101:..\src/command_processing.c ****                     break;
 15448              		.loc 1 2101 0
 15449 0d00 7FE0     		b	.L602
 15450              	.L691:
 15451 0d02 00BF     		.align	2
 15452              	.L690:
 15453 0d04 0000F040 		.word	1089470464
 15454 0d08 D4140000 		.word	.LC194
 15455 0d0c E0140000 		.word	.LC195
 15456 0d10 EC140000 		.word	.LC196
 15457 0d14 F8140000 		.word	.LC197
 15458 0d18 14150000 		.word	.LC198
 15459 0d1c 30150000 		.word	.LC199
 15460 0d20 4C150000 		.word	.LC200
 15461 0d24 60150000 		.word	.LC201
 15462 0d28 78150000 		.word	.LC202
 15463 0d2c 98150000 		.word	.LC203
 15464              	.L608:
2102:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2103:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15465              		.loc 1 2103 0
 15466 0d30 7869     		ldr	r0, [r7, #20]
 15467 0d32 FFF7FEFF 		bl	strlen
 15468 0d36 0346     		mov	r3, r0
 15469 0d38 1A46     		mov	r2, r3
 15470 0d3a 7B69     		ldr	r3, [r7, #20]
 15471 0d3c 1344     		add	r3, r3, r2
 15472 0d3e A44A     		ldr	r2, .L692
 15473 0d40 1C46     		mov	r4, r3
 15474 0d42 1546     		mov	r5, r2
 15475 0d44 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15476 0d46 2060     		str	r0, [r4]	@ unaligned
 15477 0d48 6160     		str	r1, [r4, #4]	@ unaligned
 15478 0d4a A260     		str	r2, [r4, #8]	@ unaligned
 15479 0d4c E360     		str	r3, [r4, #12]	@ unaligned
 15480 0d4e 2868     		ldr	r0, [r5]	@ unaligned
 15481 0d50 2061     		str	r0, [r4, #16]	@ unaligned
 15482 0d52 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15483 0d54 AA79     		ldrb	r2, [r5, #6]
 15484 0d56 A382     		strh	r3, [r4, #20]	@ unaligned
 15485 0d58 1346     		mov	r3, r2
 15486 0d5a A375     		strb	r3, [r4, #22]
2104:..\src/command_processing.c ****                     break;
 15487              		.loc 1 2104 0
 15488 0d5c 51E0     		b	.L602
 15489              	.L609:
2105:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2106:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15490              		.loc 1 2106 0
 15491 0d5e 7869     		ldr	r0, [r7, #20]
 15492 0d60 FFF7FEFF 		bl	strlen
 15493 0d64 0346     		mov	r3, r0
 15494 0d66 1A46     		mov	r2, r3
 15495 0d68 7B69     		ldr	r3, [r7, #20]
 15496 0d6a 1344     		add	r3, r3, r2
 15497 0d6c 994A     		ldr	r2, .L692+4
 15498 0d6e 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 350


 15499 0d70 1446     		mov	r4, r2
 15500 0d72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15501 0d74 2860     		str	r0, [r5]	@ unaligned
 15502 0d76 6960     		str	r1, [r5, #4]	@ unaligned
 15503 0d78 AA60     		str	r2, [r5, #8]	@ unaligned
 15504 0d7a EB60     		str	r3, [r5, #12]	@ unaligned
 15505 0d7c 03CC     		ldmia	r4!, {r0, r1}
 15506 0d7e 2861     		str	r0, [r5, #16]	@ unaligned
 15507 0d80 6961     		str	r1, [r5, #20]	@ unaligned
 15508 0d82 2388     		ldrh	r3, [r4]	@ unaligned
 15509 0d84 A278     		ldrb	r2, [r4, #2]
 15510 0d86 2B83     		strh	r3, [r5, #24]	@ unaligned
 15511 0d88 1346     		mov	r3, r2
 15512 0d8a AB76     		strb	r3, [r5, #26]
2107:..\src/command_processing.c ****                     break;
 15513              		.loc 1 2107 0
 15514 0d8c 39E0     		b	.L602
 15515              	.L610:
2108:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2109:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15516              		.loc 1 2109 0
 15517 0d8e 7869     		ldr	r0, [r7, #20]
 15518 0d90 FFF7FEFF 		bl	strlen
 15519 0d94 0346     		mov	r3, r0
 15520 0d96 1A46     		mov	r2, r3
 15521 0d98 7B69     		ldr	r3, [r7, #20]
 15522 0d9a 1344     		add	r3, r3, r2
 15523 0d9c 8E4A     		ldr	r2, .L692+8
 15524 0d9e 1C46     		mov	r4, r3
 15525 0da0 1546     		mov	r5, r2
 15526 0da2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15527 0da4 2060     		str	r0, [r4]	@ unaligned
 15528 0da6 6160     		str	r1, [r4, #4]	@ unaligned
 15529 0da8 A260     		str	r2, [r4, #8]	@ unaligned
 15530 0daa E360     		str	r3, [r4, #12]	@ unaligned
 15531 0dac 2868     		ldr	r0, [r5]	@ unaligned
 15532 0dae 2061     		str	r0, [r4, #16]	@ unaligned
 15533 0db0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15534 0db2 AA79     		ldrb	r2, [r5, #6]
 15535 0db4 A382     		strh	r3, [r4, #20]	@ unaligned
 15536 0db6 1346     		mov	r3, r2
 15537 0db8 A375     		strb	r3, [r4, #22]
2110:..\src/command_processing.c ****                     break;
 15538              		.loc 1 2110 0
 15539 0dba 22E0     		b	.L602
 15540              	.L611:
2111:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2112:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15541              		.loc 1 2112 0
 15542 0dbc 7869     		ldr	r0, [r7, #20]
 15543 0dbe FFF7FEFF 		bl	strlen
 15544 0dc2 0346     		mov	r3, r0
 15545 0dc4 1A46     		mov	r2, r3
 15546 0dc6 7B69     		ldr	r3, [r7, #20]
 15547 0dc8 1344     		add	r3, r3, r2
 15548 0dca 844A     		ldr	r2, .L692+12
 15549 0dcc 1546     		mov	r5, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 351


 15550 0dce 9E46     		mov	lr, r3
 15551 0dd0 05F1200C 		add	ip, r5, #32
 15552              	.L612:
 15553 0dd4 7446     		mov	r4, lr
 15554 0dd6 2E46     		mov	r6, r5
 15555 0dd8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15556 0dda 2060     		str	r0, [r4]	@ unaligned
 15557 0ddc 6160     		str	r1, [r4, #4]	@ unaligned
 15558 0dde A260     		str	r2, [r4, #8]	@ unaligned
 15559 0de0 E360     		str	r3, [r4, #12]	@ unaligned
 15560 0de2 1035     		adds	r5, r5, #16
 15561 0de4 0EF1100E 		add	lr, lr, #16
 15562 0de8 6545     		cmp	r5, ip
 15563 0dea F3D1     		bne	.L612
 15564 0dec 7446     		mov	r4, lr
 15565 0dee 2B46     		mov	r3, r5
 15566 0df0 07CB     		ldmia	r3!, {r0, r1, r2}
 15567 0df2 2060     		str	r0, [r4]	@ unaligned
 15568 0df4 6160     		str	r1, [r4, #4]	@ unaligned
 15569 0df6 A260     		str	r2, [r4, #8]	@ unaligned
 15570 0df8 1A88     		ldrh	r2, [r3]	@ unaligned
 15571 0dfa 9B78     		ldrb	r3, [r3, #2]
 15572 0dfc A281     		strh	r2, [r4, #12]	@ unaligned
 15573 0dfe A373     		strb	r3, [r4, #14]
2113:..\src/command_processing.c ****                     break;
 15574              		.loc 1 2113 0
 15575 0e00 00BF     		nop
 15576              	.L602:
2114:..\src/command_processing.c ****             }
2115:..\src/command_processing.c **** 
2116:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15577              		.loc 1 2116 0
 15578 0e02 D7F88030 		ldr	r3, [r7, #128]
 15579 0e06 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15580 0e0a 032B     		cmp	r3, #3
 15581 0e0c 63D8     		bhi	.L683
 15582 0e0e 01A2     		adr	r2, .L615
 15583 0e10 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15584              		.p2align 2
 15585              	.L615:
 15586 0e14 250E0000 		.word	.L614+1
 15587 0e18 4F0E0000 		.word	.L616+1
 15588 0e1c 730E0000 		.word	.L617+1
 15589 0e20 990E0000 		.word	.L618+1
 15590              		.p2align 1
 15591              	.L614:
2117:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2118:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15592              		.loc 1 2118 0
 15593 0e24 7869     		ldr	r0, [r7, #20]
 15594 0e26 FFF7FEFF 		bl	strlen
 15595 0e2a 0346     		mov	r3, r0
 15596 0e2c 1A46     		mov	r2, r3
 15597 0e2e 7B69     		ldr	r3, [r7, #20]
 15598 0e30 1344     		add	r3, r3, r2
 15599 0e32 6B4A     		ldr	r2, .L692+16
 15600 0e34 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 352


 15601 0e36 1446     		mov	r4, r2
 15602 0e38 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15603 0e3a 2860     		str	r0, [r5]	@ unaligned
 15604 0e3c 6960     		str	r1, [r5, #4]	@ unaligned
 15605 0e3e AA60     		str	r2, [r5, #8]	@ unaligned
 15606 0e40 EB60     		str	r3, [r5, #12]	@ unaligned
 15607 0e42 03CC     		ldmia	r4!, {r0, r1}
 15608 0e44 2861     		str	r0, [r5, #16]	@ unaligned
 15609 0e46 6961     		str	r1, [r5, #20]	@ unaligned
 15610 0e48 2378     		ldrb	r3, [r4]
 15611 0e4a 2B76     		strb	r3, [r5, #24]
2119:..\src/command_processing.c ****                     break;
 15612              		.loc 1 2119 0
 15613 0e4c 44E0     		b	.L619
 15614              	.L616:
2120:..\src/command_processing.c ****                 case CONTROL_PWM:
2121:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15615              		.loc 1 2121 0
 15616 0e4e 7869     		ldr	r0, [r7, #20]
 15617 0e50 FFF7FEFF 		bl	strlen
 15618 0e54 0346     		mov	r3, r0
 15619 0e56 1A46     		mov	r2, r3
 15620 0e58 7B69     		ldr	r3, [r7, #20]
 15621 0e5a 1344     		add	r3, r3, r2
 15622 0e5c 614A     		ldr	r2, .L692+20
 15623 0e5e 1D46     		mov	r5, r3
 15624 0e60 1446     		mov	r4, r2
 15625 0e62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15626 0e64 2860     		str	r0, [r5]	@ unaligned
 15627 0e66 6960     		str	r1, [r5, #4]	@ unaligned
 15628 0e68 AA60     		str	r2, [r5, #8]	@ unaligned
 15629 0e6a EB60     		str	r3, [r5, #12]	@ unaligned
 15630 0e6c 2068     		ldr	r0, [r4]	@ unaligned
 15631 0e6e 2861     		str	r0, [r5, #16]	@ unaligned
2122:..\src/command_processing.c ****                     break;
 15632              		.loc 1 2122 0
 15633 0e70 32E0     		b	.L619
 15634              	.L617:
2123:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2124:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15635              		.loc 1 2124 0
 15636 0e72 7869     		ldr	r0, [r7, #20]
 15637 0e74 FFF7FEFF 		bl	strlen
 15638 0e78 0346     		mov	r3, r0
 15639 0e7a 1A46     		mov	r2, r3
 15640 0e7c 7B69     		ldr	r3, [r7, #20]
 15641 0e7e 1344     		add	r3, r3, r2
 15642 0e80 594A     		ldr	r2, .L692+24
 15643 0e82 1D46     		mov	r5, r3
 15644 0e84 1446     		mov	r4, r2
 15645 0e86 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15646 0e88 2860     		str	r0, [r5]	@ unaligned
 15647 0e8a 6960     		str	r1, [r5, #4]	@ unaligned
 15648 0e8c AA60     		str	r2, [r5, #8]	@ unaligned
 15649 0e8e EB60     		str	r3, [r5, #12]	@ unaligned
 15650 0e90 03CC     		ldmia	r4!, {r0, r1}
 15651 0e92 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 353


 15652 0e94 6961     		str	r1, [r5, #20]	@ unaligned
2125:..\src/command_processing.c ****                     break;
 15653              		.loc 1 2125 0
 15654 0e96 1FE0     		b	.L619
 15655              	.L618:
2126:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2127:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15656              		.loc 1 2127 0
 15657 0e98 7869     		ldr	r0, [r7, #20]
 15658 0e9a FFF7FEFF 		bl	strlen
 15659 0e9e 0346     		mov	r3, r0
 15660 0ea0 1A46     		mov	r2, r3
 15661 0ea2 7B69     		ldr	r3, [r7, #20]
 15662 0ea4 1344     		add	r3, r3, r2
 15663 0ea6 514A     		ldr	r2, .L692+28
 15664 0ea8 1446     		mov	r4, r2
 15665 0eaa 9E46     		mov	lr, r3
 15666 0eac 04F1200C 		add	ip, r4, #32
 15667              	.L620:
 15668 0eb0 7546     		mov	r5, lr
 15669 0eb2 2646     		mov	r6, r4
 15670 0eb4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15671 0eb6 2860     		str	r0, [r5]	@ unaligned
 15672 0eb8 6960     		str	r1, [r5, #4]	@ unaligned
 15673 0eba AA60     		str	r2, [r5, #8]	@ unaligned
 15674 0ebc EB60     		str	r3, [r5, #12]	@ unaligned
 15675 0ebe 1034     		adds	r4, r4, #16
 15676 0ec0 0EF1100E 		add	lr, lr, #16
 15677 0ec4 6445     		cmp	r4, ip
 15678 0ec6 F3D1     		bne	.L620
 15679 0ec8 7346     		mov	r3, lr
 15680 0eca 2246     		mov	r2, r4
 15681 0ecc 1068     		ldr	r0, [r2]	@ unaligned
 15682 0ece 1860     		str	r0, [r3]	@ unaligned
 15683 0ed0 1279     		ldrb	r2, [r2, #4]
 15684 0ed2 1A71     		strb	r2, [r3, #4]
2128:..\src/command_processing.c ****                     break;
 15685              		.loc 1 2128 0
 15686 0ed4 00E0     		b	.L619
 15687              	.L683:
2129:..\src/command_processing.c ****                 default:
2130:..\src/command_processing.c ****                     break;
 15688              		.loc 1 2130 0
 15689 0ed6 00BF     		nop
 15690              	.L619:
2131:..\src/command_processing.c ****             }
2132:..\src/command_processing.c **** 
2133:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15691              		.loc 1 2133 0
 15692 0ed8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15693 0edc D7F88810 		ldr	r1, [r7, #136]
 15694 0ee0 1346     		mov	r3, r2
 15695 0ee2 5B00     		lsls	r3, r3, #1
 15696 0ee4 1344     		add	r3, r3, r2
 15697 0ee6 1B01     		lsls	r3, r3, #4
 15698 0ee8 0B44     		add	r3, r3, r1
 15699 0eea 03F5DC73 		add	r3, r3, #440
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 354


 15700 0eee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15701 0ef0 002B     		cmp	r3, #0
 15702 0ef2 1CD0     		beq	.L621
2134:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 15703              		.loc 1 2134 0
 15704 0ef4 7869     		ldr	r0, [r7, #20]
 15705 0ef6 FFF7FEFF 		bl	strlen
 15706 0efa 0346     		mov	r3, r0
 15707 0efc 1A46     		mov	r2, r3
 15708 0efe 7B69     		ldr	r3, [r7, #20]
 15709 0f00 1344     		add	r3, r3, r2
 15710 0f02 3B4A     		ldr	r2, .L692+32
 15711 0f04 1446     		mov	r4, r2
 15712 0f06 9E46     		mov	lr, r3
 15713 0f08 04F1200C 		add	ip, r4, #32
 15714              	.L622:
 15715 0f0c 7546     		mov	r5, lr
 15716 0f0e 2646     		mov	r6, r4
 15717 0f10 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15718 0f12 2860     		str	r0, [r5]	@ unaligned
 15719 0f14 6960     		str	r1, [r5, #4]	@ unaligned
 15720 0f16 AA60     		str	r2, [r5, #8]	@ unaligned
 15721 0f18 EB60     		str	r3, [r5, #12]	@ unaligned
 15722 0f1a 1034     		adds	r4, r4, #16
 15723 0f1c 0EF1100E 		add	lr, lr, #16
 15724 0f20 6445     		cmp	r4, ip
 15725 0f22 F3D1     		bne	.L622
 15726 0f24 7346     		mov	r3, lr
 15727 0f26 2246     		mov	r2, r4
 15728 0f28 1278     		ldrb	r2, [r2]
 15729 0f2a 1A70     		strb	r2, [r3]
 15730 0f2c 13E0     		b	.L623
 15731              	.L621:
2135:..\src/command_processing.c ****             else
2136:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 15732              		.loc 1 2136 0
 15733 0f2e 7869     		ldr	r0, [r7, #20]
 15734 0f30 FFF7FEFF 		bl	strlen
 15735 0f34 0346     		mov	r3, r0
 15736 0f36 1A46     		mov	r2, r3
 15737 0f38 7B69     		ldr	r3, [r7, #20]
 15738 0f3a 1344     		add	r3, r3, r2
 15739 0f3c 2D4A     		ldr	r2, .L692+36
 15740 0f3e 1C46     		mov	r4, r3
 15741 0f40 1546     		mov	r5, r2
 15742 0f42 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15743 0f44 2060     		str	r0, [r4]	@ unaligned
 15744 0f46 6160     		str	r1, [r4, #4]	@ unaligned
 15745 0f48 A260     		str	r2, [r4, #8]	@ unaligned
 15746 0f4a E360     		str	r3, [r4, #12]	@ unaligned
 15747 0f4c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15748 0f4e 2061     		str	r0, [r4, #16]	@ unaligned
 15749 0f50 6161     		str	r1, [r4, #20]	@ unaligned
 15750 0f52 A261     		str	r2, [r4, #24]	@ unaligned
 15751 0f54 E361     		str	r3, [r4, #28]	@ unaligned
 15752              	.L623:
2137:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 355


2138:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 15753              		.loc 1 2138 0
 15754 0f56 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15755 0f5a D7F88810 		ldr	r1, [r7, #136]
 15756 0f5e 1346     		mov	r3, r2
 15757 0f60 5B00     		lsls	r3, r3, #1
 15758 0f62 1344     		add	r3, r3, r2
 15759 0f64 1B01     		lsls	r3, r3, #4
 15760 0f66 0B44     		add	r3, r3, r1
 15761 0f68 03F5DE73 		add	r3, r3, #444
 15762 0f6c 93F90030 		ldrsb	r3, [r3]
 15763 0f70 1A46     		mov	r2, r3
 15764 0f72 07F11803 		add	r3, r7, #24
 15765 0f76 2049     		ldr	r1, .L692+40
 15766 0f78 1846     		mov	r0, r3
 15767 0f7a FFF7FEFF 		bl	sprintf
2139:..\src/command_processing.c ****             strcat(info_string, str);
 15768              		.loc 1 2139 0
 15769 0f7e 07F11803 		add	r3, r7, #24
 15770 0f82 1946     		mov	r1, r3
 15771 0f84 7869     		ldr	r0, [r7, #20]
 15772 0f86 FFF7FEFF 		bl	strcat
2140:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2141:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 15773              		.loc 1 2141 0
 15774 0f8a 7869     		ldr	r0, [r7, #20]
 15775 0f8c FFF7FEFF 		bl	strlen
 15776 0f90 0346     		mov	r3, r0
 15777 0f92 1A46     		mov	r2, r3
 15778 0f94 7B69     		ldr	r3, [r7, #20]
 15779 0f96 1344     		add	r3, r3, r2
 15780 0f98 184A     		ldr	r2, .L692+44
 15781 0f9a 1446     		mov	r4, r2
 15782 0f9c 9E46     		mov	lr, r3
 15783 0f9e 04F1200C 		add	ip, r4, #32
 15784              	.L624:
 15785 0fa2 7546     		mov	r5, lr
 15786 0fa4 2646     		mov	r6, r4
 15787 0fa6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15788 0fa8 2860     		str	r0, [r5]	@ unaligned
 15789 0faa 6960     		str	r1, [r5, #4]	@ unaligned
 15790 0fac AA60     		str	r2, [r5, #8]	@ unaligned
 15791 0fae EB60     		str	r3, [r5, #12]	@ unaligned
 15792 0fb0 1034     		adds	r4, r4, #16
 15793 0fb2 0EF1100E 		add	lr, lr, #16
 15794 0fb6 6445     		cmp	r4, ip
 15795 0fb8 F3D1     		bne	.L624
 15796 0fba 7246     		mov	r2, lr
 15797 0fbc 2346     		mov	r3, r4
 15798 0fbe 03CB     		ldmia	r3!, {r0, r1}
 15799 0fc0 1060     		str	r0, [r2]	@ unaligned
 15800 0fc2 5160     		str	r1, [r2, #4]	@ unaligned
 15801 0fc4 1B78     		ldrb	r3, [r3]
 15802 0fc6 1372     		strb	r3, [r2, #8]
2142:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15803              		.loc 1 2142 0
 15804 0fc8 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 356


 15805 0fca C7F89430 		str	r3, [r7, #148]
 15806 0fce 48E0     		b	.L625
 15807              	.L693:
 15808              		.align	2
 15809              	.L692:
 15810 0fd0 B4150000 		.word	.LC204
 15811 0fd4 CC150000 		.word	.LC205
 15812 0fd8 E8150000 		.word	.LC206
 15813 0fdc 00160000 		.word	.LC207
 15814 0fe0 30160000 		.word	.LC208
 15815 0fe4 4C160000 		.word	.LC209
 15816 0fe8 60160000 		.word	.LC210
 15817 0fec 78160000 		.word	.LC211
 15818 0ff0 A0160000 		.word	.LC212
 15819 0ff4 C4160000 		.word	.LC213
 15820 0ff8 E4160000 		.word	.LC214
 15821 0ffc 00170000 		.word	.LC215
 15822              	.L627:
2143:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15823              		.loc 1 2143 0
 15824 1000 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15825 1004 D7F88810 		ldr	r1, [r7, #136]
 15826 1008 1346     		mov	r3, r2
 15827 100a 5B00     		lsls	r3, r3, #1
 15828 100c 1344     		add	r3, r3, r2
 15829 100e 1B01     		lsls	r3, r3, #4
 15830 1010 CA18     		adds	r2, r1, r3
 15831 1012 D7F89430 		ldr	r3, [r7, #148]
 15832 1016 1344     		add	r3, r3, r2
 15833 1018 03F2B913 		addw	r3, r3, #441
 15834 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15835 101e 1A46     		mov	r2, r3
 15836 1020 07F11803 		add	r3, r7, #24
 15837 1024 AE49     		ldr	r1, .L694
 15838 1026 1846     		mov	r0, r3
 15839 1028 FFF7FEFF 		bl	sprintf
2144:..\src/command_processing.c ****                 strcat(info_string, str);
 15840              		.loc 1 2144 0
 15841 102c 07F11803 		add	r3, r7, #24
 15842 1030 1946     		mov	r1, r3
 15843 1032 7869     		ldr	r0, [r7, #20]
 15844 1034 FFF7FEFF 		bl	strcat
2145:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15845              		.loc 1 2145 0
 15846 1038 D7F89430 		ldr	r3, [r7, #148]
 15847 103c 022B     		cmp	r3, #2
 15848 103e 0BD0     		beq	.L626
2146:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15849              		.loc 1 2146 0
 15850 1040 7869     		ldr	r0, [r7, #20]
 15851 1042 FFF7FEFF 		bl	strlen
 15852 1046 0346     		mov	r3, r0
 15853 1048 1A46     		mov	r2, r3
 15854 104a 7B69     		ldr	r3, [r7, #20]
 15855 104c 1344     		add	r3, r3, r2
 15856 104e A54A     		ldr	r2, .L694+4
 15857 1050 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 357


 15858 1052 9278     		ldrb	r2, [r2, #2]
 15859 1054 1980     		strh	r1, [r3]	@ unaligned
 15860 1056 9A70     		strb	r2, [r3, #2]
 15861              	.L626:
2142:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15862              		.loc 1 2142 0 discriminator 2
 15863 1058 D7F89430 		ldr	r3, [r7, #148]
 15864 105c 0133     		adds	r3, r3, #1
 15865 105e C7F89430 		str	r3, [r7, #148]
 15866              	.L625:
2142:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15867              		.loc 1 2142 0 is_stmt 0 discriminator 1
 15868 1062 D7F89430 		ldr	r3, [r7, #148]
 15869 1066 022B     		cmp	r3, #2
 15870 1068 CADD     		ble	.L627
2147:..\src/command_processing.c ****                 }                
2148:..\src/command_processing.c ****             }
2149:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15871              		.loc 1 2149 0 is_stmt 1
 15872 106a 7869     		ldr	r0, [r7, #20]
 15873 106c FFF7FEFF 		bl	strlen
 15874 1070 0346     		mov	r3, r0
 15875 1072 1A46     		mov	r2, r3
 15876 1074 7B69     		ldr	r3, [r7, #20]
 15877 1076 1344     		add	r3, r3, r2
 15878 1078 9B4A     		ldr	r2, .L694+8
 15879 107a 1188     		ldrh	r1, [r2]	@ unaligned
 15880 107c 9278     		ldrb	r2, [r2, #2]
 15881 107e 1980     		strh	r1, [r3]	@ unaligned
 15882 1080 9A70     		strb	r2, [r3, #2]
2150:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 15883              		.loc 1 2150 0
 15884 1082 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15885 1086 D7F88810 		ldr	r1, [r7, #136]
 15886 108a 1346     		mov	r3, r2
 15887 108c 5B00     		lsls	r3, r3, #1
 15888 108e 1344     		add	r3, r3, r2
 15889 1090 1B01     		lsls	r3, r3, #4
 15890 1092 0B44     		add	r3, r3, r1
 15891 1094 03F2BD13 		addw	r3, r3, #445
 15892 1098 93F90030 		ldrsb	r3, [r3]
 15893 109c 1A46     		mov	r2, r3
 15894 109e 07F11803 		add	r3, r7, #24
 15895 10a2 9249     		ldr	r1, .L694+12
 15896 10a4 1846     		mov	r0, r3
 15897 10a6 FFF7FEFF 		bl	sprintf
2151:..\src/command_processing.c ****             strcat(info_string, str);
 15898              		.loc 1 2151 0
 15899 10aa 07F11803 		add	r3, r7, #24
 15900 10ae 1946     		mov	r1, r3
 15901 10b0 7869     		ldr	r0, [r7, #20]
 15902 10b2 FFF7FEFF 		bl	strcat
2152:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 15903              		.loc 1 2152 0
 15904 10b6 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15905 10ba D7F88810 		ldr	r1, [r7, #136]
 15906 10be 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 358


 15907 10c0 5B00     		lsls	r3, r3, #1
 15908 10c2 1344     		add	r3, r3, r2
 15909 10c4 1B01     		lsls	r3, r3, #4
 15910 10c6 0B44     		add	r3, r3, r1
 15911 10c8 03F5DF73 		add	r3, r3, #446
 15912 10cc 93F90030 		ldrsb	r3, [r3]
 15913 10d0 1A46     		mov	r2, r3
 15914 10d2 07F11803 		add	r3, r7, #24
 15915 10d6 8649     		ldr	r1, .L694+16
 15916 10d8 1846     		mov	r0, r3
 15917 10da FFF7FEFF 		bl	sprintf
2153:..\src/command_processing.c ****             strcat(info_string, str);
 15918              		.loc 1 2153 0
 15919 10de 07F11803 		add	r3, r7, #24
 15920 10e2 1946     		mov	r1, r3
 15921 10e4 7869     		ldr	r0, [r7, #20]
 15922 10e6 FFF7FEFF 		bl	strcat
2154:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 15923              		.loc 1 2154 0
 15924 10ea 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15925 10ee D7F88810 		ldr	r1, [r7, #136]
 15926 10f2 1346     		mov	r3, r2
 15927 10f4 5B00     		lsls	r3, r3, #1
 15928 10f6 1344     		add	r3, r3, r2
 15929 10f8 1B01     		lsls	r3, r3, #4
 15930 10fa 0B44     		add	r3, r3, r1
 15931 10fc 03F2BF13 		addw	r3, r3, #447
 15932 1100 93F90030 		ldrsb	r3, [r3]
 15933 1104 1A46     		mov	r2, r3
 15934 1106 07F11803 		add	r3, r7, #24
 15935 110a 7A49     		ldr	r1, .L694+20
 15936 110c 1846     		mov	r0, r3
 15937 110e FFF7FEFF 		bl	sprintf
2155:..\src/command_processing.c ****             strcat(info_string, str);
 15938              		.loc 1 2155 0
 15939 1112 07F11803 		add	r3, r7, #24
 15940 1116 1946     		mov	r1, r3
 15941 1118 7869     		ldr	r0, [r7, #20]
 15942 111a FFF7FEFF 		bl	strcat
2156:..\src/command_processing.c **** #endif            
2157:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15943              		.loc 1 2157 0
 15944 111e 7869     		ldr	r0, [r7, #20]
 15945 1120 FFF7FEFF 		bl	strlen
 15946 1124 0346     		mov	r3, r0
 15947 1126 1A46     		mov	r2, r3
 15948 1128 7B69     		ldr	r3, [r7, #20]
 15949 112a 1344     		add	r3, r3, r2
 15950 112c 6E4A     		ldr	r2, .L694+8
 15951 112e 1188     		ldrh	r1, [r2]	@ unaligned
 15952 1130 9278     		ldrb	r2, [r2, #2]
 15953 1132 1980     		strh	r1, [r3]	@ unaligned
 15954 1134 9A70     		strb	r2, [r3, #2]
2158:..\src/command_processing.c **** 
2159:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 15955              		.loc 1 2159 0
 15956 1136 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 359


 15957 1138 FFF7FEFF 		bl	strlen
 15958 113c 0346     		mov	r3, r0
 15959 113e 1A46     		mov	r2, r3
 15960 1140 7B69     		ldr	r3, [r7, #20]
 15961 1142 1344     		add	r3, r3, r2
 15962 1144 6C4A     		ldr	r2, .L694+24
 15963 1146 1D46     		mov	r5, r3
 15964 1148 1446     		mov	r4, r2
 15965 114a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15966 114c 2860     		str	r0, [r5]	@ unaligned
 15967 114e 6960     		str	r1, [r5, #4]	@ unaligned
 15968 1150 AA60     		str	r2, [r5, #8]	@ unaligned
 15969 1152 EB60     		str	r3, [r5, #12]	@ unaligned
 15970 1154 2068     		ldr	r0, [r4]	@ unaligned
 15971 1156 2861     		str	r0, [r5, #16]	@ unaligned
2160:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15972              		.loc 1 2160 0
 15973 1158 0023     		movs	r3, #0
 15974 115a C7F89430 		str	r3, [r7, #148]
 15975 115e 30E0     		b	.L628
 15976              	.L630:
2161:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15977              		.loc 1 2161 0
 15978 1160 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15979 1164 D7F88810 		ldr	r1, [r7, #136]
 15980 1168 1346     		mov	r3, r2
 15981 116a 5B00     		lsls	r3, r3, #1
 15982 116c 1344     		add	r3, r3, r2
 15983 116e 1B01     		lsls	r3, r3, #4
 15984 1170 CA18     		adds	r2, r1, r3
 15985 1172 D7F89430 		ldr	r3, [r7, #148]
 15986 1176 1344     		add	r3, r3, r2
 15987 1178 03F29D13 		addw	r3, r3, #413
 15988 117c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15989 117e 1A46     		mov	r2, r3
 15990 1180 07F11803 		add	r3, r7, #24
 15991 1184 5649     		ldr	r1, .L694
 15992 1186 1846     		mov	r0, r3
 15993 1188 FFF7FEFF 		bl	sprintf
2162:..\src/command_processing.c ****                 strcat(info_string, str);
 15994              		.loc 1 2162 0
 15995 118c 07F11803 		add	r3, r7, #24
 15996 1190 1946     		mov	r1, r3
 15997 1192 7869     		ldr	r0, [r7, #20]
 15998 1194 FFF7FEFF 		bl	strcat
2163:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15999              		.loc 1 2163 0
 16000 1198 D7F89430 		ldr	r3, [r7, #148]
 16001 119c 022B     		cmp	r3, #2
 16002 119e 0BD0     		beq	.L629
2164:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16003              		.loc 1 2164 0
 16004 11a0 7869     		ldr	r0, [r7, #20]
 16005 11a2 FFF7FEFF 		bl	strlen
 16006 11a6 0346     		mov	r3, r0
 16007 11a8 1A46     		mov	r2, r3
 16008 11aa 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 360


 16009 11ac 1344     		add	r3, r3, r2
 16010 11ae 4D4A     		ldr	r2, .L694+4
 16011 11b0 1188     		ldrh	r1, [r2]	@ unaligned
 16012 11b2 9278     		ldrb	r2, [r2, #2]
 16013 11b4 1980     		strh	r1, [r3]	@ unaligned
 16014 11b6 9A70     		strb	r2, [r3, #2]
 16015              	.L629:
2160:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16016              		.loc 1 2160 0 discriminator 2
 16017 11b8 D7F89430 		ldr	r3, [r7, #148]
 16018 11bc 0133     		adds	r3, r3, #1
 16019 11be C7F89430 		str	r3, [r7, #148]
 16020              	.L628:
2160:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16021              		.loc 1 2160 0 is_stmt 0 discriminator 1
 16022 11c2 D7F89430 		ldr	r3, [r7, #148]
 16023 11c6 022B     		cmp	r3, #2
 16024 11c8 CADD     		ble	.L630
2165:..\src/command_processing.c ****                 }                
2166:..\src/command_processing.c ****             }
2167:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16025              		.loc 1 2167 0 is_stmt 1
 16026 11ca 7869     		ldr	r0, [r7, #20]
 16027 11cc FFF7FEFF 		bl	strlen
 16028 11d0 0346     		mov	r3, r0
 16029 11d2 1A46     		mov	r2, r3
 16030 11d4 7B69     		ldr	r3, [r7, #20]
 16031 11d6 1344     		add	r3, r3, r2
 16032 11d8 434A     		ldr	r2, .L694+8
 16033 11da 1188     		ldrh	r1, [r2]	@ unaligned
 16034 11dc 9278     		ldrb	r2, [r2, #2]
 16035 11de 1980     		strh	r1, [r3]	@ unaligned
 16036 11e0 9A70     		strb	r2, [r3, #2]
2168:..\src/command_processing.c **** 
2169:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16037              		.loc 1 2169 0
 16038 11e2 7869     		ldr	r0, [r7, #20]
 16039 11e4 FFF7FEFF 		bl	strlen
 16040 11e8 0346     		mov	r3, r0
 16041 11ea 1A46     		mov	r2, r3
 16042 11ec 7B69     		ldr	r3, [r7, #20]
 16043 11ee 1344     		add	r3, r3, r2
 16044 11f0 424A     		ldr	r2, .L694+28
 16045 11f2 1D46     		mov	r5, r3
 16046 11f4 1446     		mov	r4, r2
 16047 11f6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16048 11f8 2860     		str	r0, [r5]	@ unaligned
 16049 11fa 6960     		str	r1, [r5, #4]	@ unaligned
 16050 11fc AA60     		str	r2, [r5, #8]	@ unaligned
 16051 11fe EB60     		str	r3, [r5, #12]	@ unaligned
 16052 1200 2068     		ldr	r0, [r4]	@ unaligned
 16053 1202 2861     		str	r0, [r5, #16]	@ unaligned
 16054 1204 2379     		ldrb	r3, [r4, #4]
 16055 1206 2B75     		strb	r3, [r5, #20]
2170:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16056              		.loc 1 2170 0
 16057 1208 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 361


 16058 120a C7F89430 		str	r3, [r7, #148]
 16059 120e 3FE0     		b	.L631
 16060              	.L633:
2171:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16061              		.loc 1 2171 0
 16062 1210 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16063 1214 D7F88810 		ldr	r1, [r7, #136]
 16064 1218 1346     		mov	r3, r2
 16065 121a 5B00     		lsls	r3, r3, #1
 16066 121c 1344     		add	r3, r3, r2
 16067 121e 9B00     		lsls	r3, r3, #2
 16068 1220 D7F89420 		ldr	r2, [r7, #148]
 16069 1224 1344     		add	r3, r3, r2
 16070 1226 6833     		adds	r3, r3, #104
 16071 1228 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16072 122c 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16073 1230 D7F88800 		ldr	r0, [r7, #136]
 16074 1234 1346     		mov	r3, r2
 16075 1236 5B00     		lsls	r3, r3, #1
 16076 1238 1344     		add	r3, r3, r2
 16077 123a 1B01     		lsls	r3, r3, #4
 16078 123c C218     		adds	r2, r0, r3
 16079 123e D7F89430 		ldr	r3, [r7, #148]
 16080 1242 1344     		add	r3, r3, r2
 16081 1244 03F29D13 		addw	r3, r3, #413
 16082 1248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16083 124a 41FA03F2 		asr	r2, r1, r3
 16084 124e 07F11803 		add	r3, r7, #24
 16085 1252 2B49     		ldr	r1, .L694+32
 16086 1254 1846     		mov	r0, r3
 16087 1256 FFF7FEFF 		bl	sprintf
2172:..\src/command_processing.c ****                 strcat(info_string, str);
 16088              		.loc 1 2172 0
 16089 125a 07F11803 		add	r3, r7, #24
 16090 125e 1946     		mov	r1, r3
 16091 1260 7869     		ldr	r0, [r7, #20]
 16092 1262 FFF7FEFF 		bl	strcat
2173:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16093              		.loc 1 2173 0
 16094 1266 D7F89430 		ldr	r3, [r7, #148]
 16095 126a 022B     		cmp	r3, #2
 16096 126c 0BD0     		beq	.L632
2174:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16097              		.loc 1 2174 0
 16098 126e 7869     		ldr	r0, [r7, #20]
 16099 1270 FFF7FEFF 		bl	strlen
 16100 1274 0346     		mov	r3, r0
 16101 1276 1A46     		mov	r2, r3
 16102 1278 7B69     		ldr	r3, [r7, #20]
 16103 127a 1344     		add	r3, r3, r2
 16104 127c 194A     		ldr	r2, .L694+4
 16105 127e 1188     		ldrh	r1, [r2]	@ unaligned
 16106 1280 9278     		ldrb	r2, [r2, #2]
 16107 1282 1980     		strh	r1, [r3]	@ unaligned
 16108 1284 9A70     		strb	r2, [r3, #2]
 16109              	.L632:
2170:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 362


 16110              		.loc 1 2170 0 discriminator 2
 16111 1286 D7F89430 		ldr	r3, [r7, #148]
 16112 128a 0133     		adds	r3, r3, #1
 16113 128c C7F89430 		str	r3, [r7, #148]
 16114              	.L631:
2170:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16115              		.loc 1 2170 0 is_stmt 0 discriminator 1
 16116 1290 D7F89430 		ldr	r3, [r7, #148]
 16117 1294 022B     		cmp	r3, #2
 16118 1296 BBDD     		ble	.L633
2175:..\src/command_processing.c ****                 }
2176:..\src/command_processing.c ****             }
2177:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16119              		.loc 1 2177 0 is_stmt 1
 16120 1298 7869     		ldr	r0, [r7, #20]
 16121 129a FFF7FEFF 		bl	strlen
 16122 129e 0346     		mov	r3, r0
 16123 12a0 1A46     		mov	r2, r3
 16124 12a2 7B69     		ldr	r3, [r7, #20]
 16125 12a4 1344     		add	r3, r3, r2
 16126 12a6 104A     		ldr	r2, .L694+8
 16127 12a8 1188     		ldrh	r1, [r2]	@ unaligned
 16128 12aa 9278     		ldrb	r2, [r2, #2]
 16129 12ac 1980     		strh	r1, [r3]	@ unaligned
 16130 12ae 9A70     		strb	r2, [r3, #2]
2178:..\src/command_processing.c ****                 
2179:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16131              		.loc 1 2179 0
 16132 12b0 7869     		ldr	r0, [r7, #20]
 16133 12b2 FFF7FEFF 		bl	strlen
 16134 12b6 0346     		mov	r3, r0
 16135 12b8 1A46     		mov	r2, r3
 16136 12ba 7B69     		ldr	r3, [r7, #20]
 16137 12bc 1344     		add	r3, r3, r2
 16138 12be 114A     		ldr	r2, .L694+36
 16139 12c0 1D46     		mov	r5, r3
 16140 12c2 1446     		mov	r4, r2
 16141 12c4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16142 12c6 2860     		str	r0, [r5]	@ unaligned
 16143 12c8 6960     		str	r1, [r5, #4]	@ unaligned
 16144 12ca AA60     		str	r2, [r5, #8]	@ unaligned
 16145 12cc EB60     		str	r3, [r5, #12]	@ unaligned
 16146 12ce 03CC     		ldmia	r4!, {r0, r1}
 16147 12d0 2861     		str	r0, [r5, #16]	@ unaligned
 16148 12d2 6961     		str	r1, [r5, #20]	@ unaligned
 16149 12d4 2378     		ldrb	r3, [r4]
 16150 12d6 2B76     		strb	r3, [r5, #24]
2180:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16151              		.loc 1 2180 0
 16152 12d8 0023     		movs	r3, #0
 16153 12da C7F89430 		str	r3, [r7, #148]
 16154 12de 49E0     		b	.L634
 16155              	.L695:
 16156              		.align	2
 16157              	.L694:
 16158 12e0 F4130000 		.word	.LC185
 16159 12e4 F8130000 		.word	.LC186
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 363


 16160 12e8 9C110000 		.word	.LC154
 16161 12ec 2C170000 		.word	.LC216
 16162 12f0 44170000 		.word	.LC217
 16163 12f4 5C170000 		.word	.LC218
 16164 12f8 74170000 		.word	.LC219
 16165 12fc 88170000 		.word	.LC220
 16166 1300 A0170000 		.word	.LC221
 16167 1304 A4170000 		.word	.LC222
 16168              	.L636:
2181:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16169              		.loc 1 2181 0
 16170 1308 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16171 130c D7F88810 		ldr	r1, [r7, #136]
 16172 1310 1346     		mov	r3, r2
 16173 1312 5B00     		lsls	r3, r3, #1
 16174 1314 1344     		add	r3, r3, r2
 16175 1316 9B00     		lsls	r3, r3, #2
 16176 1318 D7F89420 		ldr	r2, [r7, #148]
 16177 131c 1344     		add	r3, r3, r2
 16178 131e 6A33     		adds	r3, r3, #106
 16179 1320 9B00     		lsls	r3, r3, #2
 16180 1322 0B44     		add	r3, r3, r1
 16181 1324 5B68     		ldr	r3, [r3, #4]	@ float
 16182 1326 1846     		mov	r0, r3
 16183 1328 FFF7FEFF 		bl	__aeabi_f2d
 16184 132c 0346     		mov	r3, r0
 16185 132e 0C46     		mov	r4, r1
 16186 1330 07F11800 		add	r0, r7, #24
 16187 1334 1A46     		mov	r2, r3
 16188 1336 2346     		mov	r3, r4
 16189 1338 CA49     		ldr	r1, .L696
 16190 133a FFF7FEFF 		bl	sprintf
2182:..\src/command_processing.c ****                 strcat(info_string, str);
 16191              		.loc 1 2182 0
 16192 133e 07F11803 		add	r3, r7, #24
 16193 1342 1946     		mov	r1, r3
 16194 1344 7869     		ldr	r0, [r7, #20]
 16195 1346 FFF7FEFF 		bl	strcat
2183:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16196              		.loc 1 2183 0
 16197 134a D7F89430 		ldr	r3, [r7, #148]
 16198 134e 022B     		cmp	r3, #2
 16199 1350 0BD0     		beq	.L635
2184:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16200              		.loc 1 2184 0
 16201 1352 7869     		ldr	r0, [r7, #20]
 16202 1354 FFF7FEFF 		bl	strlen
 16203 1358 0346     		mov	r3, r0
 16204 135a 1A46     		mov	r2, r3
 16205 135c 7B69     		ldr	r3, [r7, #20]
 16206 135e 1344     		add	r3, r3, r2
 16207 1360 C14A     		ldr	r2, .L696+4
 16208 1362 1188     		ldrh	r1, [r2]	@ unaligned
 16209 1364 9278     		ldrb	r2, [r2, #2]
 16210 1366 1980     		strh	r1, [r3]	@ unaligned
 16211 1368 9A70     		strb	r2, [r3, #2]
 16212              	.L635:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 364


2180:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16213              		.loc 1 2180 0 discriminator 2
 16214 136a D7F89430 		ldr	r3, [r7, #148]
 16215 136e 0133     		adds	r3, r3, #1
 16216 1370 C7F89430 		str	r3, [r7, #148]
 16217              	.L634:
2180:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16218              		.loc 1 2180 0 is_stmt 0 discriminator 1
 16219 1374 D7F89430 		ldr	r3, [r7, #148]
 16220 1378 022B     		cmp	r3, #2
 16221 137a C5DD     		ble	.L636
2185:..\src/command_processing.c ****                 }
2186:..\src/command_processing.c ****             }
2187:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16222              		.loc 1 2187 0 is_stmt 1
 16223 137c 7869     		ldr	r0, [r7, #20]
 16224 137e FFF7FEFF 		bl	strlen
 16225 1382 0346     		mov	r3, r0
 16226 1384 1A46     		mov	r2, r3
 16227 1386 7B69     		ldr	r3, [r7, #20]
 16228 1388 1344     		add	r3, r3, r2
 16229 138a B84A     		ldr	r2, .L696+8
 16230 138c 1188     		ldrh	r1, [r2]	@ unaligned
 16231 138e 9278     		ldrb	r2, [r2, #2]
 16232 1390 1980     		strh	r1, [r3]	@ unaligned
 16233 1392 9A70     		strb	r2, [r3, #2]
2188:..\src/command_processing.c ****             
2189:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2190:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16234              		.loc 1 2190 0
 16235 1394 D7F88030 		ldr	r3, [r7, #128]
 16236 1398 5B6C     		ldr	r3, [r3, #68]	@ float
2189:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16237              		.loc 1 2189 0
 16238 139a 1846     		mov	r0, r3
 16239 139c FFF7FEFF 		bl	__aeabi_f2d
 16240 13a0 C7E90201 		strd	r0, [r7, #8]
 16241              		.loc 1 2190 0
 16242 13a4 D7F88030 		ldr	r3, [r7, #128]
 16243 13a8 9B6C     		ldr	r3, [r3, #72]	@ float
2189:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16244              		.loc 1 2189 0
 16245 13aa 1846     		mov	r0, r3
 16246 13ac FFF7FEFF 		bl	__aeabi_f2d
 16247 13b0 0446     		mov	r4, r0
 16248 13b2 0D46     		mov	r5, r1
 16249              		.loc 1 2190 0
 16250 13b4 D7F88030 		ldr	r3, [r7, #128]
 16251 13b8 DB6C     		ldr	r3, [r3, #76]	@ float
2189:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16252              		.loc 1 2189 0
 16253 13ba 1846     		mov	r0, r3
 16254 13bc FFF7FEFF 		bl	__aeabi_f2d
 16255 13c0 8046     		mov	r8, r0
 16256 13c2 8946     		mov	r9, r1
2191:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16257              		.loc 1 2191 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 365


 16258 13c4 D7F88030 		ldr	r3, [r7, #128]
 16259 13c8 1B6D     		ldr	r3, [r3, #80]	@ float
2189:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16260              		.loc 1 2189 0
 16261 13ca 1846     		mov	r0, r3
 16262 13cc FFF7FEFF 		bl	__aeabi_f2d
 16263 13d0 8246     		mov	r10, r0
 16264 13d2 8B46     		mov	fp, r1
 16265              		.loc 1 2191 0
 16266 13d4 D7F88030 		ldr	r3, [r7, #128]
 16267 13d8 5B6D     		ldr	r3, [r3, #84]	@ float
2189:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16268              		.loc 1 2189 0
 16269 13da 1846     		mov	r0, r3
 16270 13dc FFF7FEFF 		bl	__aeabi_f2d
 16271 13e0 C7E90001 		strd	r0, [r7]
 16272              		.loc 1 2191 0
 16273 13e4 D7F88030 		ldr	r3, [r7, #128]
 16274 13e8 9B6D     		ldr	r3, [r3, #88]	@ float
2189:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16275              		.loc 1 2189 0
 16276 13ea 1846     		mov	r0, r3
 16277 13ec FFF7FEFF 		bl	__aeabi_f2d
 16278 13f0 0246     		mov	r2, r0
 16279 13f2 0B46     		mov	r3, r1
 16280 13f4 07F11800 		add	r0, r7, #24
 16281 13f8 CDE90823 		strd	r2, [sp, #32]
 16282 13fc D7E90012 		ldrd	r1, [r7]
 16283 1400 CDE90612 		strd	r1, [sp, #24]
 16284 1404 CDE904AB 		strd	r10, [sp, #16]
 16285 1408 CDE90289 		strd	r8, [sp, #8]
 16286 140c CDE90045 		strd	r4, [sp]
 16287 1410 D7E90223 		ldrd	r2, [r7, #8]
 16288 1414 9649     		ldr	r1, .L696+12
 16289 1416 FFF7FEFF 		bl	sprintf
2192:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16290              		.loc 1 2192 0
 16291 141a 07F11803 		add	r3, r7, #24
 16292 141e 1946     		mov	r1, r3
 16293 1420 7869     		ldr	r0, [r7, #20]
 16294 1422 FFF7FEFF 		bl	strcat
2193:..\src/command_processing.c **** 
2194:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16295              		.loc 1 2194 0
 16296 1426 D7F88030 		ldr	r3, [r7, #128]
 16297 142a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16298 142e 1A46     		mov	r2, r3
 16299 1430 07F11803 		add	r3, r7, #24
 16300 1434 8F49     		ldr	r1, .L696+16
 16301 1436 1846     		mov	r0, r3
 16302 1438 FFF7FEFF 		bl	sprintf
2195:..\src/command_processing.c ****             strcat(info_string, str);
 16303              		.loc 1 2195 0
 16304 143c 07F11803 		add	r3, r7, #24
 16305 1440 1946     		mov	r1, r3
 16306 1442 7869     		ldr	r0, [r7, #20]
 16307 1444 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 366


2196:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16308              		.loc 1 2196 0
 16309 1448 7869     		ldr	r0, [r7, #20]
 16310 144a FFF7FEFF 		bl	strlen
 16311 144e 0346     		mov	r3, r0
 16312 1450 1A46     		mov	r2, r3
 16313 1452 7B69     		ldr	r3, [r7, #20]
 16314 1454 1344     		add	r3, r3, r2
 16315 1456 854A     		ldr	r2, .L696+8
 16316 1458 1188     		ldrh	r1, [r2]	@ unaligned
 16317 145a 9278     		ldrb	r2, [r2, #2]
 16318 145c 1980     		strh	r1, [r3]	@ unaligned
 16319 145e 9A70     		strb	r2, [r3, #2]
2197:..\src/command_processing.c **** 
2198:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16320              		.loc 1 2198 0
 16321 1460 D7F88030 		ldr	r3, [r7, #128]
 16322 1464 596B     		ldr	r1, [r3, #52]
 16323 1466 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16324 146a D7F88800 		ldr	r0, [r7, #136]
 16325 146e 1346     		mov	r3, r2
 16326 1470 5B00     		lsls	r3, r3, #1
 16327 1472 1344     		add	r3, r3, r2
 16328 1474 1B01     		lsls	r3, r3, #4
 16329 1476 0344     		add	r3, r3, r0
 16330 1478 03F29D13 		addw	r3, r3, #413
 16331 147c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16332 147e 41FA03F2 		asr	r2, r1, r3
 16333 1482 07F11803 		add	r3, r7, #24
 16334 1486 7C49     		ldr	r1, .L696+20
 16335 1488 1846     		mov	r0, r3
 16336 148a FFF7FEFF 		bl	sprintf
2199:..\src/command_processing.c ****             strcat(info_string, str);
 16337              		.loc 1 2199 0
 16338 148e 07F11803 		add	r3, r7, #24
 16339 1492 1946     		mov	r1, r3
 16340 1494 7869     		ldr	r0, [r7, #20]
 16341 1496 FFF7FEFF 		bl	strcat
2200:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16342              		.loc 1 2200 0
 16343 149a D7F88030 		ldr	r3, [r7, #128]
 16344 149e 996B     		ldr	r1, [r3, #56]
 16345 14a0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16346 14a4 D7F88800 		ldr	r0, [r7, #136]
 16347 14a8 1346     		mov	r3, r2
 16348 14aa 5B00     		lsls	r3, r3, #1
 16349 14ac 1344     		add	r3, r3, r2
 16350 14ae 1B01     		lsls	r3, r3, #4
 16351 14b0 0344     		add	r3, r3, r0
 16352 14b2 03F29D13 		addw	r3, r3, #413
 16353 14b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16354 14b8 41FA03F2 		asr	r2, r1, r3
 16355 14bc 07F11803 		add	r3, r7, #24
 16356 14c0 6E49     		ldr	r1, .L696+24
 16357 14c2 1846     		mov	r0, r3
 16358 14c4 FFF7FEFF 		bl	sprintf
2201:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 367


 16359              		.loc 1 2201 0
 16360 14c8 07F11803 		add	r3, r7, #24
 16361 14cc 1946     		mov	r1, r3
 16362 14ce 7869     		ldr	r0, [r7, #20]
 16363 14d0 FFF7FEFF 		bl	strcat
2202:..\src/command_processing.c **** 
2203:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16364              		.loc 1 2203 0
 16365 14d4 D7F88030 		ldr	r3, [r7, #128]
 16366 14d8 1A6C     		ldr	r2, [r3, #64]
 16367 14da D7F88030 		ldr	r3, [r7, #128]
 16368 14de DB6B     		ldr	r3, [r3, #60]
 16369 14e0 07F11800 		add	r0, r7, #24
 16370 14e4 6649     		ldr	r1, .L696+28
 16371 14e6 FFF7FEFF 		bl	sprintf
2204:..\src/command_processing.c ****             strcat(info_string, str);
 16372              		.loc 1 2204 0
 16373 14ea 07F11803 		add	r3, r7, #24
 16374 14ee 1946     		mov	r1, r3
 16375 14f0 7869     		ldr	r0, [r7, #20]
 16376 14f2 FFF7FEFF 		bl	strcat
2205:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16377              		.loc 1 2205 0
 16378 14f6 7869     		ldr	r0, [r7, #20]
 16379 14f8 FFF7FEFF 		bl	strlen
 16380 14fc 0346     		mov	r3, r0
 16381 14fe 1A46     		mov	r2, r3
 16382 1500 7B69     		ldr	r3, [r7, #20]
 16383 1502 1344     		add	r3, r3, r2
 16384 1504 594A     		ldr	r2, .L696+8
 16385 1506 1188     		ldrh	r1, [r2]	@ unaligned
 16386 1508 9278     		ldrb	r2, [r2, #2]
 16387 150a 1980     		strh	r1, [r3]	@ unaligned
 16388 150c 9A70     		strb	r2, [r3, #2]
2206:..\src/command_processing.c **** 
2207:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16389              		.loc 1 2207 0
 16390 150e D7F88030 		ldr	r3, [r7, #128]
 16391 1512 B3F95C30 		ldrsh	r3, [r3, #92]
 16392 1516 1A46     		mov	r2, r3
 16393 1518 07F11803 		add	r3, r7, #24
 16394 151c 5949     		ldr	r1, .L696+32
 16395 151e 1846     		mov	r0, r3
 16396 1520 FFF7FEFF 		bl	sprintf
2208:..\src/command_processing.c ****             strcat(info_string, str);
 16397              		.loc 1 2208 0
 16398 1524 07F11803 		add	r3, r7, #24
 16399 1528 1946     		mov	r1, r3
 16400 152a 7869     		ldr	r0, [r7, #20]
 16401 152c FFF7FEFF 		bl	strcat
2209:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2210:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 16402              		.loc 1 2210 0
 16403 1530 D7F88030 		ldr	r3, [r7, #128]
 16404 1534 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 16405 1538 1A46     		mov	r2, r3
 16406 153a 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 368


 16407 153e 5249     		ldr	r1, .L696+36
 16408 1540 1846     		mov	r0, r3
 16409 1542 FFF7FEFF 		bl	sprintf
2211:..\src/command_processing.c ****             strcat(info_string, str);
 16410              		.loc 1 2211 0
 16411 1546 07F11803 		add	r3, r7, #24
 16412 154a 1946     		mov	r1, r3
 16413 154c 7869     		ldr	r0, [r7, #20]
 16414 154e FFF7FEFF 		bl	strcat
2212:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 16415              		.loc 1 2212 0
 16416 1552 D7F88030 		ldr	r3, [r7, #128]
 16417 1556 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16418 155a 012B     		cmp	r3, #1
 16419 155c 21D0     		beq	.L638
 16420 155e 022B     		cmp	r3, #2
 16421 1560 3CD0     		beq	.L639
 16422 1562 002B     		cmp	r3, #0
 16423 1564 00D0     		beq	.L640
2213:..\src/command_processing.c ****                 case DRIVER_MC33887:
2214:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2215:..\src/command_processing.c ****                     break;
2216:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2217:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2218:..\src/command_processing.c ****                     break;
2219:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
2220:..\src/command_processing.c ****                     strcat(info_string, "Driver type: ESC (Brushless)\r\n");
2221:..\src/command_processing.c ****                     break;
2222:..\src/command_processing.c ****                 default:
2223:..\src/command_processing.c ****                     break;
 16424              		.loc 1 2223 0
 16425 1566 52E0     		b	.L642
 16426              	.L640:
2214:..\src/command_processing.c ****                     break;
 16427              		.loc 1 2214 0
 16428 1568 7869     		ldr	r0, [r7, #20]
 16429 156a FFF7FEFF 		bl	strlen
 16430 156e 0346     		mov	r3, r0
 16431 1570 1A46     		mov	r2, r3
 16432 1572 7B69     		ldr	r3, [r7, #20]
 16433 1574 1344     		add	r3, r3, r2
 16434 1576 454A     		ldr	r2, .L696+40
 16435 1578 1446     		mov	r4, r2
 16436 157a 9E46     		mov	lr, r3
 16437 157c 04F1200C 		add	ip, r4, #32
 16438              	.L641:
 16439 1580 7546     		mov	r5, lr
 16440 1582 2646     		mov	r6, r4
 16441 1584 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16442 1586 2860     		str	r0, [r5]	@ unaligned
 16443 1588 6960     		str	r1, [r5, #4]	@ unaligned
 16444 158a AA60     		str	r2, [r5, #8]	@ unaligned
 16445 158c EB60     		str	r3, [r5, #12]	@ unaligned
 16446 158e 1034     		adds	r4, r4, #16
 16447 1590 0EF1100E 		add	lr, lr, #16
 16448 1594 6445     		cmp	r4, ip
 16449 1596 F3D1     		bne	.L641
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 369


 16450 1598 7246     		mov	r2, lr
 16451 159a 2346     		mov	r3, r4
 16452 159c 1B88     		ldrh	r3, [r3]	@ unaligned
 16453 159e 1380     		strh	r3, [r2]	@ unaligned
2215:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 16454              		.loc 1 2215 0
 16455 15a0 35E0     		b	.L642
 16456              	.L638:
2217:..\src/command_processing.c ****                     break;
 16457              		.loc 1 2217 0
 16458 15a2 7869     		ldr	r0, [r7, #20]
 16459 15a4 FFF7FEFF 		bl	strlen
 16460 15a8 0346     		mov	r3, r0
 16461 15aa 1A46     		mov	r2, r3
 16462 15ac 7B69     		ldr	r3, [r7, #20]
 16463 15ae 1344     		add	r3, r3, r2
 16464 15b0 374A     		ldr	r2, .L696+44
 16465 15b2 1446     		mov	r4, r2
 16466 15b4 9E46     		mov	lr, r3
 16467 15b6 04F1200C 		add	ip, r4, #32
 16468              	.L643:
 16469 15ba 7546     		mov	r5, lr
 16470 15bc 2646     		mov	r6, r4
 16471 15be 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16472 15c0 2860     		str	r0, [r5]	@ unaligned
 16473 15c2 6960     		str	r1, [r5, #4]	@ unaligned
 16474 15c4 AA60     		str	r2, [r5, #8]	@ unaligned
 16475 15c6 EB60     		str	r3, [r5, #12]	@ unaligned
 16476 15c8 1034     		adds	r4, r4, #16
 16477 15ca 0EF1100E 		add	lr, lr, #16
 16478 15ce 6445     		cmp	r4, ip
 16479 15d0 F3D1     		bne	.L643
 16480 15d2 7346     		mov	r3, lr
 16481 15d4 2246     		mov	r2, r4
 16482 15d6 1068     		ldr	r0, [r2]	@ unaligned
 16483 15d8 1860     		str	r0, [r3]	@ unaligned
2218:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
 16484              		.loc 1 2218 0
 16485 15da 18E0     		b	.L642
 16486              	.L639:
2220:..\src/command_processing.c ****                     break;
 16487              		.loc 1 2220 0
 16488 15dc 7869     		ldr	r0, [r7, #20]
 16489 15de FFF7FEFF 		bl	strlen
 16490 15e2 0346     		mov	r3, r0
 16491 15e4 1A46     		mov	r2, r3
 16492 15e6 7B69     		ldr	r3, [r7, #20]
 16493 15e8 1344     		add	r3, r3, r2
 16494 15ea 2A4A     		ldr	r2, .L696+48
 16495 15ec 1D46     		mov	r5, r3
 16496 15ee 1446     		mov	r4, r2
 16497 15f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16498 15f2 2860     		str	r0, [r5]	@ unaligned
 16499 15f4 6960     		str	r1, [r5, #4]	@ unaligned
 16500 15f6 AA60     		str	r2, [r5, #8]	@ unaligned
 16501 15f8 EB60     		str	r3, [r5, #12]	@ unaligned
 16502 15fa 07CC     		ldmia	r4!, {r0, r1, r2}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 370


 16503 15fc 2861     		str	r0, [r5, #16]	@ unaligned
 16504 15fe 6961     		str	r1, [r5, #20]	@ unaligned
 16505 1600 AA61     		str	r2, [r5, #24]	@ unaligned
 16506 1602 2388     		ldrh	r3, [r4]	@ unaligned
 16507 1604 A278     		ldrb	r2, [r4, #2]
 16508 1606 AB83     		strh	r3, [r5, #28]	@ unaligned
 16509 1608 1346     		mov	r3, r2
 16510 160a AB77     		strb	r3, [r5, #30]
2221:..\src/command_processing.c ****                 default:
 16511              		.loc 1 2221 0
 16512 160c 00BF     		nop
 16513              	.L642:
2224:..\src/command_processing.c ****             }
2225:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16514              		.loc 1 2225 0
 16515 160e D7F88030 		ldr	r3, [r7, #128]
 16516 1612 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 16517 1616 1A46     		mov	r2, r3
 16518 1618 07F11803 		add	r3, r7, #24
 16519 161c 1E49     		ldr	r1, .L696+52
 16520 161e 1846     		mov	r0, r3
 16521 1620 FFF7FEFF 		bl	sprintf
2226:..\src/command_processing.c ****             strcat(info_string, str);
 16522              		.loc 1 2226 0
 16523 1624 07F11803 		add	r3, r7, #24
 16524 1628 1946     		mov	r1, r3
 16525 162a 7869     		ldr	r0, [r7, #20]
 16526 162c FFF7FEFF 		bl	strcat
2227:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 16527              		.loc 1 2227 0
 16528 1630 D7F88030 		ldr	r3, [r7, #128]
 16529 1634 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 16530 1638 002B     		cmp	r3, #0
 16531 163a 31D0     		beq	.L644
2228:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 16532              		.loc 1 2228 0
 16533 163c 7869     		ldr	r0, [r7, #20]
 16534 163e FFF7FEFF 		bl	strlen
 16535 1642 0346     		mov	r3, r0
 16536 1644 1A46     		mov	r2, r3
 16537 1646 7B69     		ldr	r3, [r7, #20]
 16538 1648 1344     		add	r3, r3, r2
 16539 164a 144A     		ldr	r2, .L696+56
 16540 164c 1D46     		mov	r5, r3
 16541 164e 1446     		mov	r4, r2
 16542 1650 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16543 1652 2860     		str	r0, [r5]	@ unaligned
 16544 1654 6960     		str	r1, [r5, #4]	@ unaligned
 16545 1656 AA60     		str	r2, [r5, #8]	@ unaligned
 16546 1658 EB60     		str	r3, [r5, #12]	@ unaligned
 16547 165a 07CC     		ldmia	r4!, {r0, r1, r2}
 16548 165c 2861     		str	r0, [r5, #16]	@ unaligned
 16549 165e 6961     		str	r1, [r5, #20]	@ unaligned
 16550 1660 AA61     		str	r2, [r5, #24]	@ unaligned
 16551 1662 34E0     		b	.L645
 16552              	.L697:
 16553              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 371


 16554              	.L696:
 16555 1664 C0170000 		.word	.LC223
 16556 1668 F8130000 		.word	.LC186
 16557 166c 9C110000 		.word	.LC154
 16558 1670 C4170000 		.word	.LC224
 16559 1674 F4170000 		.word	.LC225
 16560 1678 10180000 		.word	.LC226
 16561 167c 34180000 		.word	.LC227
 16562 1680 44180000 		.word	.LC228
 16563 1684 60180000 		.word	.LC229
 16564 1688 74180000 		.word	.LC230
 16565 168c A0180000 		.word	.LC231
 16566 1690 C4180000 		.word	.LC232
 16567 1694 E8180000 		.word	.LC233
 16568 1698 08190000 		.word	.LC234
 16569 169c 28190000 		.word	.LC235
 16570              	.L644:
2229:..\src/command_processing.c ****             else
2230:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 16571              		.loc 1 2230 0
 16572 16a0 7869     		ldr	r0, [r7, #20]
 16573 16a2 FFF7FEFF 		bl	strlen
 16574 16a6 0346     		mov	r3, r0
 16575 16a8 1A46     		mov	r2, r3
 16576 16aa 7B69     		ldr	r3, [r7, #20]
 16577 16ac 1344     		add	r3, r3, r2
 16578 16ae A24A     		ldr	r2, .L698
 16579 16b0 1D46     		mov	r5, r3
 16580 16b2 1446     		mov	r4, r2
 16581 16b4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16582 16b6 2860     		str	r0, [r5]	@ unaligned
 16583 16b8 6960     		str	r1, [r5, #4]	@ unaligned
 16584 16ba AA60     		str	r2, [r5, #8]	@ unaligned
 16585 16bc EB60     		str	r3, [r5, #12]	@ unaligned
 16586 16be 03CC     		ldmia	r4!, {r0, r1}
 16587 16c0 2861     		str	r0, [r5, #16]	@ unaligned
 16588 16c2 6961     		str	r1, [r5, #20]	@ unaligned
 16589 16c4 2388     		ldrh	r3, [r4]	@ unaligned
 16590 16c6 A278     		ldrb	r2, [r4, #2]
 16591 16c8 2B83     		strh	r3, [r5, #24]	@ unaligned
 16592 16ca 1346     		mov	r3, r2
 16593 16cc AB76     		strb	r3, [r5, #26]
 16594              	.L645:
2231:..\src/command_processing.c **** #endif                
2232:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16595              		.loc 1 2232 0 discriminator 2
 16596 16ce 7869     		ldr	r0, [r7, #20]
 16597 16d0 FFF7FEFF 		bl	strlen
 16598 16d4 0346     		mov	r3, r0
 16599 16d6 1A46     		mov	r2, r3
 16600 16d8 7B69     		ldr	r3, [r7, #20]
 16601 16da 1344     		add	r3, r3, r2
 16602 16dc 974A     		ldr	r2, .L698+4
 16603 16de 1188     		ldrh	r1, [r2]	@ unaligned
 16604 16e0 9278     		ldrb	r2, [r2, #2]
 16605 16e2 1980     		strh	r1, [r3]	@ unaligned
 16606 16e4 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 372


 16607              	.LBE26:
1959:..\src/command_processing.c ****             
 16608              		.loc 1 1959 0 discriminator 2
 16609 16e6 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16610 16ea 0133     		adds	r3, r3, #1
 16611 16ec 87F89330 		strb	r3, [r7, #147]
 16612              	.L580:
1959:..\src/command_processing.c ****             
 16613              		.loc 1 1959 0 is_stmt 0 discriminator 1
 16614 16f0 D7F88830 		ldr	r3, [r7, #136]
 16615 16f4 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16616 16f8 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16617 16fc 9A42     		cmp	r2, r3
 16618 16fe 7EF625AE 		bls	.L646
 16619              	.LBE25:
2233:..\src/command_processing.c ****         }
2234:..\src/command_processing.c ****       
2235:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16620              		.loc 1 2235 0 is_stmt 1
 16621 1702 7869     		ldr	r0, [r7, #20]
 16622 1704 FFF7FEFF 		bl	strlen
 16623 1708 0346     		mov	r3, r0
 16624 170a 1A46     		mov	r2, r3
 16625 170c 7B69     		ldr	r3, [r7, #20]
 16626 170e 1344     		add	r3, r3, r2
 16627 1710 8B4A     		ldr	r2, .L698+8
 16628 1712 1D46     		mov	r5, r3
 16629 1714 1446     		mov	r4, r2
 16630 1716 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16631 1718 2860     		str	r0, [r5]	@ unaligned
 16632 171a 6960     		str	r1, [r5, #4]	@ unaligned
 16633 171c AA60     		str	r2, [r5, #8]	@ unaligned
 16634 171e EB60     		str	r3, [r5, #12]	@ unaligned
 16635 1720 2068     		ldr	r0, [r4]	@ unaligned
 16636 1722 2861     		str	r0, [r5, #16]	@ unaligned
2236:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16637              		.loc 1 2236 0
 16638 1724 D7F88830 		ldr	r3, [r7, #136]
 16639 1728 B3F8F831 		ldrh	r3, [r3, #504]
 16640 172c 1A46     		mov	r2, r3
 16641 172e D7F88830 		ldr	r3, [r7, #136]
 16642 1732 B3F8FA31 		ldrh	r3, [r3, #506]
 16643 1736 07F11800 		add	r0, r7, #24
 16644 173a 8249     		ldr	r1, .L698+12
 16645 173c FFF7FEFF 		bl	sprintf
2237:..\src/command_processing.c ****         strcat(info_string, str);
 16646              		.loc 1 2237 0
 16647 1740 07F11803 		add	r3, r7, #24
 16648 1744 1946     		mov	r1, r3
 16649 1746 7869     		ldr	r0, [r7, #20]
 16650 1748 FFF7FEFF 		bl	strcat
2238:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16651              		.loc 1 2238 0
 16652 174c 7869     		ldr	r0, [r7, #20]
 16653 174e FFF7FEFF 		bl	strlen
 16654 1752 0346     		mov	r3, r0
 16655 1754 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 373


 16656 1756 7B69     		ldr	r3, [r7, #20]
 16657 1758 1344     		add	r3, r3, r2
 16658 175a 784A     		ldr	r2, .L698+4
 16659 175c 1188     		ldrh	r1, [r2]	@ unaligned
 16660 175e 9278     		ldrb	r2, [r2, #2]
 16661 1760 1980     		strh	r1, [r3]	@ unaligned
 16662 1762 9A70     		strb	r2, [r3, #2]
2239:..\src/command_processing.c **** 
2240:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16663              		.loc 1 2240 0
 16664 1764 D7F88830 		ldr	r3, [r7, #136]
 16665 1768 D3F8FC21 		ldr	r2, [r3, #508]
 16666 176c D7F88830 		ldr	r3, [r7, #136]
 16667 1770 D3F80032 		ldr	r3, [r3, #512]
 16668 1774 07F11800 		add	r0, r7, #24
 16669 1778 7349     		ldr	r1, .L698+16
 16670 177a FFF7FEFF 		bl	sprintf
2241:..\src/command_processing.c ****         strcat(info_string, str);
 16671              		.loc 1 2241 0
 16672 177e 07F11803 		add	r3, r7, #24
 16673 1782 1946     		mov	r1, r3
 16674 1784 7869     		ldr	r0, [r7, #20]
 16675 1786 FFF7FEFF 		bl	strcat
2242:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16676              		.loc 1 2242 0
 16677 178a 7869     		ldr	r0, [r7, #20]
 16678 178c FFF7FEFF 		bl	strlen
 16679 1790 0346     		mov	r3, r0
 16680 1792 1A46     		mov	r2, r3
 16681 1794 7B69     		ldr	r3, [r7, #20]
 16682 1796 1344     		add	r3, r3, r2
 16683 1798 684A     		ldr	r2, .L698+4
 16684 179a 1188     		ldrh	r1, [r2]	@ unaligned
 16685 179c 9278     		ldrb	r2, [r2, #2]
 16686 179e 1980     		strh	r1, [r3]	@ unaligned
 16687 17a0 9A70     		strb	r2, [r3, #2]
2243:..\src/command_processing.c **** 
2244:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16688              		.loc 1 2244 0
 16689 17a2 D7F88830 		ldr	r3, [r7, #136]
 16690 17a6 93F80732 		ldrb	r3, [r3, #519]	@ zero_extendqisi2
 16691 17aa 002B     		cmp	r3, #0
 16692 17ac 13D0     		beq	.L647
2245:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16693              		.loc 1 2245 0
 16694 17ae 7869     		ldr	r0, [r7, #20]
 16695 17b0 FFF7FEFF 		bl	strlen
 16696 17b4 0346     		mov	r3, r0
 16697 17b6 1A46     		mov	r2, r3
 16698 17b8 7B69     		ldr	r3, [r7, #20]
 16699 17ba 1344     		add	r3, r3, r2
 16700 17bc 634A     		ldr	r2, .L698+20
 16701 17be 1D46     		mov	r5, r3
 16702 17c0 1446     		mov	r4, r2
 16703 17c2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16704 17c4 2860     		str	r0, [r5]	@ unaligned
 16705 17c6 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 374


 16706 17c8 AA60     		str	r2, [r5, #8]	@ unaligned
 16707 17ca EB60     		str	r3, [r5, #12]	@ unaligned
 16708 17cc 2068     		ldr	r0, [r4]	@ unaligned
 16709 17ce 2861     		str	r0, [r5, #16]	@ unaligned
 16710 17d0 2379     		ldrb	r3, [r4, #4]
 16711 17d2 2B75     		strb	r3, [r5, #20]
 16712 17d4 10E0     		b	.L648
 16713              	.L647:
2246:..\src/command_processing.c ****         else
2247:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16714              		.loc 1 2247 0
 16715 17d6 7869     		ldr	r0, [r7, #20]
 16716 17d8 FFF7FEFF 		bl	strlen
 16717 17dc 0346     		mov	r3, r0
 16718 17de 1A46     		mov	r2, r3
 16719 17e0 7B69     		ldr	r3, [r7, #20]
 16720 17e2 1344     		add	r3, r3, r2
 16721 17e4 5A4A     		ldr	r2, .L698+24
 16722 17e6 1D46     		mov	r5, r3
 16723 17e8 1446     		mov	r4, r2
 16724 17ea 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16725 17ec 2860     		str	r0, [r5]	@ unaligned
 16726 17ee 6960     		str	r1, [r5, #4]	@ unaligned
 16727 17f0 AA60     		str	r2, [r5, #8]	@ unaligned
 16728 17f2 EB60     		str	r3, [r5, #12]	@ unaligned
 16729 17f4 2068     		ldr	r0, [r4]	@ unaligned
 16730 17f6 2861     		str	r0, [r5, #16]	@ unaligned
 16731              	.L648:
2248:..\src/command_processing.c ****             
2249:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16732              		.loc 1 2249 0
 16733 17f8 D7F88830 		ldr	r3, [r7, #136]
 16734 17fc 93F80632 		ldrb	r3, [r3, #518]	@ zero_extendqisi2
 16735 1800 002B     		cmp	r3, #0
 16736 1802 17D0     		beq	.L649
2250:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16737              		.loc 1 2250 0
 16738 1804 7869     		ldr	r0, [r7, #20]
 16739 1806 FFF7FEFF 		bl	strlen
 16740 180a 0346     		mov	r3, r0
 16741 180c 1A46     		mov	r2, r3
 16742 180e 7B69     		ldr	r3, [r7, #20]
 16743 1810 1344     		add	r3, r3, r2
 16744 1812 504A     		ldr	r2, .L698+28
 16745 1814 1D46     		mov	r5, r3
 16746 1816 1446     		mov	r4, r2
 16747 1818 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16748 181a 2860     		str	r0, [r5]	@ unaligned
 16749 181c 6960     		str	r1, [r5, #4]	@ unaligned
 16750 181e AA60     		str	r2, [r5, #8]	@ unaligned
 16751 1820 EB60     		str	r3, [r5, #12]	@ unaligned
 16752 1822 03CC     		ldmia	r4!, {r0, r1}
 16753 1824 2861     		str	r0, [r5, #16]	@ unaligned
 16754 1826 6961     		str	r1, [r5, #20]	@ unaligned
 16755 1828 2388     		ldrh	r3, [r4]	@ unaligned
 16756 182a A278     		ldrb	r2, [r4, #2]
 16757 182c 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 375


 16758 182e 1346     		mov	r3, r2
 16759 1830 AB76     		strb	r3, [r5, #26]
 16760 1832 13E0     		b	.L650
 16761              	.L649:
2251:..\src/command_processing.c ****         else
2252:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16762              		.loc 1 2252 0
 16763 1834 7869     		ldr	r0, [r7, #20]
 16764 1836 FFF7FEFF 		bl	strlen
 16765 183a 0346     		mov	r3, r0
 16766 183c 1A46     		mov	r2, r3
 16767 183e 7B69     		ldr	r3, [r7, #20]
 16768 1840 1344     		add	r3, r3, r2
 16769 1842 454A     		ldr	r2, .L698+32
 16770 1844 1D46     		mov	r5, r3
 16771 1846 1446     		mov	r4, r2
 16772 1848 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16773 184a 2860     		str	r0, [r5]	@ unaligned
 16774 184c 6960     		str	r1, [r5, #4]	@ unaligned
 16775 184e AA60     		str	r2, [r5, #8]	@ unaligned
 16776 1850 EB60     		str	r3, [r5, #12]	@ unaligned
 16777 1852 03CC     		ldmia	r4!, {r0, r1}
 16778 1854 2861     		str	r0, [r5, #16]	@ unaligned
 16779 1856 6961     		str	r1, [r5, #20]	@ unaligned
 16780 1858 2388     		ldrh	r3, [r4]	@ unaligned
 16781 185a 2B83     		strh	r3, [r5, #24]	@ unaligned
 16782              	.L650:
2253:..\src/command_processing.c **** 
2254:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16783              		.loc 1 2254 0
 16784 185c D7F88830 		ldr	r3, [r7, #136]
 16785 1860 93F80432 		ldrb	r3, [r3, #516]	@ zero_extendqisi2
 16786 1864 1A46     		mov	r2, r3
 16787 1866 D7F88830 		ldr	r3, [r7, #136]
 16788 186a 93F80532 		ldrb	r3, [r3, #517]	@ zero_extendqisi2
 16789 186e 07F11800 		add	r0, r7, #24
 16790 1872 3A49     		ldr	r1, .L698+36
 16791 1874 FFF7FEFF 		bl	sprintf
2255:..\src/command_processing.c ****         strcat(info_string, str);
 16792              		.loc 1 2255 0
 16793 1878 07F11803 		add	r3, r7, #24
 16794 187c 1946     		mov	r1, r3
 16795 187e 7869     		ldr	r0, [r7, #20]
 16796 1880 FFF7FEFF 		bl	strcat
2256:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16797              		.loc 1 2256 0
 16798 1884 7869     		ldr	r0, [r7, #20]
 16799 1886 FFF7FEFF 		bl	strlen
 16800 188a 0346     		mov	r3, r0
 16801 188c 1A46     		mov	r2, r3
 16802 188e 7B69     		ldr	r3, [r7, #20]
 16803 1890 1344     		add	r3, r3, r2
 16804 1892 2A4A     		ldr	r2, .L698+4
 16805 1894 1188     		ldrh	r1, [r2]	@ unaligned
 16806 1896 9278     		ldrb	r2, [r2, #2]
 16807 1898 1980     		strh	r1, [r3]	@ unaligned
 16808 189a 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 376


2257:..\src/command_processing.c **** 
2258:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16809              		.loc 1 2258 0
 16810 189c D7F88830 		ldr	r3, [r7, #136]
 16811 18a0 93F82F32 		ldrb	r3, [r3, #559]	@ zero_extendqisi2
 16812 18a4 012B     		cmp	r3, #1
 16813 18a6 40F08A80 		bne	.L651
2259:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16814              		.loc 1 2259 0
 16815 18aa 7869     		ldr	r0, [r7, #20]
 16816 18ac FFF7FEFF 		bl	strlen
 16817 18b0 0346     		mov	r3, r0
 16818 18b2 1A46     		mov	r2, r3
 16819 18b4 7B69     		ldr	r3, [r7, #20]
 16820 18b6 1344     		add	r3, r3, r2
 16821 18b8 294A     		ldr	r2, .L698+40
 16822 18ba 1C46     		mov	r4, r3
 16823 18bc 1546     		mov	r5, r2
 16824 18be 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16825 18c0 2060     		str	r0, [r4]	@ unaligned
 16826 18c2 6160     		str	r1, [r4, #4]	@ unaligned
 16827 18c4 A260     		str	r2, [r4, #8]	@ unaligned
 16828 18c6 E360     		str	r3, [r4, #12]	@ unaligned
 16829 18c8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16830 18ca 2061     		str	r0, [r4, #16]	@ unaligned
 16831 18cc 6161     		str	r1, [r4, #20]	@ unaligned
 16832 18ce A261     		str	r2, [r4, #24]	@ unaligned
 16833 18d0 E361     		str	r3, [r4, #28]	@ unaligned
2260:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16834              		.loc 1 2260 0
 16835 18d2 0023     		movs	r3, #0
 16836 18d4 C7F89430 		str	r3, [r7, #148]
 16837 18d8 25E0     		b	.L652
 16838              	.L653:
2261:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16839              		.loc 1 2261 0 discriminator 3
 16840 18da D7F89430 		ldr	r3, [r7, #148]
 16841 18de 591C     		adds	r1, r3, #1
 16842 18e0 204A     		ldr	r2, .L698+44
 16843 18e2 D7F89430 		ldr	r3, [r7, #148]
 16844 18e6 0233     		adds	r3, r3, #2
 16845 18e8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16846 18ec 07F11800 		add	r0, r7, #24
 16847 18f0 0A46     		mov	r2, r1
 16848 18f2 1D49     		ldr	r1, .L698+48
 16849 18f4 FFF7FEFF 		bl	sprintf
2262:..\src/command_processing.c ****                 strcat(info_string, str);
 16850              		.loc 1 2262 0 discriminator 3
 16851 18f8 07F11803 		add	r3, r7, #24
 16852 18fc 1946     		mov	r1, r3
 16853 18fe 7869     		ldr	r0, [r7, #20]
 16854 1900 FFF7FEFF 		bl	strcat
2263:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16855              		.loc 1 2263 0 discriminator 3
 16856 1904 7869     		ldr	r0, [r7, #20]
 16857 1906 FFF7FEFF 		bl	strlen
 16858 190a 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 377


 16859 190c 1A46     		mov	r2, r3
 16860 190e 7B69     		ldr	r3, [r7, #20]
 16861 1910 1344     		add	r3, r3, r2
 16862 1912 0A4A     		ldr	r2, .L698+4
 16863 1914 1188     		ldrh	r1, [r2]	@ unaligned
 16864 1916 9278     		ldrb	r2, [r2, #2]
 16865 1918 1980     		strh	r1, [r3]	@ unaligned
 16866 191a 9A70     		strb	r2, [r3, #2]
2260:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16867              		.loc 1 2260 0 discriminator 3
 16868 191c D7F89430 		ldr	r3, [r7, #148]
 16869 1920 0133     		adds	r3, r3, #1
 16870 1922 C7F89430 		str	r3, [r7, #148]
 16871              	.L652:
2260:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16872              		.loc 1 2260 0 is_stmt 0 discriminator 1
 16873 1926 D7F89430 		ldr	r3, [r7, #148]
 16874 192a 052B     		cmp	r3, #5
 16875 192c D5DD     		ble	.L653
2264:..\src/command_processing.c ****             }
2265:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 16876              		.loc 1 2265 0 is_stmt 1
 16877 192e 0023     		movs	r3, #0
 16878 1930 C7F89430 		str	r3, [r7, #148]
 16879 1934 3FE0     		b	.L654
 16880              	.L699:
 16881 1936 00BF     		.align	2
 16882              	.L698:
 16883 1938 44190000 		.word	.LC236
 16884 193c 9C110000 		.word	.LC154
 16885 1940 60190000 		.word	.LC237
 16886 1944 74190000 		.word	.LC238
 16887 1948 98190000 		.word	.LC239
 16888 194c BC190000 		.word	.LC240
 16889 1950 D4190000 		.word	.LC241
 16890 1954 E8190000 		.word	.LC242
 16891 1958 041A0000 		.word	.LC243
 16892 195c 201A0000 		.word	.LC244
 16893 1960 381A0000 		.word	.LC245
 16894 1964 00000000 		.word	g_adc_meas
 16895 1968 581A0000 		.word	.LC246
 16896              	.L655:
2266:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16897              		.loc 1 2266 0 discriminator 3
 16898 196c D7F89430 		ldr	r3, [r7, #148]
 16899 1970 591C     		adds	r1, r3, #1
 16900 1972 BD4A     		ldr	r2, .L700
 16901 1974 D7F89430 		ldr	r3, [r7, #148]
 16902 1978 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16903 197c 07F11800 		add	r0, r7, #24
 16904 1980 0A46     		mov	r2, r1
 16905 1982 BA49     		ldr	r1, .L700+4
 16906 1984 FFF7FEFF 		bl	sprintf
2267:..\src/command_processing.c ****                 strcat(info_string, str);
 16907              		.loc 1 2267 0 discriminator 3
 16908 1988 07F11803 		add	r3, r7, #24
 16909 198c 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 378


 16910 198e 7869     		ldr	r0, [r7, #20]
 16911 1990 FFF7FEFF 		bl	strcat
2268:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16912              		.loc 1 2268 0 discriminator 3
 16913 1994 7869     		ldr	r0, [r7, #20]
 16914 1996 FFF7FEFF 		bl	strlen
 16915 199a 0346     		mov	r3, r0
 16916 199c 1A46     		mov	r2, r3
 16917 199e 7B69     		ldr	r3, [r7, #20]
 16918 19a0 1344     		add	r3, r3, r2
 16919 19a2 B34A     		ldr	r2, .L700+8
 16920 19a4 1188     		ldrh	r1, [r2]	@ unaligned
 16921 19a6 9278     		ldrb	r2, [r2, #2]
 16922 19a8 1980     		strh	r1, [r3]	@ unaligned
 16923 19aa 9A70     		strb	r2, [r3, #2]
2265:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16924              		.loc 1 2265 0 discriminator 3
 16925 19ac D7F89430 		ldr	r3, [r7, #148]
 16926 19b0 0133     		adds	r3, r3, #1
 16927 19b2 C7F89430 		str	r3, [r7, #148]
 16928              	.L654:
2265:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16929              		.loc 1 2265 0 is_stmt 0 discriminator 1
 16930 19b6 D7F89430 		ldr	r3, [r7, #148]
 16931 19ba 012B     		cmp	r3, #1
 16932 19bc D6DD     		ble	.L655
 16933              	.L651:
2269:..\src/command_processing.c ****             }
2270:..\src/command_processing.c ****         }
2271:..\src/command_processing.c **** 
2272:..\src/command_processing.c **** #ifdef GENERIC_FW
2273:..\src/command_processing.c ****     
2274:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16934              		.loc 1 2274 0 is_stmt 1
 16935 19be 7869     		ldr	r0, [r7, #20]
 16936 19c0 FFF7FEFF 		bl	strlen
 16937 19c4 0346     		mov	r3, r0
 16938 19c6 1A46     		mov	r2, r3
 16939 19c8 7B69     		ldr	r3, [r7, #20]
 16940 19ca 1344     		add	r3, r3, r2
 16941 19cc A84A     		ldr	r2, .L700+8
 16942 19ce 1188     		ldrh	r1, [r2]	@ unaligned
 16943 19d0 9278     		ldrb	r2, [r2, #2]
 16944 19d2 1980     		strh	r1, [r3]	@ unaligned
 16945 19d4 9A70     		strb	r2, [r3, #2]
2275:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
 16946              		.loc 1 2275 0
 16947 19d6 7869     		ldr	r0, [r7, #20]
 16948 19d8 FFF7FEFF 		bl	strlen
 16949 19dc 0346     		mov	r3, r0
 16950 19de 1A46     		mov	r2, r3
 16951 19e0 7B69     		ldr	r3, [r7, #20]
 16952 19e2 1344     		add	r3, r3, r2
 16953 19e4 A34A     		ldr	r2, .L700+12
 16954 19e6 1D46     		mov	r5, r3
 16955 19e8 1446     		mov	r4, r2
 16956 19ea 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 379


 16957 19ec 2860     		str	r0, [r5]	@ unaligned
 16958 19ee 6960     		str	r1, [r5, #4]	@ unaligned
 16959 19f0 AA60     		str	r2, [r5, #8]	@ unaligned
 16960 19f2 EB60     		str	r3, [r5, #12]	@ unaligned
 16961 19f4 03CC     		ldmia	r4!, {r0, r1}
 16962 19f6 2861     		str	r0, [r5, #16]	@ unaligned
 16963 19f8 6961     		str	r1, [r5, #20]	@ unaligned
 16964 19fa 2378     		ldrb	r3, [r4]
 16965 19fc 2B76     		strb	r3, [r5, #24]
2276:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
 16966              		.loc 1 2276 0
 16967 19fe 9E4B     		ldr	r3, .L700+16
 16968 1a00 B3F8B832 		ldrh	r3, [r3, #696]
 16969 1a04 1A46     		mov	r2, r3
 16970 1a06 07F11803 		add	r3, r7, #24
 16971 1a0a 9C49     		ldr	r1, .L700+20
 16972 1a0c 1846     		mov	r0, r3
 16973 1a0e FFF7FEFF 		bl	sprintf
2277:..\src/command_processing.c ****         strcat(info_string, str);
 16974              		.loc 1 2277 0
 16975 1a12 07F11803 		add	r3, r7, #24
 16976 1a16 1946     		mov	r1, r3
 16977 1a18 7869     		ldr	r0, [r7, #20]
 16978 1a1a FFF7FEFF 		bl	strcat
2278:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16979              		.loc 1 2278 0
 16980 1a1e 7869     		ldr	r0, [r7, #20]
 16981 1a20 FFF7FEFF 		bl	strlen
 16982 1a24 0346     		mov	r3, r0
 16983 1a26 1A46     		mov	r2, r3
 16984 1a28 7B69     		ldr	r3, [r7, #20]
 16985 1a2a 1344     		add	r3, r3, r2
 16986 1a2c 904A     		ldr	r2, .L700+8
 16987 1a2e 1188     		ldrh	r1, [r2]	@ unaligned
 16988 1a30 9278     		ldrb	r2, [r2, #2]
 16989 1a32 1980     		strh	r1, [r3]	@ unaligned
 16990 1a34 9A70     		strb	r2, [r3, #2]
2279:..\src/command_processing.c **** 
2280:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
 16991              		.loc 1 2280 0
 16992 1a36 904B     		ldr	r3, .L700+16
 16993 1a38 B3F9BA32 		ldrsh	r3, [r3, #698]
 16994 1a3c 1A46     		mov	r2, r3
 16995 1a3e 07F11803 		add	r3, r7, #24
 16996 1a42 8F49     		ldr	r1, .L700+24
 16997 1a44 1846     		mov	r0, r3
 16998 1a46 FFF7FEFF 		bl	sprintf
2281:..\src/command_processing.c ****         strcat(info_string, str);
 16999              		.loc 1 2281 0
 17000 1a4a 07F11803 		add	r3, r7, #24
 17001 1a4e 1946     		mov	r1, r3
 17002 1a50 7869     		ldr	r0, [r7, #20]
 17003 1a52 FFF7FEFF 		bl	strcat
2282:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17004              		.loc 1 2282 0
 17005 1a56 7869     		ldr	r0, [r7, #20]
 17006 1a58 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 380


 17007 1a5c 0346     		mov	r3, r0
 17008 1a5e 1A46     		mov	r2, r3
 17009 1a60 7B69     		ldr	r3, [r7, #20]
 17010 1a62 1344     		add	r3, r3, r2
 17011 1a64 824A     		ldr	r2, .L700+8
 17012 1a66 1188     		ldrh	r1, [r2]	@ unaligned
 17013 1a68 9278     		ldrb	r2, [r2, #2]
 17014 1a6a 1980     		strh	r1, [r3]	@ unaligned
 17015 1a6c 9A70     		strb	r2, [r3, #2]
2283:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
 17016              		.loc 1 2283 0
 17017 1a6e 824B     		ldr	r3, .L700+16
 17018 1a70 B3F8BC32 		ldrh	r3, [r3, #700]
 17019 1a74 1A46     		mov	r2, r3
 17020 1a76 804B     		ldr	r3, .L700+16
 17021 1a78 B3F8BE32 		ldrh	r3, [r3, #702]
 17022 1a7c 07F11800 		add	r0, r7, #24
 17023 1a80 8049     		ldr	r1, .L700+28
 17024 1a82 FFF7FEFF 		bl	sprintf
2284:..\src/command_processing.c ****         strcat(info_string, str);
 17025              		.loc 1 2284 0
 17026 1a86 07F11803 		add	r3, r7, #24
 17027 1a8a 1946     		mov	r1, r3
 17028 1a8c 7869     		ldr	r0, [r7, #20]
 17029 1a8e FFF7FEFF 		bl	strcat
2285:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17030              		.loc 1 2285 0
 17031 1a92 7869     		ldr	r0, [r7, #20]
 17032 1a94 FFF7FEFF 		bl	strlen
 17033 1a98 0346     		mov	r3, r0
 17034 1a9a 1A46     		mov	r2, r3
 17035 1a9c 7B69     		ldr	r3, [r7, #20]
 17036 1a9e 1344     		add	r3, r3, r2
 17037 1aa0 734A     		ldr	r2, .L700+8
 17038 1aa2 1188     		ldrh	r1, [r2]	@ unaligned
 17039 1aa4 9278     		ldrb	r2, [r2, #2]
 17040 1aa6 1980     		strh	r1, [r3]	@ unaligned
 17041 1aa8 9A70     		strb	r2, [r3, #2]
2286:..\src/command_processing.c **** 
2287:..\src/command_processing.c **** #endif
2288:..\src/command_processing.c ****         
2289:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17042              		.loc 1 2289 0
 17043 1aaa D7F88830 		ldr	r3, [r7, #136]
 17044 1aae 93F8B432 		ldrb	r3, [r3, #692]	@ zero_extendqisi2
 17045 1ab2 002B     		cmp	r3, #0
 17046 1ab4 63D0     		beq	.L656
2290:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17047              		.loc 1 2290 0
 17048 1ab6 D7F88830 		ldr	r3, [r7, #136]
 17049 1aba D3F8AC22 		ldr	r2, [r3, #684]
 17050 1abe 07F11803 		add	r3, r7, #24
 17051 1ac2 7149     		ldr	r1, .L700+32
 17052 1ac4 1846     		mov	r0, r3
 17053 1ac6 FFF7FEFF 		bl	sprintf
2291:..\src/command_processing.c ****             strcat(info_string, str);
 17054              		.loc 1 2291 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 381


 17055 1aca 07F11803 		add	r3, r7, #24
 17056 1ace 1946     		mov	r1, r3
 17057 1ad0 7869     		ldr	r0, [r7, #20]
 17058 1ad2 FFF7FEFF 		bl	strcat
2292:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17059              		.loc 1 2292 0
 17060 1ad6 7869     		ldr	r0, [r7, #20]
 17061 1ad8 FFF7FEFF 		bl	strlen
 17062 1adc 0346     		mov	r3, r0
 17063 1ade 1A46     		mov	r2, r3
 17064 1ae0 7B69     		ldr	r3, [r7, #20]
 17065 1ae2 1344     		add	r3, r3, r2
 17066 1ae4 624A     		ldr	r2, .L700+8
 17067 1ae6 1188     		ldrh	r1, [r2]	@ unaligned
 17068 1ae8 9278     		ldrb	r2, [r2, #2]
 17069 1aea 1980     		strh	r1, [r3]	@ unaligned
 17070 1aec 9A70     		strb	r2, [r3, #2]
2293:..\src/command_processing.c ****             
2294:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17071              		.loc 1 2294 0
 17072 1aee D7F88830 		ldr	r3, [r7, #136]
 17073 1af2 D3F8B022 		ldr	r2, [r3, #688]
 17074 1af6 07F11803 		add	r3, r7, #24
 17075 1afa 6449     		ldr	r1, .L700+36
 17076 1afc 1846     		mov	r0, r3
 17077 1afe FFF7FEFF 		bl	sprintf
2295:..\src/command_processing.c ****             strcat(info_string, str);
 17078              		.loc 1 2295 0
 17079 1b02 07F11803 		add	r3, r7, #24
 17080 1b06 1946     		mov	r1, r3
 17081 1b08 7869     		ldr	r0, [r7, #20]
 17082 1b0a FFF7FEFF 		bl	strcat
2296:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17083              		.loc 1 2296 0
 17084 1b0e 7869     		ldr	r0, [r7, #20]
 17085 1b10 FFF7FEFF 		bl	strlen
 17086 1b14 0346     		mov	r3, r0
 17087 1b16 1A46     		mov	r2, r3
 17088 1b18 7B69     		ldr	r3, [r7, #20]
 17089 1b1a 1344     		add	r3, r3, r2
 17090 1b1c 544A     		ldr	r2, .L700+8
 17091 1b1e 1188     		ldrh	r1, [r2]	@ unaligned
 17092 1b20 9278     		ldrb	r2, [r2, #2]
 17093 1b22 1980     		strh	r1, [r3]	@ unaligned
 17094 1b24 9A70     		strb	r2, [r3, #2]
2297:..\src/command_processing.c ****             
2298:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17095              		.loc 1 2298 0
 17096 1b26 D7F88830 		ldr	r3, [r7, #136]
 17097 1b2a D3F8A822 		ldr	r2, [r3, #680]
 17098 1b2e D7F88830 		ldr	r3, [r7, #136]
 17099 1b32 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17100 1b36 1846     		mov	r0, r3
 17101 1b38 D7F88810 		ldr	r1, [r7, #136]
 17102 1b3c 0346     		mov	r3, r0
 17103 1b3e 5B00     		lsls	r3, r3, #1
 17104 1b40 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 382


 17105 1b42 1B01     		lsls	r3, r3, #4
 17106 1b44 0B44     		add	r3, r3, r1
 17107 1b46 03F29D13 		addw	r3, r3, #413
 17108 1b4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17109 1b4c 1A41     		asrs	r2, r2, r3
 17110 1b4e 07F11803 		add	r3, r7, #24
 17111 1b52 4F49     		ldr	r1, .L700+40
 17112 1b54 1846     		mov	r0, r3
 17113 1b56 FFF7FEFF 		bl	sprintf
2299:..\src/command_processing.c ****             strcat(info_string, str);
 17114              		.loc 1 2299 0
 17115 1b5a 07F11803 		add	r3, r7, #24
 17116 1b5e 1946     		mov	r1, r3
 17117 1b60 7869     		ldr	r0, [r7, #20]
 17118 1b62 FFF7FEFF 		bl	strcat
2300:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17119              		.loc 1 2300 0
 17120 1b66 7869     		ldr	r0, [r7, #20]
 17121 1b68 FFF7FEFF 		bl	strlen
 17122 1b6c 0346     		mov	r3, r0
 17123 1b6e 1A46     		mov	r2, r3
 17124 1b70 7B69     		ldr	r3, [r7, #20]
 17125 1b72 1344     		add	r3, r3, r2
 17126 1b74 3E4A     		ldr	r2, .L700+8
 17127 1b76 1188     		ldrh	r1, [r2]	@ unaligned
 17128 1b78 9278     		ldrb	r2, [r2, #2]
 17129 1b7a 1980     		strh	r1, [r3]	@ unaligned
 17130 1b7c 9A70     		strb	r2, [r3, #2]
 17131              	.L656:
2301:..\src/command_processing.c ****         }
2302:..\src/command_processing.c **** 
2303:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17132              		.loc 1 2303 0
 17133 1b7e D7F88830 		ldr	r3, [r7, #136]
 17134 1b82 93F80832 		ldrb	r3, [r3, #520]	@ zero_extendqisi2
 17135 1b86 002B     		cmp	r3, #0
 17136 1b88 00F0D281 		beq	.L657
2304:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17137              		.loc 1 2304 0
 17138 1b8c 414B     		ldr	r3, .L700+44
 17139 1b8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17140 1b90 1A46     		mov	r2, r3
 17141 1b92 07F11803 		add	r3, r7, #24
 17142 1b96 4049     		ldr	r1, .L700+48
 17143 1b98 1846     		mov	r0, r3
 17144 1b9a FFF7FEFF 		bl	sprintf
2305:..\src/command_processing.c ****             strcat(info_string, str);
 17145              		.loc 1 2305 0
 17146 1b9e 07F11803 		add	r3, r7, #24
 17147 1ba2 1946     		mov	r1, r3
 17148 1ba4 7869     		ldr	r0, [r7, #20]
 17149 1ba6 FFF7FEFF 		bl	strcat
2306:..\src/command_processing.c ****             
2307:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17150              		.loc 1 2307 0
 17151 1baa 7869     		ldr	r0, [r7, #20]
 17152 1bac FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 383


 17153 1bb0 0346     		mov	r3, r0
 17154 1bb2 1A46     		mov	r2, r3
 17155 1bb4 7B69     		ldr	r3, [r7, #20]
 17156 1bb6 1344     		add	r3, r3, r2
 17157 1bb8 2D4A     		ldr	r2, .L700+8
 17158 1bba 1188     		ldrh	r1, [r2]	@ unaligned
 17159 1bbc 9278     		ldrb	r2, [r2, #2]
 17160 1bbe 1980     		strh	r1, [r3]	@ unaligned
 17161 1bc0 9A70     		strb	r2, [r3, #2]
2308:..\src/command_processing.c ****             
2309:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17162              		.loc 1 2309 0
 17163 1bc2 7869     		ldr	r0, [r7, #20]
 17164 1bc4 FFF7FEFF 		bl	strlen
 17165 1bc8 0346     		mov	r3, r0
 17166 1bca 1A46     		mov	r2, r3
 17167 1bcc 7B69     		ldr	r3, [r7, #20]
 17168 1bce 1344     		add	r3, r3, r2
 17169 1bd0 324A     		ldr	r2, .L700+52
 17170 1bd2 1D46     		mov	r5, r3
 17171 1bd4 1446     		mov	r4, r2
 17172 1bd6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17173 1bd8 2860     		str	r0, [r5]	@ unaligned
 17174 1bda 6960     		str	r1, [r5, #4]	@ unaligned
 17175 1bdc AA60     		str	r2, [r5, #8]	@ unaligned
 17176 1bde EB60     		str	r3, [r5, #12]	@ unaligned
 17177 1be0 2068     		ldr	r0, [r4]	@ unaligned
 17178 1be2 2861     		str	r0, [r5, #16]	@ unaligned
 17179 1be4 2379     		ldrb	r3, [r4, #4]
 17180 1be6 2B75     		strb	r3, [r5, #20]
2310:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17181              		.loc 1 2310 0
 17182 1be8 0023     		movs	r3, #0
 17183 1bea C7F89430 		str	r3, [r7, #148]
 17184 1bee 88E1     		b	.L658
 17185              	.L669:
2311:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17186              		.loc 1 2311 0
 17187 1bf0 2B4A     		ldr	r2, .L700+56
 17188 1bf2 D7F89430 		ldr	r3, [r7, #148]
 17189 1bf6 1344     		add	r3, r3, r2
 17190 1bf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17191 1bfa 07F11800 		add	r0, r7, #24
 17192 1bfe D7F89420 		ldr	r2, [r7, #148]
 17193 1c02 2849     		ldr	r1, .L700+60
 17194 1c04 FFF7FEFF 		bl	sprintf
2312:..\src/command_processing.c ****                 strcat(info_string, str);
 17195              		.loc 1 2312 0
 17196 1c08 07F11803 		add	r3, r7, #24
 17197 1c0c 1946     		mov	r1, r3
 17198 1c0e 7869     		ldr	r0, [r7, #20]
 17199 1c10 FFF7FEFF 		bl	strcat
2313:..\src/command_processing.c ****                 
2314:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17200              		.loc 1 2314 0
 17201 1c14 07F11803 		add	r3, r7, #24
 17202 1c18 234A     		ldr	r2, .L700+64
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 384


 17203 1c1a 1C46     		mov	r4, r3
 17204 1c1c 1546     		mov	r5, r2
 17205 1c1e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17206 1c20 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17207 1c22 2B68     		ldr	r3, [r5]
 17208 1c24 2380     		strh	r3, [r4]	@ movhi
2315:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17209              		.loc 1 2315 0
 17210 1c26 1E4A     		ldr	r2, .L700+56
 17211 1c28 D7F89430 		ldr	r3, [r7, #148]
 17212 1c2c 1344     		add	r3, r3, r2
 17213 1c2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17214 1c30 1946     		mov	r1, r3
 17215 1c32 D7F88820 		ldr	r2, [r7, #136]
 17216 1c36 0B46     		mov	r3, r1
 17217 1c38 9B00     		lsls	r3, r3, #2
 17218 1c3a 0B44     		add	r3, r3, r1
 17219 1c3c 1344     		add	r3, r3, r2
 17220 1c3e 03F20A23 		addw	r3, r3, #522
 17221 1c42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17222 1c44 002B     		cmp	r3, #0
 17223 1c46 33D0     		beq	.L659
2316:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17224              		.loc 1 2316 0
 17225 1c48 07F11803 		add	r3, r7, #24
 17226 1c4c 1846     		mov	r0, r3
 17227 1c4e FFF7FEFF 		bl	strlen
 17228 1c52 0346     		mov	r3, r0
 17229 1c54 1A46     		mov	r2, r3
 17230 1c56 07F11803 		add	r3, r7, #24
 17231 1c5a 1344     		add	r3, r3, r2
 17232 1c5c 134A     		ldr	r2, .L700+68
 17233 1c5e 1068     		ldr	r0, [r2]	@ unaligned
 17234 1c60 1860     		str	r0, [r3]	@ unaligned
 17235 1c62 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17236 1c64 9A80     		strh	r2, [r3, #4]	@ unaligned
 17237 1c66 32E0     		b	.L660
 17238              	.L701:
 17239              		.align	2
 17240              	.L700:
 17241 1c68 00000000 		.word	g_adc_meas
 17242 1c6c 681A0000 		.word	.LC247
 17243 1c70 9C110000 		.word	.LC154
 17244 1c74 7C1A0000 		.word	.LC248
 17245 1c78 00000000 		.word	c_mem
 17246 1c7c 981A0000 		.word	.LC249
 17247 1c80 AC1A0000 		.word	.LC250
 17248 1c84 C41A0000 		.word	.LC251
 17249 1c88 E41A0000 		.word	.LC252
 17250 1c8c 001B0000 		.word	.LC253
 17251 1c90 281B0000 		.word	.LC254
 17252 1c94 00000000 		.word	N_IMU_Connected
 17253 1c98 3C1B0000 		.word	.LC255
 17254 1c9c 501B0000 		.word	.LC256
 17255 1ca0 00000000 		.word	IMU_connected
 17256 1ca4 681B0000 		.word	.LC257
 17257 1ca8 7C1B0000 		.word	.LC258
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 385


 17258 1cac 84130000 		.word	.LC177
 17259              	.L659:
2317:..\src/command_processing.c ****                 else
2318:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17260              		.loc 1 2318 0
 17261 1cb0 07F11803 		add	r3, r7, #24
 17262 1cb4 1846     		mov	r0, r3
 17263 1cb6 FFF7FEFF 		bl	strlen
 17264 1cba 0346     		mov	r3, r0
 17265 1cbc 1A46     		mov	r2, r3
 17266 1cbe 07F11803 		add	r3, r7, #24
 17267 1cc2 1344     		add	r3, r3, r2
 17268 1cc4 BD4A     		ldr	r2, .L702
 17269 1cc6 1068     		ldr	r0, [r2]	@ unaligned
 17270 1cc8 1860     		str	r0, [r3]	@ unaligned
 17271 1cca 1279     		ldrb	r2, [r2, #4]
 17272 1ccc 1A71     		strb	r2, [r3, #4]
 17273              	.L660:
2319:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17274              		.loc 1 2319 0
 17275 1cce 07F11803 		add	r3, r7, #24
 17276 1cd2 1846     		mov	r0, r3
 17277 1cd4 FFF7FEFF 		bl	strlen
 17278 1cd8 0346     		mov	r3, r0
 17279 1cda 1A46     		mov	r2, r3
 17280 1cdc 07F11803 		add	r3, r7, #24
 17281 1ce0 1344     		add	r3, r3, r2
 17282 1ce2 B74A     		ldr	r2, .L702+4
 17283 1ce4 1C46     		mov	r4, r3
 17284 1ce6 1346     		mov	r3, r2
 17285 1ce8 07CB     		ldmia	r3!, {r0, r1, r2}
 17286 1cea 2060     		str	r0, [r4]	@ unaligned
 17287 1cec 6160     		str	r1, [r4, #4]	@ unaligned
 17288 1cee A260     		str	r2, [r4, #8]	@ unaligned
 17289 1cf0 1B88     		ldrh	r3, [r3]	@ unaligned
 17290 1cf2 A381     		strh	r3, [r4, #12]	@ unaligned
2320:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17291              		.loc 1 2320 0
 17292 1cf4 B34A     		ldr	r2, .L702+8
 17293 1cf6 D7F89430 		ldr	r3, [r7, #148]
 17294 1cfa 1344     		add	r3, r3, r2
 17295 1cfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17296 1cfe 1946     		mov	r1, r3
 17297 1d00 D7F88820 		ldr	r2, [r7, #136]
 17298 1d04 0B46     		mov	r3, r1
 17299 1d06 9B00     		lsls	r3, r3, #2
 17300 1d08 0B44     		add	r3, r3, r1
 17301 1d0a 1344     		add	r3, r3, r2
 17302 1d0c 03F20B23 		addw	r3, r3, #523
 17303 1d10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17304 1d12 002B     		cmp	r3, #0
 17305 1d14 0FD0     		beq	.L661
2321:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17306              		.loc 1 2321 0
 17307 1d16 07F11803 		add	r3, r7, #24
 17308 1d1a 1846     		mov	r0, r3
 17309 1d1c FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 386


 17310 1d20 0346     		mov	r3, r0
 17311 1d22 1A46     		mov	r2, r3
 17312 1d24 07F11803 		add	r3, r7, #24
 17313 1d28 1344     		add	r3, r3, r2
 17314 1d2a A74A     		ldr	r2, .L702+12
 17315 1d2c 1068     		ldr	r0, [r2]	@ unaligned
 17316 1d2e 1860     		str	r0, [r3]	@ unaligned
 17317 1d30 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17318 1d32 9A80     		strh	r2, [r3, #4]	@ unaligned
 17319 1d34 0EE0     		b	.L662
 17320              	.L661:
2322:..\src/command_processing.c ****                 else
2323:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17321              		.loc 1 2323 0
 17322 1d36 07F11803 		add	r3, r7, #24
 17323 1d3a 1846     		mov	r0, r3
 17324 1d3c FFF7FEFF 		bl	strlen
 17325 1d40 0346     		mov	r3, r0
 17326 1d42 1A46     		mov	r2, r3
 17327 1d44 07F11803 		add	r3, r7, #24
 17328 1d48 1344     		add	r3, r3, r2
 17329 1d4a 9C4A     		ldr	r2, .L702
 17330 1d4c 1068     		ldr	r0, [r2]	@ unaligned
 17331 1d4e 1860     		str	r0, [r3]	@ unaligned
 17332 1d50 1279     		ldrb	r2, [r2, #4]
 17333 1d52 1A71     		strb	r2, [r3, #4]
 17334              	.L662:
2324:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17335              		.loc 1 2324 0
 17336 1d54 07F11803 		add	r3, r7, #24
 17337 1d58 1846     		mov	r0, r3
 17338 1d5a FFF7FEFF 		bl	strlen
 17339 1d5e 0346     		mov	r3, r0
 17340 1d60 1A46     		mov	r2, r3
 17341 1d62 07F11803 		add	r3, r7, #24
 17342 1d66 1344     		add	r3, r3, r2
 17343 1d68 984A     		ldr	r2, .L702+16
 17344 1d6a 1D46     		mov	r5, r3
 17345 1d6c 1446     		mov	r4, r2
 17346 1d6e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17347 1d70 2860     		str	r0, [r5]	@ unaligned
 17348 1d72 6960     		str	r1, [r5, #4]	@ unaligned
 17349 1d74 AA60     		str	r2, [r5, #8]	@ unaligned
 17350 1d76 EB60     		str	r3, [r5, #12]	@ unaligned
 17351 1d78 2378     		ldrb	r3, [r4]
 17352 1d7a 2B74     		strb	r3, [r5, #16]
2325:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17353              		.loc 1 2325 0
 17354 1d7c 914A     		ldr	r2, .L702+8
 17355 1d7e D7F89430 		ldr	r3, [r7, #148]
 17356 1d82 1344     		add	r3, r3, r2
 17357 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17358 1d86 1946     		mov	r1, r3
 17359 1d88 D7F88820 		ldr	r2, [r7, #136]
 17360 1d8c 0B46     		mov	r3, r1
 17361 1d8e 9B00     		lsls	r3, r3, #2
 17362 1d90 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 387


 17363 1d92 1344     		add	r3, r3, r2
 17364 1d94 03F50373 		add	r3, r3, #524
 17365 1d98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17366 1d9a 002B     		cmp	r3, #0
 17367 1d9c 0FD0     		beq	.L663
2326:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17368              		.loc 1 2326 0
 17369 1d9e 07F11803 		add	r3, r7, #24
 17370 1da2 1846     		mov	r0, r3
 17371 1da4 FFF7FEFF 		bl	strlen
 17372 1da8 0346     		mov	r3, r0
 17373 1daa 1A46     		mov	r2, r3
 17374 1dac 07F11803 		add	r3, r7, #24
 17375 1db0 1344     		add	r3, r3, r2
 17376 1db2 854A     		ldr	r2, .L702+12
 17377 1db4 1068     		ldr	r0, [r2]	@ unaligned
 17378 1db6 1860     		str	r0, [r3]	@ unaligned
 17379 1db8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17380 1dba 9A80     		strh	r2, [r3, #4]	@ unaligned
 17381 1dbc 0EE0     		b	.L664
 17382              	.L663:
2327:..\src/command_processing.c ****                 else
2328:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17383              		.loc 1 2328 0
 17384 1dbe 07F11803 		add	r3, r7, #24
 17385 1dc2 1846     		mov	r0, r3
 17386 1dc4 FFF7FEFF 		bl	strlen
 17387 1dc8 0346     		mov	r3, r0
 17388 1dca 1A46     		mov	r2, r3
 17389 1dcc 07F11803 		add	r3, r7, #24
 17390 1dd0 1344     		add	r3, r3, r2
 17391 1dd2 7A4A     		ldr	r2, .L702
 17392 1dd4 1068     		ldr	r0, [r2]	@ unaligned
 17393 1dd6 1860     		str	r0, [r3]	@ unaligned
 17394 1dd8 1279     		ldrb	r2, [r2, #4]
 17395 1dda 1A71     		strb	r2, [r3, #4]
 17396              	.L664:
2329:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17397              		.loc 1 2329 0
 17398 1ddc 07F11803 		add	r3, r7, #24
 17399 1de0 1846     		mov	r0, r3
 17400 1de2 FFF7FEFF 		bl	strlen
 17401 1de6 0346     		mov	r3, r0
 17402 1de8 1A46     		mov	r2, r3
 17403 1dea 07F11803 		add	r3, r7, #24
 17404 1dee 1344     		add	r3, r3, r2
 17405 1df0 774A     		ldr	r2, .L702+20
 17406 1df2 1C46     		mov	r4, r3
 17407 1df4 1346     		mov	r3, r2
 17408 1df6 07CB     		ldmia	r3!, {r0, r1, r2}
 17409 1df8 2060     		str	r0, [r4]	@ unaligned
 17410 1dfa 6160     		str	r1, [r4, #4]	@ unaligned
 17411 1dfc A260     		str	r2, [r4, #8]	@ unaligned
 17412 1dfe 1B88     		ldrh	r3, [r3]	@ unaligned
 17413 1e00 A381     		strh	r3, [r4, #12]	@ unaligned
2330:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17414              		.loc 1 2330 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 388


 17415 1e02 704A     		ldr	r2, .L702+8
 17416 1e04 D7F89430 		ldr	r3, [r7, #148]
 17417 1e08 1344     		add	r3, r3, r2
 17418 1e0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17419 1e0c 1946     		mov	r1, r3
 17420 1e0e D7F88820 		ldr	r2, [r7, #136]
 17421 1e12 0B46     		mov	r3, r1
 17422 1e14 9B00     		lsls	r3, r3, #2
 17423 1e16 0B44     		add	r3, r3, r1
 17424 1e18 1344     		add	r3, r3, r2
 17425 1e1a 03F20D23 		addw	r3, r3, #525
 17426 1e1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17427 1e20 002B     		cmp	r3, #0
 17428 1e22 0FD0     		beq	.L665
2331:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17429              		.loc 1 2331 0
 17430 1e24 07F11803 		add	r3, r7, #24
 17431 1e28 1846     		mov	r0, r3
 17432 1e2a FFF7FEFF 		bl	strlen
 17433 1e2e 0346     		mov	r3, r0
 17434 1e30 1A46     		mov	r2, r3
 17435 1e32 07F11803 		add	r3, r7, #24
 17436 1e36 1344     		add	r3, r3, r2
 17437 1e38 634A     		ldr	r2, .L702+12
 17438 1e3a 1068     		ldr	r0, [r2]	@ unaligned
 17439 1e3c 1860     		str	r0, [r3]	@ unaligned
 17440 1e3e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17441 1e40 9A80     		strh	r2, [r3, #4]	@ unaligned
 17442 1e42 0EE0     		b	.L666
 17443              	.L665:
2332:..\src/command_processing.c ****                 else
2333:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17444              		.loc 1 2333 0
 17445 1e44 07F11803 		add	r3, r7, #24
 17446 1e48 1846     		mov	r0, r3
 17447 1e4a FFF7FEFF 		bl	strlen
 17448 1e4e 0346     		mov	r3, r0
 17449 1e50 1A46     		mov	r2, r3
 17450 1e52 07F11803 		add	r3, r7, #24
 17451 1e56 1344     		add	r3, r3, r2
 17452 1e58 584A     		ldr	r2, .L702
 17453 1e5a 1068     		ldr	r0, [r2]	@ unaligned
 17454 1e5c 1860     		str	r0, [r3]	@ unaligned
 17455 1e5e 1279     		ldrb	r2, [r2, #4]
 17456 1e60 1A71     		strb	r2, [r3, #4]
 17457              	.L666:
2334:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17458              		.loc 1 2334 0
 17459 1e62 07F11803 		add	r3, r7, #24
 17460 1e66 1846     		mov	r0, r3
 17461 1e68 FFF7FEFF 		bl	strlen
 17462 1e6c 0346     		mov	r3, r0
 17463 1e6e 1A46     		mov	r2, r3
 17464 1e70 07F11803 		add	r3, r7, #24
 17465 1e74 1344     		add	r3, r3, r2
 17466 1e76 574A     		ldr	r2, .L702+24
 17467 1e78 1C46     		mov	r4, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 389


 17468 1e7a 1346     		mov	r3, r2
 17469 1e7c 07CB     		ldmia	r3!, {r0, r1, r2}
 17470 1e7e 2060     		str	r0, [r4]	@ unaligned
 17471 1e80 6160     		str	r1, [r4, #4]	@ unaligned
 17472 1e82 A260     		str	r2, [r4, #8]	@ unaligned
 17473 1e84 1A88     		ldrh	r2, [r3]	@ unaligned
 17474 1e86 9B78     		ldrb	r3, [r3, #2]
 17475 1e88 A281     		strh	r2, [r4, #12]	@ unaligned
 17476 1e8a A373     		strb	r3, [r4, #14]
2335:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17477              		.loc 1 2335 0
 17478 1e8c 4D4A     		ldr	r2, .L702+8
 17479 1e8e D7F89430 		ldr	r3, [r7, #148]
 17480 1e92 1344     		add	r3, r3, r2
 17481 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17482 1e96 1946     		mov	r1, r3
 17483 1e98 D7F88820 		ldr	r2, [r7, #136]
 17484 1e9c 0B46     		mov	r3, r1
 17485 1e9e 9B00     		lsls	r3, r3, #2
 17486 1ea0 0B44     		add	r3, r3, r1
 17487 1ea2 1344     		add	r3, r3, r2
 17488 1ea4 03F20E23 		addw	r3, r3, #526
 17489 1ea8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17490 1eaa 002B     		cmp	r3, #0
 17491 1eac 0FD0     		beq	.L667
2336:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17492              		.loc 1 2336 0
 17493 1eae 07F11803 		add	r3, r7, #24
 17494 1eb2 1846     		mov	r0, r3
 17495 1eb4 FFF7FEFF 		bl	strlen
 17496 1eb8 0346     		mov	r3, r0
 17497 1eba 1A46     		mov	r2, r3
 17498 1ebc 07F11803 		add	r3, r7, #24
 17499 1ec0 1344     		add	r3, r3, r2
 17500 1ec2 414A     		ldr	r2, .L702+12
 17501 1ec4 1068     		ldr	r0, [r2]	@ unaligned
 17502 1ec6 1860     		str	r0, [r3]	@ unaligned
 17503 1ec8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17504 1eca 9A80     		strh	r2, [r3, #4]	@ unaligned
 17505 1ecc 0EE0     		b	.L668
 17506              	.L667:
2337:..\src/command_processing.c ****                 else
2338:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17507              		.loc 1 2338 0
 17508 1ece 07F11803 		add	r3, r7, #24
 17509 1ed2 1846     		mov	r0, r3
 17510 1ed4 FFF7FEFF 		bl	strlen
 17511 1ed8 0346     		mov	r3, r0
 17512 1eda 1A46     		mov	r2, r3
 17513 1edc 07F11803 		add	r3, r7, #24
 17514 1ee0 1344     		add	r3, r3, r2
 17515 1ee2 364A     		ldr	r2, .L702
 17516 1ee4 1068     		ldr	r0, [r2]	@ unaligned
 17517 1ee6 1860     		str	r0, [r3]	@ unaligned
 17518 1ee8 1279     		ldrb	r2, [r2, #4]
 17519 1eea 1A71     		strb	r2, [r3, #4]
 17520              	.L668:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 390


2339:..\src/command_processing.c ****                      
2340:..\src/command_processing.c ****                 strcat(info_string, str);
 17521              		.loc 1 2340 0 discriminator 2
 17522 1eec 07F11803 		add	r3, r7, #24
 17523 1ef0 1946     		mov	r1, r3
 17524 1ef2 7869     		ldr	r0, [r7, #20]
 17525 1ef4 FFF7FEFF 		bl	strcat
2310:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17526              		.loc 1 2310 0 discriminator 2
 17527 1ef8 D7F89430 		ldr	r3, [r7, #148]
 17528 1efc 0133     		adds	r3, r3, #1
 17529 1efe C7F89430 		str	r3, [r7, #148]
 17530              	.L658:
2310:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17531              		.loc 1 2310 0 is_stmt 0 discriminator 1
 17532 1f02 354B     		ldr	r3, .L702+28
 17533 1f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17534 1f06 1A46     		mov	r2, r3
 17535 1f08 D7F89430 		ldr	r3, [r7, #148]
 17536 1f0c 9A42     		cmp	r2, r3
 17537 1f0e 3FF76FAE 		bgt	.L669
2341:..\src/command_processing.c ****             }       
2342:..\src/command_processing.c ****             
2343:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17538              		.loc 1 2343 0 is_stmt 1
 17539 1f12 7869     		ldr	r0, [r7, #20]
 17540 1f14 FFF7FEFF 		bl	strlen
 17541 1f18 0346     		mov	r3, r0
 17542 1f1a 1A46     		mov	r2, r3
 17543 1f1c 7B69     		ldr	r3, [r7, #20]
 17544 1f1e 1344     		add	r3, r3, r2
 17545 1f20 2E4A     		ldr	r2, .L702+32
 17546 1f22 1188     		ldrh	r1, [r2]	@ unaligned
 17547 1f24 9278     		ldrb	r2, [r2, #2]
 17548 1f26 1980     		strh	r1, [r3]	@ unaligned
 17549 1f28 9A70     		strb	r2, [r3, #2]
2344:..\src/command_processing.c ****           
2345:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17550              		.loc 1 2345 0
 17551 1f2a 7869     		ldr	r0, [r7, #20]
 17552 1f2c FFF7FEFF 		bl	IMU_reading_info
 17553              	.L657:
2346:..\src/command_processing.c ****         }
2347:..\src/command_processing.c ****         
2348:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17554              		.loc 1 2348 0
 17555 1f30 7869     		ldr	r0, [r7, #20]
 17556 1f32 FFF7FEFF 		bl	strlen
 17557 1f36 0346     		mov	r3, r0
 17558 1f38 1A46     		mov	r2, r3
 17559 1f3a 7B69     		ldr	r3, [r7, #20]
 17560 1f3c 1344     		add	r3, r3, r2
 17561 1f3e 274A     		ldr	r2, .L702+32
 17562 1f40 1188     		ldrh	r1, [r2]	@ unaligned
 17563 1f42 9278     		ldrb	r2, [r2, #2]
 17564 1f44 1980     		strh	r1, [r3]	@ unaligned
 17565 1f46 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 391


2349:..\src/command_processing.c **** 
2350:..\src/command_processing.c **** #ifdef GENERIC_FW   
2351:..\src/command_processing.c ****         int j;
2352:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 17566              		.loc 1 2352 0
 17567 1f48 7869     		ldr	r0, [r7, #20]
 17568 1f4a FFF7FEFF 		bl	strlen
 17569 1f4e 0346     		mov	r3, r0
 17570 1f50 1A46     		mov	r2, r3
 17571 1f52 7B69     		ldr	r3, [r7, #20]
 17572 1f54 1344     		add	r3, r3, r2
 17573 1f56 224A     		ldr	r2, .L702+36
 17574 1f58 1D46     		mov	r5, r3
 17575 1f5a 1446     		mov	r4, r2
 17576 1f5c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17577 1f5e 2860     		str	r0, [r5]	@ unaligned
 17578 1f60 6960     		str	r1, [r5, #4]	@ unaligned
 17579 1f62 AA60     		str	r2, [r5, #8]	@ unaligned
 17580 1f64 EB60     		str	r3, [r5, #12]	@ unaligned
 17581 1f66 03CC     		ldmia	r4!, {r0, r1}
 17582 1f68 2861     		str	r0, [r5, #16]	@ unaligned
 17583 1f6a 6961     		str	r1, [r5, #20]	@ unaligned
2353:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 17584              		.loc 1 2353 0
 17585 1f6c 0023     		movs	r3, #0
 17586 1f6e C7F89430 		str	r3, [r7, #148]
 17587 1f72 BCE0     		b	.L670
 17588              	.L679:
2354:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17589              		.loc 1 2354 0
 17590 1f74 1B4A     		ldr	r2, .L702+40
 17591 1f76 D7F89430 		ldr	r3, [r7, #148]
 17592 1f7a 1344     		add	r3, r3, r2
 17593 1f7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17594 1f7e 07F11800 		add	r0, r7, #24
 17595 1f82 D7F89420 		ldr	r2, [r7, #148]
 17596 1f86 1849     		ldr	r1, .L702+44
 17597 1f88 FFF7FEFF 		bl	sprintf
2355:..\src/command_processing.c ****             strcat(info_string, str);
 17598              		.loc 1 2355 0
 17599 1f8c 07F11803 		add	r3, r7, #24
 17600 1f90 1946     		mov	r1, r3
 17601 1f92 7869     		ldr	r0, [r7, #20]
 17602 1f94 FFF7FEFF 		bl	strcat
2356:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 17603              		.loc 1 2356 0
 17604 1f98 D7F88830 		ldr	r3, [r7, #136]
 17605 1f9c 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17606 1fa0 1A46     		mov	r2, r3
 17607 1fa2 D7F89430 		ldr	r3, [r7, #148]
 17608 1fa6 9A42     		cmp	r2, r3
 17609 1fa8 2FD1     		bne	.L671
2357:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 17610              		.loc 1 2357 0
 17611 1faa D7F88830 		ldr	r3, [r7, #136]
 17612 1fae 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17613 1fb2 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 392


 17614 1fb4 1CD0     		beq	.L672
 17615              		.loc 1 2357 0 is_stmt 0 discriminator 1
 17616 1fb6 0D4A     		ldr	r2, .L702+48
 17617 1fb8 1BE0     		b	.L673
 17618              	.L703:
 17619 1fba 00BF     		.align	2
 17620              	.L702:
 17621 1fbc 8C130000 		.word	.LC178
 17622 1fc0 901B0000 		.word	.LC259
 17623 1fc4 00000000 		.word	IMU_connected
 17624 1fc8 84130000 		.word	.LC177
 17625 1fcc A01B0000 		.word	.LC260
 17626 1fd0 B41B0000 		.word	.LC261
 17627 1fd4 C41B0000 		.word	.LC262
 17628 1fd8 00000000 		.word	N_IMU_Connected
 17629 1fdc 9C110000 		.word	.LC154
 17630 1fe0 D41B0000 		.word	.LC263
 17631 1fe4 00000000 		.word	N_Encoder_Line_Connected
 17632 1fe8 EC1B0000 		.word	.LC264
 17633 1fec 0C1C0000 		.word	.LC265
 17634              	.L672:
 17635              		.loc 1 2357 0 discriminator 2
 17636 1ff0 534A     		ldr	r2, .L704
 17637              	.L673:
 17638              		.loc 1 2357 0 discriminator 4
 17639 1ff2 07F11803 		add	r3, r7, #24
 17640 1ff6 5349     		ldr	r1, .L704+4
 17641 1ff8 1846     		mov	r0, r3
 17642 1ffa FFF7FEFF 		bl	sprintf
2358:..\src/command_processing.c ****                 strcat(info_string, str);
 17643              		.loc 1 2358 0 is_stmt 1 discriminator 4
 17644 1ffe 07F11803 		add	r3, r7, #24
 17645 2002 1946     		mov	r1, r3
 17646 2004 7869     		ldr	r0, [r7, #20]
 17647 2006 FFF7FEFF 		bl	strcat
 17648              	.L671:
2359:..\src/command_processing.c ****             }
2360:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17649              		.loc 1 2360 0
 17650 200a 7869     		ldr	r0, [r7, #20]
 17651 200c FFF7FEFF 		bl	strlen
 17652 2010 0346     		mov	r3, r0
 17653 2012 1A46     		mov	r2, r3
 17654 2014 7B69     		ldr	r3, [r7, #20]
 17655 2016 1344     		add	r3, r3, r2
 17656 2018 4B4A     		ldr	r2, .L704+8
 17657 201a 1188     		ldrh	r1, [r2]	@ unaligned
 17658 201c 9278     		ldrb	r2, [r2, #2]
 17659 201e 1980     		strh	r1, [r3]	@ unaligned
 17660 2020 9A70     		strb	r2, [r3, #2]
2361:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 17661              		.loc 1 2361 0
 17662 2022 4A4A     		ldr	r2, .L704+12
 17663 2024 D7F89430 		ldr	r3, [r7, #148]
 17664 2028 1344     		add	r3, r3, r2
 17665 202a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17666 202c 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 393


 17667 202e 59D0     		beq	.L674
2362:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 17668              		.loc 1 2362 0
 17669 2030 7869     		ldr	r0, [r7, #20]
 17670 2032 FFF7FEFF 		bl	strlen
 17671 2036 0346     		mov	r3, r0
 17672 2038 1A46     		mov	r2, r3
 17673 203a 7B69     		ldr	r3, [r7, #20]
 17674 203c 1344     		add	r3, r3, r2
 17675 203e 444A     		ldr	r2, .L704+16
 17676 2040 1D46     		mov	r5, r3
 17677 2042 1446     		mov	r4, r2
 17678 2044 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17679 2046 2860     		str	r0, [r5]	@ unaligned
 17680 2048 6960     		str	r1, [r5, #4]	@ unaligned
 17681 204a AA60     		str	r2, [r5, #8]	@ unaligned
 17682 204c EB60     		str	r3, [r5, #12]	@ unaligned
 17683 204e 2068     		ldr	r0, [r4]	@ unaligned
 17684 2050 2861     		str	r0, [r5, #16]	@ unaligned
 17685 2052 A388     		ldrh	r3, [r4, #4]	@ unaligned
 17686 2054 AB82     		strh	r3, [r5, #20]	@ unaligned
2363:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17687              		.loc 1 2363 0
 17688 2056 0023     		movs	r3, #0
 17689 2058 C7F88C30 		str	r3, [r7, #140]
 17690 205c 2CE0     		b	.L675
 17691              	.L678:
2364:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 17692              		.loc 1 2364 0
 17693 205e 3D49     		ldr	r1, .L704+20
 17694 2060 D7F89420 		ldr	r2, [r7, #148]
 17695 2064 1346     		mov	r3, r2
 17696 2066 9B00     		lsls	r3, r3, #2
 17697 2068 1344     		add	r3, r3, r2
 17698 206a D7F88C20 		ldr	r2, [r7, #140]
 17699 206e 1344     		add	r3, r3, r2
 17700 2070 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 17701 2074 1C46     		mov	r4, r3
 17702 2076 3849     		ldr	r1, .L704+24
 17703 2078 D7F89420 		ldr	r2, [r7, #148]
 17704 207c 1346     		mov	r3, r2
 17705 207e 9B00     		lsls	r3, r3, #2
 17706 2080 1344     		add	r3, r3, r2
 17707 2082 CA18     		adds	r2, r1, r3
 17708 2084 D7F88C30 		ldr	r3, [r7, #140]
 17709 2088 1344     		add	r3, r3, r2
 17710 208a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17711 208c 102B     		cmp	r3, #16
 17712 208e 01D1     		bne	.L676
 17713              		.loc 1 2364 0 is_stmt 0 discriminator 1
 17714 2090 324B     		ldr	r3, .L704+28
 17715 2092 00E0     		b	.L677
 17716              	.L676:
 17717              		.loc 1 2364 0 discriminator 2
 17718 2094 324B     		ldr	r3, .L704+32
 17719              	.L677:
 17720              		.loc 1 2364 0 discriminator 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 394


 17721 2096 07F11800 		add	r0, r7, #24
 17722 209a 2246     		mov	r2, r4
 17723 209c 3149     		ldr	r1, .L704+36
 17724 209e FFF7FEFF 		bl	sprintf
2365:..\src/command_processing.c ****                     strcat(info_string, str);
 17725              		.loc 1 2365 0 is_stmt 1 discriminator 4
 17726 20a2 07F11803 		add	r3, r7, #24
 17727 20a6 1946     		mov	r1, r3
 17728 20a8 7869     		ldr	r0, [r7, #20]
 17729 20aa FFF7FEFF 		bl	strcat
2363:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17730              		.loc 1 2363 0 discriminator 4
 17731 20ae D7F88C30 		ldr	r3, [r7, #140]
 17732 20b2 0133     		adds	r3, r3, #1
 17733 20b4 C7F88C30 		str	r3, [r7, #140]
 17734              	.L675:
2363:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17735              		.loc 1 2363 0 is_stmt 0 discriminator 2
 17736 20b8 244A     		ldr	r2, .L704+12
 17737 20ba D7F89430 		ldr	r3, [r7, #148]
 17738 20be 1344     		add	r3, r3, r2
 17739 20c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17740 20c2 1A46     		mov	r2, r3
 17741 20c4 D7F88C30 		ldr	r3, [r7, #140]
 17742 20c8 9A42     		cmp	r2, r3
 17743 20ca C8DC     		bgt	.L678
2366:..\src/command_processing.c ****                 }
2367:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 17744              		.loc 1 2367 0 is_stmt 1
 17745 20cc 7869     		ldr	r0, [r7, #20]
 17746 20ce FFF7FEFF 		bl	strlen
 17747 20d2 0346     		mov	r3, r0
 17748 20d4 1A46     		mov	r2, r3
 17749 20d6 7B69     		ldr	r3, [r7, #20]
 17750 20d8 1344     		add	r3, r3, r2
 17751 20da 1B4A     		ldr	r2, .L704+8
 17752 20dc 1188     		ldrh	r1, [r2]	@ unaligned
 17753 20de 9278     		ldrb	r2, [r2, #2]
 17754 20e0 1980     		strh	r1, [r3]	@ unaligned
 17755 20e2 9A70     		strb	r2, [r3, #2]
 17756              	.L674:
2353:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17757              		.loc 1 2353 0 discriminator 2
 17758 20e4 D7F89430 		ldr	r3, [r7, #148]
 17759 20e8 0133     		adds	r3, r3, #1
 17760 20ea C7F89430 		str	r3, [r7, #148]
 17761              	.L670:
2353:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17762              		.loc 1 2353 0 is_stmt 0 discriminator 1
 17763 20ee D7F89430 		ldr	r3, [r7, #148]
 17764 20f2 012B     		cmp	r3, #1
 17765 20f4 7FF73EAF 		ble	.L679
2368:..\src/command_processing.c ****             }
2369:..\src/command_processing.c ****         }
2370:..\src/command_processing.c **** #endif   
2371:..\src/command_processing.c ****         
2372:..\src/command_processing.c **** #ifdef MASTER_FW
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 395


2373:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2374:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2375:..\src/command_processing.c ****         else
2376:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2377:..\src/command_processing.c **** 
2378:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2379:..\src/command_processing.c ****         strcat(info_string, str);
2380:..\src/command_processing.c **** #endif
2381:..\src/command_processing.c **** 
2382:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17766              		.loc 1 2382 0 is_stmt 1
 17767 20f8 1B4B     		ldr	r3, .L704+40
 17768 20fa 1B88     		ldrh	r3, [r3]
 17769 20fc 1A46     		mov	r2, r3
 17770 20fe 1B4B     		ldr	r3, .L704+44
 17771 2100 1B88     		ldrh	r3, [r3]
 17772 2102 D21A     		subs	r2, r2, r3
 17773 2104 07F11803 		add	r3, r7, #24
 17774 2108 1949     		ldr	r1, .L704+48
 17775 210a 1846     		mov	r0, r3
 17776 210c FFF7FEFF 		bl	sprintf
2383:..\src/command_processing.c ****         strcat(info_string, str);
 17777              		.loc 1 2383 0
 17778 2110 07F11803 		add	r3, r7, #24
 17779 2114 1946     		mov	r1, r3
 17780 2116 7869     		ldr	r0, [r7, #20]
 17781 2118 FFF7FEFF 		bl	strcat
2384:..\src/command_processing.c ****   
2385:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17782              		.loc 1 2385 0
 17783 211c 7869     		ldr	r0, [r7, #20]
 17784 211e FFF7FEFF 		bl	strlen
 17785 2122 0346     		mov	r3, r0
 17786 2124 1A46     		mov	r2, r3
 17787 2126 7B69     		ldr	r3, [r7, #20]
 17788 2128 1344     		add	r3, r3, r2
 17789 212a 124A     		ldr	r2, .L704+52
 17790 212c 1188     		ldrh	r1, [r2]	@ unaligned
 17791 212e 9278     		ldrb	r2, [r2, #2]
 17792 2130 1980     		strh	r1, [r3]	@ unaligned
 17793 2132 9A70     		strb	r2, [r3, #2]
 17794              	.L681:
 17795              	.LBE24:
2386:..\src/command_processing.c ****     }
2387:..\src/command_processing.c **** }
 17796              		.loc 1 2387 0
 17797 2134 00BF     		nop
 17798 2136 9C37     		adds	r7, r7, #156
 17799              		.cfi_def_cfa_offset 36
 17800 2138 BD46     		mov	sp, r7
 17801              		.cfi_def_cfa_register 13
 17802              		@ sp needed
 17803 213a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17804              	.L705:
 17805 213e 00BF     		.align	2
 17806              	.L704:
 17807 2140 141C0000 		.word	.LC266
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 396


 17808 2144 1C1C0000 		.word	.LC267
 17809 2148 9C110000 		.word	.LC154
 17810 214c 00000000 		.word	N_Encoder_Line_Connected
 17811 2150 3C1C0000 		.word	.LC268
 17812 2154 00000000 		.word	Encoder_Value
 17813 2158 00000000 		.word	Encoder_Check
 17814 215c 541C0000 		.word	.LC269
 17815 2160 581C0000 		.word	.LC270
 17816 2164 5C1C0000 		.word	.LC271
 17817 2168 00000000 		.word	timer_value0
 17818 216c 00000000 		.word	timer_value
 17819 2170 681C0000 		.word	.LC272
 17820 2174 841C0000 		.word	.LC273
 17821              		.cfi_endproc
 17822              	.LFE72:
 17823              		.size	prepare_generic_info, .-prepare_generic_info
 17824              		.section	.rodata
 17825              		.align	2
 17826              	.LC274:
 17827 1c88 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17827      41474520 
 17827      53544154 
 17827      49535449 
 17827      43530D0A 
 17828 1c9d 000000   		.align	2
 17829              	.LC275:
 17830 1ca0 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17830      206F6620 
 17830      4857206D 
 17830      61696E74 
 17830      656E616E 
 17831 1ccb 00       		.align	2
 17832              	.LC276:
 17833 1ccc 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 17833      206F6620 
 17833      75736167 
 17833      65207374 
 17833      61747320 
 17834 1cff 0A00     		.ascii	"\012\000"
 17835 1d01 000000   		.align	2
 17836              	.LC277:
 17837 1d04 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17837      20636865 
 17837      636B6564 
 17837      2054696D 
 17837      653A2025 
 17838 1d37 0A00     		.ascii	"\012\000"
 17839 1d39 000000   		.align	2
 17840              	.LC278:
 17841 1d3c 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17841      74696F6E 
 17841      73206869 
 17841      73746F67 
 17841      72616D20 
 17842 1d5b 00       		.align	2
 17843              	.LC279:
 17844 1d5c 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 397


 17844      2564205B 
 17844      25642D25 
 17844      645D3A20 
 17844      256C750D 
 17845 1d72 0000     		.align	2
 17846              	.LC280:
 17847 1d74 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17847      656E7420 
 17847      68697374 
 17847      6F677261 
 17847      6D20286D 
 17848 1d8e 0000     		.align	2
 17849              	.LC281:
 17850 1d90 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17850      73686F6C 
 17850      64202564 
 17850      205B2564 
 17850      2D25645D 
 17851              		.align	2
 17852              	.LC282:
 17853 1dac 4D6F7469 		.ascii	"Motions through EMG counter: %lu, %lu\000"
 17853      6F6E7320 
 17853      7468726F 
 17853      75676820 
 17853      454D4720 
 17854 1dd2 0000     		.align	2
 17855              	.LC283:
 17856 1dd4 52657374 		.ascii	"Rest position occurrences: %lu\000"
 17856      20706F73 
 17856      6974696F 
 17856      6E206F63 
 17856      63757272 
 17857 1df3 00       		.align	2
 17858              	.LC284:
 17859 1df4 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17859      6520746F 
 17859      74616C20 
 17859      64697370 
 17859      6C616365 
 17860 1e1a 0000     		.align	2
 17861              	.LC285:
 17862 1e1c 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17862      6C20706F 
 17862      77657220 
 17862      6F6E2074 
 17862      696D6520 
 17863 1e3b 00       		.align	2
 17864              	.LC286:
 17865 1e3c 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17865      6C207265 
 17865      73742070 
 17865      6F736974 
 17865      696F6E20 
 17866              		.section	.text.prepare_counter_info,"ax",%progbits
 17867              		.align	2
 17868              		.global	prepare_counter_info
 17869              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 398


 17870              		.thumb_func
 17871              		.type	prepare_counter_info, %function
 17872              	prepare_counter_info:
 17873              	.LFB73:
2388:..\src/command_processing.c **** 
2389:..\src/command_processing.c **** //==============================================================================
2390:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2391:..\src/command_processing.c **** //==============================================================================
2392:..\src/command_processing.c **** 
2393:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2394:..\src/command_processing.c **** {
 17874              		.loc 1 2394 0
 17875              		.cfi_startproc
 17876              		@ args = 0, pretend = 0, frame = 432
 17877              		@ frame_needed = 1, uses_anonymous_args = 0
 17878 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 17879              		.cfi_def_cfa_offset 20
 17880              		.cfi_offset 4, -20
 17881              		.cfi_offset 5, -16
 17882              		.cfi_offset 6, -12
 17883              		.cfi_offset 7, -8
 17884              		.cfi_offset 14, -4
 17885 0002 F1B0     		sub	sp, sp, #452
 17886              		.cfi_def_cfa_offset 472
 17887 0004 04AF     		add	r7, sp, #16
 17888              		.cfi_def_cfa 7, 456
 17889 0006 3B1D     		adds	r3, r7, #4
 17890 0008 1860     		str	r0, [r3]
2395:..\src/command_processing.c ****     char str[100];  
2396:..\src/command_processing.c ****     int i;
2397:..\src/command_processing.c ****     int step;
2398:..\src/command_processing.c **** 
2399:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17891              		.loc 1 2399 0
 17892 000a 964B     		ldr	r3, .L712
 17893 000c C7F8A831 		str	r3, [r7, #424]
2400:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 17894              		.loc 1 2400 0
 17895 0010 D7F8A831 		ldr	r3, [r7, #424]
 17896 0014 B033     		adds	r3, r3, #176
 17897 0016 C7F8A431 		str	r3, [r7, #420]
2401:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 17898              		.loc 1 2401 0
 17899 001a D7F8A431 		ldr	r3, [r7, #420]
 17900 001e 93F86030 		ldrb	r3, [r3, #96]
 17901 0022 87F8A331 		strb	r3, [r7, #419]
2402:..\src/command_processing.c ****     
2403:..\src/command_processing.c ****     strcpy(info_string, "");
 17902              		.loc 1 2403 0
 17903 0026 3B1D     		adds	r3, r7, #4
 17904 0028 1B68     		ldr	r3, [r3]
 17905 002a 0022     		movs	r2, #0
 17906 002c 1A70     		strb	r2, [r3]
2404:..\src/command_processing.c ****     
2405:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 17907              		.loc 1 2405 0
 17908 002e 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 399


 17909 0030 1868     		ldr	r0, [r3]
 17910 0032 FFF7FEFF 		bl	strlen
 17911 0036 0346     		mov	r3, r0
 17912 0038 1A46     		mov	r2, r3
 17913 003a 3B1D     		adds	r3, r7, #4
 17914 003c 1B68     		ldr	r3, [r3]
 17915 003e 1344     		add	r3, r3, r2
 17916 0040 894A     		ldr	r2, .L712+4
 17917 0042 1D46     		mov	r5, r3
 17918 0044 1446     		mov	r4, r2
 17919 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17920 0048 2860     		str	r0, [r5]	@ unaligned
 17921 004a 6960     		str	r1, [r5, #4]	@ unaligned
 17922 004c AA60     		str	r2, [r5, #8]	@ unaligned
 17923 004e EB60     		str	r3, [r5, #12]	@ unaligned
 17924 0050 2068     		ldr	r0, [r4]	@ unaligned
 17925 0052 2861     		str	r0, [r5, #16]	@ unaligned
 17926 0054 2379     		ldrb	r3, [r4, #4]
 17927 0056 2B75     		strb	r3, [r5, #20]
2406:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17928              		.loc 1 2406 0
 17929 0058 3B1D     		adds	r3, r7, #4
 17930 005a 1868     		ldr	r0, [r3]
 17931 005c FFF7FEFF 		bl	strlen
 17932 0060 0346     		mov	r3, r0
 17933 0062 1A46     		mov	r2, r3
 17934 0064 3B1D     		adds	r3, r7, #4
 17935 0066 1B68     		ldr	r3, [r3]
 17936 0068 1344     		add	r3, r3, r2
 17937 006a 804A     		ldr	r2, .L712+8
 17938 006c 1188     		ldrh	r1, [r2]	@ unaligned
 17939 006e 9278     		ldrb	r2, [r2, #2]
 17940 0070 1980     		strh	r1, [r3]	@ unaligned
 17941 0072 9A70     		strb	r2, [r3, #2]
2407:..\src/command_processing.c ****     
2408:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17942              		.loc 1 2408 0
 17943 0074 D7F8A831 		ldr	r3, [r7, #424]
 17944 0078 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17945 007c 1A46     		mov	r2, r3
 17946 007e D7F8A831 		ldr	r3, [r7, #424]
 17947 0082 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17948 0086 1946     		mov	r1, r3
 17949 0088 D7F8A831 		ldr	r3, [r7, #424]
 17950 008c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17951 0090 07F59C70 		add	r0, r7, #312
 17952 0094 0093     		str	r3, [sp]
 17953 0096 0B46     		mov	r3, r1
 17954 0098 7549     		ldr	r1, .L712+12
 17955 009a FFF7FEFF 		bl	sprintf
2409:..\src/command_processing.c ****     strcat(info_string, str);
 17956              		.loc 1 2409 0
 17957 009e 07F59C72 		add	r2, r7, #312
 17958 00a2 3B1D     		adds	r3, r7, #4
 17959 00a4 1146     		mov	r1, r2
 17960 00a6 1868     		ldr	r0, [r3]
 17961 00a8 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 400


2410:..\src/command_processing.c ****     
2411:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17962              		.loc 1 2411 0
 17963 00ac D7F8A831 		ldr	r3, [r7, #424]
 17964 00b0 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17965 00b4 1A46     		mov	r2, r3
 17966 00b6 D7F8A831 		ldr	r3, [r7, #424]
 17967 00ba 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17968 00be 1946     		mov	r1, r3
 17969 00c0 D7F8A831 		ldr	r3, [r7, #424]
 17970 00c4 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17971 00c8 07F59C70 		add	r0, r7, #312
 17972 00cc 0093     		str	r3, [sp]
 17973 00ce 0B46     		mov	r3, r1
 17974 00d0 6849     		ldr	r1, .L712+16
 17975 00d2 FFF7FEFF 		bl	sprintf
2412:..\src/command_processing.c ****     strcat(info_string, str);
 17976              		.loc 1 2412 0
 17977 00d6 07F59C72 		add	r2, r7, #312
 17978 00da 3B1D     		adds	r3, r7, #4
 17979 00dc 1146     		mov	r1, r2
 17980 00de 1868     		ldr	r0, [r3]
 17981 00e0 FFF7FEFF 		bl	strcat
2413:..\src/command_processing.c ****             
2414:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17982              		.loc 1 2414 0
 17983 00e4 D7F8A831 		ldr	r3, [r7, #424]
 17984 00e8 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 17985 00ec 1D46     		mov	r5, r3
 17986 00ee D7F8A831 		ldr	r3, [r7, #424]
 17987 00f2 93F82932 		ldrb	r3, [r3, #553]	@ zero_extendqisi2
 17988 00f6 1E46     		mov	r6, r3
 17989 00f8 D7F8A831 		ldr	r3, [r7, #424]
 17990 00fc 93F82A32 		ldrb	r3, [r3, #554]	@ zero_extendqisi2
 17991 0100 1A46     		mov	r2, r3
 17992 0102 D7F8A831 		ldr	r3, [r7, #424]
 17993 0106 93F82B32 		ldrb	r3, [r3, #555]	@ zero_extendqisi2
 17994 010a 1946     		mov	r1, r3
 17995 010c D7F8A831 		ldr	r3, [r7, #424]
 17996 0110 93F82C32 		ldrb	r3, [r3, #556]	@ zero_extendqisi2
 17997 0114 1C46     		mov	r4, r3
 17998 0116 D7F8A831 		ldr	r3, [r7, #424]
 17999 011a 93F82D32 		ldrb	r3, [r3, #557]	@ zero_extendqisi2
 18000 011e 07F59C70 		add	r0, r7, #312
 18001 0122 0393     		str	r3, [sp, #12]
 18002 0124 0294     		str	r4, [sp, #8]
 18003 0126 0191     		str	r1, [sp, #4]
 18004 0128 0092     		str	r2, [sp]
 18005 012a 3346     		mov	r3, r6
 18006 012c 2A46     		mov	r2, r5
 18007 012e 5249     		ldr	r1, .L712+20
 18008 0130 FFF7FEFF 		bl	sprintf
2415:..\src/command_processing.c ****     strcat(info_string, str);
 18009              		.loc 1 2415 0
 18010 0134 07F59C72 		add	r2, r7, #312
 18011 0138 3B1D     		adds	r3, r7, #4
 18012 013a 1146     		mov	r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 401


 18013 013c 1868     		ldr	r0, [r3]
 18014 013e FFF7FEFF 		bl	strcat
2416:..\src/command_processing.c ****     
2417:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 18015              		.loc 1 2417 0
 18016 0142 07F59C73 		add	r3, r7, #312
 18017 0146 4D4A     		ldr	r2, .L712+24
 18018 0148 1C46     		mov	r4, r3
 18019 014a 1546     		mov	r5, r2
 18020 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18021 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18022 0150 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 18023 0154 07C4     		stmia	r4!, {r0, r1, r2}
 18024 0156 2380     		strh	r3, [r4]	@ movhi
 18025 0158 0234     		adds	r4, r4, #2
 18026 015a 1B0C     		lsrs	r3, r3, #16
 18027 015c 2370     		strb	r3, [r4]
2418:..\src/command_processing.c ****     strcat(info_string, str);
 18028              		.loc 1 2418 0
 18029 015e 07F59C72 		add	r2, r7, #312
 18030 0162 3B1D     		adds	r3, r7, #4
 18031 0164 1146     		mov	r1, r2
 18032 0166 1868     		ldr	r0, [r3]
 18033 0168 FFF7FEFF 		bl	strcat
2419:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 18034              		.loc 1 2419 0
 18035 016c D7F8A431 		ldr	r3, [r7, #420]
 18036 0170 996B     		ldr	r1, [r3, #56]
 18037 0172 97F8A321 		ldrb	r2, [r7, #419]	@ zero_extendqisi2
 18038 0176 D7F8A801 		ldr	r0, [r7, #424]
 18039 017a 1346     		mov	r3, r2
 18040 017c 5B00     		lsls	r3, r3, #1
 18041 017e 1344     		add	r3, r3, r2
 18042 0180 1B01     		lsls	r3, r3, #4
 18043 0182 0344     		add	r3, r3, r0
 18044 0184 03F29D13 		addw	r3, r3, #413
 18045 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18046 018a 41FA03F3 		asr	r3, r1, r3
 18047 018e 3C4A     		ldr	r2, .L712+28
 18048 0190 82FB0312 		smull	r1, r2, r2, r3
 18049 0194 9210     		asrs	r2, r2, #2
 18050 0196 DB17     		asrs	r3, r3, #31
 18051 0198 D31A     		subs	r3, r2, r3
 18052 019a C7F89C31 		str	r3, [r7, #412]
2420:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18053              		.loc 1 2420 0
 18054 019e 0123     		movs	r3, #1
 18055 01a0 C7F8AC31 		str	r3, [r7, #428]
 18056 01a4 2BE0     		b	.L707
 18057              	.L708:
2421:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 18058              		.loc 1 2421 0 discriminator 3
 18059 01a6 D7F8AC31 		ldr	r3, [r7, #428]
 18060 01aa 013B     		subs	r3, r3, #1
 18061 01ac D7F89C21 		ldr	r2, [r7, #412]
 18062 01b0 02FB03F3 		mul	r3, r2, r3
 18063 01b4 5C1C     		adds	r4, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 402


 18064 01b6 D7F89C31 		ldr	r3, [r7, #412]
 18065 01ba D7F8AC21 		ldr	r2, [r7, #428]
 18066 01be 02FB03F3 		mul	r3, r2, r3
 18067 01c2 D7F8AC21 		ldr	r2, [r7, #428]
 18068 01c6 511E     		subs	r1, r2, #1
 18069 01c8 D7F8A821 		ldr	r2, [r7, #424]
 18070 01cc 0631     		adds	r1, r1, #6
 18071 01ce 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18072 01d2 07F59C70 		add	r0, r7, #312
 18073 01d6 0192     		str	r2, [sp, #4]
 18074 01d8 0093     		str	r3, [sp]
 18075 01da 2346     		mov	r3, r4
 18076 01dc D7F8AC21 		ldr	r2, [r7, #428]
 18077 01e0 2849     		ldr	r1, .L712+32
 18078 01e2 FFF7FEFF 		bl	sprintf
2422:..\src/command_processing.c ****         strcat(info_string, str);
 18079              		.loc 1 2422 0 discriminator 3
 18080 01e6 07F59C72 		add	r2, r7, #312
 18081 01ea 3B1D     		adds	r3, r7, #4
 18082 01ec 1146     		mov	r1, r2
 18083 01ee 1868     		ldr	r0, [r3]
 18084 01f0 FFF7FEFF 		bl	strcat
2420:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18085              		.loc 1 2420 0 discriminator 3
 18086 01f4 D7F8AC31 		ldr	r3, [r7, #428]
 18087 01f8 0133     		adds	r3, r3, #1
 18088 01fa C7F8AC31 		str	r3, [r7, #428]
 18089              	.L707:
2420:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18090              		.loc 1 2420 0 is_stmt 0 discriminator 1
 18091 01fe D7F8AC31 		ldr	r3, [r7, #428]
 18092 0202 0A2B     		cmp	r3, #10
 18093 0204 CFDD     		ble	.L708
2423:..\src/command_processing.c ****     }
2424:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18094              		.loc 1 2424 0 is_stmt 1
 18095 0206 3B1D     		adds	r3, r7, #4
 18096 0208 1868     		ldr	r0, [r3]
 18097 020a FFF7FEFF 		bl	strlen
 18098 020e 0346     		mov	r3, r0
 18099 0210 1A46     		mov	r2, r3
 18100 0212 3B1D     		adds	r3, r7, #4
 18101 0214 1B68     		ldr	r3, [r3]
 18102 0216 1344     		add	r3, r3, r2
 18103 0218 144A     		ldr	r2, .L712+8
 18104 021a 1188     		ldrh	r1, [r2]	@ unaligned
 18105 021c 9278     		ldrb	r2, [r2, #2]
 18106 021e 1980     		strh	r1, [r3]	@ unaligned
 18107 0220 9A70     		strb	r2, [r3, #2]
2425:..\src/command_processing.c ****     
2426:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 18108              		.loc 1 2426 0
 18109 0222 07F59C73 		add	r3, r7, #312
 18110 0226 184A     		ldr	r2, .L712+36
 18111 0228 1C46     		mov	r4, r3
 18112 022a 1546     		mov	r5, r2
 18113 022c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 403


 18114 022e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18115 0230 95E80700 		ldmia	r5, {r0, r1, r2}
 18116 0234 03C4     		stmia	r4!, {r0, r1}
 18117 0236 2280     		strh	r2, [r4]	@ movhi
2427:..\src/command_processing.c ****     strcat(info_string, str);
 18118              		.loc 1 2427 0
 18119 0238 07F59C72 		add	r2, r7, #312
 18120 023c 3B1D     		adds	r3, r7, #4
 18121 023e 1146     		mov	r1, r2
 18122 0240 1868     		ldr	r0, [r3]
 18123 0242 FFF7FEFF 		bl	strcat
2428:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 18124              		.loc 1 2428 0
 18125 0246 D7F8A431 		ldr	r3, [r7, #420]
 18126 024a B3F95C30 		ldrsh	r3, [r3, #92]
 18127 024e 002B     		cmp	r3, #0
 18128 0250 00DA     		bge	.L709
 18129 0252 0333     		adds	r3, r3, #3
 18130              	.L709:
 18131 0254 9B10     		asrs	r3, r3, #2
 18132 0256 1BB2     		sxth	r3, r3
 18133 0258 C7F89C31 		str	r3, [r7, #412]
2429:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18134              		.loc 1 2429 0
 18135 025c 0123     		movs	r3, #1
 18136 025e C7F8AC31 		str	r3, [r7, #428]
 18137 0262 3EE0     		b	.L710
 18138              	.L713:
 18139              		.align	2
 18140              	.L712:
 18141 0264 00000000 		.word	g_mem
 18142 0268 881C0000 		.word	.LC274
 18143 026c 9C110000 		.word	.LC154
 18144 0270 A01C0000 		.word	.LC275
 18145 0274 CC1C0000 		.word	.LC276
 18146 0278 041D0000 		.word	.LC277
 18147 027c 3C1D0000 		.word	.LC278
 18148 0280 67666666 		.word	1717986919
 18149 0284 5C1D0000 		.word	.LC279
 18150 0288 741D0000 		.word	.LC280
 18151              	.L711:
2430:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 18152              		.loc 1 2430 0 discriminator 3
 18153 028c D7F8AC31 		ldr	r3, [r7, #428]
 18154 0290 013B     		subs	r3, r3, #1
 18155 0292 D7F89C21 		ldr	r2, [r7, #412]
 18156 0296 02FB03F4 		mul	r4, r2, r3
 18157 029a D7F89C31 		ldr	r3, [r7, #412]
 18158 029e D7F8AC21 		ldr	r2, [r7, #428]
 18159 02a2 02FB03F3 		mul	r3, r2, r3
 18160 02a6 D7F8AC21 		ldr	r2, [r7, #428]
 18161 02aa 511E     		subs	r1, r2, #1
 18162 02ac D7F8A821 		ldr	r2, [r7, #424]
 18163 02b0 1031     		adds	r1, r1, #16
 18164 02b2 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18165 02b6 07F59C70 		add	r0, r7, #312
 18166 02ba 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 404


 18167 02bc 0093     		str	r3, [sp]
 18168 02be 2346     		mov	r3, r4
 18169 02c0 D7F8AC21 		ldr	r2, [r7, #428]
 18170 02c4 6B49     		ldr	r1, .L714
 18171 02c6 FFF7FEFF 		bl	sprintf
2431:..\src/command_processing.c ****         strcat(info_string, str);
 18172              		.loc 1 2431 0 discriminator 3
 18173 02ca 07F59C72 		add	r2, r7, #312
 18174 02ce 3B1D     		adds	r3, r7, #4
 18175 02d0 1146     		mov	r1, r2
 18176 02d2 1868     		ldr	r0, [r3]
 18177 02d4 FFF7FEFF 		bl	strcat
2429:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18178              		.loc 1 2429 0 discriminator 3
 18179 02d8 D7F8AC31 		ldr	r3, [r7, #428]
 18180 02dc 0133     		adds	r3, r3, #1
 18181 02de C7F8AC31 		str	r3, [r7, #428]
 18182              	.L710:
2429:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18183              		.loc 1 2429 0 is_stmt 0 discriminator 1
 18184 02e2 D7F8AC31 		ldr	r3, [r7, #428]
 18185 02e6 042B     		cmp	r3, #4
 18186 02e8 D0DD     		ble	.L711
2432:..\src/command_processing.c ****     }
2433:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18187              		.loc 1 2433 0 is_stmt 1
 18188 02ea 3B1D     		adds	r3, r7, #4
 18189 02ec 1868     		ldr	r0, [r3]
 18190 02ee FFF7FEFF 		bl	strlen
 18191 02f2 0346     		mov	r3, r0
 18192 02f4 1A46     		mov	r2, r3
 18193 02f6 3B1D     		adds	r3, r7, #4
 18194 02f8 1B68     		ldr	r3, [r3]
 18195 02fa 1344     		add	r3, r3, r2
 18196 02fc 5E4A     		ldr	r2, .L714+4
 18197 02fe 1188     		ldrh	r1, [r2]	@ unaligned
 18198 0300 9278     		ldrb	r2, [r2, #2]
 18199 0302 1980     		strh	r1, [r3]	@ unaligned
 18200 0304 9A70     		strb	r2, [r3, #2]
2434:..\src/command_processing.c ****             
2435:..\src/command_processing.c ****     sprintf(str, "Motions through EMG counter: %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->cnt.
 18201              		.loc 1 2435 0
 18202 0306 D7F8A831 		ldr	r3, [r7, #424]
 18203 030a DA6E     		ldr	r2, [r3, #108]
 18204 030c D7F8A831 		ldr	r3, [r7, #424]
 18205 0310 1B6F     		ldr	r3, [r3, #112]
 18206 0312 07F59C70 		add	r0, r7, #312
 18207 0316 5949     		ldr	r1, .L714+8
 18208 0318 FFF7FEFF 		bl	sprintf
2436:..\src/command_processing.c ****     strcat(info_string, str);
 18209              		.loc 1 2436 0
 18210 031c 07F59C72 		add	r2, r7, #312
 18211 0320 3B1D     		adds	r3, r7, #4
 18212 0322 1146     		mov	r1, r2
 18213 0324 1868     		ldr	r0, [r3]
 18214 0326 FFF7FEFF 		bl	strcat
2437:..\src/command_processing.c ****     strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 405


 18215              		.loc 1 2437 0
 18216 032a 3B1D     		adds	r3, r7, #4
 18217 032c 1868     		ldr	r0, [r3]
 18218 032e FFF7FEFF 		bl	strlen
 18219 0332 0346     		mov	r3, r0
 18220 0334 1A46     		mov	r2, r3
 18221 0336 3B1D     		adds	r3, r7, #4
 18222 0338 1B68     		ldr	r3, [r3]
 18223 033a 1344     		add	r3, r3, r2
 18224 033c 4E4A     		ldr	r2, .L714+4
 18225 033e 1188     		ldrh	r1, [r2]	@ unaligned
 18226 0340 9278     		ldrb	r2, [r2, #2]
 18227 0342 1980     		strh	r1, [r3]	@ unaligned
 18228 0344 9A70     		strb	r2, [r3, #2]
2438:..\src/command_processing.c ****     
2439:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18229              		.loc 1 2439 0
 18230 0346 D7F8A831 		ldr	r3, [r7, #424]
 18231 034a 1A6D     		ldr	r2, [r3, #80]
 18232 034c 07F59C73 		add	r3, r7, #312
 18233 0350 4B49     		ldr	r1, .L714+12
 18234 0352 1846     		mov	r0, r3
 18235 0354 FFF7FEFF 		bl	sprintf
2440:..\src/command_processing.c ****     strcat(info_string, str);
 18236              		.loc 1 2440 0
 18237 0358 07F59C72 		add	r2, r7, #312
 18238 035c 3B1D     		adds	r3, r7, #4
 18239 035e 1146     		mov	r1, r2
 18240 0360 1868     		ldr	r0, [r3]
 18241 0362 FFF7FEFF 		bl	strcat
2441:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18242              		.loc 1 2441 0
 18243 0366 3B1D     		adds	r3, r7, #4
 18244 0368 1868     		ldr	r0, [r3]
 18245 036a FFF7FEFF 		bl	strlen
 18246 036e 0346     		mov	r3, r0
 18247 0370 1A46     		mov	r2, r3
 18248 0372 3B1D     		adds	r3, r7, #4
 18249 0374 1B68     		ldr	r3, [r3]
 18250 0376 1344     		add	r3, r3, r2
 18251 0378 3F4A     		ldr	r2, .L714+4
 18252 037a 1188     		ldrh	r1, [r2]	@ unaligned
 18253 037c 9278     		ldrb	r2, [r2, #2]
 18254 037e 1980     		strh	r1, [r3]	@ unaligned
 18255 0380 9A70     		strb	r2, [r3, #2]
2442:..\src/command_processing.c ****     
2443:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18256              		.loc 1 2443 0
 18257 0382 D7F8A831 		ldr	r3, [r7, #424]
 18258 0386 5A6D     		ldr	r2, [r3, #84]
 18259 0388 07F59C73 		add	r3, r7, #312
 18260 038c 3D49     		ldr	r1, .L714+16
 18261 038e 1846     		mov	r0, r3
 18262 0390 FFF7FEFF 		bl	sprintf
2444:..\src/command_processing.c ****     strcat(info_string, str);
 18263              		.loc 1 2444 0
 18264 0394 07F59C72 		add	r2, r7, #312
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 406


 18265 0398 3B1D     		adds	r3, r7, #4
 18266 039a 1146     		mov	r1, r2
 18267 039c 1868     		ldr	r0, [r3]
 18268 039e FFF7FEFF 		bl	strcat
2445:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18269              		.loc 1 2445 0
 18270 03a2 3B1D     		adds	r3, r7, #4
 18271 03a4 1868     		ldr	r0, [r3]
 18272 03a6 FFF7FEFF 		bl	strlen
 18273 03aa 0346     		mov	r3, r0
 18274 03ac 1A46     		mov	r2, r3
 18275 03ae 3B1D     		adds	r3, r7, #4
 18276 03b0 1B68     		ldr	r3, [r3]
 18277 03b2 1344     		add	r3, r3, r2
 18278 03b4 304A     		ldr	r2, .L714+4
 18279 03b6 1188     		ldrh	r1, [r2]	@ unaligned
 18280 03b8 9278     		ldrb	r2, [r2, #2]
 18281 03ba 1980     		strh	r1, [r3]	@ unaligned
 18282 03bc 9A70     		strb	r2, [r3, #2]
2446:..\src/command_processing.c ****     
2447:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_runtime);
 18283              		.loc 1 2447 0
 18284 03be D7F8A831 		ldr	r3, [r7, #424]
 18285 03c2 9A6D     		ldr	r2, [r3, #88]
 18286 03c4 07F59C73 		add	r3, r7, #312
 18287 03c8 2F49     		ldr	r1, .L714+20
 18288 03ca 1846     		mov	r0, r3
 18289 03cc FFF7FEFF 		bl	sprintf
2448:..\src/command_processing.c ****     strcat(info_string, str);
 18290              		.loc 1 2448 0
 18291 03d0 07F59C72 		add	r2, r7, #312
 18292 03d4 3B1D     		adds	r3, r7, #4
 18293 03d6 1146     		mov	r1, r2
 18294 03d8 1868     		ldr	r0, [r3]
 18295 03da FFF7FEFF 		bl	strcat
2449:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18296              		.loc 1 2449 0
 18297 03de 3B1D     		adds	r3, r7, #4
 18298 03e0 1868     		ldr	r0, [r3]
 18299 03e2 FFF7FEFF 		bl	strlen
 18300 03e6 0346     		mov	r3, r0
 18301 03e8 1A46     		mov	r2, r3
 18302 03ea 3B1D     		adds	r3, r7, #4
 18303 03ec 1B68     		ldr	r3, [r3]
 18304 03ee 1344     		add	r3, r3, r2
 18305 03f0 214A     		ldr	r2, .L714+4
 18306 03f2 1188     		ldrh	r1, [r2]	@ unaligned
 18307 03f4 9278     		ldrb	r2, [r2, #2]
 18308 03f6 1980     		strh	r1, [r3]	@ unaligned
 18309 03f8 9A70     		strb	r2, [r3, #2]
2450:..\src/command_processing.c ****     
2451:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18310              		.loc 1 2451 0
 18311 03fa D7F8A831 		ldr	r3, [r7, #424]
 18312 03fe DA6D     		ldr	r2, [r3, #92]
 18313 0400 07F59C73 		add	r3, r7, #312
 18314 0404 2149     		ldr	r1, .L714+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 407


 18315 0406 1846     		mov	r0, r3
 18316 0408 FFF7FEFF 		bl	sprintf
2452:..\src/command_processing.c ****     strcat(info_string, str);
 18317              		.loc 1 2452 0
 18318 040c 07F59C72 		add	r2, r7, #312
 18319 0410 3B1D     		adds	r3, r7, #4
 18320 0412 1146     		mov	r1, r2
 18321 0414 1868     		ldr	r0, [r3]
 18322 0416 FFF7FEFF 		bl	strcat
2453:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18323              		.loc 1 2453 0
 18324 041a 3B1D     		adds	r3, r7, #4
 18325 041c 1868     		ldr	r0, [r3]
 18326 041e FFF7FEFF 		bl	strlen
 18327 0422 0346     		mov	r3, r0
 18328 0424 1A46     		mov	r2, r3
 18329 0426 3B1D     		adds	r3, r7, #4
 18330 0428 1B68     		ldr	r3, [r3]
 18331 042a 1344     		add	r3, r3, r2
 18332 042c 124A     		ldr	r2, .L714+4
 18333 042e 1188     		ldrh	r1, [r2]	@ unaligned
 18334 0430 9278     		ldrb	r2, [r2, #2]
 18335 0432 1980     		strh	r1, [r3]	@ unaligned
 18336 0434 9A70     		strb	r2, [r3, #2]
2454:..\src/command_processing.c ****     
2455:..\src/command_processing.c ****     
2456:..\src/command_processing.c ****     // R01 Project statistics (some are duplicated)
2457:..\src/command_processing.c ****     char CYDATA R01_str[300];
2458:..\src/command_processing.c ****     prepare_R01_info(R01_str);
 18337              		.loc 1 2458 0
 18338 0436 07F10C03 		add	r3, r7, #12
 18339 043a 1846     		mov	r0, r3
 18340 043c FFF7FEFF 		bl	prepare_R01_info
2459:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18341              		.loc 1 2459 0
 18342 0440 3B1D     		adds	r3, r7, #4
 18343 0442 1868     		ldr	r0, [r3]
 18344 0444 FFF7FEFF 		bl	strlen
 18345 0448 0346     		mov	r3, r0
 18346 044a 1A46     		mov	r2, r3
 18347 044c 3B1D     		adds	r3, r7, #4
 18348 044e 1B68     		ldr	r3, [r3]
 18349 0450 1344     		add	r3, r3, r2
 18350 0452 094A     		ldr	r2, .L714+4
 18351 0454 1188     		ldrh	r1, [r2]	@ unaligned
 18352 0456 9278     		ldrb	r2, [r2, #2]
 18353 0458 1980     		strh	r1, [r3]	@ unaligned
 18354 045a 9A70     		strb	r2, [r3, #2]
2460:..\src/command_processing.c ****     strcat(info_string, R01_str);
 18355              		.loc 1 2460 0
 18356 045c 07F10C02 		add	r2, r7, #12
 18357 0460 3B1D     		adds	r3, r7, #4
 18358 0462 1146     		mov	r1, r2
 18359 0464 1868     		ldr	r0, [r3]
 18360 0466 FFF7FEFF 		bl	strcat
2461:..\src/command_processing.c **** }
 18361              		.loc 1 2461 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 408


 18362 046a 00BF     		nop
 18363 046c 07F5DA77 		add	r7, r7, #436
 18364              		.cfi_def_cfa_offset 20
 18365 0470 BD46     		mov	sp, r7
 18366              		.cfi_def_cfa_register 13
 18367              		@ sp needed
 18368 0472 F0BD     		pop	{r4, r5, r6, r7, pc}
 18369              	.L715:
 18370              		.align	2
 18371              	.L714:
 18372 0474 901D0000 		.word	.LC281
 18373 0478 9C110000 		.word	.LC154
 18374 047c AC1D0000 		.word	.LC282
 18375 0480 D41D0000 		.word	.LC283
 18376 0484 F41D0000 		.word	.LC284
 18377 0488 1C1E0000 		.word	.LC285
 18378 048c 3C1E0000 		.word	.LC286
 18379              		.cfi_endproc
 18380              	.LFE73:
 18381              		.size	prepare_counter_info, .-prepare_counter_info
 18382              		.section	.rodata
 18383              		.align	2
 18384              	.LC287:
 18385 1e60 52303120 		.ascii	"R01 PROJECT STATISTICS\015\012\000"
 18385      50524F4A 
 18385      45435420 
 18385      53544154 
 18385      49535449 
 18386 1e79 000000   		.align	2
 18387              	.LC288:
 18388 1e7c 506F7765 		.ascii	"Power cycles: %lu\000"
 18388      72206379 
 18388      636C6573 
 18388      3A20256C 
 18388      7500
 18389 1e8e 0000     		.align	2
 18390              	.LC289:
 18391 1e90 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18391      61637469 
 18391      76617469 
 18391      6F6E7320 
 18391      636F756E 
 18392 1eb2 0000     		.align	2
 18393              	.LC290:
 18394 1eb4 4E756D62 		.ascii	"Number of motions (close/open): %lu, %lu\000"
 18394      6572206F 
 18394      66206D6F 
 18394      74696F6E 
 18394      73202863 
 18395 1edd 000000   		.align	2
 18396              	.LC291:
 18397 1ee0 45786365 		.ascii	"Excessive signal activity (close/open): %lu, %lu\000"
 18397      73736976 
 18397      65207369 
 18397      676E616C 
 18397      20616374 
 18398 1f11 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 409


 18399              	.LC292:
 18400 1f14 546F7461 		.ascii	"Total runtime (sec): %lu\000"
 18400      6C207275 
 18400      6E74696D 
 18400      65202873 
 18400      6563293A 
 18401              		.global	__aeabi_ui2f
 18402 1f2d 000000   		.align	2
 18403              	.LC293:
 18404 1f30 41766572 		.ascii	"Average duration of a powered-on session (sec): %.4"
 18404      61676520 
 18404      64757261 
 18404      74696F6E 
 18404      206F6620 
 18405 1f63 6600     		.ascii	"f\000"
 18406 1f65 000000   		.align	2
 18407              	.LC294:
 18408 1f68 46726571 		.ascii	"Frequency of motions: %.4f\000"
 18408      75656E63 
 18408      79206F66 
 18408      206D6F74 
 18408      696F6E73 
 18409              		.section	.text.prepare_R01_info,"ax",%progbits
 18410              		.align	2
 18411              		.global	prepare_R01_info
 18412              		.thumb
 18413              		.thumb_func
 18414              		.type	prepare_R01_info, %function
 18415              	prepare_R01_info:
 18416              	.LFB74:
2462:..\src/command_processing.c **** 
2463:..\src/command_processing.c **** //==============================================================================
2464:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2465:..\src/command_processing.c **** //==============================================================================
2466:..\src/command_processing.c **** 
2467:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
2468:..\src/command_processing.c **** {
 18417              		.loc 1 2468 0
 18418              		.cfi_startproc
 18419              		@ args = 0, pretend = 0, frame = 168
 18420              		@ frame_needed = 1, uses_anonymous_args = 0
 18421 0000 B0B5     		push	{r4, r5, r7, lr}
 18422              		.cfi_def_cfa_offset 16
 18423              		.cfi_offset 4, -16
 18424              		.cfi_offset 5, -12
 18425              		.cfi_offset 7, -8
 18426              		.cfi_offset 14, -4
 18427 0002 AAB0     		sub	sp, sp, #168
 18428              		.cfi_def_cfa_offset 184
 18429 0004 00AF     		add	r7, sp, #0
 18430              		.cfi_def_cfa_register 7
 18431 0006 7860     		str	r0, [r7, #4]
2469:..\src/command_processing.c ****     char str[150];  
2470:..\src/command_processing.c **** 
2471:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18432              		.loc 1 2471 0
 18433 0008 8A4B     		ldr	r3, .L717
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 410


 18434 000a C7F8A430 		str	r3, [r7, #164]
2472:..\src/command_processing.c **** 
2473:..\src/command_processing.c ****     strcpy(info_string, "");
 18435              		.loc 1 2473 0
 18436 000e 7B68     		ldr	r3, [r7, #4]
 18437 0010 0022     		movs	r2, #0
 18438 0012 1A70     		strb	r2, [r3]
2474:..\src/command_processing.c ****     
2475:..\src/command_processing.c ****     strcat(info_string, "R01 PROJECT STATISTICS\r\n");
 18439              		.loc 1 2475 0
 18440 0014 7868     		ldr	r0, [r7, #4]
 18441 0016 FFF7FEFF 		bl	strlen
 18442 001a 0346     		mov	r3, r0
 18443 001c 1A46     		mov	r2, r3
 18444 001e 7B68     		ldr	r3, [r7, #4]
 18445 0020 1344     		add	r3, r3, r2
 18446 0022 854A     		ldr	r2, .L717+4
 18447 0024 1D46     		mov	r5, r3
 18448 0026 1446     		mov	r4, r2
 18449 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18450 002a 2860     		str	r0, [r5]	@ unaligned
 18451 002c 6960     		str	r1, [r5, #4]	@ unaligned
 18452 002e AA60     		str	r2, [r5, #8]	@ unaligned
 18453 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 18454 0032 03CC     		ldmia	r4!, {r0, r1}
 18455 0034 2861     		str	r0, [r5, #16]	@ unaligned
 18456 0036 6961     		str	r1, [r5, #20]	@ unaligned
 18457 0038 2378     		ldrb	r3, [r4]
 18458 003a 2B76     		strb	r3, [r5, #24]
2476:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18459              		.loc 1 2476 0
 18460 003c 7868     		ldr	r0, [r7, #4]
 18461 003e FFF7FEFF 		bl	strlen
 18462 0042 0346     		mov	r3, r0
 18463 0044 1A46     		mov	r2, r3
 18464 0046 7B68     		ldr	r3, [r7, #4]
 18465 0048 1344     		add	r3, r3, r2
 18466 004a 7C4A     		ldr	r2, .L717+8
 18467 004c 1188     		ldrh	r1, [r2]	@ unaligned
 18468 004e 9278     		ldrb	r2, [r2, #2]
 18469 0050 1980     		strh	r1, [r3]	@ unaligned
 18470 0052 9A70     		strb	r2, [r3, #2]
2477:..\src/command_processing.c ****     
2478:..\src/command_processing.c ****     sprintf(str, "Power cycles: %lu", MEM_P->cnt.power_cycles);
 18471              		.loc 1 2478 0
 18472 0054 D7F8A430 		ldr	r3, [r7, #164]
 18473 0058 1A6E     		ldr	r2, [r3, #96]
 18474 005a 07F10C03 		add	r3, r7, #12
 18475 005e 7849     		ldr	r1, .L717+12
 18476 0060 1846     		mov	r0, r3
 18477 0062 FFF7FEFF 		bl	sprintf
2479:..\src/command_processing.c ****     strcat(info_string, str);
 18478              		.loc 1 2479 0
 18479 0066 07F10C03 		add	r3, r7, #12
 18480 006a 1946     		mov	r1, r3
 18481 006c 7868     		ldr	r0, [r7, #4]
 18482 006e FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 411


2480:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18483              		.loc 1 2480 0
 18484 0072 7868     		ldr	r0, [r7, #4]
 18485 0074 FFF7FEFF 		bl	strlen
 18486 0078 0346     		mov	r3, r0
 18487 007a 1A46     		mov	r2, r3
 18488 007c 7B68     		ldr	r3, [r7, #4]
 18489 007e 1344     		add	r3, r3, r2
 18490 0080 6E4A     		ldr	r2, .L717+8
 18491 0082 1188     		ldrh	r1, [r2]	@ unaligned
 18492 0084 9278     		ldrb	r2, [r2, #2]
 18493 0086 1980     		strh	r1, [r3]	@ unaligned
 18494 0088 9A70     		strb	r2, [r3, #2]
2481:..\src/command_processing.c ****     
2482:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_act_counter[0], MEM_P->cnt.emg
 18495              		.loc 1 2482 0
 18496 008a D7F8A430 		ldr	r3, [r7, #164]
 18497 008e 1A69     		ldr	r2, [r3, #16]
 18498 0090 D7F8A430 		ldr	r3, [r7, #164]
 18499 0094 5B69     		ldr	r3, [r3, #20]
 18500 0096 07F10C00 		add	r0, r7, #12
 18501 009a 6A49     		ldr	r1, .L717+16
 18502 009c FFF7FEFF 		bl	sprintf
2483:..\src/command_processing.c ****     strcat(info_string, str);
 18503              		.loc 1 2483 0
 18504 00a0 07F10C03 		add	r3, r7, #12
 18505 00a4 1946     		mov	r1, r3
 18506 00a6 7868     		ldr	r0, [r7, #4]
 18507 00a8 FFF7FEFF 		bl	strcat
2484:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18508              		.loc 1 2484 0
 18509 00ac 7868     		ldr	r0, [r7, #4]
 18510 00ae FFF7FEFF 		bl	strlen
 18511 00b2 0346     		mov	r3, r0
 18512 00b4 1A46     		mov	r2, r3
 18513 00b6 7B68     		ldr	r3, [r7, #4]
 18514 00b8 1344     		add	r3, r3, r2
 18515 00ba 604A     		ldr	r2, .L717+8
 18516 00bc 1188     		ldrh	r1, [r2]	@ unaligned
 18517 00be 9278     		ldrb	r2, [r2, #2]
 18518 00c0 1980     		strh	r1, [r3]	@ unaligned
 18519 00c2 9A70     		strb	r2, [r3, #2]
2485:..\src/command_processing.c ****     
2486:..\src/command_processing.c ****     sprintf(str, "Number of motions (close/open): %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->c
 18520              		.loc 1 2486 0
 18521 00c4 D7F8A430 		ldr	r3, [r7, #164]
 18522 00c8 DA6E     		ldr	r2, [r3, #108]
 18523 00ca D7F8A430 		ldr	r3, [r7, #164]
 18524 00ce 1B6F     		ldr	r3, [r3, #112]
 18525 00d0 07F10C00 		add	r0, r7, #12
 18526 00d4 5C49     		ldr	r1, .L717+20
 18527 00d6 FFF7FEFF 		bl	sprintf
2487:..\src/command_processing.c ****     strcat(info_string, str);
 18528              		.loc 1 2487 0
 18529 00da 07F10C03 		add	r3, r7, #12
 18530 00de 1946     		mov	r1, r3
 18531 00e0 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 412


 18532 00e2 FFF7FEFF 		bl	strcat
2488:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18533              		.loc 1 2488 0
 18534 00e6 7868     		ldr	r0, [r7, #4]
 18535 00e8 FFF7FEFF 		bl	strlen
 18536 00ec 0346     		mov	r3, r0
 18537 00ee 1A46     		mov	r2, r3
 18538 00f0 7B68     		ldr	r3, [r7, #4]
 18539 00f2 1344     		add	r3, r3, r2
 18540 00f4 514A     		ldr	r2, .L717+8
 18541 00f6 1188     		ldrh	r1, [r2]	@ unaligned
 18542 00f8 9278     		ldrb	r2, [r2, #2]
 18543 00fa 1980     		strh	r1, [r3]	@ unaligned
 18544 00fc 9A70     		strb	r2, [r3, #2]
2489:..\src/command_processing.c ****     
2490:..\src/command_processing.c ****     sprintf(str, "Excessive signal activity (close/open): %lu, %lu", MEM_P->cnt.excessive_signal_ac
 18545              		.loc 1 2490 0
 18546 00fe D7F8A430 		ldr	r3, [r7, #164]
 18547 0102 5A6E     		ldr	r2, [r3, #100]
 18548 0104 D7F8A430 		ldr	r3, [r7, #164]
 18549 0108 9B6E     		ldr	r3, [r3, #104]
 18550 010a 07F10C00 		add	r0, r7, #12
 18551 010e 4F49     		ldr	r1, .L717+24
 18552 0110 FFF7FEFF 		bl	sprintf
2491:..\src/command_processing.c ****     strcat(info_string, str);
 18553              		.loc 1 2491 0
 18554 0114 07F10C03 		add	r3, r7, #12
 18555 0118 1946     		mov	r1, r3
 18556 011a 7868     		ldr	r0, [r7, #4]
 18557 011c FFF7FEFF 		bl	strcat
2492:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18558              		.loc 1 2492 0
 18559 0120 7868     		ldr	r0, [r7, #4]
 18560 0122 FFF7FEFF 		bl	strlen
 18561 0126 0346     		mov	r3, r0
 18562 0128 1A46     		mov	r2, r3
 18563 012a 7B68     		ldr	r3, [r7, #4]
 18564 012c 1344     		add	r3, r3, r2
 18565 012e 434A     		ldr	r2, .L717+8
 18566 0130 1188     		ldrh	r1, [r2]	@ unaligned
 18567 0132 9278     		ldrb	r2, [r2, #2]
 18568 0134 1980     		strh	r1, [r3]	@ unaligned
 18569 0136 9A70     		strb	r2, [r3, #2]
2493:..\src/command_processing.c ****     
2494:..\src/command_processing.c ****     sprintf(str, "Total runtime (sec): %lu", MEM_P->cnt.total_runtime);
 18570              		.loc 1 2494 0
 18571 0138 D7F8A430 		ldr	r3, [r7, #164]
 18572 013c 9A6D     		ldr	r2, [r3, #88]
 18573 013e 07F10C03 		add	r3, r7, #12
 18574 0142 4349     		ldr	r1, .L717+28
 18575 0144 1846     		mov	r0, r3
 18576 0146 FFF7FEFF 		bl	sprintf
2495:..\src/command_processing.c ****     strcat(info_string, str);
 18577              		.loc 1 2495 0
 18578 014a 07F10C03 		add	r3, r7, #12
 18579 014e 1946     		mov	r1, r3
 18580 0150 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 413


 18581 0152 FFF7FEFF 		bl	strcat
2496:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18582              		.loc 1 2496 0
 18583 0156 7868     		ldr	r0, [r7, #4]
 18584 0158 FFF7FEFF 		bl	strlen
 18585 015c 0346     		mov	r3, r0
 18586 015e 1A46     		mov	r2, r3
 18587 0160 7B68     		ldr	r3, [r7, #4]
 18588 0162 1344     		add	r3, r3, r2
 18589 0164 354A     		ldr	r2, .L717+8
 18590 0166 1188     		ldrh	r1, [r2]	@ unaligned
 18591 0168 9278     		ldrb	r2, [r2, #2]
 18592 016a 1980     		strh	r1, [r3]	@ unaligned
 18593 016c 9A70     		strb	r2, [r3, #2]
2497:..\src/command_processing.c ****     
2498:..\src/command_processing.c ****     sprintf(str, "Average duration of a powered-on session (sec): %.4f", (float)(MEM_P->cnt.total_r
 18594              		.loc 1 2498 0
 18595 016e D7F8A430 		ldr	r3, [r7, #164]
 18596 0172 9A6D     		ldr	r2, [r3, #88]
 18597 0174 D7F8A430 		ldr	r3, [r7, #164]
 18598 0178 1B6E     		ldr	r3, [r3, #96]
 18599 017a B2FBF3F3 		udiv	r3, r2, r3
 18600 017e 1846     		mov	r0, r3
 18601 0180 FFF7FEFF 		bl	__aeabi_ui2f
 18602 0184 0346     		mov	r3, r0
 18603 0186 1846     		mov	r0, r3
 18604 0188 FFF7FEFF 		bl	__aeabi_f2d
 18605 018c 0346     		mov	r3, r0
 18606 018e 0C46     		mov	r4, r1
 18607 0190 07F10C00 		add	r0, r7, #12
 18608 0194 1A46     		mov	r2, r3
 18609 0196 2346     		mov	r3, r4
 18610 0198 2E49     		ldr	r1, .L717+32
 18611 019a FFF7FEFF 		bl	sprintf
2499:..\src/command_processing.c ****     strcat(info_string, str);
 18612              		.loc 1 2499 0
 18613 019e 07F10C03 		add	r3, r7, #12
 18614 01a2 1946     		mov	r1, r3
 18615 01a4 7868     		ldr	r0, [r7, #4]
 18616 01a6 FFF7FEFF 		bl	strcat
2500:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18617              		.loc 1 2500 0
 18618 01aa 7868     		ldr	r0, [r7, #4]
 18619 01ac FFF7FEFF 		bl	strlen
 18620 01b0 0346     		mov	r3, r0
 18621 01b2 1A46     		mov	r2, r3
 18622 01b4 7B68     		ldr	r3, [r7, #4]
 18623 01b6 1344     		add	r3, r3, r2
 18624 01b8 204A     		ldr	r2, .L717+8
 18625 01ba 1188     		ldrh	r1, [r2]	@ unaligned
 18626 01bc 9278     		ldrb	r2, [r2, #2]
 18627 01be 1980     		strh	r1, [r3]	@ unaligned
 18628 01c0 9A70     		strb	r2, [r3, #2]
2501:..\src/command_processing.c ****     
2502:..\src/command_processing.c ****     sprintf(str, "Frequency of motions: %.4f", (float)((MEM_P->cnt.emg_act_counter[0] + MEM_P->cnt.
 18629              		.loc 1 2502 0
 18630 01c2 D7F8A430 		ldr	r3, [r7, #164]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 414


 18631 01c6 1A69     		ldr	r2, [r3, #16]
 18632 01c8 D7F8A430 		ldr	r3, [r7, #164]
 18633 01cc 5B69     		ldr	r3, [r3, #20]
 18634 01ce 1344     		add	r3, r3, r2
 18635 01d0 1846     		mov	r0, r3
 18636 01d2 FFF7FEFF 		bl	__aeabi_ui2f
 18637 01d6 0446     		mov	r4, r0
 18638 01d8 D7F8A430 		ldr	r3, [r7, #164]
 18639 01dc 9B6D     		ldr	r3, [r3, #88]
 18640 01de 1846     		mov	r0, r3
 18641 01e0 FFF7FEFF 		bl	__aeabi_ui2f
 18642 01e4 0346     		mov	r3, r0
 18643 01e6 1946     		mov	r1, r3
 18644 01e8 2046     		mov	r0, r4
 18645 01ea FFF7FEFF 		bl	__aeabi_fdiv
 18646 01ee 0346     		mov	r3, r0
 18647 01f0 1846     		mov	r0, r3
 18648 01f2 FFF7FEFF 		bl	__aeabi_f2d
 18649 01f6 0346     		mov	r3, r0
 18650 01f8 0C46     		mov	r4, r1
 18651 01fa 07F10C00 		add	r0, r7, #12
 18652 01fe 1A46     		mov	r2, r3
 18653 0200 2346     		mov	r3, r4
 18654 0202 1549     		ldr	r1, .L717+36
 18655 0204 FFF7FEFF 		bl	sprintf
2503:..\src/command_processing.c ****     strcat(info_string, str);
 18656              		.loc 1 2503 0
 18657 0208 07F10C03 		add	r3, r7, #12
 18658 020c 1946     		mov	r1, r3
 18659 020e 7868     		ldr	r0, [r7, #4]
 18660 0210 FFF7FEFF 		bl	strcat
2504:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18661              		.loc 1 2504 0
 18662 0214 7868     		ldr	r0, [r7, #4]
 18663 0216 FFF7FEFF 		bl	strlen
 18664 021a 0346     		mov	r3, r0
 18665 021c 1A46     		mov	r2, r3
 18666 021e 7B68     		ldr	r3, [r7, #4]
 18667 0220 1344     		add	r3, r3, r2
 18668 0222 064A     		ldr	r2, .L717+8
 18669 0224 1188     		ldrh	r1, [r2]	@ unaligned
 18670 0226 9278     		ldrb	r2, [r2, #2]
 18671 0228 1980     		strh	r1, [r3]	@ unaligned
 18672 022a 9A70     		strb	r2, [r3, #2]
2505:..\src/command_processing.c **** 
2506:..\src/command_processing.c **** }
 18673              		.loc 1 2506 0
 18674 022c 00BF     		nop
 18675 022e A837     		adds	r7, r7, #168
 18676              		.cfi_def_cfa_offset 16
 18677 0230 BD46     		mov	sp, r7
 18678              		.cfi_def_cfa_register 13
 18679              		@ sp needed
 18680 0232 B0BD     		pop	{r4, r5, r7, pc}
 18681              	.L718:
 18682              		.align	2
 18683              	.L717:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 415


 18684 0234 00000000 		.word	g_mem
 18685 0238 601E0000 		.word	.LC287
 18686 023c 9C110000 		.word	.LC154
 18687 0240 7C1E0000 		.word	.LC288
 18688 0244 901E0000 		.word	.LC289
 18689 0248 B41E0000 		.word	.LC290
 18690 024c E01E0000 		.word	.LC291
 18691 0250 141F0000 		.word	.LC292
 18692 0254 301F0000 		.word	.LC293
 18693 0258 681F0000 		.word	.LC294
 18694              		.cfi_endproc
 18695              	.LFE74:
 18696              		.size	prepare_R01_info, .-prepare_R01_info
 18697              		.section	.rodata
 18698 1f83 00       		.align	2
 18699              	.LC295:
 18700 1f84 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18700      77617265 
 18700      20766572 
 18700      73696F6E 
 18700      3A202573 
 18701 1f9b 00       		.align	2
 18702              	.LC296:
 18703 1f9c 506F7369 		.ascii	"Position PID: \000"
 18703      74696F6E 
 18703      20504944 
 18703      3A2000
 18704 1fab 00       		.align	2
 18705              	.LC297:
 18706 1fac 43757272 		.ascii	"Current PID: \000"
 18706      656E7420 
 18706      5049443A 
 18706      2000
 18707 1fba 0000     		.align	2
 18708              	.LC298:
 18709 1fbc 5265736F 		.ascii	"Resolutions: \000"
 18709      6C757469 
 18709      6F6E733A 
 18709      2000
 18710 1fca 0000     		.align	2
 18711              	.LC299:
 18712 1fcc 4F666673 		.ascii	"Offsets: \000"
 18712      6574733A 
 18712      2000
 18713 1fd6 0000     		.align	2
 18714              	.LC300:
 18715 1fd8 4D756C74 		.ascii	"Multipliers: \000"
 18715      69706C69 
 18715      6572733A 
 18715      2000
 18716 1fe6 0000     		.align	2
 18717              	.LC301:
 18718 1fe8 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18718      656E7420 
 18718      6C6F6F6B 
 18718      75702074 
 18718      61626C65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 416


 18719 201b 662C2025 		.ascii	"f, %f\015\012\000"
 18719      660D0A00 
 18720 2023 00       		.align	2
 18721              	.LC302:
 18722 2024 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18722      74696F6E 
 18722      206C696D 
 18722      69742061 
 18722      63746976 
 18723              		.align	2
 18724              	.LC303:
 18725 2040 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18725      74696F6E 
 18725      206C696D 
 18725      6974733A 
 18725      20696E66 
 18726              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18727              		.align	2
 18728              		.global	prepare_SD_param_info
 18729              		.thumb
 18730              		.thumb_func
 18731              		.type	prepare_SD_param_info, %function
 18732              	prepare_SD_param_info:
 18733              	.LFB75:
2507:..\src/command_processing.c **** 
2508:..\src/command_processing.c **** //==============================================================================
2509:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2510:..\src/command_processing.c **** //==============================================================================
2511:..\src/command_processing.c **** 
2512:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2513:..\src/command_processing.c **** {
 18734              		.loc 1 2513 0
 18735              		.cfi_startproc
 18736              		@ args = 0, pretend = 0, frame = 152
 18737              		@ frame_needed = 1, uses_anonymous_args = 0
 18738 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18739              		.cfi_def_cfa_offset 36
 18740              		.cfi_offset 4, -36
 18741              		.cfi_offset 5, -32
 18742              		.cfi_offset 6, -28
 18743              		.cfi_offset 7, -24
 18744              		.cfi_offset 8, -20
 18745              		.cfi_offset 9, -16
 18746              		.cfi_offset 10, -12
 18747              		.cfi_offset 11, -8
 18748              		.cfi_offset 14, -4
 18749 0004 B1B0     		sub	sp, sp, #196
 18750              		.cfi_def_cfa_offset 232
 18751 0006 0AAF     		add	r7, sp, #40
 18752              		.cfi_def_cfa 7, 192
 18753 0008 7861     		str	r0, [r7, #20]
2514:..\src/command_processing.c ****     char str[100];  
2515:..\src/command_processing.c ****     int i;
2516:..\src/command_processing.c ****            
2517:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2518:..\src/command_processing.c ****     
2519:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 417


 18754              		.loc 1 2519 0
 18755 000a AB4B     		ldr	r3, .L784
 18756 000c C7F88C30 		str	r3, [r7, #140]
2520:..\src/command_processing.c ****         
2521:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18757              		.loc 1 2521 0
 18758 0010 AA4A     		ldr	r2, .L784+4
 18759 0012 AB49     		ldr	r1, .L784+8
 18760 0014 7869     		ldr	r0, [r7, #20]
 18761 0016 FFF7FEFF 		bl	sprintf
2522:..\src/command_processing.c ****     
2523:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18762              		.loc 1 2523 0
 18763 001a D7F88C30 		ldr	r3, [r7, #140]
 18764 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18765 0022 1A46     		mov	r2, r3
 18766 0024 07F11C03 		add	r3, r7, #28
 18767 0028 A649     		ldr	r1, .L784+12
 18768 002a 1846     		mov	r0, r3
 18769 002c FFF7FEFF 		bl	sprintf
2524:..\src/command_processing.c ****     strcat(info_string, str);
 18770              		.loc 1 2524 0
 18771 0030 07F11C03 		add	r3, r7, #28
 18772 0034 1946     		mov	r1, r3
 18773 0036 7869     		ldr	r0, [r7, #20]
 18774 0038 FFF7FEFF 		bl	strcat
2525:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18775              		.loc 1 2525 0
 18776 003c D7F88C30 		ldr	r3, [r7, #140]
 18777 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18778 0044 002B     		cmp	r3, #0
 18779 0046 02D0     		beq	.L721
 18780 0048 012B     		cmp	r3, #1
 18781 004a 15D0     		beq	.L722
 18782 004c 26E0     		b	.L720
 18783              	.L721:
2526:..\src/command_processing.c ****         case RIGHT_HAND:
2527:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18784              		.loc 1 2527 0
 18785 004e 7869     		ldr	r0, [r7, #20]
 18786 0050 FFF7FEFF 		bl	strlen
 18787 0054 0346     		mov	r3, r0
 18788 0056 1A46     		mov	r2, r3
 18789 0058 7B69     		ldr	r3, [r7, #20]
 18790 005a 1344     		add	r3, r3, r2
 18791 005c 9A4A     		ldr	r2, .L784+16
 18792 005e 1D46     		mov	r5, r3
 18793 0060 1446     		mov	r4, r2
 18794 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18795 0064 2860     		str	r0, [r5]	@ unaligned
 18796 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18797 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18798 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18799 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18800 006e A278     		ldrb	r2, [r4, #2]
 18801 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18802 0072 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 418


 18803 0074 AB74     		strb	r3, [r5, #18]
2528:..\src/command_processing.c ****             break;
 18804              		.loc 1 2528 0
 18805 0076 11E0     		b	.L720
 18806              	.L722:
2529:..\src/command_processing.c ****         case LEFT_HAND:
2530:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18807              		.loc 1 2530 0
 18808 0078 7869     		ldr	r0, [r7, #20]
 18809 007a FFF7FEFF 		bl	strlen
 18810 007e 0346     		mov	r3, r0
 18811 0080 1A46     		mov	r2, r3
 18812 0082 7B69     		ldr	r3, [r7, #20]
 18813 0084 1344     		add	r3, r3, r2
 18814 0086 914A     		ldr	r2, .L784+20
 18815 0088 1D46     		mov	r5, r3
 18816 008a 1446     		mov	r4, r2
 18817 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18818 008e 2860     		str	r0, [r5]	@ unaligned
 18819 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18820 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18821 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18822 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18823 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2531:..\src/command_processing.c ****             break;
 18824              		.loc 1 2531 0
 18825 009a 00BF     		nop
 18826              	.L720:
2532:..\src/command_processing.c ****     }
2533:..\src/command_processing.c **** 
2534:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18827              		.loc 1 2534 0
 18828 009c D7F88C30 		ldr	r3, [r7, #140]
 18829 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18830 00a4 1A46     		mov	r2, r3
 18831 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18832 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18833 00ae 1946     		mov	r1, r3
 18834 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18835 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18836 00b8 07F11C00 		add	r0, r7, #28
 18837 00bc 0093     		str	r3, [sp]
 18838 00be 0B46     		mov	r3, r1
 18839 00c0 8349     		ldr	r1, .L784+24
 18840 00c2 FFF7FEFF 		bl	sprintf
2535:..\src/command_processing.c ****     strcat(info_string, str);
 18841              		.loc 1 2535 0
 18842 00c6 07F11C03 		add	r3, r7, #28
 18843 00ca 1946     		mov	r1, r3
 18844 00cc 7869     		ldr	r0, [r7, #20]
 18845 00ce FFF7FEFF 		bl	strcat
2536:..\src/command_processing.c ****     
2537:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18846              		.loc 1 2537 0
 18847 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18848 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18849 00da 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 419


 18850 00dc D7F88C30 		ldr	r3, [r7, #140]
 18851 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18852 00e4 1946     		mov	r1, r3
 18853 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18854 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18855 00ee 07F11C00 		add	r0, r7, #28
 18856 00f2 0093     		str	r3, [sp]
 18857 00f4 0B46     		mov	r3, r1
 18858 00f6 7749     		ldr	r1, .L784+28
 18859 00f8 FFF7FEFF 		bl	sprintf
2538:..\src/command_processing.c ****     strcat(info_string, str);
 18860              		.loc 1 2538 0
 18861 00fc 07F11C03 		add	r3, r7, #28
 18862 0100 1946     		mov	r1, r3
 18863 0102 7869     		ldr	r0, [r7, #20]
 18864 0104 FFF7FEFF 		bl	strcat
 18865              	.LBB27:
2539:..\src/command_processing.c ****     
2540:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18866              		.loc 1 2540 0
 18867 0108 0023     		movs	r3, #0
 18868 010a 87F89330 		strb	r3, [r7, #147]
 18869 010e 00F05CBE 		b	.L723
 18870              	.L767:
 18871              	.LBB28:
2541:..\src/command_processing.c ****             
2542:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18872              		.loc 1 2542 0
 18873 0112 97F89330 		ldrb	r3, [r7, #147]
 18874 0116 87F88B30 		strb	r3, [r7, #139]
2543:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18875              		.loc 1 2543 0
 18876 011a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18877 011e 7422     		movs	r2, #116
 18878 0120 02FB03F3 		mul	r3, r2, r3
 18879 0124 B033     		adds	r3, r3, #176
 18880 0126 D7F88C20 		ldr	r2, [r7, #140]
 18881 012a 1344     		add	r3, r3, r2
 18882 012c C7F88430 		str	r3, [r7, #132]
2544:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18883              		.loc 1 2544 0
 18884 0130 D7F88430 		ldr	r3, [r7, #132]
 18885 0134 93F86030 		ldrb	r3, [r3, #96]
 18886 0138 87F88330 		strb	r3, [r7, #131]
2545:..\src/command_processing.c ****               
2546:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18887              		.loc 1 2546 0
 18888 013c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18889 0140 5A1C     		adds	r2, r3, #1
 18890 0142 07F11C03 		add	r3, r7, #28
 18891 0146 6449     		ldr	r1, .L784+32
 18892 0148 1846     		mov	r0, r3
 18893 014a FFF7FEFF 		bl	sprintf
2547:..\src/command_processing.c ****         strcat(info_string, str);
 18894              		.loc 1 2547 0
 18895 014e 07F11C03 		add	r3, r7, #28
 18896 0152 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 420


 18897 0154 7869     		ldr	r0, [r7, #20]
 18898 0156 FFF7FEFF 		bl	strcat
2548:..\src/command_processing.c ****                     
2549:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18899              		.loc 1 2549 0
 18900 015a 7869     		ldr	r0, [r7, #20]
 18901 015c FFF7FEFF 		bl	strlen
 18902 0160 0346     		mov	r3, r0
 18903 0162 1A46     		mov	r2, r3
 18904 0164 7B69     		ldr	r3, [r7, #20]
 18905 0166 1344     		add	r3, r3, r2
 18906 0168 5C4A     		ldr	r2, .L784+36
 18907 016a 1D46     		mov	r5, r3
 18908 016c 1446     		mov	r4, r2
 18909 016e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18910 0170 2860     		str	r0, [r5]	@ unaligned
 18911 0172 6960     		str	r1, [r5, #4]	@ unaligned
 18912 0174 AA60     		str	r2, [r5, #8]	@ unaligned
 18913 0176 EB60     		str	r3, [r5, #12]	@ unaligned
 18914 0178 03CC     		ldmia	r4!, {r0, r1}
 18915 017a 2861     		str	r0, [r5, #16]	@ unaligned
 18916 017c 6961     		str	r1, [r5, #20]	@ unaligned
 18917 017e 2388     		ldrh	r3, [r4]	@ unaligned
 18918 0180 A278     		ldrb	r2, [r4, #2]
 18919 0182 2B83     		strh	r3, [r5, #24]	@ unaligned
 18920 0184 1346     		mov	r3, r2
 18921 0186 AB76     		strb	r3, [r5, #26]
2550:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18922              		.loc 1 2550 0
 18923 0188 D7F88430 		ldr	r3, [r7, #132]
 18924 018c 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18925 0190 012B     		cmp	r3, #1
 18926 0192 0CD1     		bne	.L724
2551:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18927              		.loc 1 2551 0
 18928 0194 7869     		ldr	r0, [r7, #20]
 18929 0196 FFF7FEFF 		bl	strlen
 18930 019a 0346     		mov	r3, r0
 18931 019c 1A46     		mov	r2, r3
 18932 019e 7B69     		ldr	r3, [r7, #20]
 18933 01a0 1344     		add	r3, r3, r2
 18934 01a2 4F4A     		ldr	r2, .L784+40
 18935 01a4 1068     		ldr	r0, [r2]	@ unaligned
 18936 01a6 1860     		str	r0, [r3]	@ unaligned
 18937 01a8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18938 01aa 9A80     		strh	r2, [r3, #4]	@ unaligned
 18939 01ac 0BE0     		b	.L725
 18940              	.L724:
2552:..\src/command_processing.c ****         else
2553:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18941              		.loc 1 2553 0
 18942 01ae 7869     		ldr	r0, [r7, #20]
 18943 01b0 FFF7FEFF 		bl	strlen
 18944 01b4 0346     		mov	r3, r0
 18945 01b6 1A46     		mov	r2, r3
 18946 01b8 7B69     		ldr	r3, [r7, #20]
 18947 01ba 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 421


 18948 01bc 494A     		ldr	r2, .L784+44
 18949 01be 1068     		ldr	r0, [r2]	@ unaligned
 18950 01c0 1860     		str	r0, [r3]	@ unaligned
 18951 01c2 1279     		ldrb	r2, [r2, #4]
 18952 01c4 1A71     		strb	r2, [r3, #4]
 18953              	.L725:
2554:..\src/command_processing.c ****         
2555:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18954              		.loc 1 2555 0
 18955 01c6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18956 01ca 474A     		ldr	r2, .L784+48
 18957 01cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 18958 01d0 1A46     		mov	r2, r3
 18959 01d2 07F11C03 		add	r3, r7, #28
 18960 01d6 4549     		ldr	r1, .L784+52
 18961 01d8 1846     		mov	r0, r3
 18962 01da FFF7FEFF 		bl	sprintf
2556:..\src/command_processing.c ****         strcat(info_string, str);
 18963              		.loc 1 2556 0
 18964 01de 07F11C03 		add	r3, r7, #28
 18965 01e2 1946     		mov	r1, r3
 18966 01e4 7869     		ldr	r0, [r7, #20]
 18967 01e6 FFF7FEFF 		bl	strcat
2557:..\src/command_processing.c **** 
2558:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18968              		.loc 1 2558 0
 18969 01ea 7869     		ldr	r0, [r7, #20]
 18970 01ec FFF7FEFF 		bl	strlen
 18971 01f0 0346     		mov	r3, r0
 18972 01f2 1A46     		mov	r2, r3
 18973 01f4 7B69     		ldr	r3, [r7, #20]
 18974 01f6 1344     		add	r3, r3, r2
 18975 01f8 3D4A     		ldr	r2, .L784+56
 18976 01fa 1C46     		mov	r4, r3
 18977 01fc 1346     		mov	r3, r2
 18978 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 18979 0200 2060     		str	r0, [r4]	@ unaligned
 18980 0202 6160     		str	r1, [r4, #4]	@ unaligned
 18981 0204 A260     		str	r2, [r4, #8]	@ unaligned
 18982 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 18983 0208 9B78     		ldrb	r3, [r3, #2]
 18984 020a A281     		strh	r2, [r4, #12]	@ unaligned
 18985 020c A373     		strb	r3, [r4, #14]
2559:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18986              		.loc 1 2559 0
 18987 020e D7F88430 		ldr	r3, [r7, #132]
 18988 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18989 0216 032B     		cmp	r3, #3
 18990 0218 74D0     		beq	.L726
2560:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18991              		.loc 1 2560 0
 18992 021a D7F88430 		ldr	r3, [r7, #132]
 18993 021e 1B68     		ldr	r3, [r3]
 18994 0220 1846     		mov	r0, r3
 18995 0222 FFF7FEFF 		bl	__aeabi_i2d
 18996 0226 4FF00002 		mov	r2, #0
 18997 022a 324B     		ldr	r3, .L784+60
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 422


 18998 022c FFF7FEFF 		bl	__aeabi_ddiv
 18999 0230 0346     		mov	r3, r0
 19000 0232 0C46     		mov	r4, r1
 19001 0234 07F11C00 		add	r0, r7, #28
 19002 0238 1A46     		mov	r2, r3
 19003 023a 2346     		mov	r3, r4
 19004 023c 2E49     		ldr	r1, .L784+64
 19005 023e FFF7FEFF 		bl	sprintf
2561:..\src/command_processing.c ****             strcat(info_string, str);
 19006              		.loc 1 2561 0
 19007 0242 07F11C03 		add	r3, r7, #28
 19008 0246 1946     		mov	r1, r3
 19009 0248 7869     		ldr	r0, [r7, #20]
 19010 024a FFF7FEFF 		bl	strcat
2562:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 19011              		.loc 1 2562 0
 19012 024e D7F88430 		ldr	r3, [r7, #132]
 19013 0252 5B68     		ldr	r3, [r3, #4]
 19014 0254 1846     		mov	r0, r3
 19015 0256 FFF7FEFF 		bl	__aeabi_i2d
 19016 025a 4FF00002 		mov	r2, #0
 19017 025e 254B     		ldr	r3, .L784+60
 19018 0260 FFF7FEFF 		bl	__aeabi_ddiv
 19019 0264 0346     		mov	r3, r0
 19020 0266 0C46     		mov	r4, r1
 19021 0268 07F11C00 		add	r0, r7, #28
 19022 026c 1A46     		mov	r2, r3
 19023 026e 2346     		mov	r3, r4
 19024 0270 2249     		ldr	r1, .L784+68
 19025 0272 FFF7FEFF 		bl	sprintf
2563:..\src/command_processing.c ****             strcat(info_string, str);
 19026              		.loc 1 2563 0
 19027 0276 07F11C03 		add	r3, r7, #28
 19028 027a 1946     		mov	r1, r3
 19029 027c 7869     		ldr	r0, [r7, #20]
 19030 027e FFF7FEFF 		bl	strcat
2564:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 19031              		.loc 1 2564 0
 19032 0282 D7F88430 		ldr	r3, [r7, #132]
 19033 0286 9B68     		ldr	r3, [r3, #8]
 19034 0288 1846     		mov	r0, r3
 19035 028a FFF7FEFF 		bl	__aeabi_i2d
 19036 028e 4FF00002 		mov	r2, #0
 19037 0292 184B     		ldr	r3, .L784+60
 19038 0294 FFF7FEFF 		bl	__aeabi_ddiv
 19039 0298 0346     		mov	r3, r0
 19040 029a 0C46     		mov	r4, r1
 19041 029c 07F11C00 		add	r0, r7, #28
 19042 02a0 1A46     		mov	r2, r3
 19043 02a2 2346     		mov	r3, r4
 19044 02a4 1649     		ldr	r1, .L784+72
 19045 02a6 FFF7FEFF 		bl	sprintf
2565:..\src/command_processing.c ****             strcat(info_string, str);
 19046              		.loc 1 2565 0
 19047 02aa 07F11C03 		add	r3, r7, #28
 19048 02ae 1946     		mov	r1, r3
 19049 02b0 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 423


 19050 02b2 FFF7FEFF 		bl	strcat
 19051 02b6 73E0     		b	.L727
 19052              	.L785:
 19053              		.align	2
 19054              	.L784:
 19055 02b8 00000000 		.word	g_mem
 19056 02bc B4110000 		.word	.LC156
 19057 02c0 841F0000 		.word	.LC295
 19058 02c4 18120000 		.word	.LC159
 19059 02c8 C8120000 		.word	.LC165
 19060 02cc DC120000 		.word	.LC166
 19061 02d0 A01C0000 		.word	.LC275
 19062 02d4 CC1C0000 		.word	.LC276
 19063 02d8 24130000 		.word	.LC170
 19064 02dc 94130000 		.word	.LC179
 19065 02e0 84130000 		.word	.LC177
 19066 02e4 8C130000 		.word	.LC178
 19067 02e8 00000000 		.word	dev_pwm_limit
 19068 02ec BC130000 		.word	.LC182
 19069 02f0 9C1F0000 		.word	.LC296
 19070 02f4 0000F040 		.word	1089470464
 19071 02f8 D4140000 		.word	.LC194
 19072 02fc E0140000 		.word	.LC195
 19073 0300 EC140000 		.word	.LC196
 19074              	.L726:
2566:..\src/command_processing.c ****         }
2567:..\src/command_processing.c ****         else { 
2568:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 19075              		.loc 1 2568 0
 19076 0304 D7F88430 		ldr	r3, [r7, #132]
 19077 0308 9B69     		ldr	r3, [r3, #24]
 19078 030a 1846     		mov	r0, r3
 19079 030c FFF7FEFF 		bl	__aeabi_i2d
 19080 0310 4FF00002 		mov	r2, #0
 19081 0314 CC4B     		ldr	r3, .L786
 19082 0316 FFF7FEFF 		bl	__aeabi_ddiv
 19083 031a 0346     		mov	r3, r0
 19084 031c 0C46     		mov	r4, r1
 19085 031e 07F11C00 		add	r0, r7, #28
 19086 0322 1A46     		mov	r2, r3
 19087 0324 2346     		mov	r3, r4
 19088 0326 C949     		ldr	r1, .L786+4
 19089 0328 FFF7FEFF 		bl	sprintf
2569:..\src/command_processing.c ****             strcat(info_string, str);
 19090              		.loc 1 2569 0
 19091 032c 07F11C03 		add	r3, r7, #28
 19092 0330 1946     		mov	r1, r3
 19093 0332 7869     		ldr	r0, [r7, #20]
 19094 0334 FFF7FEFF 		bl	strcat
2570:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 19095              		.loc 1 2570 0
 19096 0338 D7F88430 		ldr	r3, [r7, #132]
 19097 033c DB69     		ldr	r3, [r3, #28]
 19098 033e 1846     		mov	r0, r3
 19099 0340 FFF7FEFF 		bl	__aeabi_i2d
 19100 0344 4FF00002 		mov	r2, #0
 19101 0348 BF4B     		ldr	r3, .L786
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 424


 19102 034a FFF7FEFF 		bl	__aeabi_ddiv
 19103 034e 0346     		mov	r3, r0
 19104 0350 0C46     		mov	r4, r1
 19105 0352 07F11C00 		add	r0, r7, #28
 19106 0356 1A46     		mov	r2, r3
 19107 0358 2346     		mov	r3, r4
 19108 035a BD49     		ldr	r1, .L786+8
 19109 035c FFF7FEFF 		bl	sprintf
2571:..\src/command_processing.c ****             strcat(info_string, str);
 19110              		.loc 1 2571 0
 19111 0360 07F11C03 		add	r3, r7, #28
 19112 0364 1946     		mov	r1, r3
 19113 0366 7869     		ldr	r0, [r7, #20]
 19114 0368 FFF7FEFF 		bl	strcat
2572:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 19115              		.loc 1 2572 0
 19116 036c D7F88430 		ldr	r3, [r7, #132]
 19117 0370 1B6A     		ldr	r3, [r3, #32]
 19118 0372 1846     		mov	r0, r3
 19119 0374 FFF7FEFF 		bl	__aeabi_i2d
 19120 0378 4FF00002 		mov	r2, #0
 19121 037c B24B     		ldr	r3, .L786
 19122 037e FFF7FEFF 		bl	__aeabi_ddiv
 19123 0382 0346     		mov	r3, r0
 19124 0384 0C46     		mov	r4, r1
 19125 0386 07F11C00 		add	r0, r7, #28
 19126 038a 1A46     		mov	r2, r3
 19127 038c 2346     		mov	r3, r4
 19128 038e B149     		ldr	r1, .L786+12
 19129 0390 FFF7FEFF 		bl	sprintf
2573:..\src/command_processing.c ****             strcat(info_string, str);
 19130              		.loc 1 2573 0
 19131 0394 07F11C03 		add	r3, r7, #28
 19132 0398 1946     		mov	r1, r3
 19133 039a 7869     		ldr	r0, [r7, #20]
 19134 039c FFF7FEFF 		bl	strcat
 19135              	.L727:
2574:..\src/command_processing.c ****         }
2575:..\src/command_processing.c **** 
2576:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 19136              		.loc 1 2576 0
 19137 03a0 7869     		ldr	r0, [r7, #20]
 19138 03a2 FFF7FEFF 		bl	strlen
 19139 03a6 0346     		mov	r3, r0
 19140 03a8 1A46     		mov	r2, r3
 19141 03aa 7B69     		ldr	r3, [r7, #20]
 19142 03ac 1344     		add	r3, r3, r2
 19143 03ae AA4A     		ldr	r2, .L786+16
 19144 03b0 1C46     		mov	r4, r3
 19145 03b2 1346     		mov	r3, r2
 19146 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 19147 03b6 2060     		str	r0, [r4]	@ unaligned
 19148 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 19149 03ba A260     		str	r2, [r4, #8]	@ unaligned
 19150 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 19151 03be A381     		strh	r3, [r4, #12]	@ unaligned
2577:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 425


 19152              		.loc 1 2577 0
 19153 03c0 D7F88430 		ldr	r3, [r7, #132]
 19154 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19155 03c8 032B     		cmp	r3, #3
 19156 03ca 4ED0     		beq	.L728
2578:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 19157              		.loc 1 2578 0
 19158 03cc D7F88430 		ldr	r3, [r7, #132]
 19159 03d0 DB68     		ldr	r3, [r3, #12]
 19160 03d2 1846     		mov	r0, r3
 19161 03d4 FFF7FEFF 		bl	__aeabi_i2d
 19162 03d8 4FF00002 		mov	r2, #0
 19163 03dc 9A4B     		ldr	r3, .L786
 19164 03de FFF7FEFF 		bl	__aeabi_ddiv
 19165 03e2 0346     		mov	r3, r0
 19166 03e4 0C46     		mov	r4, r1
 19167 03e6 07F11C00 		add	r0, r7, #28
 19168 03ea 1A46     		mov	r2, r3
 19169 03ec 2346     		mov	r3, r4
 19170 03ee 9749     		ldr	r1, .L786+4
 19171 03f0 FFF7FEFF 		bl	sprintf
2579:..\src/command_processing.c ****             strcat(info_string, str);
 19172              		.loc 1 2579 0
 19173 03f4 07F11C03 		add	r3, r7, #28
 19174 03f8 1946     		mov	r1, r3
 19175 03fa 7869     		ldr	r0, [r7, #20]
 19176 03fc FFF7FEFF 		bl	strcat
2580:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19177              		.loc 1 2580 0
 19178 0400 D7F88430 		ldr	r3, [r7, #132]
 19179 0404 1B69     		ldr	r3, [r3, #16]
 19180 0406 1846     		mov	r0, r3
 19181 0408 FFF7FEFF 		bl	__aeabi_i2d
 19182 040c 4FF00002 		mov	r2, #0
 19183 0410 8D4B     		ldr	r3, .L786
 19184 0412 FFF7FEFF 		bl	__aeabi_ddiv
 19185 0416 0346     		mov	r3, r0
 19186 0418 0C46     		mov	r4, r1
 19187 041a 07F11C00 		add	r0, r7, #28
 19188 041e 1A46     		mov	r2, r3
 19189 0420 2346     		mov	r3, r4
 19190 0422 8B49     		ldr	r1, .L786+8
 19191 0424 FFF7FEFF 		bl	sprintf
2581:..\src/command_processing.c ****             strcat(info_string, str);
 19192              		.loc 1 2581 0
 19193 0428 07F11C03 		add	r3, r7, #28
 19194 042c 1946     		mov	r1, r3
 19195 042e 7869     		ldr	r0, [r7, #20]
 19196 0430 FFF7FEFF 		bl	strcat
2582:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19197              		.loc 1 2582 0
 19198 0434 D7F88430 		ldr	r3, [r7, #132]
 19199 0438 5B69     		ldr	r3, [r3, #20]
 19200 043a 1846     		mov	r0, r3
 19201 043c FFF7FEFF 		bl	__aeabi_i2d
 19202 0440 4FF00002 		mov	r2, #0
 19203 0444 804B     		ldr	r3, .L786
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 426


 19204 0446 FFF7FEFF 		bl	__aeabi_ddiv
 19205 044a 0346     		mov	r3, r0
 19206 044c 0C46     		mov	r4, r1
 19207 044e 07F11C00 		add	r0, r7, #28
 19208 0452 1A46     		mov	r2, r3
 19209 0454 2346     		mov	r3, r4
 19210 0456 7F49     		ldr	r1, .L786+12
 19211 0458 FFF7FEFF 		bl	sprintf
2583:..\src/command_processing.c ****             strcat(info_string, str);
 19212              		.loc 1 2583 0
 19213 045c 07F11C03 		add	r3, r7, #28
 19214 0460 1946     		mov	r1, r3
 19215 0462 7869     		ldr	r0, [r7, #20]
 19216 0464 FFF7FEFF 		bl	strcat
 19217 0468 4DE0     		b	.L729
 19218              	.L728:
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c ****         }
2586:..\src/command_processing.c ****         else {
2587:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19219              		.loc 1 2587 0
 19220 046a D7F88430 		ldr	r3, [r7, #132]
 19221 046e 5B6A     		ldr	r3, [r3, #36]
 19222 0470 1846     		mov	r0, r3
 19223 0472 FFF7FEFF 		bl	__aeabi_i2d
 19224 0476 4FF00002 		mov	r2, #0
 19225 047a 734B     		ldr	r3, .L786
 19226 047c FFF7FEFF 		bl	__aeabi_ddiv
 19227 0480 0346     		mov	r3, r0
 19228 0482 0C46     		mov	r4, r1
 19229 0484 07F11C00 		add	r0, r7, #28
 19230 0488 1A46     		mov	r2, r3
 19231 048a 2346     		mov	r3, r4
 19232 048c 6F49     		ldr	r1, .L786+4
 19233 048e FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****             strcat(info_string, str);
 19234              		.loc 1 2588 0
 19235 0492 07F11C03 		add	r3, r7, #28
 19236 0496 1946     		mov	r1, r3
 19237 0498 7869     		ldr	r0, [r7, #20]
 19238 049a FFF7FEFF 		bl	strcat
2589:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19239              		.loc 1 2589 0
 19240 049e D7F88430 		ldr	r3, [r7, #132]
 19241 04a2 9B6A     		ldr	r3, [r3, #40]
 19242 04a4 1846     		mov	r0, r3
 19243 04a6 FFF7FEFF 		bl	__aeabi_i2d
 19244 04aa 4FF00002 		mov	r2, #0
 19245 04ae 664B     		ldr	r3, .L786
 19246 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 19247 04b4 0346     		mov	r3, r0
 19248 04b6 0C46     		mov	r4, r1
 19249 04b8 07F11C00 		add	r0, r7, #28
 19250 04bc 1A46     		mov	r2, r3
 19251 04be 2346     		mov	r3, r4
 19252 04c0 6349     		ldr	r1, .L786+8
 19253 04c2 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 427


2590:..\src/command_processing.c ****             strcat(info_string, str);
 19254              		.loc 1 2590 0
 19255 04c6 07F11C03 		add	r3, r7, #28
 19256 04ca 1946     		mov	r1, r3
 19257 04cc 7869     		ldr	r0, [r7, #20]
 19258 04ce FFF7FEFF 		bl	strcat
2591:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19259              		.loc 1 2591 0
 19260 04d2 D7F88430 		ldr	r3, [r7, #132]
 19261 04d6 DB6A     		ldr	r3, [r3, #44]
 19262 04d8 1846     		mov	r0, r3
 19263 04da FFF7FEFF 		bl	__aeabi_i2d
 19264 04de 4FF00002 		mov	r2, #0
 19265 04e2 594B     		ldr	r3, .L786
 19266 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 19267 04e8 0346     		mov	r3, r0
 19268 04ea 0C46     		mov	r4, r1
 19269 04ec 07F11C00 		add	r0, r7, #28
 19270 04f0 1A46     		mov	r2, r3
 19271 04f2 2346     		mov	r3, r4
 19272 04f4 5749     		ldr	r1, .L786+12
 19273 04f6 FFF7FEFF 		bl	sprintf
2592:..\src/command_processing.c ****             strcat(info_string, str);
 19274              		.loc 1 2592 0
 19275 04fa 07F11C03 		add	r3, r7, #28
 19276 04fe 1946     		mov	r1, r3
 19277 0500 7869     		ldr	r0, [r7, #20]
 19278 0502 FFF7FEFF 		bl	strcat
 19279              	.L729:
2593:..\src/command_processing.c ****         }
2594:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19280              		.loc 1 2594 0
 19281 0506 D7F88430 		ldr	r3, [r7, #132]
 19282 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19283 050e 012B     		cmp	r3, #1
 19284 0510 14D1     		bne	.L730
2595:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19285              		.loc 1 2595 0
 19286 0512 7869     		ldr	r0, [r7, #20]
 19287 0514 FFF7FEFF 		bl	strlen
 19288 0518 0346     		mov	r3, r0
 19289 051a 1A46     		mov	r2, r3
 19290 051c 7B69     		ldr	r3, [r7, #20]
 19291 051e 1344     		add	r3, r3, r2
 19292 0520 4E4A     		ldr	r2, .L786+20
 19293 0522 1D46     		mov	r5, r3
 19294 0524 1446     		mov	r4, r2
 19295 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19296 0528 2860     		str	r0, [r5]	@ unaligned
 19297 052a 6960     		str	r1, [r5, #4]	@ unaligned
 19298 052c AA60     		str	r2, [r5, #8]	@ unaligned
 19299 052e EB60     		str	r3, [r5, #12]	@ unaligned
 19300 0530 03CC     		ldmia	r4!, {r0, r1}
 19301 0532 2861     		str	r0, [r5, #16]	@ unaligned
 19302 0534 6961     		str	r1, [r5, #20]	@ unaligned
 19303 0536 2388     		ldrh	r3, [r4]	@ unaligned
 19304 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 428


 19305 053a 13E0     		b	.L731
 19306              	.L730:
2596:..\src/command_processing.c ****         else
2597:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19307              		.loc 1 2597 0
 19308 053c 7869     		ldr	r0, [r7, #20]
 19309 053e FFF7FEFF 		bl	strlen
 19310 0542 0346     		mov	r3, r0
 19311 0544 1A46     		mov	r2, r3
 19312 0546 7B69     		ldr	r3, [r7, #20]
 19313 0548 1344     		add	r3, r3, r2
 19314 054a 454A     		ldr	r2, .L786+24
 19315 054c 1D46     		mov	r5, r3
 19316 054e 1446     		mov	r4, r2
 19317 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19318 0552 2860     		str	r0, [r5]	@ unaligned
 19319 0554 6960     		str	r1, [r5, #4]	@ unaligned
 19320 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 19321 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 19322 055a 03CC     		ldmia	r4!, {r0, r1}
 19323 055c 2861     		str	r0, [r5, #16]	@ unaligned
 19324 055e 6961     		str	r1, [r5, #20]	@ unaligned
 19325 0560 2378     		ldrb	r3, [r4]
 19326 0562 2B76     		strb	r3, [r5, #24]
 19327              	.L731:
2598:..\src/command_processing.c **** 
2599:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19328              		.loc 1 2599 0
 19329 0564 D7F88430 		ldr	r3, [r7, #132]
 19330 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19331 056c 072B     		cmp	r3, #7
 19332 056e 00F2EA80 		bhi	.L732
 19333 0572 01A2     		adr	r2, .L734
 19334 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19335              		.p2align 2
 19336              	.L734:
 19337 0578 99050000 		.word	.L733+1
 19338 057c BD050000 		.word	.L735+1
 19339 0580 E5050000 		.word	.L736+1
 19340 0584 17060000 		.word	.L737+1
 19341 0588 75060000 		.word	.L738+1
 19342 058c A3060000 		.word	.L739+1
 19343 0590 D3060000 		.word	.L740+1
 19344 0594 01070000 		.word	.L741+1
 19345              		.p2align 1
 19346              	.L733:
2600:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2601:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19347              		.loc 1 2601 0
 19348 0598 7869     		ldr	r0, [r7, #20]
 19349 059a FFF7FEFF 		bl	strlen
 19350 059e 0346     		mov	r3, r0
 19351 05a0 1A46     		mov	r2, r3
 19352 05a2 7B69     		ldr	r3, [r7, #20]
 19353 05a4 1344     		add	r3, r3, r2
 19354 05a6 2F4A     		ldr	r2, .L786+28
 19355 05a8 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 429


 19356 05aa 1446     		mov	r4, r2
 19357 05ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19358 05ae 2860     		str	r0, [r5]	@ unaligned
 19359 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 19360 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 19361 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 19362 05b6 2388     		ldrh	r3, [r4]	@ unaligned
 19363 05b8 2B82     		strh	r3, [r5, #16]	@ unaligned
2602:..\src/command_processing.c ****                 break;
 19364              		.loc 1 2602 0
 19365 05ba C4E0     		b	.L732
 19366              	.L735:
2603:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2604:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19367              		.loc 1 2604 0
 19368 05bc 7869     		ldr	r0, [r7, #20]
 19369 05be FFF7FEFF 		bl	strlen
 19370 05c2 0346     		mov	r3, r0
 19371 05c4 1A46     		mov	r2, r3
 19372 05c6 7B69     		ldr	r3, [r7, #20]
 19373 05c8 1344     		add	r3, r3, r2
 19374 05ca 274A     		ldr	r2, .L786+32
 19375 05cc 1D46     		mov	r5, r3
 19376 05ce 1446     		mov	r4, r2
 19377 05d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19378 05d2 2860     		str	r0, [r5]	@ unaligned
 19379 05d4 6960     		str	r1, [r5, #4]	@ unaligned
 19380 05d6 AA60     		str	r2, [r5, #8]	@ unaligned
 19381 05d8 EB60     		str	r3, [r5, #12]	@ unaligned
 19382 05da 2068     		ldr	r0, [r4]	@ unaligned
 19383 05dc 2861     		str	r0, [r5, #16]	@ unaligned
 19384 05de 2379     		ldrb	r3, [r4, #4]
 19385 05e0 2B75     		strb	r3, [r5, #20]
2605:..\src/command_processing.c ****                 break;
 19386              		.loc 1 2605 0
 19387 05e2 B0E0     		b	.L732
 19388              	.L736:
2606:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2607:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19389              		.loc 1 2607 0
 19390 05e4 7869     		ldr	r0, [r7, #20]
 19391 05e6 FFF7FEFF 		bl	strlen
 19392 05ea 0346     		mov	r3, r0
 19393 05ec 1A46     		mov	r2, r3
 19394 05ee 7B69     		ldr	r3, [r7, #20]
 19395 05f0 1344     		add	r3, r3, r2
 19396 05f2 1E4A     		ldr	r2, .L786+36
 19397 05f4 1D46     		mov	r5, r3
 19398 05f6 1446     		mov	r4, r2
 19399 05f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19400 05fa 2860     		str	r0, [r5]	@ unaligned
 19401 05fc 6960     		str	r1, [r5, #4]	@ unaligned
 19402 05fe AA60     		str	r2, [r5, #8]	@ unaligned
 19403 0600 EB60     		str	r3, [r5, #12]	@ unaligned
 19404 0602 07CC     		ldmia	r4!, {r0, r1, r2}
 19405 0604 2861     		str	r0, [r5, #16]	@ unaligned
 19406 0606 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 430


 19407 0608 AA61     		str	r2, [r5, #24]	@ unaligned
 19408 060a 2388     		ldrh	r3, [r4]	@ unaligned
 19409 060c A278     		ldrb	r2, [r4, #2]
 19410 060e AB83     		strh	r3, [r5, #28]	@ unaligned
 19411 0610 1346     		mov	r3, r2
 19412 0612 AB77     		strb	r3, [r5, #30]
2608:..\src/command_processing.c ****                 break;
 19413              		.loc 1 2608 0
 19414 0614 97E0     		b	.L732
 19415              	.L737:
2609:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2610:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19416              		.loc 1 2610 0
 19417 0616 7869     		ldr	r0, [r7, #20]
 19418 0618 FFF7FEFF 		bl	strlen
 19419 061c 0346     		mov	r3, r0
 19420 061e 1A46     		mov	r2, r3
 19421 0620 7B69     		ldr	r3, [r7, #20]
 19422 0622 1344     		add	r3, r3, r2
 19423 0624 124A     		ldr	r2, .L786+40
 19424 0626 1D46     		mov	r5, r3
 19425 0628 1446     		mov	r4, r2
 19426 062a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19427 062c 2860     		str	r0, [r5]	@ unaligned
 19428 062e 6960     		str	r1, [r5, #4]	@ unaligned
 19429 0630 AA60     		str	r2, [r5, #8]	@ unaligned
 19430 0632 EB60     		str	r3, [r5, #12]	@ unaligned
 19431 0634 03CC     		ldmia	r4!, {r0, r1}
 19432 0636 2861     		str	r0, [r5, #16]	@ unaligned
 19433 0638 6961     		str	r1, [r5, #20]	@ unaligned
 19434 063a 2388     		ldrh	r3, [r4]	@ unaligned
 19435 063c A278     		ldrb	r2, [r4, #2]
 19436 063e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19437 0640 1346     		mov	r3, r2
 19438 0642 AB76     		strb	r3, [r5, #26]
2611:..\src/command_processing.c ****                 break;
 19439              		.loc 1 2611 0
 19440 0644 7FE0     		b	.L732
 19441              	.L787:
 19442 0646 00BF     		.align	2
 19443              	.L786:
 19444 0648 0000F040 		.word	1089470464
 19445 064c D4140000 		.word	.LC194
 19446 0650 E0140000 		.word	.LC195
 19447 0654 EC140000 		.word	.LC196
 19448 0658 AC1F0000 		.word	.LC297
 19449 065c 14150000 		.word	.LC198
 19450 0660 30150000 		.word	.LC199
 19451 0664 4C150000 		.word	.LC200
 19452 0668 60150000 		.word	.LC201
 19453 066c 78150000 		.word	.LC202
 19454 0670 98150000 		.word	.LC203
 19455              	.L738:
2612:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2613:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19456              		.loc 1 2613 0
 19457 0674 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 431


 19458 0676 FFF7FEFF 		bl	strlen
 19459 067a 0346     		mov	r3, r0
 19460 067c 1A46     		mov	r2, r3
 19461 067e 7B69     		ldr	r3, [r7, #20]
 19462 0680 1344     		add	r3, r3, r2
 19463 0682 BA4A     		ldr	r2, .L788
 19464 0684 1C46     		mov	r4, r3
 19465 0686 1546     		mov	r5, r2
 19466 0688 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19467 068a 2060     		str	r0, [r4]	@ unaligned
 19468 068c 6160     		str	r1, [r4, #4]	@ unaligned
 19469 068e A260     		str	r2, [r4, #8]	@ unaligned
 19470 0690 E360     		str	r3, [r4, #12]	@ unaligned
 19471 0692 2868     		ldr	r0, [r5]	@ unaligned
 19472 0694 2061     		str	r0, [r4, #16]	@ unaligned
 19473 0696 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19474 0698 AA79     		ldrb	r2, [r5, #6]
 19475 069a A382     		strh	r3, [r4, #20]	@ unaligned
 19476 069c 1346     		mov	r3, r2
 19477 069e A375     		strb	r3, [r4, #22]
2614:..\src/command_processing.c ****                 break;
 19478              		.loc 1 2614 0
 19479 06a0 51E0     		b	.L732
 19480              	.L739:
2615:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2616:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19481              		.loc 1 2616 0
 19482 06a2 7869     		ldr	r0, [r7, #20]
 19483 06a4 FFF7FEFF 		bl	strlen
 19484 06a8 0346     		mov	r3, r0
 19485 06aa 1A46     		mov	r2, r3
 19486 06ac 7B69     		ldr	r3, [r7, #20]
 19487 06ae 1344     		add	r3, r3, r2
 19488 06b0 AF4A     		ldr	r2, .L788+4
 19489 06b2 1D46     		mov	r5, r3
 19490 06b4 1446     		mov	r4, r2
 19491 06b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19492 06b8 2860     		str	r0, [r5]	@ unaligned
 19493 06ba 6960     		str	r1, [r5, #4]	@ unaligned
 19494 06bc AA60     		str	r2, [r5, #8]	@ unaligned
 19495 06be EB60     		str	r3, [r5, #12]	@ unaligned
 19496 06c0 03CC     		ldmia	r4!, {r0, r1}
 19497 06c2 2861     		str	r0, [r5, #16]	@ unaligned
 19498 06c4 6961     		str	r1, [r5, #20]	@ unaligned
 19499 06c6 2388     		ldrh	r3, [r4]	@ unaligned
 19500 06c8 A278     		ldrb	r2, [r4, #2]
 19501 06ca 2B83     		strh	r3, [r5, #24]	@ unaligned
 19502 06cc 1346     		mov	r3, r2
 19503 06ce AB76     		strb	r3, [r5, #26]
2617:..\src/command_processing.c ****                 break;
 19504              		.loc 1 2617 0
 19505 06d0 39E0     		b	.L732
 19506              	.L740:
2618:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2619:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19507              		.loc 1 2619 0
 19508 06d2 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 432


 19509 06d4 FFF7FEFF 		bl	strlen
 19510 06d8 0346     		mov	r3, r0
 19511 06da 1A46     		mov	r2, r3
 19512 06dc 7B69     		ldr	r3, [r7, #20]
 19513 06de 1344     		add	r3, r3, r2
 19514 06e0 A44A     		ldr	r2, .L788+8
 19515 06e2 1C46     		mov	r4, r3
 19516 06e4 1546     		mov	r5, r2
 19517 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19518 06e8 2060     		str	r0, [r4]	@ unaligned
 19519 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 19520 06ec A260     		str	r2, [r4, #8]	@ unaligned
 19521 06ee E360     		str	r3, [r4, #12]	@ unaligned
 19522 06f0 2868     		ldr	r0, [r5]	@ unaligned
 19523 06f2 2061     		str	r0, [r4, #16]	@ unaligned
 19524 06f4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19525 06f6 AA79     		ldrb	r2, [r5, #6]
 19526 06f8 A382     		strh	r3, [r4, #20]	@ unaligned
 19527 06fa 1346     		mov	r3, r2
 19528 06fc A375     		strb	r3, [r4, #22]
2620:..\src/command_processing.c ****                 break;
 19529              		.loc 1 2620 0
 19530 06fe 22E0     		b	.L732
 19531              	.L741:
2621:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2622:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19532              		.loc 1 2622 0
 19533 0700 7869     		ldr	r0, [r7, #20]
 19534 0702 FFF7FEFF 		bl	strlen
 19535 0706 0346     		mov	r3, r0
 19536 0708 1A46     		mov	r2, r3
 19537 070a 7B69     		ldr	r3, [r7, #20]
 19538 070c 1344     		add	r3, r3, r2
 19539 070e 9A4A     		ldr	r2, .L788+12
 19540 0710 1546     		mov	r5, r2
 19541 0712 9E46     		mov	lr, r3
 19542 0714 05F1200C 		add	ip, r5, #32
 19543              	.L742:
 19544 0718 7446     		mov	r4, lr
 19545 071a 2E46     		mov	r6, r5
 19546 071c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19547 071e 2060     		str	r0, [r4]	@ unaligned
 19548 0720 6160     		str	r1, [r4, #4]	@ unaligned
 19549 0722 A260     		str	r2, [r4, #8]	@ unaligned
 19550 0724 E360     		str	r3, [r4, #12]	@ unaligned
 19551 0726 1035     		adds	r5, r5, #16
 19552 0728 0EF1100E 		add	lr, lr, #16
 19553 072c 6545     		cmp	r5, ip
 19554 072e F3D1     		bne	.L742
 19555 0730 7446     		mov	r4, lr
 19556 0732 2B46     		mov	r3, r5
 19557 0734 07CB     		ldmia	r3!, {r0, r1, r2}
 19558 0736 2060     		str	r0, [r4]	@ unaligned
 19559 0738 6160     		str	r1, [r4, #4]	@ unaligned
 19560 073a A260     		str	r2, [r4, #8]	@ unaligned
 19561 073c 1A88     		ldrh	r2, [r3]	@ unaligned
 19562 073e 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 433


 19563 0740 A281     		strh	r2, [r4, #12]	@ unaligned
 19564 0742 A373     		strb	r3, [r4, #14]
2623:..\src/command_processing.c ****                 break;
 19565              		.loc 1 2623 0
 19566 0744 00BF     		nop
 19567              	.L732:
2624:..\src/command_processing.c ****         }
2625:..\src/command_processing.c **** 
2626:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19568              		.loc 1 2626 0
 19569 0746 D7F88430 		ldr	r3, [r7, #132]
 19570 074a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19571 074e 032B     		cmp	r3, #3
 19572 0750 63D8     		bhi	.L782
 19573 0752 01A2     		adr	r2, .L745
 19574 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19575              		.p2align 2
 19576              	.L745:
 19577 0758 69070000 		.word	.L744+1
 19578 075c 93070000 		.word	.L746+1
 19579 0760 B7070000 		.word	.L747+1
 19580 0764 DD070000 		.word	.L748+1
 19581              		.p2align 1
 19582              	.L744:
2627:..\src/command_processing.c ****             case CONTROL_ANGLE:
2628:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19583              		.loc 1 2628 0
 19584 0768 7869     		ldr	r0, [r7, #20]
 19585 076a FFF7FEFF 		bl	strlen
 19586 076e 0346     		mov	r3, r0
 19587 0770 1A46     		mov	r2, r3
 19588 0772 7B69     		ldr	r3, [r7, #20]
 19589 0774 1344     		add	r3, r3, r2
 19590 0776 814A     		ldr	r2, .L788+16
 19591 0778 1D46     		mov	r5, r3
 19592 077a 1446     		mov	r4, r2
 19593 077c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19594 077e 2860     		str	r0, [r5]	@ unaligned
 19595 0780 6960     		str	r1, [r5, #4]	@ unaligned
 19596 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 19597 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 19598 0786 03CC     		ldmia	r4!, {r0, r1}
 19599 0788 2861     		str	r0, [r5, #16]	@ unaligned
 19600 078a 6961     		str	r1, [r5, #20]	@ unaligned
 19601 078c 2378     		ldrb	r3, [r4]
 19602 078e 2B76     		strb	r3, [r5, #24]
2629:..\src/command_processing.c ****                 break;
 19603              		.loc 1 2629 0
 19604 0790 44E0     		b	.L749
 19605              	.L746:
2630:..\src/command_processing.c ****             case CONTROL_PWM:
2631:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19606              		.loc 1 2631 0
 19607 0792 7869     		ldr	r0, [r7, #20]
 19608 0794 FFF7FEFF 		bl	strlen
 19609 0798 0346     		mov	r3, r0
 19610 079a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 434


 19611 079c 7B69     		ldr	r3, [r7, #20]
 19612 079e 1344     		add	r3, r3, r2
 19613 07a0 774A     		ldr	r2, .L788+20
 19614 07a2 1D46     		mov	r5, r3
 19615 07a4 1446     		mov	r4, r2
 19616 07a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19617 07a8 2860     		str	r0, [r5]	@ unaligned
 19618 07aa 6960     		str	r1, [r5, #4]	@ unaligned
 19619 07ac AA60     		str	r2, [r5, #8]	@ unaligned
 19620 07ae EB60     		str	r3, [r5, #12]	@ unaligned
 19621 07b0 2068     		ldr	r0, [r4]	@ unaligned
 19622 07b2 2861     		str	r0, [r5, #16]	@ unaligned
2632:..\src/command_processing.c ****                 break;
 19623              		.loc 1 2632 0
 19624 07b4 32E0     		b	.L749
 19625              	.L747:
2633:..\src/command_processing.c ****             case CONTROL_CURRENT:
2634:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19626              		.loc 1 2634 0
 19627 07b6 7869     		ldr	r0, [r7, #20]
 19628 07b8 FFF7FEFF 		bl	strlen
 19629 07bc 0346     		mov	r3, r0
 19630 07be 1A46     		mov	r2, r3
 19631 07c0 7B69     		ldr	r3, [r7, #20]
 19632 07c2 1344     		add	r3, r3, r2
 19633 07c4 6F4A     		ldr	r2, .L788+24
 19634 07c6 1D46     		mov	r5, r3
 19635 07c8 1446     		mov	r4, r2
 19636 07ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19637 07cc 2860     		str	r0, [r5]	@ unaligned
 19638 07ce 6960     		str	r1, [r5, #4]	@ unaligned
 19639 07d0 AA60     		str	r2, [r5, #8]	@ unaligned
 19640 07d2 EB60     		str	r3, [r5, #12]	@ unaligned
 19641 07d4 03CC     		ldmia	r4!, {r0, r1}
 19642 07d6 2861     		str	r0, [r5, #16]	@ unaligned
 19643 07d8 6961     		str	r1, [r5, #20]	@ unaligned
2635:..\src/command_processing.c ****                 break;
 19644              		.loc 1 2635 0
 19645 07da 1FE0     		b	.L749
 19646              	.L748:
2636:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2637:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19647              		.loc 1 2637 0
 19648 07dc 7869     		ldr	r0, [r7, #20]
 19649 07de FFF7FEFF 		bl	strlen
 19650 07e2 0346     		mov	r3, r0
 19651 07e4 1A46     		mov	r2, r3
 19652 07e6 7B69     		ldr	r3, [r7, #20]
 19653 07e8 1344     		add	r3, r3, r2
 19654 07ea 674A     		ldr	r2, .L788+28
 19655 07ec 1446     		mov	r4, r2
 19656 07ee 9E46     		mov	lr, r3
 19657 07f0 04F1200C 		add	ip, r4, #32
 19658              	.L750:
 19659 07f4 7546     		mov	r5, lr
 19660 07f6 2646     		mov	r6, r4
 19661 07f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 435


 19662 07fa 2860     		str	r0, [r5]	@ unaligned
 19663 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 19664 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 19665 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 19666 0802 1034     		adds	r4, r4, #16
 19667 0804 0EF1100E 		add	lr, lr, #16
 19668 0808 6445     		cmp	r4, ip
 19669 080a F3D1     		bne	.L750
 19670 080c 7346     		mov	r3, lr
 19671 080e 2246     		mov	r2, r4
 19672 0810 1068     		ldr	r0, [r2]	@ unaligned
 19673 0812 1860     		str	r0, [r3]	@ unaligned
 19674 0814 1279     		ldrb	r2, [r2, #4]
 19675 0816 1A71     		strb	r2, [r3, #4]
2638:..\src/command_processing.c ****                 break;
 19676              		.loc 1 2638 0
 19677 0818 00E0     		b	.L749
 19678              	.L782:
2639:..\src/command_processing.c ****             default:
2640:..\src/command_processing.c ****                 break;
 19679              		.loc 1 2640 0
 19680 081a 00BF     		nop
 19681              	.L749:
2641:..\src/command_processing.c ****         }
2642:..\src/command_processing.c **** 
2643:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19682              		.loc 1 2643 0
 19683 081c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19684 0820 D7F88C10 		ldr	r1, [r7, #140]
 19685 0824 1346     		mov	r3, r2
 19686 0826 5B00     		lsls	r3, r3, #1
 19687 0828 1344     		add	r3, r3, r2
 19688 082a 1B01     		lsls	r3, r3, #4
 19689 082c 0B44     		add	r3, r3, r1
 19690 082e 03F5DC73 		add	r3, r3, #440
 19691 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19692 0834 002B     		cmp	r3, #0
 19693 0836 1CD0     		beq	.L751
2644:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19694              		.loc 1 2644 0
 19695 0838 7869     		ldr	r0, [r7, #20]
 19696 083a FFF7FEFF 		bl	strlen
 19697 083e 0346     		mov	r3, r0
 19698 0840 1A46     		mov	r2, r3
 19699 0842 7B69     		ldr	r3, [r7, #20]
 19700 0844 1344     		add	r3, r3, r2
 19701 0846 514A     		ldr	r2, .L788+32
 19702 0848 1446     		mov	r4, r2
 19703 084a 9E46     		mov	lr, r3
 19704 084c 04F1200C 		add	ip, r4, #32
 19705              	.L752:
 19706 0850 7546     		mov	r5, lr
 19707 0852 2646     		mov	r6, r4
 19708 0854 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19709 0856 2860     		str	r0, [r5]	@ unaligned
 19710 0858 6960     		str	r1, [r5, #4]	@ unaligned
 19711 085a AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 436


 19712 085c EB60     		str	r3, [r5, #12]	@ unaligned
 19713 085e 1034     		adds	r4, r4, #16
 19714 0860 0EF1100E 		add	lr, lr, #16
 19715 0864 6445     		cmp	r4, ip
 19716 0866 F3D1     		bne	.L752
 19717 0868 7346     		mov	r3, lr
 19718 086a 2246     		mov	r2, r4
 19719 086c 1278     		ldrb	r2, [r2]
 19720 086e 1A70     		strb	r2, [r3]
 19721 0870 13E0     		b	.L753
 19722              	.L751:
2645:..\src/command_processing.c ****         else
2646:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19723              		.loc 1 2646 0
 19724 0872 7869     		ldr	r0, [r7, #20]
 19725 0874 FFF7FEFF 		bl	strlen
 19726 0878 0346     		mov	r3, r0
 19727 087a 1A46     		mov	r2, r3
 19728 087c 7B69     		ldr	r3, [r7, #20]
 19729 087e 1344     		add	r3, r3, r2
 19730 0880 434A     		ldr	r2, .L788+36
 19731 0882 1C46     		mov	r4, r3
 19732 0884 1546     		mov	r5, r2
 19733 0886 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19734 0888 2060     		str	r0, [r4]	@ unaligned
 19735 088a 6160     		str	r1, [r4, #4]	@ unaligned
 19736 088c A260     		str	r2, [r4, #8]	@ unaligned
 19737 088e E360     		str	r3, [r4, #12]	@ unaligned
 19738 0890 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19739 0892 2061     		str	r0, [r4, #16]	@ unaligned
 19740 0894 6161     		str	r1, [r4, #20]	@ unaligned
 19741 0896 A261     		str	r2, [r4, #24]	@ unaligned
 19742 0898 E361     		str	r3, [r4, #28]	@ unaligned
 19743              	.L753:
2647:..\src/command_processing.c **** 
2648:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19744              		.loc 1 2648 0
 19745 089a 7869     		ldr	r0, [r7, #20]
 19746 089c FFF7FEFF 		bl	strlen
 19747 08a0 0346     		mov	r3, r0
 19748 08a2 1A46     		mov	r2, r3
 19749 08a4 7B69     		ldr	r3, [r7, #20]
 19750 08a6 1344     		add	r3, r3, r2
 19751 08a8 3A4A     		ldr	r2, .L788+40
 19752 08aa 1C46     		mov	r4, r3
 19753 08ac 1346     		mov	r3, r2
 19754 08ae 07CB     		ldmia	r3!, {r0, r1, r2}
 19755 08b0 2060     		str	r0, [r4]	@ unaligned
 19756 08b2 6160     		str	r1, [r4, #4]	@ unaligned
 19757 08b4 A260     		str	r2, [r4, #8]	@ unaligned
 19758 08b6 1B88     		ldrh	r3, [r3]	@ unaligned
 19759 08b8 A381     		strh	r3, [r4, #12]	@ unaligned
2649:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19760              		.loc 1 2649 0
 19761 08ba 0023     		movs	r3, #0
 19762 08bc C7F89430 		str	r3, [r7, #148]
 19763 08c0 30E0     		b	.L754
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 437


 19764              	.L756:
2650:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19765              		.loc 1 2650 0
 19766 08c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19767 08c6 D7F88C10 		ldr	r1, [r7, #140]
 19768 08ca 1346     		mov	r3, r2
 19769 08cc 5B00     		lsls	r3, r3, #1
 19770 08ce 1344     		add	r3, r3, r2
 19771 08d0 1B01     		lsls	r3, r3, #4
 19772 08d2 CA18     		adds	r2, r1, r3
 19773 08d4 D7F89430 		ldr	r3, [r7, #148]
 19774 08d8 1344     		add	r3, r3, r2
 19775 08da 03F29D13 		addw	r3, r3, #413
 19776 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19777 08e0 1A46     		mov	r2, r3
 19778 08e2 07F11C03 		add	r3, r7, #28
 19779 08e6 2C49     		ldr	r1, .L788+44
 19780 08e8 1846     		mov	r0, r3
 19781 08ea FFF7FEFF 		bl	sprintf
2651:..\src/command_processing.c ****             strcat(info_string, str);
 19782              		.loc 1 2651 0
 19783 08ee 07F11C03 		add	r3, r7, #28
 19784 08f2 1946     		mov	r1, r3
 19785 08f4 7869     		ldr	r0, [r7, #20]
 19786 08f6 FFF7FEFF 		bl	strcat
2652:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19787              		.loc 1 2652 0
 19788 08fa D7F89430 		ldr	r3, [r7, #148]
 19789 08fe 022B     		cmp	r3, #2
 19790 0900 0BD0     		beq	.L755
2653:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19791              		.loc 1 2653 0
 19792 0902 7869     		ldr	r0, [r7, #20]
 19793 0904 FFF7FEFF 		bl	strlen
 19794 0908 0346     		mov	r3, r0
 19795 090a 1A46     		mov	r2, r3
 19796 090c 7B69     		ldr	r3, [r7, #20]
 19797 090e 1344     		add	r3, r3, r2
 19798 0910 224A     		ldr	r2, .L788+48
 19799 0912 1188     		ldrh	r1, [r2]	@ unaligned
 19800 0914 9278     		ldrb	r2, [r2, #2]
 19801 0916 1980     		strh	r1, [r3]	@ unaligned
 19802 0918 9A70     		strb	r2, [r3, #2]
 19803              	.L755:
2649:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19804              		.loc 1 2649 0 discriminator 2
 19805 091a D7F89430 		ldr	r3, [r7, #148]
 19806 091e 0133     		adds	r3, r3, #1
 19807 0920 C7F89430 		str	r3, [r7, #148]
 19808              	.L754:
2649:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19809              		.loc 1 2649 0 is_stmt 0 discriminator 1
 19810 0924 D7F89430 		ldr	r3, [r7, #148]
 19811 0928 022B     		cmp	r3, #2
 19812 092a CADD     		ble	.L756
2654:..\src/command_processing.c ****             }                
2655:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 438


2656:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19813              		.loc 1 2656 0 is_stmt 1
 19814 092c 7869     		ldr	r0, [r7, #20]
 19815 092e FFF7FEFF 		bl	strlen
 19816 0932 0346     		mov	r3, r0
 19817 0934 1A46     		mov	r2, r3
 19818 0936 7B69     		ldr	r3, [r7, #20]
 19819 0938 1344     		add	r3, r3, r2
 19820 093a 194A     		ldr	r2, .L788+52
 19821 093c 1188     		ldrh	r1, [r2]	@ unaligned
 19822 093e 9278     		ldrb	r2, [r2, #2]
 19823 0940 1980     		strh	r1, [r3]	@ unaligned
 19824 0942 9A70     		strb	r2, [r3, #2]
2657:..\src/command_processing.c **** 
2658:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19825              		.loc 1 2658 0
 19826 0944 7869     		ldr	r0, [r7, #20]
 19827 0946 FFF7FEFF 		bl	strlen
 19828 094a 0346     		mov	r3, r0
 19829 094c 1A46     		mov	r2, r3
 19830 094e 7B69     		ldr	r3, [r7, #20]
 19831 0950 1344     		add	r3, r3, r2
 19832 0952 1449     		ldr	r1, .L788+56
 19833 0954 1A46     		mov	r2, r3
 19834 0956 0B46     		mov	r3, r1
 19835 0958 03CB     		ldmia	r3!, {r0, r1}
 19836 095a 1060     		str	r0, [r2]	@ unaligned
 19837 095c 5160     		str	r1, [r2, #4]	@ unaligned
 19838 095e 1B88     		ldrh	r3, [r3]	@ unaligned
 19839 0960 1381     		strh	r3, [r2, #8]	@ unaligned
2659:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19840              		.loc 1 2659 0
 19841 0962 0023     		movs	r3, #0
 19842 0964 C7F89430 		str	r3, [r7, #148]
 19843 0968 5EE0     		b	.L757
 19844              	.L789:
 19845 096a 00BF     		.align	2
 19846              	.L788:
 19847 096c B4150000 		.word	.LC204
 19848 0970 CC150000 		.word	.LC205
 19849 0974 E8150000 		.word	.LC206
 19850 0978 00160000 		.word	.LC207
 19851 097c 30160000 		.word	.LC208
 19852 0980 4C160000 		.word	.LC209
 19853 0984 60160000 		.word	.LC210
 19854 0988 78160000 		.word	.LC211
 19855 098c A0160000 		.word	.LC212
 19856 0990 C4160000 		.word	.LC213
 19857 0994 BC1F0000 		.word	.LC298
 19858 0998 F4130000 		.word	.LC185
 19859 099c F8130000 		.word	.LC186
 19860 09a0 9C110000 		.word	.LC154
 19861 09a4 CC1F0000 		.word	.LC299
 19862              	.L759:
2660:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19863              		.loc 1 2660 0
 19864 09a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 439


 19865 09ac D7F88C10 		ldr	r1, [r7, #140]
 19866 09b0 1346     		mov	r3, r2
 19867 09b2 5B00     		lsls	r3, r3, #1
 19868 09b4 1344     		add	r3, r3, r2
 19869 09b6 9B00     		lsls	r3, r3, #2
 19870 09b8 D7F89420 		ldr	r2, [r7, #148]
 19871 09bc 1344     		add	r3, r3, r2
 19872 09be 6833     		adds	r3, r3, #104
 19873 09c0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19874 09c4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19875 09c8 D7F88C00 		ldr	r0, [r7, #140]
 19876 09cc 1346     		mov	r3, r2
 19877 09ce 5B00     		lsls	r3, r3, #1
 19878 09d0 1344     		add	r3, r3, r2
 19879 09d2 1B01     		lsls	r3, r3, #4
 19880 09d4 C218     		adds	r2, r0, r3
 19881 09d6 D7F89430 		ldr	r3, [r7, #148]
 19882 09da 1344     		add	r3, r3, r2
 19883 09dc 03F29D13 		addw	r3, r3, #413
 19884 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19885 09e2 41FA03F2 		asr	r2, r1, r3
 19886 09e6 07F11C03 		add	r3, r7, #28
 19887 09ea CF49     		ldr	r1, .L790
 19888 09ec 1846     		mov	r0, r3
 19889 09ee FFF7FEFF 		bl	sprintf
2661:..\src/command_processing.c ****             strcat(info_string, str);
 19890              		.loc 1 2661 0
 19891 09f2 07F11C03 		add	r3, r7, #28
 19892 09f6 1946     		mov	r1, r3
 19893 09f8 7869     		ldr	r0, [r7, #20]
 19894 09fa FFF7FEFF 		bl	strcat
2662:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19895              		.loc 1 2662 0
 19896 09fe D7F89430 		ldr	r3, [r7, #148]
 19897 0a02 022B     		cmp	r3, #2
 19898 0a04 0BD0     		beq	.L758
2663:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19899              		.loc 1 2663 0
 19900 0a06 7869     		ldr	r0, [r7, #20]
 19901 0a08 FFF7FEFF 		bl	strlen
 19902 0a0c 0346     		mov	r3, r0
 19903 0a0e 1A46     		mov	r2, r3
 19904 0a10 7B69     		ldr	r3, [r7, #20]
 19905 0a12 1344     		add	r3, r3, r2
 19906 0a14 C54A     		ldr	r2, .L790+4
 19907 0a16 1188     		ldrh	r1, [r2]	@ unaligned
 19908 0a18 9278     		ldrb	r2, [r2, #2]
 19909 0a1a 1980     		strh	r1, [r3]	@ unaligned
 19910 0a1c 9A70     		strb	r2, [r3, #2]
 19911              	.L758:
2659:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19912              		.loc 1 2659 0 discriminator 2
 19913 0a1e D7F89430 		ldr	r3, [r7, #148]
 19914 0a22 0133     		adds	r3, r3, #1
 19915 0a24 C7F89430 		str	r3, [r7, #148]
 19916              	.L757:
2659:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 440


 19917              		.loc 1 2659 0 is_stmt 0 discriminator 1
 19918 0a28 D7F89430 		ldr	r3, [r7, #148]
 19919 0a2c 022B     		cmp	r3, #2
 19920 0a2e BBDD     		ble	.L759
2664:..\src/command_processing.c ****             }
2665:..\src/command_processing.c ****         }
2666:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19921              		.loc 1 2666 0 is_stmt 1
 19922 0a30 7869     		ldr	r0, [r7, #20]
 19923 0a32 FFF7FEFF 		bl	strlen
 19924 0a36 0346     		mov	r3, r0
 19925 0a38 1A46     		mov	r2, r3
 19926 0a3a 7B69     		ldr	r3, [r7, #20]
 19927 0a3c 1344     		add	r3, r3, r2
 19928 0a3e BC4A     		ldr	r2, .L790+8
 19929 0a40 1188     		ldrh	r1, [r2]	@ unaligned
 19930 0a42 9278     		ldrb	r2, [r2, #2]
 19931 0a44 1980     		strh	r1, [r3]	@ unaligned
 19932 0a46 9A70     		strb	r2, [r3, #2]
2667:..\src/command_processing.c ****             
2668:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19933              		.loc 1 2668 0
 19934 0a48 7869     		ldr	r0, [r7, #20]
 19935 0a4a FFF7FEFF 		bl	strlen
 19936 0a4e 0346     		mov	r3, r0
 19937 0a50 1A46     		mov	r2, r3
 19938 0a52 7B69     		ldr	r3, [r7, #20]
 19939 0a54 1344     		add	r3, r3, r2
 19940 0a56 B74A     		ldr	r2, .L790+12
 19941 0a58 1C46     		mov	r4, r3
 19942 0a5a 1346     		mov	r3, r2
 19943 0a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 19944 0a5e 2060     		str	r0, [r4]	@ unaligned
 19945 0a60 6160     		str	r1, [r4, #4]	@ unaligned
 19946 0a62 A260     		str	r2, [r4, #8]	@ unaligned
 19947 0a64 1B88     		ldrh	r3, [r3]	@ unaligned
 19948 0a66 A381     		strh	r3, [r4, #12]	@ unaligned
2669:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19949              		.loc 1 2669 0
 19950 0a68 0023     		movs	r3, #0
 19951 0a6a C7F89430 		str	r3, [r7, #148]
 19952 0a6e 35E0     		b	.L760
 19953              	.L762:
2670:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19954              		.loc 1 2670 0
 19955 0a70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19956 0a74 D7F88C10 		ldr	r1, [r7, #140]
 19957 0a78 1346     		mov	r3, r2
 19958 0a7a 5B00     		lsls	r3, r3, #1
 19959 0a7c 1344     		add	r3, r3, r2
 19960 0a7e 9B00     		lsls	r3, r3, #2
 19961 0a80 D7F89420 		ldr	r2, [r7, #148]
 19962 0a84 1344     		add	r3, r3, r2
 19963 0a86 6A33     		adds	r3, r3, #106
 19964 0a88 9B00     		lsls	r3, r3, #2
 19965 0a8a 0B44     		add	r3, r3, r1
 19966 0a8c 5B68     		ldr	r3, [r3, #4]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 441


 19967 0a8e 1846     		mov	r0, r3
 19968 0a90 FFF7FEFF 		bl	__aeabi_f2d
 19969 0a94 0346     		mov	r3, r0
 19970 0a96 0C46     		mov	r4, r1
 19971 0a98 07F11C00 		add	r0, r7, #28
 19972 0a9c 1A46     		mov	r2, r3
 19973 0a9e 2346     		mov	r3, r4
 19974 0aa0 A549     		ldr	r1, .L790+16
 19975 0aa2 FFF7FEFF 		bl	sprintf
2671:..\src/command_processing.c ****             strcat(info_string, str);
 19976              		.loc 1 2671 0
 19977 0aa6 07F11C03 		add	r3, r7, #28
 19978 0aaa 1946     		mov	r1, r3
 19979 0aac 7869     		ldr	r0, [r7, #20]
 19980 0aae FFF7FEFF 		bl	strcat
2672:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19981              		.loc 1 2672 0
 19982 0ab2 D7F89430 		ldr	r3, [r7, #148]
 19983 0ab6 022B     		cmp	r3, #2
 19984 0ab8 0BD0     		beq	.L761
2673:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19985              		.loc 1 2673 0
 19986 0aba 7869     		ldr	r0, [r7, #20]
 19987 0abc FFF7FEFF 		bl	strlen
 19988 0ac0 0346     		mov	r3, r0
 19989 0ac2 1A46     		mov	r2, r3
 19990 0ac4 7B69     		ldr	r3, [r7, #20]
 19991 0ac6 1344     		add	r3, r3, r2
 19992 0ac8 984A     		ldr	r2, .L790+4
 19993 0aca 1188     		ldrh	r1, [r2]	@ unaligned
 19994 0acc 9278     		ldrb	r2, [r2, #2]
 19995 0ace 1980     		strh	r1, [r3]	@ unaligned
 19996 0ad0 9A70     		strb	r2, [r3, #2]
 19997              	.L761:
2669:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19998              		.loc 1 2669 0 discriminator 2
 19999 0ad2 D7F89430 		ldr	r3, [r7, #148]
 20000 0ad6 0133     		adds	r3, r3, #1
 20001 0ad8 C7F89430 		str	r3, [r7, #148]
 20002              	.L760:
2669:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 20003              		.loc 1 2669 0 is_stmt 0 discriminator 1
 20004 0adc D7F89430 		ldr	r3, [r7, #148]
 20005 0ae0 022B     		cmp	r3, #2
 20006 0ae2 C5DD     		ble	.L762
2674:..\src/command_processing.c ****             }
2675:..\src/command_processing.c ****         }
2676:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 20007              		.loc 1 2676 0 is_stmt 1
 20008 0ae4 7869     		ldr	r0, [r7, #20]
 20009 0ae6 FFF7FEFF 		bl	strlen
 20010 0aea 0346     		mov	r3, r0
 20011 0aec 1A46     		mov	r2, r3
 20012 0aee 7B69     		ldr	r3, [r7, #20]
 20013 0af0 1344     		add	r3, r3, r2
 20014 0af2 8F4A     		ldr	r2, .L790+8
 20015 0af4 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 442


 20016 0af6 9278     		ldrb	r2, [r2, #2]
 20017 0af8 1980     		strh	r1, [r3]	@ unaligned
 20018 0afa 9A70     		strb	r2, [r3, #2]
2677:..\src/command_processing.c **** 
2678:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 20019              		.loc 1 2678 0
 20020 0afc D7F88430 		ldr	r3, [r7, #132]
 20021 0b00 5B6C     		ldr	r3, [r3, #68]	@ float
 20022 0b02 1846     		mov	r0, r3
 20023 0b04 FFF7FEFF 		bl	__aeabi_f2d
 20024 0b08 C7E90201 		strd	r0, [r7, #8]
 20025 0b0c D7F88430 		ldr	r3, [r7, #132]
 20026 0b10 9B6C     		ldr	r3, [r3, #72]	@ float
 20027 0b12 1846     		mov	r0, r3
 20028 0b14 FFF7FEFF 		bl	__aeabi_f2d
 20029 0b18 0446     		mov	r4, r0
 20030 0b1a 0D46     		mov	r5, r1
 20031 0b1c D7F88430 		ldr	r3, [r7, #132]
 20032 0b20 DB6C     		ldr	r3, [r3, #76]	@ float
 20033 0b22 1846     		mov	r0, r3
 20034 0b24 FFF7FEFF 		bl	__aeabi_f2d
 20035 0b28 8046     		mov	r8, r0
 20036 0b2a 8946     		mov	r9, r1
 20037 0b2c D7F88430 		ldr	r3, [r7, #132]
 20038 0b30 1B6D     		ldr	r3, [r3, #80]	@ float
 20039 0b32 1846     		mov	r0, r3
 20040 0b34 FFF7FEFF 		bl	__aeabi_f2d
 20041 0b38 8246     		mov	r10, r0
 20042 0b3a 8B46     		mov	fp, r1
 20043 0b3c D7F88430 		ldr	r3, [r7, #132]
 20044 0b40 5B6D     		ldr	r3, [r3, #84]	@ float
 20045 0b42 1846     		mov	r0, r3
 20046 0b44 FFF7FEFF 		bl	__aeabi_f2d
 20047 0b48 C7E90001 		strd	r0, [r7]
 20048 0b4c D7F88430 		ldr	r3, [r7, #132]
 20049 0b50 9B6D     		ldr	r3, [r3, #88]	@ float
 20050 0b52 1846     		mov	r0, r3
 20051 0b54 FFF7FEFF 		bl	__aeabi_f2d
 20052 0b58 0246     		mov	r2, r0
 20053 0b5a 0B46     		mov	r3, r1
 20054 0b5c 07F11C00 		add	r0, r7, #28
 20055 0b60 CDE90823 		strd	r2, [sp, #32]
 20056 0b64 D7E90012 		ldrd	r1, [r7]
 20057 0b68 CDE90612 		strd	r1, [sp, #24]
 20058 0b6c CDE904AB 		strd	r10, [sp, #16]
 20059 0b70 CDE90289 		strd	r8, [sp, #8]
 20060 0b74 CDE90045 		strd	r4, [sp]
 20061 0b78 D7E90223 		ldrd	r2, [r7, #8]
 20062 0b7c 6F49     		ldr	r1, .L790+20
 20063 0b7e FFF7FEFF 		bl	sprintf
2679:..\src/command_processing.c **** 		strcat(info_string, str);
 20064              		.loc 1 2679 0
 20065 0b82 07F11C03 		add	r3, r7, #28
 20066 0b86 1946     		mov	r1, r3
 20067 0b88 7869     		ldr	r0, [r7, #20]
 20068 0b8a FFF7FEFF 		bl	strcat
2680:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 443


2681:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 20069              		.loc 1 2681 0
 20070 0b8e D7F88430 		ldr	r3, [r7, #132]
 20071 0b92 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 20072 0b96 1A46     		mov	r2, r3
 20073 0b98 07F11C03 		add	r3, r7, #28
 20074 0b9c 6849     		ldr	r1, .L790+24
 20075 0b9e 1846     		mov	r0, r3
 20076 0ba0 FFF7FEFF 		bl	sprintf
2682:..\src/command_processing.c **** 		strcat(info_string, str);
 20077              		.loc 1 2682 0
 20078 0ba4 07F11C03 		add	r3, r7, #28
 20079 0ba8 1946     		mov	r1, r3
 20080 0baa 7869     		ldr	r0, [r7, #20]
 20081 0bac FFF7FEFF 		bl	strcat
2683:..\src/command_processing.c **** 
2684:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 20082              		.loc 1 2684 0
 20083 0bb0 D7F88430 		ldr	r3, [r7, #132]
 20084 0bb4 596B     		ldr	r1, [r3, #52]
 20085 0bb6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20086 0bba D7F88C00 		ldr	r0, [r7, #140]
 20087 0bbe 1346     		mov	r3, r2
 20088 0bc0 5B00     		lsls	r3, r3, #1
 20089 0bc2 1344     		add	r3, r3, r2
 20090 0bc4 1B01     		lsls	r3, r3, #4
 20091 0bc6 0344     		add	r3, r3, r0
 20092 0bc8 03F29D13 		addw	r3, r3, #413
 20093 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20094 0bce 41FA03F4 		asr	r4, r1, r3
 20095 0bd2 D7F88430 		ldr	r3, [r7, #132]
 20096 0bd6 996B     		ldr	r1, [r3, #56]
 20097 0bd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20098 0bdc D7F88C00 		ldr	r0, [r7, #140]
 20099 0be0 1346     		mov	r3, r2
 20100 0be2 5B00     		lsls	r3, r3, #1
 20101 0be4 1344     		add	r3, r3, r2
 20102 0be6 1B01     		lsls	r3, r3, #4
 20103 0be8 0344     		add	r3, r3, r0
 20104 0bea 03F29D13 		addw	r3, r3, #413
 20105 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20106 0bf0 41FA03F3 		asr	r3, r1, r3
 20107 0bf4 07F11C00 		add	r0, r7, #28
 20108 0bf8 2246     		mov	r2, r4
 20109 0bfa 5249     		ldr	r1, .L790+28
 20110 0bfc FFF7FEFF 		bl	sprintf
2685:..\src/command_processing.c **** 		strcat(info_string, str);
 20111              		.loc 1 2685 0
 20112 0c00 07F11C03 		add	r3, r7, #28
 20113 0c04 1946     		mov	r1, r3
 20114 0c06 7869     		ldr	r0, [r7, #20]
 20115 0c08 FFF7FEFF 		bl	strcat
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 20116              		.loc 1 2687 0
 20117 0c0c D7F88430 		ldr	r3, [r7, #132]
 20118 0c10 B3F95C30 		ldrsh	r3, [r3, #92]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 444


 20119 0c14 1A46     		mov	r2, r3
 20120 0c16 07F11C03 		add	r3, r7, #28
 20121 0c1a 4B49     		ldr	r1, .L790+32
 20122 0c1c 1846     		mov	r0, r3
 20123 0c1e FFF7FEFF 		bl	sprintf
2688:..\src/command_processing.c **** 		strcat(info_string, str);
 20124              		.loc 1 2688 0
 20125 0c22 07F11C03 		add	r3, r7, #28
 20126 0c26 1946     		mov	r1, r3
 20127 0c28 7869     		ldr	r0, [r7, #20]
 20128 0c2a FFF7FEFF 		bl	strcat
2689:..\src/command_processing.c **** 
2690:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 20129              		.loc 1 2690 0
 20130 0c2e D7F88430 		ldr	r3, [r7, #132]
 20131 0c32 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 20132 0c36 022B     		cmp	r3, #2
 20133 0c38 18D0     		beq	.L763
2691:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20134              		.loc 1 2691 0 discriminator 1
 20135 0c3a D7F88430 		ldr	r3, [r7, #132]
 20136 0c3e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2690:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20137              		.loc 1 2690 0 discriminator 1
 20138 0c42 032B     		cmp	r3, #3
 20139 0c44 12D0     		beq	.L763
2692:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20140              		.loc 1 2692 0
 20141 0c46 D7F88430 		ldr	r3, [r7, #132]
 20142 0c4a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2691:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20143              		.loc 1 2691 0
 20144 0c4e 042B     		cmp	r3, #4
 20145 0c50 0CD0     		beq	.L763
2693:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20146              		.loc 1 2693 0
 20147 0c52 D7F88430 		ldr	r3, [r7, #132]
 20148 0c56 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2692:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20149              		.loc 1 2692 0
 20150 0c5a 052B     		cmp	r3, #5
 20151 0c5c 06D0     		beq	.L763
2694:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 20152              		.loc 1 2694 0
 20153 0c5e D7F88430 		ldr	r3, [r7, #132]
 20154 0c62 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2693:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20155              		.loc 1 2693 0
 20156 0c66 072B     		cmp	r3, #7
 20157 0c68 40F0AA80 		bne	.L764
 20158              	.L763:
2695:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 20159              		.loc 1 2695 0
 20160 0c6c D7F88C30 		ldr	r3, [r7, #140]
 20161 0c70 B3F8F831 		ldrh	r3, [r3, #504]
 20162 0c74 1A46     		mov	r2, r3
 20163 0c76 D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 445


 20164 0c7a B3F8FA31 		ldrh	r3, [r3, #506]
 20165 0c7e 07F11C00 		add	r0, r7, #28
 20166 0c82 3249     		ldr	r1, .L790+36
 20167 0c84 FFF7FEFF 		bl	sprintf
2696:..\src/command_processing.c **** 			strcat(info_string, str);
 20168              		.loc 1 2696 0
 20169 0c88 07F11C03 		add	r3, r7, #28
 20170 0c8c 1946     		mov	r1, r3
 20171 0c8e 7869     		ldr	r0, [r7, #20]
 20172 0c90 FFF7FEFF 		bl	strcat
2697:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20173              		.loc 1 2697 0
 20174 0c94 7869     		ldr	r0, [r7, #20]
 20175 0c96 FFF7FEFF 		bl	strlen
 20176 0c9a 0346     		mov	r3, r0
 20177 0c9c 1A46     		mov	r2, r3
 20178 0c9e 7B69     		ldr	r3, [r7, #20]
 20179 0ca0 1344     		add	r3, r3, r2
 20180 0ca2 234A     		ldr	r2, .L790+8
 20181 0ca4 1188     		ldrh	r1, [r2]	@ unaligned
 20182 0ca6 9278     		ldrb	r2, [r2, #2]
 20183 0ca8 1980     		strh	r1, [r3]	@ unaligned
 20184 0caa 9A70     		strb	r2, [r3, #2]
2698:..\src/command_processing.c **** 
2699:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20185              		.loc 1 2699 0
 20186 0cac D7F88C30 		ldr	r3, [r7, #140]
 20187 0cb0 D3F8FC21 		ldr	r2, [r3, #508]
 20188 0cb4 D7F88C30 		ldr	r3, [r7, #140]
 20189 0cb8 D3F80032 		ldr	r3, [r3, #512]
 20190 0cbc 07F11C00 		add	r0, r7, #28
 20191 0cc0 2349     		ldr	r1, .L790+40
 20192 0cc2 FFF7FEFF 		bl	sprintf
2700:..\src/command_processing.c **** 			strcat(info_string, str);
 20193              		.loc 1 2700 0
 20194 0cc6 07F11C03 		add	r3, r7, #28
 20195 0cca 1946     		mov	r1, r3
 20196 0ccc 7869     		ldr	r0, [r7, #20]
 20197 0cce FFF7FEFF 		bl	strcat
2701:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20198              		.loc 1 2701 0
 20199 0cd2 7869     		ldr	r0, [r7, #20]
 20200 0cd4 FFF7FEFF 		bl	strlen
 20201 0cd8 0346     		mov	r3, r0
 20202 0cda 1A46     		mov	r2, r3
 20203 0cdc 7B69     		ldr	r3, [r7, #20]
 20204 0cde 1344     		add	r3, r3, r2
 20205 0ce0 134A     		ldr	r2, .L790+8
 20206 0ce2 1188     		ldrh	r1, [r2]	@ unaligned
 20207 0ce4 9278     		ldrb	r2, [r2, #2]
 20208 0ce6 1980     		strh	r1, [r3]	@ unaligned
 20209 0ce8 9A70     		strb	r2, [r3, #2]
2702:..\src/command_processing.c **** 
2703:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20210              		.loc 1 2703 0
 20211 0cea D7F88C30 		ldr	r3, [r7, #140]
 20212 0cee 93F80632 		ldrb	r3, [r3, #518]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 446


 20213 0cf2 002B     		cmp	r3, #0
 20214 0cf4 30D0     		beq	.L765
2704:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20215              		.loc 1 2704 0
 20216 0cf6 7869     		ldr	r0, [r7, #20]
 20217 0cf8 FFF7FEFF 		bl	strlen
 20218 0cfc 0346     		mov	r3, r0
 20219 0cfe 1A46     		mov	r2, r3
 20220 0d00 7B69     		ldr	r3, [r7, #20]
 20221 0d02 1344     		add	r3, r3, r2
 20222 0d04 134A     		ldr	r2, .L790+44
 20223 0d06 1D46     		mov	r5, r3
 20224 0d08 1446     		mov	r4, r2
 20225 0d0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20226 0d0c 2860     		str	r0, [r5]	@ unaligned
 20227 0d0e 6960     		str	r1, [r5, #4]	@ unaligned
 20228 0d10 AA60     		str	r2, [r5, #8]	@ unaligned
 20229 0d12 EB60     		str	r3, [r5, #12]	@ unaligned
 20230 0d14 03CC     		ldmia	r4!, {r0, r1}
 20231 0d16 2861     		str	r0, [r5, #16]	@ unaligned
 20232 0d18 6961     		str	r1, [r5, #20]	@ unaligned
 20233 0d1a 2388     		ldrh	r3, [r4]	@ unaligned
 20234 0d1c A278     		ldrb	r2, [r4, #2]
 20235 0d1e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20236 0d20 1346     		mov	r3, r2
 20237 0d22 AB76     		strb	r3, [r5, #26]
 20238 0d24 2CE0     		b	.L766
 20239              	.L791:
 20240 0d26 00BF     		.align	2
 20241              	.L790:
 20242 0d28 A0170000 		.word	.LC221
 20243 0d2c F8130000 		.word	.LC186
 20244 0d30 9C110000 		.word	.LC154
 20245 0d34 D81F0000 		.word	.LC300
 20246 0d38 C0170000 		.word	.LC223
 20247 0d3c E81F0000 		.word	.LC301
 20248 0d40 24200000 		.word	.LC302
 20249 0d44 40200000 		.word	.LC303
 20250 0d48 60180000 		.word	.LC229
 20251 0d4c 74190000 		.word	.LC238
 20252 0d50 98190000 		.word	.LC239
 20253 0d54 E8190000 		.word	.LC242
 20254              	.L765:
2705:..\src/command_processing.c **** 			else
2706:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20255              		.loc 1 2706 0
 20256 0d58 7869     		ldr	r0, [r7, #20]
 20257 0d5a FFF7FEFF 		bl	strlen
 20258 0d5e 0346     		mov	r3, r0
 20259 0d60 1A46     		mov	r2, r3
 20260 0d62 7B69     		ldr	r3, [r7, #20]
 20261 0d64 1344     		add	r3, r3, r2
 20262 0d66 D04A     		ldr	r2, .L792
 20263 0d68 1D46     		mov	r5, r3
 20264 0d6a 1446     		mov	r4, r2
 20265 0d6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20266 0d6e 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 447


 20267 0d70 6960     		str	r1, [r5, #4]	@ unaligned
 20268 0d72 AA60     		str	r2, [r5, #8]	@ unaligned
 20269 0d74 EB60     		str	r3, [r5, #12]	@ unaligned
 20270 0d76 03CC     		ldmia	r4!, {r0, r1}
 20271 0d78 2861     		str	r0, [r5, #16]	@ unaligned
 20272 0d7a 6961     		str	r1, [r5, #20]	@ unaligned
 20273 0d7c 2388     		ldrh	r3, [r4]	@ unaligned
 20274 0d7e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20275              	.L766:
2707:..\src/command_processing.c **** 
2708:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20276              		.loc 1 2708 0
 20277 0d80 D7F88C30 		ldr	r3, [r7, #140]
 20278 0d84 93F80432 		ldrb	r3, [r3, #516]	@ zero_extendqisi2
 20279 0d88 1A46     		mov	r2, r3
 20280 0d8a D7F88C30 		ldr	r3, [r7, #140]
 20281 0d8e 93F80532 		ldrb	r3, [r3, #517]	@ zero_extendqisi2
 20282 0d92 07F11C00 		add	r0, r7, #28
 20283 0d96 C549     		ldr	r1, .L792+4
 20284 0d98 FFF7FEFF 		bl	sprintf
2709:..\src/command_processing.c **** 			strcat(info_string, str);
 20285              		.loc 1 2709 0
 20286 0d9c 07F11C03 		add	r3, r7, #28
 20287 0da0 1946     		mov	r1, r3
 20288 0da2 7869     		ldr	r0, [r7, #20]
 20289 0da4 FFF7FEFF 		bl	strcat
2710:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20290              		.loc 1 2710 0
 20291 0da8 7869     		ldr	r0, [r7, #20]
 20292 0daa FFF7FEFF 		bl	strlen
 20293 0dae 0346     		mov	r3, r0
 20294 0db0 1A46     		mov	r2, r3
 20295 0db2 7B69     		ldr	r3, [r7, #20]
 20296 0db4 1344     		add	r3, r3, r2
 20297 0db6 BE4A     		ldr	r2, .L792+8
 20298 0db8 1188     		ldrh	r1, [r2]	@ unaligned
 20299 0dba 9278     		ldrb	r2, [r2, #2]
 20300 0dbc 1980     		strh	r1, [r3]	@ unaligned
 20301 0dbe 9A70     		strb	r2, [r3, #2]
 20302              	.L764:
 20303              	.LBE28:
2540:..\src/command_processing.c ****             
 20304              		.loc 1 2540 0 discriminator 2
 20305 0dc0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20306 0dc4 0133     		adds	r3, r3, #1
 20307 0dc6 87F89330 		strb	r3, [r7, #147]
 20308              	.L723:
2540:..\src/command_processing.c ****             
 20309              		.loc 1 2540 0 is_stmt 0 discriminator 1
 20310 0dca D7F88C30 		ldr	r3, [r7, #140]
 20311 0dce 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20312 0dd2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20313 0dd6 9A42     		cmp	r2, r3
 20314 0dd8 7FF69BA9 		bls	.L767
 20315              	.LBE27:
2711:..\src/command_processing.c **** 		}
2712:..\src/command_processing.c **** 	}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 448


2713:..\src/command_processing.c **** 	 
2714:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20316              		.loc 1 2714 0 is_stmt 1
 20317 0ddc D7F88C30 		ldr	r3, [r7, #140]
 20318 0de0 93F8B432 		ldrb	r3, [r3, #692]	@ zero_extendqisi2
 20319 0de4 002B     		cmp	r3, #0
 20320 0de6 63D0     		beq	.L768
2715:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20321              		.loc 1 2715 0
 20322 0de8 D7F88C30 		ldr	r3, [r7, #140]
 20323 0dec D3F8AC22 		ldr	r2, [r3, #684]
 20324 0df0 07F11C03 		add	r3, r7, #28
 20325 0df4 AF49     		ldr	r1, .L792+12
 20326 0df6 1846     		mov	r0, r3
 20327 0df8 FFF7FEFF 		bl	sprintf
2716:..\src/command_processing.c ****         strcat(info_string, str);
 20328              		.loc 1 2716 0
 20329 0dfc 07F11C03 		add	r3, r7, #28
 20330 0e00 1946     		mov	r1, r3
 20331 0e02 7869     		ldr	r0, [r7, #20]
 20332 0e04 FFF7FEFF 		bl	strcat
2717:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20333              		.loc 1 2717 0
 20334 0e08 7869     		ldr	r0, [r7, #20]
 20335 0e0a FFF7FEFF 		bl	strlen
 20336 0e0e 0346     		mov	r3, r0
 20337 0e10 1A46     		mov	r2, r3
 20338 0e12 7B69     		ldr	r3, [r7, #20]
 20339 0e14 1344     		add	r3, r3, r2
 20340 0e16 A64A     		ldr	r2, .L792+8
 20341 0e18 1188     		ldrh	r1, [r2]	@ unaligned
 20342 0e1a 9278     		ldrb	r2, [r2, #2]
 20343 0e1c 1980     		strh	r1, [r3]	@ unaligned
 20344 0e1e 9A70     		strb	r2, [r3, #2]
2718:..\src/command_processing.c ****         
2719:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20345              		.loc 1 2719 0
 20346 0e20 D7F88C30 		ldr	r3, [r7, #140]
 20347 0e24 D3F8B022 		ldr	r2, [r3, #688]
 20348 0e28 07F11C03 		add	r3, r7, #28
 20349 0e2c A249     		ldr	r1, .L792+16
 20350 0e2e 1846     		mov	r0, r3
 20351 0e30 FFF7FEFF 		bl	sprintf
2720:..\src/command_processing.c ****         strcat(info_string, str);
 20352              		.loc 1 2720 0
 20353 0e34 07F11C03 		add	r3, r7, #28
 20354 0e38 1946     		mov	r1, r3
 20355 0e3a 7869     		ldr	r0, [r7, #20]
 20356 0e3c FFF7FEFF 		bl	strcat
2721:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20357              		.loc 1 2721 0
 20358 0e40 7869     		ldr	r0, [r7, #20]
 20359 0e42 FFF7FEFF 		bl	strlen
 20360 0e46 0346     		mov	r3, r0
 20361 0e48 1A46     		mov	r2, r3
 20362 0e4a 7B69     		ldr	r3, [r7, #20]
 20363 0e4c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 449


 20364 0e4e 984A     		ldr	r2, .L792+8
 20365 0e50 1188     		ldrh	r1, [r2]	@ unaligned
 20366 0e52 9278     		ldrb	r2, [r2, #2]
 20367 0e54 1980     		strh	r1, [r3]	@ unaligned
 20368 0e56 9A70     		strb	r2, [r3, #2]
2722:..\src/command_processing.c ****         
2723:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20369              		.loc 1 2723 0
 20370 0e58 D7F88C30 		ldr	r3, [r7, #140]
 20371 0e5c D3F8A822 		ldr	r2, [r3, #680]
 20372 0e60 D7F88C30 		ldr	r3, [r7, #140]
 20373 0e64 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20374 0e68 1846     		mov	r0, r3
 20375 0e6a D7F88C10 		ldr	r1, [r7, #140]
 20376 0e6e 0346     		mov	r3, r0
 20377 0e70 5B00     		lsls	r3, r3, #1
 20378 0e72 0344     		add	r3, r3, r0
 20379 0e74 1B01     		lsls	r3, r3, #4
 20380 0e76 0B44     		add	r3, r3, r1
 20381 0e78 03F29D13 		addw	r3, r3, #413
 20382 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20383 0e7e 1A41     		asrs	r2, r2, r3
 20384 0e80 07F11C03 		add	r3, r7, #28
 20385 0e84 8D49     		ldr	r1, .L792+20
 20386 0e86 1846     		mov	r0, r3
 20387 0e88 FFF7FEFF 		bl	sprintf
2724:..\src/command_processing.c ****         strcat(info_string, str);
 20388              		.loc 1 2724 0
 20389 0e8c 07F11C03 		add	r3, r7, #28
 20390 0e90 1946     		mov	r1, r3
 20391 0e92 7869     		ldr	r0, [r7, #20]
 20392 0e94 FFF7FEFF 		bl	strcat
2725:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20393              		.loc 1 2725 0
 20394 0e98 7869     		ldr	r0, [r7, #20]
 20395 0e9a FFF7FEFF 		bl	strlen
 20396 0e9e 0346     		mov	r3, r0
 20397 0ea0 1A46     		mov	r2, r3
 20398 0ea2 7B69     		ldr	r3, [r7, #20]
 20399 0ea4 1344     		add	r3, r3, r2
 20400 0ea6 824A     		ldr	r2, .L792+8
 20401 0ea8 1188     		ldrh	r1, [r2]	@ unaligned
 20402 0eaa 9278     		ldrb	r2, [r2, #2]
 20403 0eac 1980     		strh	r1, [r3]	@ unaligned
 20404 0eae 9A70     		strb	r2, [r3, #2]
 20405              	.L768:
2726:..\src/command_processing.c ****     }
2727:..\src/command_processing.c **** 	
2728:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20406              		.loc 1 2728 0
 20407 0eb0 D7F88C30 		ldr	r3, [r7, #140]
 20408 0eb4 93F80832 		ldrb	r3, [r3, #520]	@ zero_extendqisi2
 20409 0eb8 002B     		cmp	r3, #0
 20410 0eba 00F0CB81 		beq	.L783
2729:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20411              		.loc 1 2729 0
 20412 0ebe 804B     		ldr	r3, .L792+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 450


 20413 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20414 0ec2 1A46     		mov	r2, r3
 20415 0ec4 07F11C03 		add	r3, r7, #28
 20416 0ec8 7E49     		ldr	r1, .L792+28
 20417 0eca 1846     		mov	r0, r3
 20418 0ecc FFF7FEFF 		bl	sprintf
2730:..\src/command_processing.c **** 		strcat(info_string, str);
 20419              		.loc 1 2730 0
 20420 0ed0 07F11C03 		add	r3, r7, #28
 20421 0ed4 1946     		mov	r1, r3
 20422 0ed6 7869     		ldr	r0, [r7, #20]
 20423 0ed8 FFF7FEFF 		bl	strcat
2731:..\src/command_processing.c **** 		
2732:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20424              		.loc 1 2732 0
 20425 0edc 7869     		ldr	r0, [r7, #20]
 20426 0ede FFF7FEFF 		bl	strlen
 20427 0ee2 0346     		mov	r3, r0
 20428 0ee4 1A46     		mov	r2, r3
 20429 0ee6 7B69     		ldr	r3, [r7, #20]
 20430 0ee8 1344     		add	r3, r3, r2
 20431 0eea 714A     		ldr	r2, .L792+8
 20432 0eec 1188     		ldrh	r1, [r2]	@ unaligned
 20433 0eee 9278     		ldrb	r2, [r2, #2]
 20434 0ef0 1980     		strh	r1, [r3]	@ unaligned
 20435 0ef2 9A70     		strb	r2, [r3, #2]
2733:..\src/command_processing.c **** 		
2734:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20436              		.loc 1 2734 0
 20437 0ef4 7869     		ldr	r0, [r7, #20]
 20438 0ef6 FFF7FEFF 		bl	strlen
 20439 0efa 0346     		mov	r3, r0
 20440 0efc 1A46     		mov	r2, r3
 20441 0efe 7B69     		ldr	r3, [r7, #20]
 20442 0f00 1344     		add	r3, r3, r2
 20443 0f02 714A     		ldr	r2, .L792+32
 20444 0f04 1D46     		mov	r5, r3
 20445 0f06 1446     		mov	r4, r2
 20446 0f08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20447 0f0a 2860     		str	r0, [r5]	@ unaligned
 20448 0f0c 6960     		str	r1, [r5, #4]	@ unaligned
 20449 0f0e AA60     		str	r2, [r5, #8]	@ unaligned
 20450 0f10 EB60     		str	r3, [r5, #12]	@ unaligned
 20451 0f12 2068     		ldr	r0, [r4]	@ unaligned
 20452 0f14 2861     		str	r0, [r5, #16]	@ unaligned
 20453 0f16 2379     		ldrb	r3, [r4, #4]
 20454 0f18 2B75     		strb	r3, [r5, #20]
2735:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20455              		.loc 1 2735 0
 20456 0f1a 0023     		movs	r3, #0
 20457 0f1c C7F89430 		str	r3, [r7, #148]
 20458 0f20 84E1     		b	.L770
 20459              	.L781:
2736:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20460              		.loc 1 2736 0
 20461 0f22 6A4A     		ldr	r2, .L792+36
 20462 0f24 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 451


 20463 0f28 1344     		add	r3, r3, r2
 20464 0f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20465 0f2c 07F11C00 		add	r0, r7, #28
 20466 0f30 D7F89420 		ldr	r2, [r7, #148]
 20467 0f34 6649     		ldr	r1, .L792+40
 20468 0f36 FFF7FEFF 		bl	sprintf
2737:..\src/command_processing.c **** 			strcat(info_string, str);
 20469              		.loc 1 2737 0
 20470 0f3a 07F11C03 		add	r3, r7, #28
 20471 0f3e 1946     		mov	r1, r3
 20472 0f40 7869     		ldr	r0, [r7, #20]
 20473 0f42 FFF7FEFF 		bl	strcat
2738:..\src/command_processing.c **** 			
2739:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20474              		.loc 1 2739 0
 20475 0f46 07F11C03 		add	r3, r7, #28
 20476 0f4a 624A     		ldr	r2, .L792+44
 20477 0f4c 1C46     		mov	r4, r3
 20478 0f4e 1546     		mov	r5, r2
 20479 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20480 0f52 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20481 0f54 2B68     		ldr	r3, [r5]
 20482 0f56 2380     		strh	r3, [r4]	@ movhi
2740:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20483              		.loc 1 2740 0
 20484 0f58 5C4A     		ldr	r2, .L792+36
 20485 0f5a D7F89430 		ldr	r3, [r7, #148]
 20486 0f5e 1344     		add	r3, r3, r2
 20487 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20488 0f62 1946     		mov	r1, r3
 20489 0f64 D7F88C20 		ldr	r2, [r7, #140]
 20490 0f68 0B46     		mov	r3, r1
 20491 0f6a 9B00     		lsls	r3, r3, #2
 20492 0f6c 0B44     		add	r3, r3, r1
 20493 0f6e 1344     		add	r3, r3, r2
 20494 0f70 03F20A23 		addw	r3, r3, #522
 20495 0f74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20496 0f76 002B     		cmp	r3, #0
 20497 0f78 0FD0     		beq	.L771
2741:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20498              		.loc 1 2741 0
 20499 0f7a 07F11C03 		add	r3, r7, #28
 20500 0f7e 1846     		mov	r0, r3
 20501 0f80 FFF7FEFF 		bl	strlen
 20502 0f84 0346     		mov	r3, r0
 20503 0f86 1A46     		mov	r2, r3
 20504 0f88 07F11C03 		add	r3, r7, #28
 20505 0f8c 1344     		add	r3, r3, r2
 20506 0f8e 524A     		ldr	r2, .L792+48
 20507 0f90 1068     		ldr	r0, [r2]	@ unaligned
 20508 0f92 1860     		str	r0, [r3]	@ unaligned
 20509 0f94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20510 0f96 9A80     		strh	r2, [r3, #4]	@ unaligned
 20511 0f98 0EE0     		b	.L772
 20512              	.L771:
2742:..\src/command_processing.c **** 			else
2743:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 452


 20513              		.loc 1 2743 0
 20514 0f9a 07F11C03 		add	r3, r7, #28
 20515 0f9e 1846     		mov	r0, r3
 20516 0fa0 FFF7FEFF 		bl	strlen
 20517 0fa4 0346     		mov	r3, r0
 20518 0fa6 1A46     		mov	r2, r3
 20519 0fa8 07F11C03 		add	r3, r7, #28
 20520 0fac 1344     		add	r3, r3, r2
 20521 0fae 4B4A     		ldr	r2, .L792+52
 20522 0fb0 1068     		ldr	r0, [r2]	@ unaligned
 20523 0fb2 1860     		str	r0, [r3]	@ unaligned
 20524 0fb4 1279     		ldrb	r2, [r2, #4]
 20525 0fb6 1A71     		strb	r2, [r3, #4]
 20526              	.L772:
2744:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20527              		.loc 1 2744 0
 20528 0fb8 07F11C03 		add	r3, r7, #28
 20529 0fbc 1846     		mov	r0, r3
 20530 0fbe FFF7FEFF 		bl	strlen
 20531 0fc2 0346     		mov	r3, r0
 20532 0fc4 1A46     		mov	r2, r3
 20533 0fc6 07F11C03 		add	r3, r7, #28
 20534 0fca 1344     		add	r3, r3, r2
 20535 0fcc 444A     		ldr	r2, .L792+56
 20536 0fce 1C46     		mov	r4, r3
 20537 0fd0 1346     		mov	r3, r2
 20538 0fd2 07CB     		ldmia	r3!, {r0, r1, r2}
 20539 0fd4 2060     		str	r0, [r4]	@ unaligned
 20540 0fd6 6160     		str	r1, [r4, #4]	@ unaligned
 20541 0fd8 A260     		str	r2, [r4, #8]	@ unaligned
 20542 0fda 1B88     		ldrh	r3, [r3]	@ unaligned
 20543 0fdc A381     		strh	r3, [r4, #12]	@ unaligned
2745:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20544              		.loc 1 2745 0
 20545 0fde 3B4A     		ldr	r2, .L792+36
 20546 0fe0 D7F89430 		ldr	r3, [r7, #148]
 20547 0fe4 1344     		add	r3, r3, r2
 20548 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20549 0fe8 1946     		mov	r1, r3
 20550 0fea D7F88C20 		ldr	r2, [r7, #140]
 20551 0fee 0B46     		mov	r3, r1
 20552 0ff0 9B00     		lsls	r3, r3, #2
 20553 0ff2 0B44     		add	r3, r3, r1
 20554 0ff4 1344     		add	r3, r3, r2
 20555 0ff6 03F20B23 		addw	r3, r3, #523
 20556 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20557 0ffc 002B     		cmp	r3, #0
 20558 0ffe 0FD0     		beq	.L773
2746:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20559              		.loc 1 2746 0
 20560 1000 07F11C03 		add	r3, r7, #28
 20561 1004 1846     		mov	r0, r3
 20562 1006 FFF7FEFF 		bl	strlen
 20563 100a 0346     		mov	r3, r0
 20564 100c 1A46     		mov	r2, r3
 20565 100e 07F11C03 		add	r3, r7, #28
 20566 1012 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 453


 20567 1014 304A     		ldr	r2, .L792+48
 20568 1016 1068     		ldr	r0, [r2]	@ unaligned
 20569 1018 1860     		str	r0, [r3]	@ unaligned
 20570 101a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20571 101c 9A80     		strh	r2, [r3, #4]	@ unaligned
 20572 101e 0EE0     		b	.L774
 20573              	.L773:
2747:..\src/command_processing.c **** 			else
2748:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20574              		.loc 1 2748 0
 20575 1020 07F11C03 		add	r3, r7, #28
 20576 1024 1846     		mov	r0, r3
 20577 1026 FFF7FEFF 		bl	strlen
 20578 102a 0346     		mov	r3, r0
 20579 102c 1A46     		mov	r2, r3
 20580 102e 07F11C03 		add	r3, r7, #28
 20581 1032 1344     		add	r3, r3, r2
 20582 1034 294A     		ldr	r2, .L792+52
 20583 1036 1068     		ldr	r0, [r2]	@ unaligned
 20584 1038 1860     		str	r0, [r3]	@ unaligned
 20585 103a 1279     		ldrb	r2, [r2, #4]
 20586 103c 1A71     		strb	r2, [r3, #4]
 20587              	.L774:
2749:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20588              		.loc 1 2749 0
 20589 103e 07F11C03 		add	r3, r7, #28
 20590 1042 1846     		mov	r0, r3
 20591 1044 FFF7FEFF 		bl	strlen
 20592 1048 0346     		mov	r3, r0
 20593 104a 1A46     		mov	r2, r3
 20594 104c 07F11C03 		add	r3, r7, #28
 20595 1050 1344     		add	r3, r3, r2
 20596 1052 244A     		ldr	r2, .L792+60
 20597 1054 1D46     		mov	r5, r3
 20598 1056 1446     		mov	r4, r2
 20599 1058 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20600 105a 2860     		str	r0, [r5]	@ unaligned
 20601 105c 6960     		str	r1, [r5, #4]	@ unaligned
 20602 105e AA60     		str	r2, [r5, #8]	@ unaligned
 20603 1060 EB60     		str	r3, [r5, #12]	@ unaligned
 20604 1062 2378     		ldrb	r3, [r4]
 20605 1064 2B74     		strb	r3, [r5, #16]
2750:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20606              		.loc 1 2750 0
 20607 1066 194A     		ldr	r2, .L792+36
 20608 1068 D7F89430 		ldr	r3, [r7, #148]
 20609 106c 1344     		add	r3, r3, r2
 20610 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20611 1070 1946     		mov	r1, r3
 20612 1072 D7F88C20 		ldr	r2, [r7, #140]
 20613 1076 0B46     		mov	r3, r1
 20614 1078 9B00     		lsls	r3, r3, #2
 20615 107a 0B44     		add	r3, r3, r1
 20616 107c 1344     		add	r3, r3, r2
 20617 107e 03F50373 		add	r3, r3, #524
 20618 1082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20619 1084 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 454


 20620 1086 2FD0     		beq	.L775
2751:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20621              		.loc 1 2751 0
 20622 1088 07F11C03 		add	r3, r7, #28
 20623 108c 1846     		mov	r0, r3
 20624 108e FFF7FEFF 		bl	strlen
 20625 1092 0346     		mov	r3, r0
 20626 1094 1A46     		mov	r2, r3
 20627 1096 07F11C03 		add	r3, r7, #28
 20628 109a 1344     		add	r3, r3, r2
 20629 109c 0E4A     		ldr	r2, .L792+48
 20630 109e 1068     		ldr	r0, [r2]	@ unaligned
 20631 10a0 1860     		str	r0, [r3]	@ unaligned
 20632 10a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20633 10a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20634 10a6 2EE0     		b	.L776
 20635              	.L793:
 20636              		.align	2
 20637              	.L792:
 20638 10a8 041A0000 		.word	.LC243
 20639 10ac 201A0000 		.word	.LC244
 20640 10b0 9C110000 		.word	.LC154
 20641 10b4 E41A0000 		.word	.LC252
 20642 10b8 001B0000 		.word	.LC253
 20643 10bc 281B0000 		.word	.LC254
 20644 10c0 00000000 		.word	N_IMU_Connected
 20645 10c4 3C1B0000 		.word	.LC255
 20646 10c8 501B0000 		.word	.LC256
 20647 10cc 00000000 		.word	IMU_connected
 20648 10d0 681B0000 		.word	.LC257
 20649 10d4 7C1B0000 		.word	.LC258
 20650 10d8 84130000 		.word	.LC177
 20651 10dc 8C130000 		.word	.LC178
 20652 10e0 901B0000 		.word	.LC259
 20653 10e4 A01B0000 		.word	.LC260
 20654              	.L775:
2752:..\src/command_processing.c **** 			else
2753:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20655              		.loc 1 2753 0
 20656 10e8 07F11C03 		add	r3, r7, #28
 20657 10ec 1846     		mov	r0, r3
 20658 10ee FFF7FEFF 		bl	strlen
 20659 10f2 0346     		mov	r3, r0
 20660 10f4 1A46     		mov	r2, r3
 20661 10f6 07F11C03 		add	r3, r7, #28
 20662 10fa 1344     		add	r3, r3, r2
 20663 10fc 584A     		ldr	r2, .L794
 20664 10fe 1068     		ldr	r0, [r2]	@ unaligned
 20665 1100 1860     		str	r0, [r3]	@ unaligned
 20666 1102 1279     		ldrb	r2, [r2, #4]
 20667 1104 1A71     		strb	r2, [r3, #4]
 20668              	.L776:
2754:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20669              		.loc 1 2754 0
 20670 1106 07F11C03 		add	r3, r7, #28
 20671 110a 1846     		mov	r0, r3
 20672 110c FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 455


 20673 1110 0346     		mov	r3, r0
 20674 1112 1A46     		mov	r2, r3
 20675 1114 07F11C03 		add	r3, r7, #28
 20676 1118 1344     		add	r3, r3, r2
 20677 111a 524A     		ldr	r2, .L794+4
 20678 111c 1C46     		mov	r4, r3
 20679 111e 1346     		mov	r3, r2
 20680 1120 07CB     		ldmia	r3!, {r0, r1, r2}
 20681 1122 2060     		str	r0, [r4]	@ unaligned
 20682 1124 6160     		str	r1, [r4, #4]	@ unaligned
 20683 1126 A260     		str	r2, [r4, #8]	@ unaligned
 20684 1128 1B88     		ldrh	r3, [r3]	@ unaligned
 20685 112a A381     		strh	r3, [r4, #12]	@ unaligned
2755:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20686              		.loc 1 2755 0
 20687 112c 4E4A     		ldr	r2, .L794+8
 20688 112e D7F89430 		ldr	r3, [r7, #148]
 20689 1132 1344     		add	r3, r3, r2
 20690 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20691 1136 1946     		mov	r1, r3
 20692 1138 D7F88C20 		ldr	r2, [r7, #140]
 20693 113c 0B46     		mov	r3, r1
 20694 113e 9B00     		lsls	r3, r3, #2
 20695 1140 0B44     		add	r3, r3, r1
 20696 1142 1344     		add	r3, r3, r2
 20697 1144 03F20D23 		addw	r3, r3, #525
 20698 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20699 114a 002B     		cmp	r3, #0
 20700 114c 0FD0     		beq	.L777
2756:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20701              		.loc 1 2756 0
 20702 114e 07F11C03 		add	r3, r7, #28
 20703 1152 1846     		mov	r0, r3
 20704 1154 FFF7FEFF 		bl	strlen
 20705 1158 0346     		mov	r3, r0
 20706 115a 1A46     		mov	r2, r3
 20707 115c 07F11C03 		add	r3, r7, #28
 20708 1160 1344     		add	r3, r3, r2
 20709 1162 424A     		ldr	r2, .L794+12
 20710 1164 1068     		ldr	r0, [r2]	@ unaligned
 20711 1166 1860     		str	r0, [r3]	@ unaligned
 20712 1168 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20713 116a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20714 116c 0EE0     		b	.L778
 20715              	.L777:
2757:..\src/command_processing.c **** 			else
2758:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20716              		.loc 1 2758 0
 20717 116e 07F11C03 		add	r3, r7, #28
 20718 1172 1846     		mov	r0, r3
 20719 1174 FFF7FEFF 		bl	strlen
 20720 1178 0346     		mov	r3, r0
 20721 117a 1A46     		mov	r2, r3
 20722 117c 07F11C03 		add	r3, r7, #28
 20723 1180 1344     		add	r3, r3, r2
 20724 1182 374A     		ldr	r2, .L794
 20725 1184 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 456


 20726 1186 1860     		str	r0, [r3]	@ unaligned
 20727 1188 1279     		ldrb	r2, [r2, #4]
 20728 118a 1A71     		strb	r2, [r3, #4]
 20729              	.L778:
2759:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20730              		.loc 1 2759 0
 20731 118c 07F11C03 		add	r3, r7, #28
 20732 1190 1846     		mov	r0, r3
 20733 1192 FFF7FEFF 		bl	strlen
 20734 1196 0346     		mov	r3, r0
 20735 1198 1A46     		mov	r2, r3
 20736 119a 07F11C03 		add	r3, r7, #28
 20737 119e 1344     		add	r3, r3, r2
 20738 11a0 334A     		ldr	r2, .L794+16
 20739 11a2 1C46     		mov	r4, r3
 20740 11a4 1346     		mov	r3, r2
 20741 11a6 07CB     		ldmia	r3!, {r0, r1, r2}
 20742 11a8 2060     		str	r0, [r4]	@ unaligned
 20743 11aa 6160     		str	r1, [r4, #4]	@ unaligned
 20744 11ac A260     		str	r2, [r4, #8]	@ unaligned
 20745 11ae 1A88     		ldrh	r2, [r3]	@ unaligned
 20746 11b0 9B78     		ldrb	r3, [r3, #2]
 20747 11b2 A281     		strh	r2, [r4, #12]	@ unaligned
 20748 11b4 A373     		strb	r3, [r4, #14]
2760:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20749              		.loc 1 2760 0
 20750 11b6 2C4A     		ldr	r2, .L794+8
 20751 11b8 D7F89430 		ldr	r3, [r7, #148]
 20752 11bc 1344     		add	r3, r3, r2
 20753 11be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20754 11c0 1946     		mov	r1, r3
 20755 11c2 D7F88C20 		ldr	r2, [r7, #140]
 20756 11c6 0B46     		mov	r3, r1
 20757 11c8 9B00     		lsls	r3, r3, #2
 20758 11ca 0B44     		add	r3, r3, r1
 20759 11cc 1344     		add	r3, r3, r2
 20760 11ce 03F20E23 		addw	r3, r3, #526
 20761 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20762 11d4 002B     		cmp	r3, #0
 20763 11d6 0FD0     		beq	.L779
2761:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20764              		.loc 1 2761 0
 20765 11d8 07F11C03 		add	r3, r7, #28
 20766 11dc 1846     		mov	r0, r3
 20767 11de FFF7FEFF 		bl	strlen
 20768 11e2 0346     		mov	r3, r0
 20769 11e4 1A46     		mov	r2, r3
 20770 11e6 07F11C03 		add	r3, r7, #28
 20771 11ea 1344     		add	r3, r3, r2
 20772 11ec 1F4A     		ldr	r2, .L794+12
 20773 11ee 1068     		ldr	r0, [r2]	@ unaligned
 20774 11f0 1860     		str	r0, [r3]	@ unaligned
 20775 11f2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20776 11f4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20777 11f6 0EE0     		b	.L780
 20778              	.L779:
2762:..\src/command_processing.c **** 			else
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 457


2763:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20779              		.loc 1 2763 0
 20780 11f8 07F11C03 		add	r3, r7, #28
 20781 11fc 1846     		mov	r0, r3
 20782 11fe FFF7FEFF 		bl	strlen
 20783 1202 0346     		mov	r3, r0
 20784 1204 1A46     		mov	r2, r3
 20785 1206 07F11C03 		add	r3, r7, #28
 20786 120a 1344     		add	r3, r3, r2
 20787 120c 144A     		ldr	r2, .L794
 20788 120e 1068     		ldr	r0, [r2]	@ unaligned
 20789 1210 1860     		str	r0, [r3]	@ unaligned
 20790 1212 1279     		ldrb	r2, [r2, #4]
 20791 1214 1A71     		strb	r2, [r3, #4]
 20792              	.L780:
2764:..\src/command_processing.c **** 				 
2765:..\src/command_processing.c **** 			strcat(info_string, str);
 20793              		.loc 1 2765 0 discriminator 2
 20794 1216 07F11C03 		add	r3, r7, #28
 20795 121a 1946     		mov	r1, r3
 20796 121c 7869     		ldr	r0, [r7, #20]
 20797 121e FFF7FEFF 		bl	strcat
2735:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20798              		.loc 1 2735 0 discriminator 2
 20799 1222 D7F89430 		ldr	r3, [r7, #148]
 20800 1226 0133     		adds	r3, r3, #1
 20801 1228 C7F89430 		str	r3, [r7, #148]
 20802              	.L770:
2735:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20803              		.loc 1 2735 0 is_stmt 0 discriminator 1
 20804 122c 114B     		ldr	r3, .L794+20
 20805 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20806 1230 1A46     		mov	r2, r3
 20807 1232 D7F89430 		ldr	r3, [r7, #148]
 20808 1236 9A42     		cmp	r2, r3
 20809 1238 3FF773AE 		bgt	.L781
2766:..\src/command_processing.c **** 		}       
2767:..\src/command_processing.c **** 		
2768:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20810              		.loc 1 2768 0 is_stmt 1
 20811 123c 7869     		ldr	r0, [r7, #20]
 20812 123e FFF7FEFF 		bl	strlen
 20813 1242 0346     		mov	r3, r0
 20814 1244 1A46     		mov	r2, r3
 20815 1246 7B69     		ldr	r3, [r7, #20]
 20816 1248 1344     		add	r3, r3, r2
 20817 124a 0B4A     		ldr	r2, .L794+24
 20818 124c 1188     		ldrh	r1, [r2]	@ unaligned
 20819 124e 9278     		ldrb	r2, [r2, #2]
 20820 1250 1980     		strh	r1, [r3]	@ unaligned
 20821 1252 9A70     		strb	r2, [r3, #2]
 20822              	.L783:
2769:..\src/command_processing.c **** 	}
2770:..\src/command_processing.c **** }
 20823              		.loc 1 2770 0
 20824 1254 00BF     		nop
 20825 1256 9C37     		adds	r7, r7, #156
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 458


 20826              		.cfi_def_cfa_offset 36
 20827 1258 BD46     		mov	sp, r7
 20828              		.cfi_def_cfa_register 13
 20829              		@ sp needed
 20830 125a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20831              	.L795:
 20832 125e 00BF     		.align	2
 20833              	.L794:
 20834 1260 8C130000 		.word	.LC178
 20835 1264 B41B0000 		.word	.LC261
 20836 1268 00000000 		.word	IMU_connected
 20837 126c 84130000 		.word	.LC177
 20838 1270 C41B0000 		.word	.LC262
 20839 1274 00000000 		.word	N_IMU_Connected
 20840 1278 9C110000 		.word	.LC154
 20841              		.cfi_endproc
 20842              	.LFE75:
 20843              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20844              		.section	.rodata
 20845 206a 0000     		.align	2
 20846              	.LC304:
 20847 206c 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20847      2C4D696E 
 20847      2C536563 
 20847      2C00
 20848 207a 0000     		.align	2
 20849              	.LC305:
 20850 207c 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20850      25645F50 
 20850      6F732C00 
 20851              		.align	2
 20852              	.LC306:
 20853 2088 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20853      25645F43 
 20853      7572722C 
 20853      00
 20854 2095 000000   		.align	2
 20855              	.LC307:
 20856 2098 52657374 		.ascii	"Rest_times,Wire_disp,Total_rest_time,Power_cycles,E"
 20856      5F74696D 
 20856      65732C57 
 20856      6972655F 
 20856      64697370 
 20857 20cb 4D475F31 		.ascii	"MG_1_act,EMG_2_act,EMG_1_excess,EMG_2_excess,Motion"
 20857      5F616374 
 20857      2C454D47 
 20857      5F325F61 
 20857      63742C45 
 20858 20fe 5F312C4D 		.ascii	"_1,Motion_2,Total_runtime\000"
 20858      6F74696F 
 20858      6E5F322C 
 20858      546F7461 
 20858      6C5F7275 
 20859              		.section	.text.prepare_SD_legend,"ax",%progbits
 20860              		.align	2
 20861              		.global	prepare_SD_legend
 20862              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 459


 20863              		.thumb_func
 20864              		.type	prepare_SD_legend, %function
 20865              	prepare_SD_legend:
 20866              	.LFB76:
2771:..\src/command_processing.c **** 
2772:..\src/command_processing.c **** 
2773:..\src/command_processing.c **** //==============================================================================
2774:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2775:..\src/command_processing.c **** //==============================================================================
2776:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2777:..\src/command_processing.c **** {
 20867              		.loc 1 2777 0
 20868              		.cfi_startproc
 20869              		@ args = 0, pretend = 0, frame = 152
 20870              		@ frame_needed = 1, uses_anonymous_args = 0
 20871 0000 90B5     		push	{r4, r7, lr}
 20872              		.cfi_def_cfa_offset 12
 20873              		.cfi_offset 4, -12
 20874              		.cfi_offset 7, -8
 20875              		.cfi_offset 14, -4
 20876 0002 A7B0     		sub	sp, sp, #156
 20877              		.cfi_def_cfa_offset 168
 20878 0004 00AF     		add	r7, sp, #0
 20879              		.cfi_def_cfa_register 7
 20880 0006 7860     		str	r0, [r7, #4]
2778:..\src/command_processing.c ****     char str[140];  
2779:..\src/command_processing.c ****     int i;
2780:..\src/command_processing.c ****         
2781:..\src/command_processing.c ****     // Legend
2782:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20881              		.loc 1 2782 0
 20882 0008 7B68     		ldr	r3, [r7, #4]
 20883 000a 2F4A     		ldr	r2, .L801
 20884 000c 1C46     		mov	r4, r3
 20885 000e 1346     		mov	r3, r2
 20886 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20887 0012 2060     		str	r0, [r4]	@ unaligned
 20888 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20889 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20890 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20891 001a A381     		strh	r3, [r4, #12]	@ unaligned
2783:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20892              		.loc 1 2783 0
 20893 001c 0123     		movs	r3, #1
 20894 001e C7F89430 		str	r3, [r7, #148]
 20895 0022 12E0     		b	.L797
 20896              	.L798:
2784:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20897              		.loc 1 2784 0 discriminator 3
 20898 0024 07F10803 		add	r3, r7, #8
 20899 0028 D7F89420 		ldr	r2, [r7, #148]
 20900 002c 2749     		ldr	r1, .L801+4
 20901 002e 1846     		mov	r0, r3
 20902 0030 FFF7FEFF 		bl	sprintf
2785:..\src/command_processing.c ****         strcat(info_string, str);
 20903              		.loc 1 2785 0 discriminator 3
 20904 0034 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 460


 20905 0038 1946     		mov	r1, r3
 20906 003a 7868     		ldr	r0, [r7, #4]
 20907 003c FFF7FEFF 		bl	strcat
2783:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20908              		.loc 1 2783 0 discriminator 3
 20909 0040 D7F89430 		ldr	r3, [r7, #148]
 20910 0044 0133     		adds	r3, r3, #1
 20911 0046 C7F89430 		str	r3, [r7, #148]
 20912              	.L797:
2783:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20913              		.loc 1 2783 0 is_stmt 0 discriminator 1
 20914 004a D7F89430 		ldr	r3, [r7, #148]
 20915 004e 0A2B     		cmp	r3, #10
 20916 0050 E8DD     		ble	.L798
2786:..\src/command_processing.c ****     }
2787:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20917              		.loc 1 2787 0 is_stmt 1
 20918 0052 0123     		movs	r3, #1
 20919 0054 C7F89430 		str	r3, [r7, #148]
 20920 0058 12E0     		b	.L799
 20921              	.L800:
2788:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20922              		.loc 1 2788 0 discriminator 3
 20923 005a 07F10803 		add	r3, r7, #8
 20924 005e D7F89420 		ldr	r2, [r7, #148]
 20925 0062 1B49     		ldr	r1, .L801+8
 20926 0064 1846     		mov	r0, r3
 20927 0066 FFF7FEFF 		bl	sprintf
2789:..\src/command_processing.c ****         strcat(info_string, str);
 20928              		.loc 1 2789 0 discriminator 3
 20929 006a 07F10803 		add	r3, r7, #8
 20930 006e 1946     		mov	r1, r3
 20931 0070 7868     		ldr	r0, [r7, #4]
 20932 0072 FFF7FEFF 		bl	strcat
2787:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20933              		.loc 1 2787 0 discriminator 3
 20934 0076 D7F89430 		ldr	r3, [r7, #148]
 20935 007a 0133     		adds	r3, r3, #1
 20936 007c C7F89430 		str	r3, [r7, #148]
 20937              	.L799:
2787:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20938              		.loc 1 2787 0 is_stmt 0 discriminator 1
 20939 0080 D7F89430 		ldr	r3, [r7, #148]
 20940 0084 042B     		cmp	r3, #4
 20941 0086 E8DD     		ble	.L800
2790:..\src/command_processing.c ****     }
2791:..\src/command_processing.c ****     sprintf(str, "Rest_times,Wire_disp,Total_rest_time,Power_cycles,EMG_1_act,EMG_2_act,EMG_1_exces
 20942              		.loc 1 2791 0 is_stmt 1
 20943 0088 07F10803 		add	r3, r7, #8
 20944 008c 114A     		ldr	r2, .L801+12
 20945 008e 1846     		mov	r0, r3
 20946 0090 1146     		mov	r1, r2
 20947 0092 8023     		movs	r3, #128
 20948 0094 1A46     		mov	r2, r3
 20949 0096 FFF7FEFF 		bl	memcpy
2792:..\src/command_processing.c ****     strcat(info_string, str);
 20950              		.loc 1 2792 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 461


 20951 009a 07F10803 		add	r3, r7, #8
 20952 009e 1946     		mov	r1, r3
 20953 00a0 7868     		ldr	r0, [r7, #4]
 20954 00a2 FFF7FEFF 		bl	strcat
2793:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20955              		.loc 1 2793 0
 20956 00a6 7868     		ldr	r0, [r7, #4]
 20957 00a8 FFF7FEFF 		bl	strlen
 20958 00ac 0346     		mov	r3, r0
 20959 00ae 1A46     		mov	r2, r3
 20960 00b0 7B68     		ldr	r3, [r7, #4]
 20961 00b2 1344     		add	r3, r3, r2
 20962 00b4 084A     		ldr	r2, .L801+16
 20963 00b6 1188     		ldrh	r1, [r2]	@ unaligned
 20964 00b8 9278     		ldrb	r2, [r2, #2]
 20965 00ba 1980     		strh	r1, [r3]	@ unaligned
 20966 00bc 9A70     		strb	r2, [r3, #2]
2794:..\src/command_processing.c **** }
 20967              		.loc 1 2794 0
 20968 00be 00BF     		nop
 20969 00c0 9C37     		adds	r7, r7, #156
 20970              		.cfi_def_cfa_offset 12
 20971 00c2 BD46     		mov	sp, r7
 20972              		.cfi_def_cfa_register 13
 20973              		@ sp needed
 20974 00c4 90BD     		pop	{r4, r7, pc}
 20975              	.L802:
 20976 00c6 00BF     		.align	2
 20977              	.L801:
 20978 00c8 6C200000 		.word	.LC304
 20979 00cc 7C200000 		.word	.LC305
 20980 00d0 88200000 		.word	.LC306
 20981 00d4 98200000 		.word	.LC307
 20982 00d8 9C110000 		.word	.LC154
 20983              		.cfi_endproc
 20984              	.LFE76:
 20985              		.size	prepare_SD_legend, .-prepare_SD_legend
 20986              		.section	.rodata
 20987              		.align	2
 20988              	.LC308:
 20989 2118 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20989      2C253032 
 20989      642C2530 
 20989      32642C00 
 20990              		.align	2
 20991              	.LC309:
 20992 2128 256C752C 		.ascii	"%lu,\000"
 20992      00
 20993 212d 000000   		.align	2
 20994              	.LC310:
 20995 2130 256C752C 		.ascii	"%lu,%lu,%lu,%lu,\000"
 20995      256C752C 
 20995      256C752C 
 20995      256C752C 
 20995      00
 20996 2141 000000   		.align	2
 20997              	.LC311:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 462


 20998 2144 256C752C 		.ascii	"%lu,%lu,%lu,%lu,%lu,%lu,\000"
 20998      256C752C 
 20998      256C752C 
 20998      256C752C 
 20998      256C752C 
 20999 215d 000000   		.align	2
 21000              	.LC312:
 21001 2160 256C7500 		.ascii	"%lu\000"
 21002              		.section	.text.prepare_SD_info,"ax",%progbits
 21003              		.align	2
 21004              		.global	prepare_SD_info
 21005              		.thumb
 21006              		.thumb_func
 21007              		.type	prepare_SD_info, %function
 21008              	prepare_SD_info:
 21009              	.LFB77:
2795:..\src/command_processing.c **** 
2796:..\src/command_processing.c **** 
2797:..\src/command_processing.c **** //==============================================================================
2798:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2799:..\src/command_processing.c **** //==============================================================================
2800:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2801:..\src/command_processing.c **** {
 21010              		.loc 1 2801 0
 21011              		.cfi_startproc
 21012              		@ args = 0, pretend = 0, frame = 136
 21013              		@ frame_needed = 1, uses_anonymous_args = 0
 21014 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 21015              		.cfi_def_cfa_offset 20
 21016              		.cfi_offset 4, -20
 21017              		.cfi_offset 5, -16
 21018              		.cfi_offset 6, -12
 21019              		.cfi_offset 7, -8
 21020              		.cfi_offset 14, -4
 21021 0002 A7B0     		sub	sp, sp, #156
 21022              		.cfi_def_cfa_offset 176
 21023 0004 04AF     		add	r7, sp, #16
 21024              		.cfi_def_cfa 7, 160
 21025 0006 7860     		str	r0, [r7, #4]
2802:..\src/command_processing.c ****     char str[120];  
2803:..\src/command_processing.c ****     int i;
2804:..\src/command_processing.c ****             
2805:..\src/command_processing.c ****     strcpy(info_string, "");
 21026              		.loc 1 2805 0
 21027 0008 7B68     		ldr	r3, [r7, #4]
 21028 000a 0022     		movs	r2, #0
 21029 000c 1A70     		strb	r2, [r3]
2806:..\src/command_processing.c ****     
2807:..\src/command_processing.c ****     // Time
2808:..\src/command_processing.c ****     strcat(info_string, "");
2809:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 21030              		.loc 1 2809 0
 21031 000e 554B     		ldr	r3, .L808
 21032 0010 93F82B32 		ldrb	r3, [r3, #555]	@ zero_extendqisi2
 21033 0014 1A46     		mov	r2, r3
 21034 0016 534B     		ldr	r3, .L808
 21035 0018 93F82C32 		ldrb	r3, [r3, #556]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 463


 21036 001c 1946     		mov	r1, r3
 21037 001e 514B     		ldr	r3, .L808
 21038 0020 93F82D32 		ldrb	r3, [r3, #557]	@ zero_extendqisi2
 21039 0024 07F10C00 		add	r0, r7, #12
 21040 0028 0093     		str	r3, [sp]
 21041 002a 0B46     		mov	r3, r1
 21042 002c 4E49     		ldr	r1, .L808+4
 21043 002e FFF7FEFF 		bl	sprintf
2810:..\src/command_processing.c ****     strcat(info_string, str);
 21044              		.loc 1 2810 0
 21045 0032 07F10C03 		add	r3, r7, #12
 21046 0036 1946     		mov	r1, r3
 21047 0038 7868     		ldr	r0, [r7, #4]
 21048 003a FFF7FEFF 		bl	strcat
2811:..\src/command_processing.c **** 
2812:..\src/command_processing.c ****     // Pos_Bin
2813:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 21049              		.loc 1 2813 0
 21050 003e 0123     		movs	r3, #1
 21051 0040 C7F88430 		str	r3, [r7, #132]
 21052 0044 17E0     		b	.L804
 21053              	.L805:
2814:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21054              		.loc 1 2814 0 discriminator 3
 21055 0046 D7F88430 		ldr	r3, [r7, #132]
 21056 004a 013B     		subs	r3, r3, #1
 21057 004c 454A     		ldr	r2, .L808
 21058 004e 0633     		adds	r3, r3, #6
 21059 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21060 0054 07F10C03 		add	r3, r7, #12
 21061 0058 4449     		ldr	r1, .L808+8
 21062 005a 1846     		mov	r0, r3
 21063 005c FFF7FEFF 		bl	sprintf
2815:..\src/command_processing.c ****         strcat(info_string, str);
 21064              		.loc 1 2815 0 discriminator 3
 21065 0060 07F10C03 		add	r3, r7, #12
 21066 0064 1946     		mov	r1, r3
 21067 0066 7868     		ldr	r0, [r7, #4]
 21068 0068 FFF7FEFF 		bl	strcat
2813:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21069              		.loc 1 2813 0 discriminator 3
 21070 006c D7F88430 		ldr	r3, [r7, #132]
 21071 0070 0133     		adds	r3, r3, #1
 21072 0072 C7F88430 		str	r3, [r7, #132]
 21073              	.L804:
2813:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21074              		.loc 1 2813 0 is_stmt 0 discriminator 1
 21075 0076 D7F88430 		ldr	r3, [r7, #132]
 21076 007a 0A2B     		cmp	r3, #10
 21077 007c E3DD     		ble	.L805
2816:..\src/command_processing.c ****     }
2817:..\src/command_processing.c ****     
2818:..\src/command_processing.c ****     // Curr_Bin
2819:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 21078              		.loc 1 2819 0 is_stmt 1
 21079 007e 0123     		movs	r3, #1
 21080 0080 C7F88430 		str	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 464


 21081 0084 17E0     		b	.L806
 21082              	.L807:
2820:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21083              		.loc 1 2820 0 discriminator 3
 21084 0086 D7F88430 		ldr	r3, [r7, #132]
 21085 008a 013B     		subs	r3, r3, #1
 21086 008c 354A     		ldr	r2, .L808
 21087 008e 1033     		adds	r3, r3, #16
 21088 0090 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21089 0094 07F10C03 		add	r3, r7, #12
 21090 0098 3449     		ldr	r1, .L808+8
 21091 009a 1846     		mov	r0, r3
 21092 009c FFF7FEFF 		bl	sprintf
2821:..\src/command_processing.c ****         strcat(info_string, str);
 21093              		.loc 1 2821 0 discriminator 3
 21094 00a0 07F10C03 		add	r3, r7, #12
 21095 00a4 1946     		mov	r1, r3
 21096 00a6 7868     		ldr	r0, [r7, #4]
 21097 00a8 FFF7FEFF 		bl	strcat
2819:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21098              		.loc 1 2819 0 discriminator 3
 21099 00ac D7F88430 		ldr	r3, [r7, #132]
 21100 00b0 0133     		adds	r3, r3, #1
 21101 00b2 C7F88430 		str	r3, [r7, #132]
 21102              	.L806:
2819:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21103              		.loc 1 2819 0 is_stmt 0 discriminator 1
 21104 00b6 D7F88430 		ldr	r3, [r7, #132]
 21105 00ba 042B     		cmp	r3, #4
 21106 00bc E3DD     		ble	.L807
2822:..\src/command_processing.c ****     }
2823:..\src/command_processing.c **** 
2824:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_time_rest, Power_cycles
2825:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_t
 21107              		.loc 1 2825 0 is_stmt 1
 21108 00be 294B     		ldr	r3, .L808
 21109 00c0 196D     		ldr	r1, [r3, #80]
 21110 00c2 284B     		ldr	r3, .L808
 21111 00c4 5C6D     		ldr	r4, [r3, #84]
 21112 00c6 274B     		ldr	r3, .L808
 21113 00c8 DB6D     		ldr	r3, [r3, #92]
 21114 00ca 264A     		ldr	r2, .L808
 21115 00cc 126E     		ldr	r2, [r2, #96]
 21116 00ce 07F10C00 		add	r0, r7, #12
 21117 00d2 0192     		str	r2, [sp, #4]
 21118 00d4 0093     		str	r3, [sp]
 21119 00d6 2346     		mov	r3, r4
 21120 00d8 0A46     		mov	r2, r1
 21121 00da 2549     		ldr	r1, .L808+12
 21122 00dc FFF7FEFF 		bl	sprintf
2826:..\src/command_processing.c ****     strcat(info_string, str);
 21123              		.loc 1 2826 0
 21124 00e0 07F10C03 		add	r3, r7, #12
 21125 00e4 1946     		mov	r1, r3
 21126 00e6 7868     		ldr	r0, [r7, #4]
 21127 00e8 FFF7FEFF 		bl	strcat
2827:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 465


2828:..\src/command_processing.c ****     // EMG_1_act, EMG_2_act, EMG_1_excess, EMG_2_excess, Motion_1, Motion_2
2829:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,%lu,%lu,", g_mem.cnt.emg_act_counter[0], g_mem.cnt.emg_act_counte
 21128              		.loc 1 2829 0
 21129 00ec 1D4B     		ldr	r3, .L808
 21130 00ee 1D69     		ldr	r5, [r3, #16]
 21131 00f0 1C4B     		ldr	r3, .L808
 21132 00f2 5E69     		ldr	r6, [r3, #20]
 21133 00f4 1B4B     		ldr	r3, .L808
 21134 00f6 5B6E     		ldr	r3, [r3, #100]
 21135 00f8 1A4A     		ldr	r2, .L808
 21136 00fa 926E     		ldr	r2, [r2, #104]
 21137 00fc 1949     		ldr	r1, .L808
 21138 00fe C96E     		ldr	r1, [r1, #108]
 21139 0100 1848     		ldr	r0, .L808
 21140 0102 006F     		ldr	r0, [r0, #112]
 21141 0104 07F10C04 		add	r4, r7, #12
 21142 0108 0390     		str	r0, [sp, #12]
 21143 010a 0291     		str	r1, [sp, #8]
 21144 010c 0192     		str	r2, [sp, #4]
 21145 010e 0093     		str	r3, [sp]
 21146 0110 3346     		mov	r3, r6
 21147 0112 2A46     		mov	r2, r5
 21148 0114 1749     		ldr	r1, .L808+16
 21149 0116 2046     		mov	r0, r4
 21150 0118 FFF7FEFF 		bl	sprintf
2830:..\src/command_processing.c ****                                     g_mem.cnt.excessive_signal_activity[0], g_mem.cnt.excessive_sig
2831:..\src/command_processing.c ****                                     g_mem.cnt.motion_counter[0], g_mem.cnt.motion_counter[1]);
2832:..\src/command_processing.c ****     strcat(info_string, str);
 21151              		.loc 1 2832 0
 21152 011c 07F10C03 		add	r3, r7, #12
 21153 0120 1946     		mov	r1, r3
 21154 0122 7868     		ldr	r0, [r7, #4]
 21155 0124 FFF7FEFF 		bl	strcat
2833:..\src/command_processing.c ****     
2834:..\src/command_processing.c ****     // Total_runtime
2835:..\src/command_processing.c ****     sprintf(str, "%lu", g_mem.cnt.total_runtime);
 21156              		.loc 1 2835 0
 21157 0128 0E4B     		ldr	r3, .L808
 21158 012a 9A6D     		ldr	r2, [r3, #88]
 21159 012c 07F10C03 		add	r3, r7, #12
 21160 0130 1149     		ldr	r1, .L808+20
 21161 0132 1846     		mov	r0, r3
 21162 0134 FFF7FEFF 		bl	sprintf
2836:..\src/command_processing.c ****     strcat(info_string, str);
 21163              		.loc 1 2836 0
 21164 0138 07F10C03 		add	r3, r7, #12
 21165 013c 1946     		mov	r1, r3
 21166 013e 7868     		ldr	r0, [r7, #4]
 21167 0140 FFF7FEFF 		bl	strcat
2837:..\src/command_processing.c ****     
2838:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21168              		.loc 1 2838 0
 21169 0144 7868     		ldr	r0, [r7, #4]
 21170 0146 FFF7FEFF 		bl	strlen
 21171 014a 0346     		mov	r3, r0
 21172 014c 1A46     		mov	r2, r3
 21173 014e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 466


 21174 0150 1344     		add	r3, r3, r2
 21175 0152 0A4A     		ldr	r2, .L808+24
 21176 0154 1188     		ldrh	r1, [r2]	@ unaligned
 21177 0156 9278     		ldrb	r2, [r2, #2]
 21178 0158 1980     		strh	r1, [r3]	@ unaligned
 21179 015a 9A70     		strb	r2, [r3, #2]
2839:..\src/command_processing.c **** }
 21180              		.loc 1 2839 0
 21181 015c 00BF     		nop
 21182 015e 8C37     		adds	r7, r7, #140
 21183              		.cfi_def_cfa_offset 20
 21184 0160 BD46     		mov	sp, r7
 21185              		.cfi_def_cfa_register 13
 21186              		@ sp needed
 21187 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 21188              	.L809:
 21189              		.align	2
 21190              	.L808:
 21191 0164 00000000 		.word	g_mem
 21192 0168 18210000 		.word	.LC308
 21193 016c 28210000 		.word	.LC309
 21194 0170 30210000 		.word	.LC310
 21195 0174 44210000 		.word	.LC311
 21196 0178 60210000 		.word	.LC312
 21197 017c 9C110000 		.word	.LC154
 21198              		.cfi_endproc
 21199              	.LFE77:
 21200              		.size	prepare_SD_info, .-prepare_SD_info
 21201              		.section	.rodata
 21202              		.align	2
 21203              	.LC313:
 21204 2164 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 21204      2C454D47 
 21204      312C454D 
 21204      47320A00 
 21205              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21206              		.align	2
 21207              		.global	prepare_SD_EMG_History_legend
 21208              		.thumb
 21209              		.thumb_func
 21210              		.type	prepare_SD_EMG_History_legend, %function
 21211              	prepare_SD_EMG_History_legend:
 21212              	.LFB78:
2840:..\src/command_processing.c **** 
2841:..\src/command_processing.c **** //==============================================================================
2842:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2843:..\src/command_processing.c **** //==============================================================================
2844:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2845:..\src/command_processing.c **** {
 21213              		.loc 1 2845 0
 21214              		.cfi_startproc
 21215              		@ args = 0, pretend = 0, frame = 8
 21216              		@ frame_needed = 1, uses_anonymous_args = 0
 21217              		@ link register save eliminated.
 21218 0000 B0B4     		push	{r4, r5, r7}
 21219              		.cfi_def_cfa_offset 12
 21220              		.cfi_offset 4, -12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 467


 21221              		.cfi_offset 5, -8
 21222              		.cfi_offset 7, -4
 21223 0002 83B0     		sub	sp, sp, #12
 21224              		.cfi_def_cfa_offset 24
 21225 0004 00AF     		add	r7, sp, #0
 21226              		.cfi_def_cfa_register 7
 21227 0006 7860     		str	r0, [r7, #4]
2846:..\src/command_processing.c ****         
2847:..\src/command_processing.c ****     // Legend
2848:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21228              		.loc 1 2848 0
 21229 0008 7B68     		ldr	r3, [r7, #4]
 21230 000a 064A     		ldr	r2, .L811
 21231 000c 1C46     		mov	r4, r3
 21232 000e 1546     		mov	r5, r2
 21233 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21234 0012 2060     		str	r0, [r4]	@ unaligned
 21235 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21236 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21237 0018 E360     		str	r3, [r4, #12]	@ unaligned
2849:..\src/command_processing.c ****     
2850:..\src/command_processing.c **** }
 21238              		.loc 1 2850 0
 21239 001a 00BF     		nop
 21240 001c 0C37     		adds	r7, r7, #12
 21241              		.cfi_def_cfa_offset 12
 21242 001e BD46     		mov	sp, r7
 21243              		.cfi_def_cfa_register 13
 21244              		@ sp needed
 21245 0020 B0BC     		pop	{r4, r5, r7}
 21246              		.cfi_restore 7
 21247              		.cfi_restore 5
 21248              		.cfi_restore 4
 21249              		.cfi_def_cfa_offset 0
 21250 0022 7047     		bx	lr
 21251              	.L812:
 21252              		.align	2
 21253              	.L811:
 21254 0024 64210000 		.word	.LC313
 21255              		.cfi_endproc
 21256              	.LFE78:
 21257              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21258              		.section	.rodata
 21259              		.align	2
 21260              	.LC314:
 21261 2174 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21261      2C25752C 
 21261      25750A00 
 21262              		.global	__aeabi_dadd
 21263              		.global	__aeabi_d2f
 21264              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21265              		.align	2
 21266              		.global	prepare_SD_EMG_history
 21267              		.thumb
 21268              		.thumb_func
 21269              		.type	prepare_SD_EMG_history, %function
 21270              	prepare_SD_EMG_history:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 468


 21271              	.LFB79:
2851:..\src/command_processing.c **** 
2852:..\src/command_processing.c **** //==============================================================================
2853:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2854:..\src/command_processing.c **** //==============================================================================
2855:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2856:..\src/command_processing.c **** {
 21272              		.loc 1 2856 0
 21273              		.cfi_startproc
 21274              		@ args = 0, pretend = 0, frame = 120
 21275              		@ frame_needed = 1, uses_anonymous_args = 0
 21276 0000 B0B5     		push	{r4, r5, r7, lr}
 21277              		.cfi_def_cfa_offset 16
 21278              		.cfi_offset 4, -16
 21279              		.cfi_offset 5, -12
 21280              		.cfi_offset 7, -8
 21281              		.cfi_offset 14, -4
 21282 0002 A0B0     		sub	sp, sp, #128
 21283              		.cfi_def_cfa_offset 144
 21284 0004 02AF     		add	r7, sp, #8
 21285              		.cfi_def_cfa 7, 136
 21286 0006 7860     		str	r0, [r7, #4]
2857:..\src/command_processing.c ****     char str_data[100] = "";
 21287              		.loc 1 2857 0
 21288 0008 0023     		movs	r3, #0
 21289 000a FB60     		str	r3, [r7, #12]
 21290 000c 07F11003 		add	r3, r7, #16
 21291 0010 6022     		movs	r2, #96
 21292 0012 0021     		movs	r1, #0
 21293 0014 1846     		mov	r0, r3
 21294 0016 FFF7FEFF 		bl	memset
2858:..\src/command_processing.c ****     uint16 v_idx = 0;
 21295              		.loc 1 2858 0
 21296 001a 0023     		movs	r3, #0
 21297 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2859:..\src/command_processing.c ****     static float h_time = 0.0;
2860:..\src/command_processing.c ****                 
2861:..\src/command_processing.c ****     strcpy(info_string, "");
 21298              		.loc 1 2861 0
 21299 0020 7B68     		ldr	r3, [r7, #4]
 21300 0022 0022     		movs	r2, #0
 21301 0024 1A70     		strb	r2, [r3]
 21302              	.LBB29:
2862:..\src/command_processing.c ****     
2863:..\src/command_processing.c ****     // Oldest samples of the vector
2864:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21303              		.loc 1 2864 0
 21304 0026 0023     		movs	r3, #0
 21305 0028 3B67     		str	r3, [r7, #112]
 21306 002a 4AE0     		b	.L814
 21307              	.L816:
2865:..\src/command_processing.c ****               
2866:..\src/command_processing.c ****         // Send line per line all the history vector
2867:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2868:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21308              		.loc 1 2868 0
 21309 002c 2C4B     		ldr	r3, .L817+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 469


 21310 002e 1B68     		ldr	r3, [r3]
 21311 0030 9AB2     		uxth	r2, r3
 21312 0032 3B6F     		ldr	r3, [r7, #112]
 21313 0034 9BB2     		uxth	r3, r3
 21314 0036 1344     		add	r3, r3, r2
 21315 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2869:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21316              		.loc 1 2869 0
 21317 003c B7F87630 		ldrh	r3, [r7, #118]
 21318 0040 B3F5167F 		cmp	r3, #600
 21319 0044 05D9     		bls	.L815
2870:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21320              		.loc 1 2870 0
 21321 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 21322 004a A3F51673 		sub	r3, r3, #600
 21323 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21324              	.L815:
2871:..\src/command_processing.c ****         }
2872:..\src/command_processing.c ****         
2873:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2874:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21325              		.loc 1 2874 0 discriminator 2
 21326 0052 244B     		ldr	r3, .L817+12
 21327 0054 1B68     		ldr	r3, [r3]	@ float
 21328 0056 1846     		mov	r0, r3
 21329 0058 FFF7FEFF 		bl	__aeabi_f2d
 21330 005c 0446     		mov	r4, r0
 21331 005e 0D46     		mov	r5, r1
 21332 0060 B7F87630 		ldrh	r3, [r7, #118]
 21333 0064 204A     		ldr	r2, .L817+16
 21334 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21335 006a 1946     		mov	r1, r3
 21336 006c B7F87630 		ldrh	r3, [r7, #118]
 21337 0070 1D4A     		ldr	r2, .L817+16
 21338 0072 9B00     		lsls	r3, r3, #2
 21339 0074 1344     		add	r3, r3, r2
 21340 0076 5B88     		ldrh	r3, [r3, #2]
 21341 0078 07F10C00 		add	r0, r7, #12
 21342 007c 0193     		str	r3, [sp, #4]
 21343 007e 0091     		str	r1, [sp]
 21344 0080 2246     		mov	r2, r4
 21345 0082 2B46     		mov	r3, r5
 21346 0084 1949     		ldr	r1, .L817+20
 21347 0086 FFF7FEFF 		bl	sprintf
2875:..\src/command_processing.c ****         
2876:..\src/command_processing.c ****         strcat(info_string, str_data);
 21348              		.loc 1 2876 0 discriminator 2
 21349 008a 07F10C03 		add	r3, r7, #12
 21350 008e 1946     		mov	r1, r3
 21351 0090 7868     		ldr	r0, [r7, #4]
 21352 0092 FFF7FEFF 		bl	strcat
2877:..\src/command_processing.c ****         
2878:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21353              		.loc 1 2878 0 discriminator 2
 21354 0096 134B     		ldr	r3, .L817+12
 21355 0098 1B68     		ldr	r3, [r3]	@ float
 21356 009a 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 470


 21357 009c FFF7FEFF 		bl	__aeabi_f2d
 21358 00a0 0DA3     		adr	r3, .L817
 21359 00a2 D3E90023 		ldrd	r2, [r3]
 21360 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21361 00aa 0346     		mov	r3, r0
 21362 00ac 0C46     		mov	r4, r1
 21363 00ae 1846     		mov	r0, r3
 21364 00b0 2146     		mov	r1, r4
 21365 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21366 00b6 0246     		mov	r2, r0
 21367 00b8 0A4B     		ldr	r3, .L817+12
 21368 00ba 1A60     		str	r2, [r3]	@ float
2864:..\src/command_processing.c ****               
 21369              		.loc 1 2864 0 discriminator 2
 21370 00bc 3B6F     		ldr	r3, [r7, #112]
 21371 00be 0133     		adds	r3, r3, #1
 21372 00c0 3B67     		str	r3, [r7, #112]
 21373              	.L814:
2864:..\src/command_processing.c ****               
 21374              		.loc 1 2864 0 is_stmt 0 discriminator 1
 21375 00c2 3B6F     		ldr	r3, [r7, #112]
 21376 00c4 B3F5167F 		cmp	r3, #600
 21377 00c8 B0DB     		blt	.L816
 21378              	.LBE29:
2879:..\src/command_processing.c **** 
2880:..\src/command_processing.c ****     }
2881:..\src/command_processing.c ****     
2882:..\src/command_processing.c **** }
 21379              		.loc 1 2882 0 is_stmt 1
 21380 00ca 00BF     		nop
 21381 00cc 7837     		adds	r7, r7, #120
 21382              		.cfi_def_cfa_offset 16
 21383 00ce BD46     		mov	sp, r7
 21384              		.cfi_def_cfa_register 13
 21385              		@ sp needed
 21386 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21387              	.L818:
 21388 00d2 00BFAFF3 		.align	3
 21388      0080
 21389              	.L817:
 21390 00d8 9A999999 		.word	-1717986918
 21391 00dc 9999C93F 		.word	1070176665
 21392 00e0 00000000 		.word	emg_history_next_idx
 21393 00e4 00000000 		.word	h_time.11247
 21394 00e8 00000000 		.word	emg_history
 21395 00ec 74210000 		.word	.LC314
 21396              		.cfi_endproc
 21397              	.LFE79:
 21398              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21399              		.section	.rodata
 21400              		.align	2
 21401              	.LC315:
 21402 2180 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21402      4F525320 
 21402      494E464F 
 21402      0D0A00
 21403 218f 00       		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 471


 21404              	.LC316:
 21405 2190 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21405      3A202564 
 21405      09256409 
 21405      25640D0A 
 21405      00
 21406 21a1 000000   		.align	2
 21407              	.LC317:
 21408 21a4 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21408      6F3A2025 
 21408      64092564 
 21408      0925640D 
 21408      0A00
 21409 21b6 0000     		.align	2
 21410              	.LC318:
 21411 21b8 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21411      3A202564 
 21411      09256409 
 21411      25640D0A 
 21411      00
 21412 21c9 000000   		.align	2
 21413              	.LC319:
 21414 21cc 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21414      743A2025 
 21414      2E336609 
 21414      252E3366 
 21414      09252E33 
 21415 21e9 000000   		.align	2
 21416              	.LC320:
 21417 21ec 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21417      70657261 
 21417      74757265 
 21417      3A202564 
 21417      0D0A00
 21418              		.section	.text.IMU_reading_info,"ax",%progbits
 21419              		.align	2
 21420              		.global	IMU_reading_info
 21421              		.thumb
 21422              		.thumb_func
 21423              		.type	IMU_reading_info, %function
 21424              	IMU_reading_info:
 21425              	.LFB80:
2883:..\src/command_processing.c **** 
2884:..\src/command_processing.c **** //==============================================================================
2885:..\src/command_processing.c **** //                                                              IMU READING INFO
2886:..\src/command_processing.c **** //==============================================================================
2887:..\src/command_processing.c **** 
2888:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2889:..\src/command_processing.c **** {
 21426              		.loc 1 2889 0
 21427              		.cfi_startproc
 21428              		@ args = 0, pretend = 0, frame = 312
 21429              		@ frame_needed = 1, uses_anonymous_args = 0
 21430 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21431              		.cfi_def_cfa_offset 32
 21432              		.cfi_offset 4, -32
 21433              		.cfi_offset 5, -28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 472


 21434              		.cfi_offset 7, -24
 21435              		.cfi_offset 8, -20
 21436              		.cfi_offset 9, -16
 21437              		.cfi_offset 10, -12
 21438              		.cfi_offset 11, -8
 21439              		.cfi_offset 14, -4
 21440 0004 D4B0     		sub	sp, sp, #336
 21441              		.cfi_def_cfa_offset 368
 21442 0006 06AF     		add	r7, sp, #24
 21443              		.cfi_def_cfa 7, 344
 21444 0008 3B1D     		adds	r3, r7, #4
 21445 000a 1860     		str	r0, [r3]
2890:..\src/command_processing.c ****     char str[300];  
2891:..\src/command_processing.c ****     int i;
2892:..\src/command_processing.c ****                  
2893:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21446              		.loc 1 2893 0
 21447 000c 3B1D     		adds	r3, r7, #4
 21448 000e 1868     		ldr	r0, [r3]
 21449 0010 FFF7FEFF 		bl	strlen
 21450 0014 0346     		mov	r3, r0
 21451 0016 1A46     		mov	r2, r3
 21452 0018 3B1D     		adds	r3, r7, #4
 21453 001a 1B68     		ldr	r3, [r3]
 21454 001c 1344     		add	r3, r3, r2
 21455 001e C94A     		ldr	r2, .L827
 21456 0020 1C46     		mov	r4, r3
 21457 0022 1346     		mov	r3, r2
 21458 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21459 0026 2060     		str	r0, [r4]	@ unaligned
 21460 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21461 002a A260     		str	r2, [r4, #8]	@ unaligned
 21462 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21463 002e 9B78     		ldrb	r3, [r3, #2]
 21464 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21465 0032 A373     		strb	r3, [r4, #14]
2894:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21466              		.loc 1 2894 0
 21467 0034 0023     		movs	r3, #0
 21468 0036 C7F83431 		str	r3, [r7, #308]
 21469 003a 66E1     		b	.L820
 21470              	.L826:
2895:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21471              		.loc 1 2895 0
 21472 003c C24A     		ldr	r2, .L827+4
 21473 003e D7F83431 		ldr	r3, [r7, #308]
 21474 0042 1344     		add	r3, r3, r2
 21475 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21476 0046 07F10800 		add	r0, r7, #8
 21477 004a D7F83421 		ldr	r2, [r7, #308]
 21478 004e BF49     		ldr	r1, .L827+8
 21479 0050 FFF7FEFF 		bl	sprintf
2896:..\src/command_processing.c ****         strcat(info_string, str);
 21480              		.loc 1 2896 0
 21481 0054 07F10802 		add	r2, r7, #8
 21482 0058 3B1D     		adds	r3, r7, #4
 21483 005a 1146     		mov	r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 473


 21484 005c 1868     		ldr	r0, [r3]
 21485 005e FFF7FEFF 		bl	strcat
2897:..\src/command_processing.c ****         
2898:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21486              		.loc 1 2898 0
 21487 0062 B94A     		ldr	r2, .L827+4
 21488 0064 D7F83431 		ldr	r3, [r7, #308]
 21489 0068 1344     		add	r3, r3, r2
 21490 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21491 006c 1946     		mov	r1, r3
 21492 006e B84A     		ldr	r2, .L827+12
 21493 0070 0B46     		mov	r3, r1
 21494 0072 9B00     		lsls	r3, r3, #2
 21495 0074 0B44     		add	r3, r3, r1
 21496 0076 1344     		add	r3, r3, r2
 21497 0078 03F20A23 		addw	r3, r3, #522
 21498 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21499 007e 002B     		cmp	r3, #0
 21500 0080 31D0     		beq	.L821
2899:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21501              		.loc 1 2899 0
 21502 0082 B449     		ldr	r1, .L827+16
 21503 0084 D7F83421 		ldr	r2, [r7, #308]
 21504 0088 1346     		mov	r3, r2
 21505 008a 9B00     		lsls	r3, r3, #2
 21506 008c 1344     		add	r3, r3, r2
 21507 008e DB00     		lsls	r3, r3, #3
 21508 0090 0B44     		add	r3, r3, r1
 21509 0092 0233     		adds	r3, r3, #2
 21510 0094 B3F90030 		ldrsh	r3, [r3]
 21511 0098 1C46     		mov	r4, r3
 21512 009a AE49     		ldr	r1, .L827+16
 21513 009c D7F83421 		ldr	r2, [r7, #308]
 21514 00a0 1346     		mov	r3, r2
 21515 00a2 9B00     		lsls	r3, r3, #2
 21516 00a4 1344     		add	r3, r3, r2
 21517 00a6 DB00     		lsls	r3, r3, #3
 21518 00a8 0B44     		add	r3, r3, r1
 21519 00aa 0433     		adds	r3, r3, #4
 21520 00ac B3F90030 		ldrsh	r3, [r3]
 21521 00b0 1D46     		mov	r5, r3
 21522 00b2 A849     		ldr	r1, .L827+16
 21523 00b4 D7F83421 		ldr	r2, [r7, #308]
 21524 00b8 1346     		mov	r3, r2
 21525 00ba 9B00     		lsls	r3, r3, #2
 21526 00bc 1344     		add	r3, r3, r2
 21527 00be DB00     		lsls	r3, r3, #3
 21528 00c0 0B44     		add	r3, r3, r1
 21529 00c2 0633     		adds	r3, r3, #6
 21530 00c4 B3F90030 		ldrsh	r3, [r3]
 21531 00c8 07F10800 		add	r0, r7, #8
 21532 00cc 0093     		str	r3, [sp]
 21533 00ce 2B46     		mov	r3, r5
 21534 00d0 2246     		mov	r2, r4
 21535 00d2 A149     		ldr	r1, .L827+20
 21536 00d4 FFF7FEFF 		bl	sprintf
2900:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 474


 21537              		.loc 1 2900 0
 21538 00d8 07F10802 		add	r2, r7, #8
 21539 00dc 3B1D     		adds	r3, r7, #4
 21540 00de 1146     		mov	r1, r2
 21541 00e0 1868     		ldr	r0, [r3]
 21542 00e2 FFF7FEFF 		bl	strcat
 21543              	.L821:
2901:..\src/command_processing.c ****         }
2902:..\src/command_processing.c **** 
2903:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21544              		.loc 1 2903 0
 21545 00e6 984A     		ldr	r2, .L827+4
 21546 00e8 D7F83431 		ldr	r3, [r7, #308]
 21547 00ec 1344     		add	r3, r3, r2
 21548 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21549 00f0 1946     		mov	r1, r3
 21550 00f2 974A     		ldr	r2, .L827+12
 21551 00f4 0B46     		mov	r3, r1
 21552 00f6 9B00     		lsls	r3, r3, #2
 21553 00f8 0B44     		add	r3, r3, r1
 21554 00fa 1344     		add	r3, r3, r2
 21555 00fc 03F20B23 		addw	r3, r3, #523
 21556 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21557 0102 002B     		cmp	r3, #0
 21558 0104 31D0     		beq	.L822
2904:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21559              		.loc 1 2904 0
 21560 0106 9349     		ldr	r1, .L827+16
 21561 0108 D7F83421 		ldr	r2, [r7, #308]
 21562 010c 1346     		mov	r3, r2
 21563 010e 9B00     		lsls	r3, r3, #2
 21564 0110 1344     		add	r3, r3, r2
 21565 0112 DB00     		lsls	r3, r3, #3
 21566 0114 0B44     		add	r3, r3, r1
 21567 0116 0833     		adds	r3, r3, #8
 21568 0118 B3F90030 		ldrsh	r3, [r3]
 21569 011c 1C46     		mov	r4, r3
 21570 011e 8D49     		ldr	r1, .L827+16
 21571 0120 D7F83421 		ldr	r2, [r7, #308]
 21572 0124 1346     		mov	r3, r2
 21573 0126 9B00     		lsls	r3, r3, #2
 21574 0128 1344     		add	r3, r3, r2
 21575 012a DB00     		lsls	r3, r3, #3
 21576 012c 0B44     		add	r3, r3, r1
 21577 012e 0A33     		adds	r3, r3, #10
 21578 0130 B3F90030 		ldrsh	r3, [r3]
 21579 0134 1D46     		mov	r5, r3
 21580 0136 8749     		ldr	r1, .L827+16
 21581 0138 D7F83421 		ldr	r2, [r7, #308]
 21582 013c 1346     		mov	r3, r2
 21583 013e 9B00     		lsls	r3, r3, #2
 21584 0140 1344     		add	r3, r3, r2
 21585 0142 DB00     		lsls	r3, r3, #3
 21586 0144 0B44     		add	r3, r3, r1
 21587 0146 0C33     		adds	r3, r3, #12
 21588 0148 B3F90030 		ldrsh	r3, [r3]
 21589 014c 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 475


 21590 0150 0093     		str	r3, [sp]
 21591 0152 2B46     		mov	r3, r5
 21592 0154 2246     		mov	r2, r4
 21593 0156 8149     		ldr	r1, .L827+24
 21594 0158 FFF7FEFF 		bl	sprintf
2905:..\src/command_processing.c ****             strcat(info_string, str);
 21595              		.loc 1 2905 0
 21596 015c 07F10802 		add	r2, r7, #8
 21597 0160 3B1D     		adds	r3, r7, #4
 21598 0162 1146     		mov	r1, r2
 21599 0164 1868     		ldr	r0, [r3]
 21600 0166 FFF7FEFF 		bl	strcat
 21601              	.L822:
2906:..\src/command_processing.c ****         }
2907:..\src/command_processing.c **** 
2908:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21602              		.loc 1 2908 0
 21603 016a 774A     		ldr	r2, .L827+4
 21604 016c D7F83431 		ldr	r3, [r7, #308]
 21605 0170 1344     		add	r3, r3, r2
 21606 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21607 0174 1946     		mov	r1, r3
 21608 0176 764A     		ldr	r2, .L827+12
 21609 0178 0B46     		mov	r3, r1
 21610 017a 9B00     		lsls	r3, r3, #2
 21611 017c 0B44     		add	r3, r3, r1
 21612 017e 1344     		add	r3, r3, r2
 21613 0180 03F50373 		add	r3, r3, #524
 21614 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21615 0186 002B     		cmp	r3, #0
 21616 0188 31D0     		beq	.L823
2909:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21617              		.loc 1 2909 0
 21618 018a 7249     		ldr	r1, .L827+16
 21619 018c D7F83421 		ldr	r2, [r7, #308]
 21620 0190 1346     		mov	r3, r2
 21621 0192 9B00     		lsls	r3, r3, #2
 21622 0194 1344     		add	r3, r3, r2
 21623 0196 DB00     		lsls	r3, r3, #3
 21624 0198 0B44     		add	r3, r3, r1
 21625 019a 0E33     		adds	r3, r3, #14
 21626 019c B3F90030 		ldrsh	r3, [r3]
 21627 01a0 1C46     		mov	r4, r3
 21628 01a2 6C49     		ldr	r1, .L827+16
 21629 01a4 D7F83421 		ldr	r2, [r7, #308]
 21630 01a8 1346     		mov	r3, r2
 21631 01aa 9B00     		lsls	r3, r3, #2
 21632 01ac 1344     		add	r3, r3, r2
 21633 01ae DB00     		lsls	r3, r3, #3
 21634 01b0 0B44     		add	r3, r3, r1
 21635 01b2 1033     		adds	r3, r3, #16
 21636 01b4 B3F90030 		ldrsh	r3, [r3]
 21637 01b8 1D46     		mov	r5, r3
 21638 01ba 6649     		ldr	r1, .L827+16
 21639 01bc D7F83421 		ldr	r2, [r7, #308]
 21640 01c0 1346     		mov	r3, r2
 21641 01c2 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 476


 21642 01c4 1344     		add	r3, r3, r2
 21643 01c6 DB00     		lsls	r3, r3, #3
 21644 01c8 0B44     		add	r3, r3, r1
 21645 01ca 1233     		adds	r3, r3, #18
 21646 01cc B3F90030 		ldrsh	r3, [r3]
 21647 01d0 07F10800 		add	r0, r7, #8
 21648 01d4 0093     		str	r3, [sp]
 21649 01d6 2B46     		mov	r3, r5
 21650 01d8 2246     		mov	r2, r4
 21651 01da 6149     		ldr	r1, .L827+28
 21652 01dc FFF7FEFF 		bl	sprintf
2910:..\src/command_processing.c ****             strcat(info_string, str);
 21653              		.loc 1 2910 0
 21654 01e0 07F10802 		add	r2, r7, #8
 21655 01e4 3B1D     		adds	r3, r7, #4
 21656 01e6 1146     		mov	r1, r2
 21657 01e8 1868     		ldr	r0, [r3]
 21658 01ea FFF7FEFF 		bl	strcat
 21659              	.L823:
2911:..\src/command_processing.c ****         }
2912:..\src/command_processing.c ****         
2913:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21660              		.loc 1 2913 0
 21661 01ee 564A     		ldr	r2, .L827+4
 21662 01f0 D7F83431 		ldr	r3, [r7, #308]
 21663 01f4 1344     		add	r3, r3, r2
 21664 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21665 01f8 1946     		mov	r1, r3
 21666 01fa 554A     		ldr	r2, .L827+12
 21667 01fc 0B46     		mov	r3, r1
 21668 01fe 9B00     		lsls	r3, r3, #2
 21669 0200 0B44     		add	r3, r3, r1
 21670 0202 1344     		add	r3, r3, r2
 21671 0204 03F20D23 		addw	r3, r3, #525
 21672 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21673 020a 002B     		cmp	r3, #0
 21674 020c 4FD0     		beq	.L824
2914:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21675              		.loc 1 2914 0
 21676 020e 5149     		ldr	r1, .L827+16
 21677 0210 D7F83421 		ldr	r2, [r7, #308]
 21678 0214 1346     		mov	r3, r2
 21679 0216 9B00     		lsls	r3, r3, #2
 21680 0218 1344     		add	r3, r3, r2
 21681 021a DB00     		lsls	r3, r3, #3
 21682 021c 0B44     		add	r3, r3, r1
 21683 021e 1433     		adds	r3, r3, #20
 21684 0220 1B68     		ldr	r3, [r3]	@ float
 21685 0222 1846     		mov	r0, r3
 21686 0224 FFF7FEFF 		bl	__aeabi_f2d
 21687 0228 8246     		mov	r10, r0
 21688 022a 8B46     		mov	fp, r1
 21689 022c 4949     		ldr	r1, .L827+16
 21690 022e D7F83421 		ldr	r2, [r7, #308]
 21691 0232 1346     		mov	r3, r2
 21692 0234 9B00     		lsls	r3, r3, #2
 21693 0236 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 477


 21694 0238 DB00     		lsls	r3, r3, #3
 21695 023a 0B44     		add	r3, r3, r1
 21696 023c 1833     		adds	r3, r3, #24
 21697 023e 1B68     		ldr	r3, [r3]	@ float
 21698 0240 1846     		mov	r0, r3
 21699 0242 FFF7FEFF 		bl	__aeabi_f2d
 21700 0246 0446     		mov	r4, r0
 21701 0248 0D46     		mov	r5, r1
 21702 024a 4249     		ldr	r1, .L827+16
 21703 024c D7F83421 		ldr	r2, [r7, #308]
 21704 0250 1346     		mov	r3, r2
 21705 0252 9B00     		lsls	r3, r3, #2
 21706 0254 1344     		add	r3, r3, r2
 21707 0256 DB00     		lsls	r3, r3, #3
 21708 0258 0B44     		add	r3, r3, r1
 21709 025a 1C33     		adds	r3, r3, #28
 21710 025c 1B68     		ldr	r3, [r3]	@ float
 21711 025e 1846     		mov	r0, r3
 21712 0260 FFF7FEFF 		bl	__aeabi_f2d
 21713 0264 8046     		mov	r8, r0
 21714 0266 8946     		mov	r9, r1
 21715 0268 3A49     		ldr	r1, .L827+16
 21716 026a D7F83421 		ldr	r2, [r7, #308]
 21717 026e 1346     		mov	r3, r2
 21718 0270 9B00     		lsls	r3, r3, #2
 21719 0272 1344     		add	r3, r3, r2
 21720 0274 DB00     		lsls	r3, r3, #3
 21721 0276 0B44     		add	r3, r3, r1
 21722 0278 2033     		adds	r3, r3, #32
 21723 027a 1B68     		ldr	r3, [r3]	@ float
 21724 027c 1846     		mov	r0, r3
 21725 027e FFF7FEFF 		bl	__aeabi_f2d
 21726 0282 0246     		mov	r2, r0
 21727 0284 0B46     		mov	r3, r1
 21728 0286 07F10800 		add	r0, r7, #8
 21729 028a CDE90423 		strd	r2, [sp, #16]
 21730 028e CDE90289 		strd	r8, [sp, #8]
 21731 0292 CDE90045 		strd	r4, [sp]
 21732 0296 5246     		mov	r2, r10
 21733 0298 5B46     		mov	r3, fp
 21734 029a 3249     		ldr	r1, .L827+32
 21735 029c FFF7FEFF 		bl	sprintf
2915:..\src/command_processing.c ****             strcat(info_string, str);
 21736              		.loc 1 2915 0
 21737 02a0 07F10802 		add	r2, r7, #8
 21738 02a4 3B1D     		adds	r3, r7, #4
 21739 02a6 1146     		mov	r1, r2
 21740 02a8 1868     		ldr	r0, [r3]
 21741 02aa FFF7FEFF 		bl	strcat
 21742              	.L824:
2916:..\src/command_processing.c ****         }
2917:..\src/command_processing.c ****         
2918:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21743              		.loc 1 2918 0
 21744 02ae 264A     		ldr	r2, .L827+4
 21745 02b0 D7F83431 		ldr	r3, [r7, #308]
 21746 02b4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 478


 21747 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21748 02b8 1946     		mov	r1, r3
 21749 02ba 254A     		ldr	r2, .L827+12
 21750 02bc 0B46     		mov	r3, r1
 21751 02be 9B00     		lsls	r3, r3, #2
 21752 02c0 0B44     		add	r3, r3, r1
 21753 02c2 1344     		add	r3, r3, r2
 21754 02c4 03F20E23 		addw	r3, r3, #526
 21755 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21756 02ca 002B     		cmp	r3, #0
 21757 02cc 18D0     		beq	.L825
2919:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21758              		.loc 1 2919 0
 21759 02ce 2149     		ldr	r1, .L827+16
 21760 02d0 D7F83421 		ldr	r2, [r7, #308]
 21761 02d4 1346     		mov	r3, r2
 21762 02d6 9B00     		lsls	r3, r3, #2
 21763 02d8 1344     		add	r3, r3, r2
 21764 02da DB00     		lsls	r3, r3, #3
 21765 02dc 0B44     		add	r3, r3, r1
 21766 02de 2433     		adds	r3, r3, #36
 21767 02e0 B3F90030 		ldrsh	r3, [r3]
 21768 02e4 1A46     		mov	r2, r3
 21769 02e6 07F10803 		add	r3, r7, #8
 21770 02ea 1F49     		ldr	r1, .L827+36
 21771 02ec 1846     		mov	r0, r3
 21772 02ee FFF7FEFF 		bl	sprintf
2920:..\src/command_processing.c ****             strcat(info_string, str);
 21773              		.loc 1 2920 0
 21774 02f2 07F10802 		add	r2, r7, #8
 21775 02f6 3B1D     		adds	r3, r7, #4
 21776 02f8 1146     		mov	r1, r2
 21777 02fa 1868     		ldr	r0, [r3]
 21778 02fc FFF7FEFF 		bl	strcat
 21779              	.L825:
2894:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21780              		.loc 1 2894 0 discriminator 2
 21781 0300 D7F83431 		ldr	r3, [r7, #308]
 21782 0304 0133     		adds	r3, r3, #1
 21783 0306 C7F83431 		str	r3, [r7, #308]
 21784              	.L820:
2894:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21785              		.loc 1 2894 0 is_stmt 0 discriminator 1
 21786 030a 184B     		ldr	r3, .L827+40
 21787 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21788 030e 1A46     		mov	r2, r3
 21789 0310 D7F83431 		ldr	r3, [r7, #308]
 21790 0314 9A42     		cmp	r2, r3
 21791 0316 3FF791AE 		bgt	.L826
2921:..\src/command_processing.c ****         }
2922:..\src/command_processing.c ****         
2923:..\src/command_processing.c ****     }
2924:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21792              		.loc 1 2924 0 is_stmt 1
 21793 031a 3B1D     		adds	r3, r7, #4
 21794 031c 1868     		ldr	r0, [r3]
 21795 031e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 479


 21796 0322 0346     		mov	r3, r0
 21797 0324 1A46     		mov	r2, r3
 21798 0326 3B1D     		adds	r3, r7, #4
 21799 0328 1B68     		ldr	r3, [r3]
 21800 032a 1344     		add	r3, r3, r2
 21801 032c 104A     		ldr	r2, .L827+44
 21802 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21803 0330 9278     		ldrb	r2, [r2, #2]
 21804 0332 1980     		strh	r1, [r3]	@ unaligned
 21805 0334 9A70     		strb	r2, [r3, #2]
2925:..\src/command_processing.c **** }
 21806              		.loc 1 2925 0
 21807 0336 00BF     		nop
 21808 0338 07F59C77 		add	r7, r7, #312
 21809              		.cfi_def_cfa_offset 32
 21810 033c BD46     		mov	sp, r7
 21811              		.cfi_def_cfa_register 13
 21812              		@ sp needed
 21813 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21814              	.L828:
 21815 0342 00BF     		.align	2
 21816              	.L827:
 21817 0344 80210000 		.word	.LC315
 21818 0348 00000000 		.word	IMU_connected
 21819 034c 681B0000 		.word	.LC257
 21820 0350 00000000 		.word	c_mem
 21821 0354 00000000 		.word	g_imu
 21822 0358 90210000 		.word	.LC316
 21823 035c A4210000 		.word	.LC317
 21824 0360 B8210000 		.word	.LC318
 21825 0364 CC210000 		.word	.LC319
 21826 0368 EC210000 		.word	.LC320
 21827 036c 00000000 		.word	N_IMU_Connected
 21828 0370 9C110000 		.word	.LC154
 21829              		.cfi_endproc
 21830              	.LFE80:
 21831              		.size	IMU_reading_info, .-IMU_reading_info
 21832              		.section	.text.commWrite_old_id,"ax",%progbits
 21833              		.align	2
 21834              		.global	commWrite_old_id
 21835              		.thumb
 21836              		.thumb_func
 21837              		.type	commWrite_old_id, %function
 21838              	commWrite_old_id:
 21839              	.LFB81:
2926:..\src/command_processing.c **** 
2927:..\src/command_processing.c **** //==============================================================================
2928:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2929:..\src/command_processing.c **** //==============================================================================
2930:..\src/command_processing.c **** 
2931:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2932:..\src/command_processing.c **** {
 21840              		.loc 1 2932 0
 21841              		.cfi_startproc
 21842              		@ args = 0, pretend = 0, frame = 16
 21843              		@ frame_needed = 1, uses_anonymous_args = 0
 21844 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 480


 21845              		.cfi_def_cfa_offset 8
 21846              		.cfi_offset 7, -8
 21847              		.cfi_offset 14, -4
 21848 0002 84B0     		sub	sp, sp, #16
 21849              		.cfi_def_cfa_offset 24
 21850 0004 00AF     		add	r7, sp, #0
 21851              		.cfi_def_cfa_register 7
 21852 0006 7860     		str	r0, [r7, #4]
 21853 0008 0B46     		mov	r3, r1
 21854 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21855 000c 1346     		mov	r3, r2
 21856 000e 7B70     		strb	r3, [r7, #1]
2933:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2934:..\src/command_processing.c **** 
2935:..\src/command_processing.c ****     // frame - start
2936:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21857              		.loc 1 2936 0
 21858 0010 3A20     		movs	r0, #58
 21859 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2937:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21860              		.loc 1 2937 0
 21861 0016 3A20     		movs	r0, #58
 21862 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2938:..\src/command_processing.c ****     // frame - ID
2939:..\src/command_processing.c ****     //if(old_id)
2940:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21863              		.loc 1 2940 0
 21864 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21865 001e 1846     		mov	r0, r3
 21866 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2941:..\src/command_processing.c ****     //else
2942:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2943:..\src/command_processing.c ****         
2944:..\src/command_processing.c ****     // frame - length
2945:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21867              		.loc 1 2945 0
 21868 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21869 0026 DBB2     		uxtb	r3, r3
 21870 0028 1846     		mov	r0, r3
 21871 002a FFF7FEFF 		bl	UART_RS485_PutChar
2946:..\src/command_processing.c ****     // frame - packet data
2947:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21872              		.loc 1 2947 0
 21873 002e 0023     		movs	r3, #0
 21874 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21875 0032 09E0     		b	.L830
 21876              	.L831:
2948:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21877              		.loc 1 2948 0 discriminator 3
 21878 0034 FB89     		ldrh	r3, [r7, #14]
 21879 0036 7A68     		ldr	r2, [r7, #4]
 21880 0038 1344     		add	r3, r3, r2
 21881 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21882 003c 1846     		mov	r0, r3
 21883 003e FFF7FEFF 		bl	UART_RS485_PutChar
2947:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21884              		.loc 1 2947 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 481


 21885 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21886 0044 0133     		adds	r3, r3, #1
 21887 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21888              	.L830:
2947:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21889              		.loc 1 2947 0 is_stmt 0 discriminator 1
 21890 0048 FA89     		ldrh	r2, [r7, #14]
 21891 004a 7B88     		ldrh	r3, [r7, #2]
 21892 004c 9A42     		cmp	r2, r3
 21893 004e F1D3     		bcc	.L831
2949:..\src/command_processing.c ****     }
2950:..\src/command_processing.c **** 
2951:..\src/command_processing.c ****     index = 0;
 21894              		.loc 1 2951 0 is_stmt 1
 21895 0050 0023     		movs	r3, #0
 21896 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2952:..\src/command_processing.c **** 
2953:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21897              		.loc 1 2953 0
 21898 0054 00BF     		nop
 21899              	.L833:
 21900              		.loc 1 2953 0 is_stmt 0 discriminator 2
 21901 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21902 005a 0346     		mov	r3, r0
 21903 005c 03F00103 		and	r3, r3, #1
 21904 0060 002B     		cmp	r3, #0
 21905 0062 05D1     		bne	.L832
 21906              		.loc 1 2953 0 discriminator 1
 21907 0064 FB89     		ldrh	r3, [r7, #14]
 21908 0066 5A1C     		adds	r2, r3, #1
 21909 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21910 006a B3F57A7F 		cmp	r3, #1000
 21911 006e F2D9     		bls	.L833
 21912              	.L832:
2954:..\src/command_processing.c **** 
2955:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21913              		.loc 1 2955 0 is_stmt 1
 21914 0070 0120     		movs	r0, #1
 21915 0072 FFF7FEFF 		bl	RS485_CTS_Write
2956:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21916              		.loc 1 2956 0
 21917 0076 0020     		movs	r0, #0
 21918 0078 FFF7FEFF 		bl	RS485_CTS_Write
2957:..\src/command_processing.c **** }
 21919              		.loc 1 2957 0
 21920 007c 00BF     		nop
 21921 007e 1037     		adds	r7, r7, #16
 21922              		.cfi_def_cfa_offset 8
 21923 0080 BD46     		mov	sp, r7
 21924              		.cfi_def_cfa_register 13
 21925              		@ sp needed
 21926 0082 80BD     		pop	{r7, pc}
 21927              		.cfi_endproc
 21928              	.LFE81:
 21929              		.size	commWrite_old_id, .-commWrite_old_id
 21930              		.section	.text.commWrite,"ax",%progbits
 21931              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 482


 21932              		.global	commWrite
 21933              		.thumb
 21934              		.thumb_func
 21935              		.type	commWrite, %function
 21936              	commWrite:
 21937              	.LFB82:
2958:..\src/command_processing.c **** 
2959:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2960:..\src/command_processing.c **** {
 21938              		.loc 1 2960 0
 21939              		.cfi_startproc
 21940              		@ args = 0, pretend = 0, frame = 16
 21941              		@ frame_needed = 1, uses_anonymous_args = 0
 21942 0000 80B5     		push	{r7, lr}
 21943              		.cfi_def_cfa_offset 8
 21944              		.cfi_offset 7, -8
 21945              		.cfi_offset 14, -4
 21946 0002 84B0     		sub	sp, sp, #16
 21947              		.cfi_def_cfa_offset 24
 21948 0004 00AF     		add	r7, sp, #0
 21949              		.cfi_def_cfa_register 7
 21950 0006 7860     		str	r0, [r7, #4]
 21951 0008 0B46     		mov	r3, r1
 21952 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2961:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2962:..\src/command_processing.c **** 
2963:..\src/command_processing.c ****     // frame - start
2964:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21953              		.loc 1 2964 0
 21954 000c 3A20     		movs	r0, #58
 21955 000e FFF7FEFF 		bl	UART_RS485_PutChar
2965:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21956              		.loc 1 2965 0
 21957 0012 3A20     		movs	r0, #58
 21958 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2966:..\src/command_processing.c ****     // frame - ID
2967:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21959              		.loc 1 2967 0
 21960 0018 1A4B     		ldr	r3, .L839
 21961 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21962 001e 1846     		mov	r0, r3
 21963 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2968:..\src/command_processing.c ****     // frame - length
2969:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21964              		.loc 1 2969 0
 21965 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21966 0026 DBB2     		uxtb	r3, r3
 21967 0028 1846     		mov	r0, r3
 21968 002a FFF7FEFF 		bl	UART_RS485_PutChar
2970:..\src/command_processing.c ****     // frame - packet data
2971:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21969              		.loc 1 2971 0
 21970 002e 0023     		movs	r3, #0
 21971 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21972 0032 09E0     		b	.L835
 21973              	.L836:
2972:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 483


 21974              		.loc 1 2972 0 discriminator 3
 21975 0034 FB89     		ldrh	r3, [r7, #14]
 21976 0036 7A68     		ldr	r2, [r7, #4]
 21977 0038 1344     		add	r3, r3, r2
 21978 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21979 003c 1846     		mov	r0, r3
 21980 003e FFF7FEFF 		bl	UART_RS485_PutChar
2971:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21981              		.loc 1 2971 0 discriminator 3
 21982 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21983 0044 0133     		adds	r3, r3, #1
 21984 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21985              	.L835:
2971:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21986              		.loc 1 2971 0 is_stmt 0 discriminator 1
 21987 0048 FA89     		ldrh	r2, [r7, #14]
 21988 004a 7B88     		ldrh	r3, [r7, #2]
 21989 004c 9A42     		cmp	r2, r3
 21990 004e F1D3     		bcc	.L836
2973:..\src/command_processing.c ****     }
2974:..\src/command_processing.c **** 
2975:..\src/command_processing.c ****     index = 0;
 21991              		.loc 1 2975 0 is_stmt 1
 21992 0050 0023     		movs	r3, #0
 21993 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2976:..\src/command_processing.c **** 
2977:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21994              		.loc 1 2977 0
 21995 0054 00BF     		nop
 21996              	.L838:
 21997              		.loc 1 2977 0 is_stmt 0 discriminator 2
 21998 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21999 005a 0346     		mov	r3, r0
 22000 005c 03F00103 		and	r3, r3, #1
 22001 0060 002B     		cmp	r3, #0
 22002 0062 05D1     		bne	.L837
 22003              		.loc 1 2977 0 discriminator 1
 22004 0064 FB89     		ldrh	r3, [r7, #14]
 22005 0066 5A1C     		adds	r2, r3, #1
 22006 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 22007 006a B3F57A7F 		cmp	r3, #1000
 22008 006e F2D9     		bls	.L838
 22009              	.L837:
2978:..\src/command_processing.c **** 
2979:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22010              		.loc 1 2979 0 is_stmt 1
 22011 0070 0120     		movs	r0, #1
 22012 0072 FFF7FEFF 		bl	RS485_CTS_Write
2980:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22013              		.loc 1 2980 0
 22014 0076 0020     		movs	r0, #0
 22015 0078 FFF7FEFF 		bl	RS485_CTS_Write
2981:..\src/command_processing.c **** }
 22016              		.loc 1 2981 0
 22017 007c 00BF     		nop
 22018 007e 1037     		adds	r7, r7, #16
 22019              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 484


 22020 0080 BD46     		mov	sp, r7
 22021              		.cfi_def_cfa_register 13
 22022              		@ sp needed
 22023 0082 80BD     		pop	{r7, pc}
 22024              	.L840:
 22025              		.align	2
 22026              	.L839:
 22027 0084 00000000 		.word	g_mem
 22028              		.cfi_endproc
 22029              	.LFE82:
 22030              		.size	commWrite, .-commWrite
 22031              		.section	.text.commWriteID,"ax",%progbits
 22032              		.align	2
 22033              		.global	commWriteID
 22034              		.thumb
 22035              		.thumb_func
 22036              		.type	commWriteID, %function
 22037              	commWriteID:
 22038              	.LFB83:
2982:..\src/command_processing.c **** 
2983:..\src/command_processing.c **** //==============================================================================
2984:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2985:..\src/command_processing.c **** //==============================================================================
2986:..\src/command_processing.c **** 
2987:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2988:..\src/command_processing.c **** {
 22039              		.loc 1 2988 0
 22040              		.cfi_startproc
 22041              		@ args = 0, pretend = 0, frame = 8
 22042              		@ frame_needed = 1, uses_anonymous_args = 0
 22043 0000 80B5     		push	{r7, lr}
 22044              		.cfi_def_cfa_offset 8
 22045              		.cfi_offset 7, -8
 22046              		.cfi_offset 14, -4
 22047 0002 82B0     		sub	sp, sp, #8
 22048              		.cfi_def_cfa_offset 16
 22049 0004 00AF     		add	r7, sp, #0
 22050              		.cfi_def_cfa_register 7
 22051 0006 7860     		str	r0, [r7, #4]
 22052 0008 0B46     		mov	r3, r1
 22053 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 22054 000c 1346     		mov	r3, r2
 22055 000e 7B70     		strb	r3, [r7, #1]
2989:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2990:..\src/command_processing.c **** 
2991:..\src/command_processing.c ****     // frame - start
2992:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22056              		.loc 1 2992 0
 22057 0010 3A20     		movs	r0, #58
 22058 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2993:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22059              		.loc 1 2993 0
 22060 0016 3A20     		movs	r0, #58
 22061 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2994:..\src/command_processing.c ****     // frame - ID
2995:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 22062              		.loc 1 2995 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 485


 22063 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 22064 001e 1846     		mov	r0, r3
 22065 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2996:..\src/command_processing.c ****     // frame - length
2997:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 22066              		.loc 1 2997 0
 22067 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 22068 0026 DBB2     		uxtb	r3, r3
 22069 0028 1846     		mov	r0, r3
 22070 002a FFF7FEFF 		bl	UART_RS485_PutChar
2998:..\src/command_processing.c ****     // frame - packet data
2999:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 22071              		.loc 1 2999 0
 22072 002e 1B4B     		ldr	r3, .L846
 22073 0030 0022     		movs	r2, #0
 22074 0032 1A80     		strh	r2, [r3]	@ movhi
 22075 0034 0EE0     		b	.L842
 22076              	.L843:
3000:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22077              		.loc 1 3000 0 discriminator 3
 22078 0036 194B     		ldr	r3, .L846
 22079 0038 1B88     		ldrh	r3, [r3]
 22080 003a 1A46     		mov	r2, r3
 22081 003c 7B68     		ldr	r3, [r7, #4]
 22082 003e 1344     		add	r3, r3, r2
 22083 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22084 0042 1846     		mov	r0, r3
 22085 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2999:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22086              		.loc 1 2999 0 discriminator 3
 22087 0048 144B     		ldr	r3, .L846
 22088 004a 1B88     		ldrh	r3, [r3]
 22089 004c 0133     		adds	r3, r3, #1
 22090 004e 9AB2     		uxth	r2, r3
 22091 0050 124B     		ldr	r3, .L846
 22092 0052 1A80     		strh	r2, [r3]	@ movhi
 22093              	.L842:
2999:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22094              		.loc 1 2999 0 is_stmt 0 discriminator 1
 22095 0054 114B     		ldr	r3, .L846
 22096 0056 1B88     		ldrh	r3, [r3]
 22097 0058 7A88     		ldrh	r2, [r7, #2]
 22098 005a 9A42     		cmp	r2, r3
 22099 005c EBD8     		bhi	.L843
3001:..\src/command_processing.c ****     }
3002:..\src/command_processing.c **** 
3003:..\src/command_processing.c ****     i = 0;
 22100              		.loc 1 3003 0 is_stmt 1
 22101 005e 0F4B     		ldr	r3, .L846
 22102 0060 0022     		movs	r2, #0
 22103 0062 1A80     		strh	r2, [r3]	@ movhi
3004:..\src/command_processing.c **** 
3005:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 22104              		.loc 1 3005 0
 22105 0064 00BF     		nop
 22106              	.L845:
 22107              		.loc 1 3005 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 486


 22108 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 22109 006a 0346     		mov	r3, r0
 22110 006c 03F00103 		and	r3, r3, #1
 22111 0070 002B     		cmp	r3, #0
 22112 0072 08D1     		bne	.L844
 22113              		.loc 1 3005 0 discriminator 1
 22114 0074 094B     		ldr	r3, .L846
 22115 0076 1B88     		ldrh	r3, [r3]
 22116 0078 5A1C     		adds	r2, r3, #1
 22117 007a 91B2     		uxth	r1, r2
 22118 007c 074A     		ldr	r2, .L846
 22119 007e 1180     		strh	r1, [r2]	@ movhi
 22120 0080 B3F57A7F 		cmp	r3, #1000
 22121 0084 EFD9     		bls	.L845
 22122              	.L844:
3006:..\src/command_processing.c ****     
3007:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22123              		.loc 1 3007 0 is_stmt 1
 22124 0086 0120     		movs	r0, #1
 22125 0088 FFF7FEFF 		bl	RS485_CTS_Write
3008:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22126              		.loc 1 3008 0
 22127 008c 0020     		movs	r0, #0
 22128 008e FFF7FEFF 		bl	RS485_CTS_Write
3009:..\src/command_processing.c **** }
 22129              		.loc 1 3009 0
 22130 0092 00BF     		nop
 22131 0094 0837     		adds	r7, r7, #8
 22132              		.cfi_def_cfa_offset 8
 22133 0096 BD46     		mov	sp, r7
 22134              		.cfi_def_cfa_register 13
 22135              		@ sp needed
 22136 0098 80BD     		pop	{r7, pc}
 22137              	.L847:
 22138 009a 00BF     		.align	2
 22139              	.L846:
 22140 009c 04000000 		.word	i.11288
 22141              		.cfi_endproc
 22142              	.LFE83:
 22143              		.size	commWriteID, .-commWriteID
 22144              		.section	.text.LCRChecksum,"ax",%progbits
 22145              		.align	2
 22146              		.global	LCRChecksum
 22147              		.thumb
 22148              		.thumb_func
 22149              		.type	LCRChecksum, %function
 22150              	LCRChecksum:
 22151              	.LFB84:
3010:..\src/command_processing.c **** 
3011:..\src/command_processing.c **** //==============================================================================
3012:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
3013:..\src/command_processing.c **** //==============================================================================
3014:..\src/command_processing.c **** 
3015:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
3016:..\src/command_processing.c **** 
3017:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 22152              		.loc 1 3017 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 487


 22153              		.cfi_startproc
 22154              		@ args = 0, pretend = 0, frame = 16
 22155              		@ frame_needed = 1, uses_anonymous_args = 0
 22156              		@ link register save eliminated.
 22157 0000 80B4     		push	{r7}
 22158              		.cfi_def_cfa_offset 4
 22159              		.cfi_offset 7, -4
 22160 0002 85B0     		sub	sp, sp, #20
 22161              		.cfi_def_cfa_offset 24
 22162 0004 00AF     		add	r7, sp, #0
 22163              		.cfi_def_cfa_register 7
 22164 0006 7860     		str	r0, [r7, #4]
 22165 0008 0B46     		mov	r3, r1
 22166 000a FB70     		strb	r3, [r7, #3]
3018:..\src/command_processing.c ****     
3019:..\src/command_processing.c ****     uint8 CYDATA i;
3020:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 22167              		.loc 1 3020 0
 22168 000c 0023     		movs	r3, #0
 22169 000e BB73     		strb	r3, [r7, #14]
3021:..\src/command_processing.c ****     
3022:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 22170              		.loc 1 3022 0
 22171 0010 0023     		movs	r3, #0
 22172 0012 FB73     		strb	r3, [r7, #15]
 22173 0014 09E0     		b	.L849
 22174              	.L850:
3023:..\src/command_processing.c ****        checksum ^= data_array[i];
 22175              		.loc 1 3023 0 discriminator 3
 22176 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22177 0018 7A68     		ldr	r2, [r7, #4]
 22178 001a 1344     		add	r3, r3, r2
 22179 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22180 001e BB7B     		ldrb	r3, [r7, #14]
 22181 0020 5340     		eors	r3, r3, r2
 22182 0022 BB73     		strb	r3, [r7, #14]
3022:..\src/command_processing.c ****        checksum ^= data_array[i];
 22183              		.loc 1 3022 0 discriminator 3
 22184 0024 FB7B     		ldrb	r3, [r7, #15]
 22185 0026 0133     		adds	r3, r3, #1
 22186 0028 FB73     		strb	r3, [r7, #15]
 22187              	.L849:
3022:..\src/command_processing.c ****        checksum ^= data_array[i];
 22188              		.loc 1 3022 0 is_stmt 0 discriminator 1
 22189 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22190 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22191 002e 9A42     		cmp	r2, r3
 22192 0030 F1D3     		bcc	.L850
3024:..\src/command_processing.c ****   
3025:..\src/command_processing.c ****     return checksum;
 22193              		.loc 1 3025 0 is_stmt 1
 22194 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
3026:..\src/command_processing.c **** }
 22195              		.loc 1 3026 0
 22196 0034 1846     		mov	r0, r3
 22197 0036 1437     		adds	r7, r7, #20
 22198              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 488


 22199 0038 BD46     		mov	sp, r7
 22200              		.cfi_def_cfa_register 13
 22201              		@ sp needed
 22202 003a 80BC     		pop	{r7}
 22203              		.cfi_restore 7
 22204              		.cfi_def_cfa_offset 0
 22205 003c 7047     		bx	lr
 22206              		.cfi_endproc
 22207              	.LFE84:
 22208              		.size	LCRChecksum, .-LCRChecksum
 22209 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22210              		.align	2
 22211              		.global	sendAcknowledgment
 22212              		.thumb
 22213              		.thumb_func
 22214              		.type	sendAcknowledgment, %function
 22215              	sendAcknowledgment:
 22216              	.LFB85:
3027:..\src/command_processing.c **** 
3028:..\src/command_processing.c **** 
3029:..\src/command_processing.c **** //==============================================================================
3030:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
3031:..\src/command_processing.c **** //==============================================================================
3032:..\src/command_processing.c **** 
3033:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22217              		.loc 1 3033 0
 22218              		.cfi_startproc
 22219              		@ args = 0, pretend = 0, frame = 16
 22220              		@ frame_needed = 1, uses_anonymous_args = 0
 22221 0000 80B5     		push	{r7, lr}
 22222              		.cfi_def_cfa_offset 8
 22223              		.cfi_offset 7, -8
 22224              		.cfi_offset 14, -4
 22225 0002 84B0     		sub	sp, sp, #16
 22226              		.cfi_def_cfa_offset 24
 22227 0004 00AF     		add	r7, sp, #0
 22228              		.cfi_def_cfa_register 7
 22229 0006 0346     		mov	r3, r0
 22230 0008 FB71     		strb	r3, [r7, #7]
3034:..\src/command_processing.c ****     int packet_lenght = 2;
 22231              		.loc 1 3034 0
 22232 000a 0223     		movs	r3, #2
 22233 000c FB60     		str	r3, [r7, #12]
3035:..\src/command_processing.c ****     uint8 packet_data[2];
3036:..\src/command_processing.c **** 
3037:..\src/command_processing.c ****     packet_data[0] = value;
 22234              		.loc 1 3037 0
 22235 000e FB79     		ldrb	r3, [r7, #7]
 22236 0010 3B72     		strb	r3, [r7, #8]
3038:..\src/command_processing.c ****     packet_data[1] = value;
 22237              		.loc 1 3038 0
 22238 0012 FB79     		ldrb	r3, [r7, #7]
 22239 0014 7B72     		strb	r3, [r7, #9]
3039:..\src/command_processing.c **** 
3040:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 22240              		.loc 1 3040 0
 22241 0016 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 489


 22242 0018 9AB2     		uxth	r2, r3
 22243 001a 07F10803 		add	r3, r7, #8
 22244 001e 1146     		mov	r1, r2
 22245 0020 1846     		mov	r0, r3
 22246 0022 FFF7FEFF 		bl	commWrite
3041:..\src/command_processing.c **** }
 22247              		.loc 1 3041 0
 22248 0026 00BF     		nop
 22249 0028 1037     		adds	r7, r7, #16
 22250              		.cfi_def_cfa_offset 8
 22251 002a BD46     		mov	sp, r7
 22252              		.cfi_def_cfa_register 13
 22253              		@ sp needed
 22254 002c 80BD     		pop	{r7, pc}
 22255              		.cfi_endproc
 22256              	.LFE85:
 22257              		.size	sendAcknowledgment, .-sendAcknowledgment
 22258 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22259              		.align	2
 22260              		.global	memStore
 22261              		.thumb
 22262              		.thumb_func
 22263              		.type	memStore, %function
 22264              	memStore:
 22265              	.LFB86:
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c **** //==============================================================================
3044:..\src/command_processing.c **** //                                                                  STORE MEMORY
3045:..\src/command_processing.c **** //==============================================================================
3046:..\src/command_processing.c **** 
3047:..\src/command_processing.c **** 
3048:..\src/command_processing.c **** uint8 memStore(int displacement)
3049:..\src/command_processing.c **** {
 22266              		.loc 1 3049 0
 22267              		.cfi_startproc
 22268              		@ args = 0, pretend = 0, frame = 24
 22269              		@ frame_needed = 1, uses_anonymous_args = 0
 22270 0000 80B5     		push	{r7, lr}
 22271              		.cfi_def_cfa_offset 8
 22272              		.cfi_offset 7, -8
 22273              		.cfi_offset 14, -4
 22274 0002 86B0     		sub	sp, sp, #24
 22275              		.cfi_def_cfa_offset 32
 22276 0004 00AF     		add	r7, sp, #0
 22277              		.cfi_def_cfa_register 7
 22278 0006 7860     		str	r0, [r7, #4]
3050:..\src/command_processing.c ****     int i;  // iterator
3051:..\src/command_processing.c ****     uint8 writeStatus;
3052:..\src/command_processing.c ****     int pages;
3053:..\src/command_processing.c ****     uint8 ret_val = 1;
 22279              		.loc 1 3053 0
 22280 0008 0123     		movs	r3, #1
 22281 000a FB74     		strb	r3, [r7, #19]
3054:..\src/command_processing.c **** 
3055:..\src/command_processing.c ****     // Disable Interrupt
3056:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22282              		.loc 1 3056 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 490


 22283 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
3057:..\src/command_processing.c **** 
3058:..\src/command_processing.c ****     // Stop motor
3059:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22284              		.loc 1 3059 0
 22285 0010 0020     		movs	r0, #0
 22286 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
3060:..\src/command_processing.c **** 
3061:..\src/command_processing.c ****     // Update temperature information for better writing performance
3062:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22287              		.loc 1 3062 0
 22288 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
3063:..\src/command_processing.c **** 
3064:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 22289              		.loc 1 3064 0
 22290 001a 1D4A     		ldr	r2, .L859
 22291 001c 1D4B     		ldr	r3, .L859+4
 22292 001e 1046     		mov	r0, r2
 22293 0020 1946     		mov	r1, r3
 22294 0022 4FF43F73 		mov	r3, #764
 22295 0026 1A46     		mov	r2, r3
 22296 0028 FFF7FEFF 		bl	memcpy
3065:..\src/command_processing.c **** 
3066:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22297              		.loc 1 3066 0
 22298 002c 3023     		movs	r3, #48
 22299 002e FB60     		str	r3, [r7, #12]
3067:..\src/command_processing.c **** 
3068:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22300              		.loc 1 3068 0
 22301 0030 0023     		movs	r3, #0
 22302 0032 7B61     		str	r3, [r7, #20]
 22303 0034 18E0     		b	.L854
 22304              	.L857:
3069:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22305              		.loc 1 3069 0
 22306 0036 7B69     		ldr	r3, [r7, #20]
 22307 0038 1B01     		lsls	r3, r3, #4
 22308 003a 1A46     		mov	r2, r3
 22309 003c 154B     		ldr	r3, .L859+4
 22310 003e D018     		adds	r0, r2, r3
 22311 0040 7B69     		ldr	r3, [r7, #20]
 22312 0042 DAB2     		uxtb	r2, r3
 22313 0044 7B68     		ldr	r3, [r7, #4]
 22314 0046 DBB2     		uxtb	r3, r3
 22315 0048 1344     		add	r3, r3, r2
 22316 004a DBB2     		uxtb	r3, r3
 22317 004c 1946     		mov	r1, r3
 22318 004e FFF7FEFF 		bl	EEPROM_Write
 22319 0052 0346     		mov	r3, r0
 22320 0054 FB72     		strb	r3, [r7, #11]
3070:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22321              		.loc 1 3070 0
 22322 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22323 0058 002B     		cmp	r3, #0
 22324 005a 02D0     		beq	.L855
3071:..\src/command_processing.c ****             ret_val = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 491


 22325              		.loc 1 3071 0
 22326 005c 0023     		movs	r3, #0
 22327 005e FB74     		strb	r3, [r7, #19]
3072:..\src/command_processing.c ****             break;
 22328              		.loc 1 3072 0
 22329 0060 06E0     		b	.L856
 22330              	.L855:
3068:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22331              		.loc 1 3068 0 discriminator 2
 22332 0062 7B69     		ldr	r3, [r7, #20]
 22333 0064 0133     		adds	r3, r3, #1
 22334 0066 7B61     		str	r3, [r7, #20]
 22335              	.L854:
3068:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22336              		.loc 1 3068 0 is_stmt 0 discriminator 1
 22337 0068 7A69     		ldr	r2, [r7, #20]
 22338 006a FB68     		ldr	r3, [r7, #12]
 22339 006c 9A42     		cmp	r2, r3
 22340 006e E2DB     		blt	.L857
 22341              	.L856:
3073:..\src/command_processing.c ****         }
3074:..\src/command_processing.c ****     }
3075:..\src/command_processing.c **** 
3076:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22342              		.loc 1 3076 0 is_stmt 1
 22343 0070 084A     		ldr	r2, .L859+4
 22344 0072 074B     		ldr	r3, .L859
 22345 0074 1046     		mov	r0, r2
 22346 0076 1946     		mov	r1, r3
 22347 0078 4FF43F73 		mov	r3, #764
 22348 007c 1A46     		mov	r2, r3
 22349 007e FFF7FEFF 		bl	memcpy
3077:..\src/command_processing.c **** 
3078:..\src/command_processing.c ****     // Re-Enable Interrupt
3079:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22350              		.loc 1 3079 0
 22351 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c ****     return ret_val;
 22352              		.loc 1 3081 0
 22353 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3082:..\src/command_processing.c **** }
 22354              		.loc 1 3082 0
 22355 0088 1846     		mov	r0, r3
 22356 008a 1837     		adds	r7, r7, #24
 22357              		.cfi_def_cfa_offset 8
 22358 008c BD46     		mov	sp, r7
 22359              		.cfi_def_cfa_register 13
 22360              		@ sp needed
 22361 008e 80BD     		pop	{r7, pc}
 22362              	.L860:
 22363              		.align	2
 22364              	.L859:
 22365 0090 00000000 		.word	c_mem
 22366 0094 00000000 		.word	g_mem
 22367              		.cfi_endproc
 22368              	.LFE86:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 492


 22369              		.size	memStore, .-memStore
 22370              		.section	.text.memRecall,"ax",%progbits
 22371              		.align	2
 22372              		.global	memRecall
 22373              		.thumb
 22374              		.thumb_func
 22375              		.type	memRecall, %function
 22376              	memRecall:
 22377              	.LFB87:
3083:..\src/command_processing.c **** 
3084:..\src/command_processing.c **** 
3085:..\src/command_processing.c **** //==============================================================================
3086:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3087:..\src/command_processing.c **** //==============================================================================
3088:..\src/command_processing.c **** 
3089:..\src/command_processing.c **** 
3090:..\src/command_processing.c **** void memRecall(void)
3091:..\src/command_processing.c **** {
 22378              		.loc 1 3091 0
 22379              		.cfi_startproc
 22380              		@ args = 0, pretend = 0, frame = 8
 22381              		@ frame_needed = 1, uses_anonymous_args = 0
 22382 0000 80B5     		push	{r7, lr}
 22383              		.cfi_def_cfa_offset 8
 22384              		.cfi_offset 7, -8
 22385              		.cfi_offset 14, -4
 22386 0002 82B0     		sub	sp, sp, #8
 22387              		.cfi_def_cfa_offset 16
 22388 0004 00AF     		add	r7, sp, #0
 22389              		.cfi_def_cfa_register 7
3092:..\src/command_processing.c ****     uint16 i;
3093:..\src/command_processing.c **** 
3094:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22390              		.loc 1 3094 0
 22391 0006 0023     		movs	r3, #0
 22392 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22393 000a 0CE0     		b	.L862
 22394              	.L863:
3095:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22395              		.loc 1 3095 0 discriminator 3
 22396 000c FB88     		ldrh	r3, [r7, #6]
 22397 000e 184A     		ldr	r2, .L867
 22398 0010 1344     		add	r3, r3, r2
 22399 0012 184A     		ldr	r2, .L867+4
 22400 0014 1168     		ldr	r1, [r2]
 22401 0016 FA88     		ldrh	r2, [r7, #6]
 22402 0018 0A44     		add	r2, r2, r1
 22403 001a 1278     		ldrb	r2, [r2]
 22404 001c D2B2     		uxtb	r2, r2
 22405 001e 1A70     		strb	r2, [r3]
3094:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22406              		.loc 1 3094 0 discriminator 3
 22407 0020 FB88     		ldrh	r3, [r7, #6]
 22408 0022 0133     		adds	r3, r3, #1
 22409 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22410              	.L862:
3094:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 493


 22411              		.loc 1 3094 0 is_stmt 0 discriminator 1
 22412 0026 FB88     		ldrh	r3, [r7, #6]
 22413 0028 B3F53F7F 		cmp	r3, #764
 22414 002c EED3     		bcc	.L863
3096:..\src/command_processing.c ****     }
3097:..\src/command_processing.c ****     
3098:..\src/command_processing.c ****     // Recall saved user_emg structure
3099:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22415              		.loc 1 3099 0 is_stmt 1
 22416 002e 104B     		ldr	r3, .L867
 22417 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22418 0034 5B01     		lsls	r3, r3, #5
 22419 0036 03F51473 		add	r3, r3, #592
 22420 003a 0D4A     		ldr	r2, .L867
 22421 003c 1344     		add	r3, r3, r2
 22422 003e 1022     		movs	r2, #16
 22423 0040 1946     		mov	r1, r3
 22424 0042 0D48     		ldr	r0, .L867+8
 22425 0044 FFF7FEFF 		bl	memcpy
3100:..\src/command_processing.c **** 
3101:..\src/command_processing.c ****     //check for initialization
3102:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22426              		.loc 1 3102 0
 22427 0048 094B     		ldr	r3, .L867
 22428 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22429 004c 002B     		cmp	r3, #0
 22430 004e 02D1     		bne	.L864
3103:..\src/command_processing.c ****         memRestore();
 22431              		.loc 1 3103 0
 22432 0050 FFF7FEFF 		bl	memRestore
3104:..\src/command_processing.c ****     } else {
3105:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3106:..\src/command_processing.c ****     }        
3107:..\src/command_processing.c **** }
 22433              		.loc 1 3107 0
 22434 0054 08E0     		b	.L866
 22435              	.L864:
3105:..\src/command_processing.c ****     }        
 22436              		.loc 1 3105 0
 22437 0056 094A     		ldr	r2, .L867+12
 22438 0058 054B     		ldr	r3, .L867
 22439 005a 1046     		mov	r0, r2
 22440 005c 1946     		mov	r1, r3
 22441 005e 4FF43F73 		mov	r3, #764
 22442 0062 1A46     		mov	r2, r3
 22443 0064 FFF7FEFF 		bl	memcpy
 22444              	.L866:
 22445              		.loc 1 3107 0
 22446 0068 00BF     		nop
 22447 006a 0837     		adds	r7, r7, #8
 22448              		.cfi_def_cfa_offset 8
 22449 006c BD46     		mov	sp, r7
 22450              		.cfi_def_cfa_register 13
 22451              		@ sp needed
 22452 006e 80BD     		pop	{r7, pc}
 22453              	.L868:
 22454              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 494


 22455              	.L867:
 22456 0070 00000000 		.word	g_mem
 22457 0074 00000000 		.word	EEPROM_ADDR
 22458 0078 F8010000 		.word	g_mem+504
 22459 007c 00000000 		.word	c_mem
 22460              		.cfi_endproc
 22461              	.LFE87:
 22462              		.size	memRecall, .-memRecall
 22463              		.section	.text.memRestore,"ax",%progbits
 22464              		.align	2
 22465              		.global	memRestore
 22466              		.thumb
 22467              		.thumb_func
 22468              		.type	memRestore, %function
 22469              	memRestore:
 22470              	.LFB88:
3108:..\src/command_processing.c **** 
3109:..\src/command_processing.c **** 
3110:..\src/command_processing.c **** //==============================================================================
3111:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3112:..\src/command_processing.c **** //==============================================================================
3113:..\src/command_processing.c **** 
3114:..\src/command_processing.c **** 
3115:..\src/command_processing.c **** uint8 memRestore(void) {
 22471              		.loc 1 3115 0
 22472              		.cfi_startproc
 22473              		@ args = 0, pretend = 0, frame = 8
 22474              		@ frame_needed = 1, uses_anonymous_args = 0
 22475 0000 80B5     		push	{r7, lr}
 22476              		.cfi_def_cfa_offset 8
 22477              		.cfi_offset 7, -8
 22478              		.cfi_offset 14, -4
 22479 0002 82B0     		sub	sp, sp, #8
 22480              		.cfi_def_cfa_offset 16
 22481 0004 00AF     		add	r7, sp, #0
 22482              		.cfi_def_cfa_register 7
3116:..\src/command_processing.c ****     uint16 i;
3117:..\src/command_processing.c **** 
3118:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22483              		.loc 1 3118 0
 22484 0006 0023     		movs	r3, #0
 22485 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22486 000a 0EE0     		b	.L870
 22487              	.L871:
3119:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22488              		.loc 1 3119 0 discriminator 3
 22489 000c FB88     		ldrh	r3, [r7, #6]
 22490 000e 114A     		ldr	r2, .L874
 22491 0010 1344     		add	r3, r3, r2
 22492 0012 114A     		ldr	r2, .L874+4
 22493 0014 1168     		ldr	r1, [r2]
 22494 0016 FA88     		ldrh	r2, [r7, #6]
 22495 0018 02F54872 		add	r2, r2, #800
 22496 001c 0A44     		add	r2, r2, r1
 22497 001e 1278     		ldrb	r2, [r2]
 22498 0020 D2B2     		uxtb	r2, r2
 22499 0022 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 495


3118:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22500              		.loc 1 3118 0 discriminator 3
 22501 0024 FB88     		ldrh	r3, [r7, #6]
 22502 0026 0133     		adds	r3, r3, #1
 22503 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22504              	.L870:
3118:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22505              		.loc 1 3118 0 is_stmt 0 discriminator 1
 22506 002a FB88     		ldrh	r3, [r7, #6]
 22507 002c B3F53F7F 		cmp	r3, #764
 22508 0030 ECD3     		bcc	.L871
3120:..\src/command_processing.c ****     }
3121:..\src/command_processing.c **** 
3122:..\src/command_processing.c ****     //check for initialization
3123:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22509              		.loc 1 3123 0 is_stmt 1
 22510 0032 084B     		ldr	r3, .L874
 22511 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22512 0036 002B     		cmp	r3, #0
 22513 0038 03D1     		bne	.L872
3124:..\src/command_processing.c ****         return memInit();
 22514              		.loc 1 3124 0
 22515 003a FFF7FEFF 		bl	memInit
 22516 003e 0346     		mov	r3, r0
 22517 0040 03E0     		b	.L873
 22518              	.L872:
3125:..\src/command_processing.c ****     } else {
3126:..\src/command_processing.c ****         return memStore(0);
 22519              		.loc 1 3126 0
 22520 0042 0020     		movs	r0, #0
 22521 0044 FFF7FEFF 		bl	memStore
 22522 0048 0346     		mov	r3, r0
 22523              	.L873:
3127:..\src/command_processing.c ****     }  
3128:..\src/command_processing.c **** }
 22524              		.loc 1 3128 0
 22525 004a 1846     		mov	r0, r3
 22526 004c 0837     		adds	r7, r7, #8
 22527              		.cfi_def_cfa_offset 8
 22528 004e BD46     		mov	sp, r7
 22529              		.cfi_def_cfa_register 13
 22530              		@ sp needed
 22531 0050 80BD     		pop	{r7, pc}
 22532              	.L875:
 22533 0052 00BF     		.align	2
 22534              	.L874:
 22535 0054 00000000 		.word	g_mem
 22536 0058 00000000 		.word	EEPROM_ADDR
 22537              		.cfi_endproc
 22538              	.LFE88:
 22539              		.size	memRestore, .-memRestore
 22540              		.section	.rodata
 22541 21ff 00       		.align	2
 22542              	.LC321:
 22543 2200 47454E30 		.ascii	"GEN001\000"
 22543      303100
 22544              		.section	.text.memInit,"ax",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 496


 22545              		.align	2
 22546              		.global	memInit
 22547              		.thumb
 22548              		.thumb_func
 22549              		.type	memInit, %function
 22550              	memInit:
 22551              	.LFB89:
3129:..\src/command_processing.c **** 
3130:..\src/command_processing.c **** //==============================================================================
3131:..\src/command_processing.c **** //                                                                   MEMORY INIT
3132:..\src/command_processing.c **** //==============================================================================
3133:..\src/command_processing.c **** 
3134:..\src/command_processing.c **** uint8 memInit(void)
3135:..\src/command_processing.c **** {
 22552              		.loc 1 3135 0
 22553              		.cfi_startproc
 22554              		@ args = 0, pretend = 0, frame = 8
 22555              		@ frame_needed = 1, uses_anonymous_args = 0
 22556 0000 80B5     		push	{r7, lr}
 22557              		.cfi_def_cfa_offset 8
 22558              		.cfi_offset 7, -8
 22559              		.cfi_offset 14, -4
 22560 0002 82B0     		sub	sp, sp, #8
 22561              		.cfi_def_cfa_offset 16
 22562 0004 00AF     		add	r7, sp, #0
 22563              		.cfi_def_cfa_register 7
3136:..\src/command_processing.c ****     uint8 i, j;
3137:..\src/command_processing.c **** 
3138:..\src/command_processing.c ****     //initialize memory settings
3139:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22564              		.loc 1 3139 0
 22565 0006 0023     		movs	r3, #0
 22566 0008 FB71     		strb	r3, [r7, #7]
 22567 000a 07E0     		b	.L877
 22568              	.L878:
3140:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22569              		.loc 1 3140 0 discriminator 3
 22570 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22571 000e AD4A     		ldr	r2, .L903
 22572 0010 1344     		add	r3, r3, r2
 22573 0012 0022     		movs	r2, #0
 22574 0014 5A70     		strb	r2, [r3, #1]
3139:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22575              		.loc 1 3139 0 discriminator 3
 22576 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22577 0018 0133     		adds	r3, r3, #1
 22578 001a FB71     		strb	r3, [r7, #7]
 22579              	.L877:
3139:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22580              		.loc 1 3139 0 is_stmt 0 discriminator 1
 22581 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22582 001e 0E2B     		cmp	r3, #14
 22583 0020 F4D9     		bls	.L878
3141:..\src/command_processing.c ****     }
3142:..\src/command_processing.c ****         
3143:..\src/command_processing.c ****     // DEV STRUCT
3144:..\src/command_processing.c ****     g_mem.dev.id                = 1;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 497


 22584              		.loc 1 3144 0 is_stmt 1
 22585 0022 A84B     		ldr	r3, .L903
 22586 0024 0122     		movs	r2, #1
 22587 0026 83F8A020 		strb	r2, [r3, #160]
3145:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22588              		.loc 1 3145 0
 22589 002a A64B     		ldr	r3, .L903
 22590 002c 0022     		movs	r2, #0
 22591 002e 83F8A720 		strb	r2, [r3, #167]
3146:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22592              		.loc 1 3146 0
 22593 0032 A44B     		ldr	r3, .L903
 22594 0034 0122     		movs	r2, #1
 22595 0036 83F8AC20 		strb	r2, [r3, #172]
3147:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22596              		.loc 1 3147 0
 22597 003a A24B     		ldr	r3, .L903
 22598 003c 0022     		movs	r2, #0
 22599 003e 83F8A820 		strb	r2, [r3, #168]
3148:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22600              		.loc 1 3148 0
 22601 0042 FFF7FEFF 		bl	reset_counters
3149:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22602              		.loc 1 3149 0
 22603 0046 0023     		movs	r3, #0
 22604 0048 FB71     		strb	r3, [r7, #7]
 22605 004a 08E0     		b	.L879
 22606              	.L880:
3150:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22607              		.loc 1 3150 0 discriminator 3
 22608 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22609 004e 9D4A     		ldr	r2, .L903
 22610 0050 1344     		add	r3, r3, r2
 22611 0052 0022     		movs	r2, #0
 22612 0054 83F88020 		strb	r2, [r3, #128]
3149:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22613              		.loc 1 3149 0 discriminator 3
 22614 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22615 005a 0133     		adds	r3, r3, #1
 22616 005c FB71     		strb	r3, [r7, #7]
 22617              	.L879:
3149:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22618              		.loc 1 3149 0 is_stmt 0 discriminator 1
 22619 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22620 0060 1F2B     		cmp	r3, #31
 22621 0062 F3D9     		bls	.L880
3151:..\src/command_processing.c ****     }
3152:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22622              		.loc 1 3152 0 is_stmt 1
 22623 0064 974B     		ldr	r3, .L903
 22624 0066 0022     		movs	r2, #0
 22625 0068 83F8A920 		strb	r2, [r3, #169]
3153:..\src/command_processing.c **** 
3154:..\src/command_processing.c ****     // MOTOR STRUCT
3155:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22626              		.loc 1 3155 0
 22627 006c 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 498


 22628 006e FB71     		strb	r3, [r7, #7]
 22629 0070 08E1     		b	.L881
 22630              	.L884:
3156:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22631              		.loc 1 3156 0
 22632 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22633 0074 934A     		ldr	r2, .L903
 22634 0076 7421     		movs	r1, #116
 22635 0078 01FB03F3 		mul	r3, r1, r3
 22636 007c 1344     		add	r3, r3, r2
 22637 007e B033     		adds	r3, r3, #176
 22638 0080 40F23942 		movw	r2, #1081
 22639 0084 1A60     		str	r2, [r3]
3157:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22640              		.loc 1 3157 0
 22641 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22642 0088 8E4A     		ldr	r2, .L903
 22643 008a 7421     		movs	r1, #116
 22644 008c 01FB03F3 		mul	r3, r1, r3
 22645 0090 1344     		add	r3, r3, r2
 22646 0092 B433     		adds	r3, r3, #180
 22647 0094 0022     		movs	r2, #0
 22648 0096 1A60     		str	r2, [r3]
3158:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22649              		.loc 1 3158 0
 22650 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22651 009a 8A4A     		ldr	r2, .L903
 22652 009c 7421     		movs	r1, #116
 22653 009e 01FB03F3 		mul	r3, r1, r3
 22654 00a2 1344     		add	r3, r3, r2
 22655 00a4 B833     		adds	r3, r3, #184
 22656 00a6 4FF4E572 		mov	r2, #458
 22657 00aa 1A60     		str	r2, [r3]
3159:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22658              		.loc 1 3159 0
 22659 00ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22660 00ae 854A     		ldr	r2, .L903
 22661 00b0 7421     		movs	r1, #116
 22662 00b2 01FB03F3 		mul	r3, r1, r3
 22663 00b6 1344     		add	r3, r3, r2
 22664 00b8 BC33     		adds	r3, r3, #188
 22665 00ba 4FF48032 		mov	r2, #65536
 22666 00be 1A60     		str	r2, [r3]
3160:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22667              		.loc 1 3160 0
 22668 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22669 00c2 804A     		ldr	r2, .L903
 22670 00c4 7421     		movs	r1, #116
 22671 00c6 01FB03F3 		mul	r3, r1, r3
 22672 00ca 1344     		add	r3, r3, r2
 22673 00cc C033     		adds	r3, r3, #192
 22674 00ce 4122     		movs	r2, #65
 22675 00d0 1A60     		str	r2, [r3]
3161:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22676              		.loc 1 3161 0
 22677 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22678 00d4 7B4A     		ldr	r2, .L903
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 499


 22679 00d6 7421     		movs	r1, #116
 22680 00d8 01FB03F3 		mul	r3, r1, r3
 22681 00dc 1344     		add	r3, r3, r2
 22682 00de C433     		adds	r3, r3, #196
 22683 00e0 0022     		movs	r2, #0
 22684 00e2 1A60     		str	r2, [r3]
3162:..\src/command_processing.c **** 
3163:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22685              		.loc 1 3163 0
 22686 00e4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22687 00e6 774A     		ldr	r2, .L903
 22688 00e8 7421     		movs	r1, #116
 22689 00ea 01FB03F3 		mul	r3, r1, r3
 22690 00ee 1344     		add	r3, r3, r2
 22691 00f0 C833     		adds	r3, r3, #200
 22692 00f2 41F69912 		movw	r2, #6553
 22693 00f6 1A60     		str	r2, [r3]
3164:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22694              		.loc 1 3164 0
 22695 00f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22696 00fa 724A     		ldr	r2, .L903
 22697 00fc 7421     		movs	r1, #116
 22698 00fe 01FB03F3 		mul	r3, r1, r3
 22699 0102 1344     		add	r3, r3, r2
 22700 0104 CC33     		adds	r3, r3, #204
 22701 0106 0022     		movs	r2, #0
 22702 0108 1A60     		str	r2, [r3]
3165:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22703              		.loc 1 3165 0
 22704 010a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22705 010c 6D4A     		ldr	r2, .L903
 22706 010e 7421     		movs	r1, #116
 22707 0110 01FB03F3 		mul	r3, r1, r3
 22708 0114 1344     		add	r3, r3, r2
 22709 0116 D033     		adds	r3, r3, #208
 22710 0118 0022     		movs	r2, #0
 22711 011a 1A60     		str	r2, [r3]
3166:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22712              		.loc 1 3166 0
 22713 011c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22714 011e 694A     		ldr	r2, .L903
 22715 0120 7421     		movs	r1, #116
 22716 0122 01FB03F3 		mul	r3, r1, r3
 22717 0126 1344     		add	r3, r3, r2
 22718 0128 D433     		adds	r3, r3, #212
 22719 012a 44F6CC42 		movw	r2, #19660
 22720 012e 1A60     		str	r2, [r3]
3167:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22721              		.loc 1 3167 0
 22722 0130 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22723 0132 644A     		ldr	r2, .L903
 22724 0134 7421     		movs	r1, #116
 22725 0136 01FB03F3 		mul	r3, r1, r3
 22726 013a 1344     		add	r3, r3, r2
 22727 013c D833     		adds	r3, r3, #216
 22728 013e 0D22     		movs	r2, #13
 22729 0140 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 500


3168:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22730              		.loc 1 3168 0
 22731 0142 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22732 0144 5F4A     		ldr	r2, .L903
 22733 0146 7421     		movs	r1, #116
 22734 0148 01FB03F3 		mul	r3, r1, r3
 22735 014c 1344     		add	r3, r3, r2
 22736 014e DC33     		adds	r3, r3, #220
 22737 0150 0022     		movs	r2, #0
 22738 0152 1A60     		str	r2, [r3]
3169:..\src/command_processing.c **** 
3170:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22739              		.loc 1 3170 0
 22740 0154 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22741 0156 5B4A     		ldr	r2, .L903
 22742 0158 7421     		movs	r1, #116
 22743 015a 01FB03F3 		mul	r3, r1, r3
 22744 015e 1344     		add	r3, r3, r2
 22745 0160 E033     		adds	r3, r3, #224
 22746 0162 0122     		movs	r2, #1
 22747 0164 1A70     		strb	r2, [r3]
3171:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22748              		.loc 1 3171 0
 22749 0166 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22750 0168 564A     		ldr	r2, .L903
 22751 016a 7421     		movs	r1, #116
 22752 016c 01FB03F3 		mul	r3, r1, r3
 22753 0170 1344     		add	r3, r3, r2
 22754 0172 E133     		adds	r3, r3, #225
 22755 0174 0022     		movs	r2, #0
 22756 0176 1A70     		strb	r2, [r3]
3172:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22757              		.loc 1 3172 0
 22758 0178 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22759 017a 524A     		ldr	r2, .L903
 22760 017c 7421     		movs	r1, #116
 22761 017e 01FB03F3 		mul	r3, r1, r3
 22762 0182 1344     		add	r3, r3, r2
 22763 0184 E233     		adds	r3, r3, #226
 22764 0186 0022     		movs	r2, #0
 22765 0188 1A70     		strb	r2, [r3]
3173:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22766              		.loc 1 3173 0
 22767 018a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22768 018c 4D4A     		ldr	r2, .L903
 22769 018e 7421     		movs	r1, #116
 22770 0190 01FB03F3 		mul	r3, r1, r3
 22771 0194 1344     		add	r3, r3, r2
 22772 0196 03F58773 		add	r3, r3, #270
 22773 019a 0022     		movs	r2, #0
 22774 019c 1A70     		strb	r2, [r3]
3174:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22775              		.loc 1 3174 0
 22776 019e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22777 01a0 484A     		ldr	r2, .L903
 22778 01a2 7421     		movs	r1, #116
 22779 01a4 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 501


 22780 01a8 1344     		add	r3, r3, r2
 22781 01aa 03F20F13 		addw	r3, r3, #271
 22782 01ae 0022     		movs	r2, #0
 22783 01b0 1A70     		strb	r2, [r3]
3175:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22784              		.loc 1 3175 0
 22785 01b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22786 01b4 434A     		ldr	r2, .L903
 22787 01b6 7421     		movs	r1, #116
 22788 01b8 01FB03F3 		mul	r3, r1, r3
 22789 01bc 1344     		add	r3, r3, r2
 22790 01be F033     		adds	r3, r3, #240
 22791 01c0 0022     		movs	r2, #0
 22792 01c2 1A60     		str	r2, [r3]
3176:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22793              		.loc 1 3176 0
 22794 01c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22795 01c6 3F4A     		ldr	r2, .L903
 22796 01c8 7421     		movs	r1, #116
 22797 01ca 01FB03F3 		mul	r3, r1, r3
 22798 01ce 1344     		add	r3, r3, r2
 22799 01d0 EC33     		adds	r3, r3, #236
 22800 01d2 0022     		movs	r2, #0
 22801 01d4 1A60     		str	r2, [r3]
3177:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22802              		.loc 1 3177 0
 22803 01d6 0023     		movs	r3, #0
 22804 01d8 BB71     		strb	r3, [r7, #6]
 22805 01da 11E0     		b	.L882
 22806              	.L883:
3178:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22807              		.loc 1 3178 0 discriminator 3
 22808 01dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22809 01de B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22810 01e0 3848     		ldr	r0, .L903
 22811 01e2 1346     		mov	r3, r2
 22812 01e4 DB00     		lsls	r3, r3, #3
 22813 01e6 9B1A     		subs	r3, r3, r2
 22814 01e8 9B00     		lsls	r3, r3, #2
 22815 01ea 1344     		add	r3, r3, r2
 22816 01ec 0B44     		add	r3, r3, r1
 22817 01ee 3C33     		adds	r3, r3, #60
 22818 01f0 9B00     		lsls	r3, r3, #2
 22819 01f2 0344     		add	r3, r3, r0
 22820 01f4 4FF00002 		mov	r2, #0
 22821 01f8 5A60     		str	r2, [r3, #4]	@ float
3177:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22822              		.loc 1 3177 0 discriminator 3
 22823 01fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22824 01fc 0133     		adds	r3, r3, #1
 22825 01fe BB71     		strb	r3, [r7, #6]
 22826              	.L882:
3177:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22827              		.loc 1 3177 0 is_stmt 0 discriminator 1
 22828 0200 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22829 0202 052B     		cmp	r3, #5
 22830 0204 EAD9     		bls	.L883
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 502


3179:..\src/command_processing.c ****         }
3180:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22831              		.loc 1 3180 0 is_stmt 1 discriminator 2
 22832 0206 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22833 0208 2E4A     		ldr	r2, .L903
 22834 020a 7421     		movs	r1, #116
 22835 020c 01FB03F3 		mul	r3, r1, r3
 22836 0210 1344     		add	r3, r3, r2
 22837 0212 03F58673 		add	r3, r3, #268
 22838 0216 40F2DC52 		movw	r2, #1500
 22839 021a 1A80     		strh	r2, [r3]	@ movhi
3181:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22840              		.loc 1 3181 0 discriminator 2
 22841 021c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22842 021e 294A     		ldr	r2, .L903
 22843 0220 7421     		movs	r1, #116
 22844 0222 01FB03F3 		mul	r3, r1, r3
 22845 0226 1344     		add	r3, r3, r2
 22846 0228 03F58873 		add	r3, r3, #272
 22847 022c FA79     		ldrb	r2, [r7, #7]
 22848 022e 1A70     		strb	r2, [r3]
3182:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22849              		.loc 1 3182 0 discriminator 2
 22850 0230 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22851 0232 244A     		ldr	r2, .L903
 22852 0234 7421     		movs	r1, #116
 22853 0236 01FB03F3 		mul	r3, r1, r3
 22854 023a 1344     		add	r3, r3, r2
 22855 023c E333     		adds	r3, r3, #227
 22856 023e 0122     		movs	r2, #1
 22857 0240 1A70     		strb	r2, [r3]
3183:..\src/command_processing.c ****         
3184:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22858              		.loc 1 3184 0 discriminator 2
 22859 0242 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22860 0244 1F4A     		ldr	r2, .L903
 22861 0246 7421     		movs	r1, #116
 22862 0248 01FB03F3 		mul	r3, r1, r3
 22863 024c 1344     		add	r3, r3, r2
 22864 024e 03F21113 		addw	r3, r3, #273
 22865 0252 0122     		movs	r2, #1
 22866 0254 1A70     		strb	r2, [r3]
3185:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22867              		.loc 1 3185 0 discriminator 2
 22868 0256 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22869 0258 1A4A     		ldr	r2, .L903
 22870 025a 7421     		movs	r1, #116
 22871 025c 01FB03F3 		mul	r3, r1, r3
 22872 0260 1344     		add	r3, r3, r2
 22873 0262 03F58973 		add	r3, r3, #274
 22874 0266 0022     		movs	r2, #0
 22875 0268 1A70     		strb	r2, [r3]
3186:..\src/command_processing.c ****         g_mem.motor[i].motor_voltage = 0;
 22876              		.loc 1 3186 0 discriminator 2
 22877 026a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22878 026c 154A     		ldr	r2, .L903
 22879 026e 7421     		movs	r1, #116
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 503


 22880 0270 01FB03F3 		mul	r3, r1, r3
 22881 0274 1344     		add	r3, r3, r2
 22882 0276 03F58A73 		add	r3, r3, #276
 22883 027a 0022     		movs	r2, #0
 22884 027c 1A80     		strh	r2, [r3]	@ movhi
3155:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22885              		.loc 1 3155 0 discriminator 2
 22886 027e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22887 0280 0133     		adds	r3, r3, #1
 22888 0282 FB71     		strb	r3, [r7, #7]
 22889              	.L881:
3155:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22890              		.loc 1 3155 0 is_stmt 0 discriminator 1
 22891 0284 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22892 0286 012B     		cmp	r3, #1
 22893 0288 7FF6F3AE 		bls	.L884
3187:..\src/command_processing.c ****     }
3188:..\src/command_processing.c ****     
3189:..\src/command_processing.c ****     // ENC STRUCT
3190:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22894              		.loc 1 3190 0 is_stmt 1
 22895 028c 0023     		movs	r3, #0
 22896 028e FB71     		strb	r3, [r7, #7]
 22897 0290 97E0     		b	.L885
 22898              	.L892:
3191:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22899              		.loc 1 3191 0
 22900 0292 0023     		movs	r3, #0
 22901 0294 BB71     		strb	r3, [r7, #6]
 22902 0296 0FE0     		b	.L886
 22903              	.L887:
3192:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22904              		.loc 1 3192 0 discriminator 3
 22905 0298 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22906 029a B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22907 029c 0948     		ldr	r0, .L903
 22908 029e 1346     		mov	r3, r2
 22909 02a0 5B00     		lsls	r3, r3, #1
 22910 02a2 1344     		add	r3, r3, r2
 22911 02a4 1B01     		lsls	r3, r3, #4
 22912 02a6 0344     		add	r3, r3, r0
 22913 02a8 0B44     		add	r3, r3, r1
 22914 02aa 03F5CC73 		add	r3, r3, #408
 22915 02ae 0022     		movs	r2, #0
 22916 02b0 1A70     		strb	r2, [r3]
3191:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22917              		.loc 1 3191 0 discriminator 3
 22918 02b2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22919 02b4 0133     		adds	r3, r3, #1
 22920 02b6 BB71     		strb	r3, [r7, #6]
 22921              	.L886:
3191:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22922              		.loc 1 3191 0 is_stmt 0 discriminator 1
 22923 02b8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22924 02ba 042B     		cmp	r3, #4
 22925 02bc ECD9     		bls	.L887
3193:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 504


3194:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22926              		.loc 1 3194 0 is_stmt 1
 22927 02be 0023     		movs	r3, #0
 22928 02c0 BB71     		strb	r3, [r7, #6]
 22929 02c2 2BE0     		b	.L888
 22930              	.L904:
 22931              		.align	2
 22932              	.L903:
 22933 02c4 00000000 		.word	g_mem
 22934              	.L889:
3195:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22935              		.loc 1 3195 0 discriminator 3
 22936 02c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22937 02ca B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22938 02cc C848     		ldr	r0, .L905
 22939 02ce 1346     		mov	r3, r2
 22940 02d0 5B00     		lsls	r3, r3, #1
 22941 02d2 1344     		add	r3, r3, r2
 22942 02d4 1B01     		lsls	r3, r3, #4
 22943 02d6 0344     		add	r3, r3, r0
 22944 02d8 0B44     		add	r3, r3, r1
 22945 02da 03F29D13 		addw	r3, r3, #413
 22946 02de 0322     		movs	r2, #3
 22947 02e0 1A70     		strb	r2, [r3]
3196:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22948              		.loc 1 3196 0 discriminator 3
 22949 02e2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22950 02e4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22951 02e6 C248     		ldr	r0, .L905
 22952 02e8 1346     		mov	r3, r2
 22953 02ea 5B00     		lsls	r3, r3, #1
 22954 02ec 1344     		add	r3, r3, r2
 22955 02ee 9B00     		lsls	r3, r3, #2
 22956 02f0 0B44     		add	r3, r3, r1
 22957 02f2 6A33     		adds	r3, r3, #106
 22958 02f4 9B00     		lsls	r3, r3, #2
 22959 02f6 0344     		add	r3, r3, r0
 22960 02f8 4FF07E52 		mov	r2, #1065353216
 22961 02fc 5A60     		str	r2, [r3, #4]	@ float
3197:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22962              		.loc 1 3197 0 discriminator 3
 22963 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22964 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22965 0302 BB48     		ldr	r0, .L905
 22966 0304 1346     		mov	r3, r2
 22967 0306 5B00     		lsls	r3, r3, #1
 22968 0308 1344     		add	r3, r3, r2
 22969 030a 9B00     		lsls	r3, r3, #2
 22970 030c 0B44     		add	r3, r3, r1
 22971 030e 6833     		adds	r3, r3, #104
 22972 0310 0022     		movs	r2, #0
 22973 0312 40F82320 		str	r2, [r0, r3, lsl #2]
3194:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22974              		.loc 1 3194 0 discriminator 3
 22975 0316 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22976 0318 0133     		adds	r3, r3, #1
 22977 031a BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 505


 22978              	.L888:
3194:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22979              		.loc 1 3194 0 is_stmt 0 discriminator 1
 22980 031c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22981 031e 022B     		cmp	r3, #2
 22982 0320 D2D9     		bls	.L889
3198:..\src/command_processing.c ****         }
3199:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22983              		.loc 1 3199 0 is_stmt 1
 22984 0322 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22985 0324 B249     		ldr	r1, .L905
 22986 0326 1346     		mov	r3, r2
 22987 0328 5B00     		lsls	r3, r3, #1
 22988 032a 1344     		add	r3, r3, r2
 22989 032c 1B01     		lsls	r3, r3, #4
 22990 032e 0B44     		add	r3, r3, r1
 22991 0330 03F5DC73 		add	r3, r3, #440
 22992 0334 0022     		movs	r2, #0
 22993 0336 1A70     		strb	r2, [r3]
3200:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22994              		.loc 1 3200 0
 22995 0338 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22996 033a AD49     		ldr	r1, .L905
 22997 033c 1346     		mov	r3, r2
 22998 033e 5B00     		lsls	r3, r3, #1
 22999 0340 1344     		add	r3, r3, r2
 23000 0342 1B01     		lsls	r3, r3, #4
 23001 0344 0B44     		add	r3, r3, r1
 23002 0346 03F5DE73 		add	r3, r3, #444
 23003 034a 1622     		movs	r2, #22
 23004 034c 1A70     		strb	r2, [r3]
3201:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23005              		.loc 1 3201 0
 23006 034e 0023     		movs	r3, #0
 23007 0350 BB71     		strb	r3, [r7, #6]
 23008 0352 0FE0     		b	.L890
 23009              	.L891:
3202:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 23010              		.loc 1 3202 0 discriminator 3
 23011 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23012 0356 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23013 0358 A548     		ldr	r0, .L905
 23014 035a 1346     		mov	r3, r2
 23015 035c 5B00     		lsls	r3, r3, #1
 23016 035e 1344     		add	r3, r3, r2
 23017 0360 1B01     		lsls	r3, r3, #4
 23018 0362 0344     		add	r3, r3, r0
 23019 0364 0B44     		add	r3, r3, r1
 23020 0366 03F2B913 		addw	r3, r3, #441
 23021 036a BA79     		ldrb	r2, [r7, #6]
 23022 036c 1A70     		strb	r2, [r3]
3201:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23023              		.loc 1 3201 0 discriminator 3
 23024 036e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23025 0370 0133     		adds	r3, r3, #1
 23026 0372 BB71     		strb	r3, [r7, #6]
 23027              	.L890:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 506


3201:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23028              		.loc 1 3201 0 is_stmt 0 discriminator 1
 23029 0374 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23030 0376 022B     		cmp	r3, #2
 23031 0378 ECD9     		bls	.L891
3203:..\src/command_processing.c ****         }
3204:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 23032              		.loc 1 3204 0 is_stmt 1 discriminator 2
 23033 037a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23034 037c 9C49     		ldr	r1, .L905
 23035 037e 1346     		mov	r3, r2
 23036 0380 5B00     		lsls	r3, r3, #1
 23037 0382 1344     		add	r3, r3, r2
 23038 0384 1B01     		lsls	r3, r3, #4
 23039 0386 0B44     		add	r3, r3, r1
 23040 0388 03F2BD13 		addw	r3, r3, #445
 23041 038c 0F22     		movs	r2, #15
 23042 038e 1A70     		strb	r2, [r3]
3205:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 23043              		.loc 1 3205 0 discriminator 2
 23044 0390 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23045 0392 9749     		ldr	r1, .L905
 23046 0394 1346     		mov	r3, r2
 23047 0396 5B00     		lsls	r3, r3, #1
 23048 0398 1344     		add	r3, r3, r2
 23049 039a 1B01     		lsls	r3, r3, #4
 23050 039c 0B44     		add	r3, r3, r1
 23051 039e 03F5DF73 		add	r3, r3, #446
 23052 03a2 0E22     		movs	r2, #14
 23053 03a4 1A70     		strb	r2, [r3]
3206:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 23054              		.loc 1 3206 0 discriminator 2
 23055 03a6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23056 03a8 9149     		ldr	r1, .L905
 23057 03aa 1346     		mov	r3, r2
 23058 03ac 5B00     		lsls	r3, r3, #1
 23059 03ae 1344     		add	r3, r3, r2
 23060 03b0 1B01     		lsls	r3, r3, #4
 23061 03b2 0B44     		add	r3, r3, r1
 23062 03b4 03F2BF13 		addw	r3, r3, #447
 23063 03b8 0122     		movs	r2, #1
 23064 03ba 1A70     		strb	r2, [r3]
3190:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23065              		.loc 1 3190 0 discriminator 2
 23066 03bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23067 03be 0133     		adds	r3, r3, #1
 23068 03c0 FB71     		strb	r3, [r7, #7]
 23069              	.L885:
3190:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23070              		.loc 1 3190 0 is_stmt 0 discriminator 1
 23071 03c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23072 03c4 012B     		cmp	r3, #1
 23073 03c6 7FF664AF 		bls	.L892
3207:..\src/command_processing.c ****     }
3208:..\src/command_processing.c ****     
3209:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 23074              		.loc 1 3209 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 507


 23075 03ca 0023     		movs	r3, #0
 23076 03cc FB71     		strb	r3, [r7, #7]
 23077 03ce 2BE0     		b	.L893
 23078              	.L894:
3210:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23079              		.loc 1 3210 0 discriminator 3
 23080 03d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23081 03d2 874A     		ldr	r2, .L905
 23082 03d4 7421     		movs	r1, #116
 23083 03d6 01FB03F3 		mul	r3, r1, r3
 23084 03da 1344     		add	r3, r3, r2
 23085 03dc E433     		adds	r3, r3, #228
 23086 03de 0022     		movs	r2, #0
 23087 03e0 1A60     		str	r2, [r3]
3211:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 23088              		.loc 1 3211 0 discriminator 3
 23089 03e2 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 23090 03e4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23091 03e6 824A     		ldr	r2, .L905
 23092 03e8 7420     		movs	r0, #116
 23093 03ea 00FB03F3 		mul	r3, r0, r3
 23094 03ee 1344     		add	r3, r3, r2
 23095 03f0 03F58873 		add	r3, r3, #272
 23096 03f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23097 03f6 1846     		mov	r0, r3
 23098 03f8 7D4A     		ldr	r2, .L905
 23099 03fa 0346     		mov	r3, r0
 23100 03fc 5B00     		lsls	r3, r3, #1
 23101 03fe 0344     		add	r3, r3, r0
 23102 0400 1B01     		lsls	r3, r3, #4
 23103 0402 1344     		add	r3, r3, r2
 23104 0404 03F29D13 		addw	r3, r3, #413
 23105 0408 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23106 040a 1A46     		mov	r2, r3
 23107 040c 44F63823 		movw	r3, #19000
 23108 0410 03FA02F2 		lsl	r2, r3, r2
 23109 0414 7648     		ldr	r0, .L905
 23110 0416 7423     		movs	r3, #116
 23111 0418 03FB01F3 		mul	r3, r3, r1
 23112 041c 0344     		add	r3, r3, r0
 23113 041e E833     		adds	r3, r3, #232
 23114 0420 1A60     		str	r2, [r3]
3209:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23115              		.loc 1 3209 0 discriminator 3
 23116 0422 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23117 0424 0133     		adds	r3, r3, #1
 23118 0426 FB71     		strb	r3, [r7, #7]
 23119              	.L893:
3209:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23120              		.loc 1 3209 0 is_stmt 0 discriminator 1
 23121 0428 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23122 042a 012B     		cmp	r3, #1
 23123 042c D0D9     		bls	.L894
3212:..\src/command_processing.c ****     }
3213:..\src/command_processing.c ****     
3214:..\src/command_processing.c ****     // EMG STRUCT     
3215:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 508


 23124              		.loc 1 3215 0 is_stmt 1
 23125 042e 704B     		ldr	r3, .L905
 23126 0430 C822     		movs	r2, #200
 23127 0432 A3F8F821 		strh	r2, [r3, #504]	@ movhi
3216:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23128              		.loc 1 3216 0
 23129 0436 6E4B     		ldr	r3, .L905
 23130 0438 C822     		movs	r2, #200
 23131 043a A3F8FA21 		strh	r2, [r3, #506]	@ movhi
3217:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23132              		.loc 1 3217 0
 23133 043e 6C4B     		ldr	r3, .L905
 23134 0440 4FF48062 		mov	r2, #1024
 23135 0444 C3F8FC21 		str	r2, [r3, #508]
3218:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 23136              		.loc 1 3218 0
 23137 0448 694B     		ldr	r3, .L905
 23138 044a 4FF48062 		mov	r2, #1024
 23139 044e C3F80022 		str	r2, [r3, #512]
3219:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 23140              		.loc 1 3219 0
 23141 0452 674B     		ldr	r3, .L905
 23142 0454 6422     		movs	r2, #100
 23143 0456 83F80422 		strb	r2, [r3, #516]
3220:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 23144              		.loc 1 3220 0
 23145 045a 654B     		ldr	r3, .L905
 23146 045c 6422     		movs	r2, #100
 23147 045e 83F80522 		strb	r2, [r3, #517]
3221:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23148              		.loc 1 3221 0
 23149 0462 634B     		ldr	r3, .L905
 23150 0464 0022     		movs	r2, #0
 23151 0466 83F80622 		strb	r2, [r3, #518]
3222:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23152              		.loc 1 3222 0
 23153 046a 614B     		ldr	r3, .L905
 23154 046c 0022     		movs	r2, #0
 23155 046e 83F80722 		strb	r2, [r3, #519]
3223:..\src/command_processing.c **** 
3224:..\src/command_processing.c ****     // IMU STRUCT
3225:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23156              		.loc 1 3225 0
 23157 0472 5F4B     		ldr	r3, .L905
 23158 0474 0022     		movs	r2, #0
 23159 0476 83F80822 		strb	r2, [r3, #520]
3226:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23160              		.loc 1 3226 0
 23161 047a 5D4B     		ldr	r3, .L905
 23162 047c 0022     		movs	r2, #0
 23163 047e 83F80922 		strb	r2, [r3, #521]
3227:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 23164              		.loc 1 3227 0
 23165 0482 0023     		movs	r3, #0
 23166 0484 FB71     		strb	r3, [r7, #7]
 23167 0486 34E0     		b	.L895
 23168              	.L896:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 509


3228:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23169              		.loc 1 3228 0 discriminator 3
 23170 0488 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23171 048a 5949     		ldr	r1, .L905
 23172 048c 1346     		mov	r3, r2
 23173 048e 9B00     		lsls	r3, r3, #2
 23174 0490 1344     		add	r3, r3, r2
 23175 0492 0B44     		add	r3, r3, r1
 23176 0494 03F20A23 		addw	r3, r3, #522
 23177 0498 0122     		movs	r2, #1
 23178 049a 1A70     		strb	r2, [r3]
3229:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23179              		.loc 1 3229 0 discriminator 3
 23180 049c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23181 049e 5449     		ldr	r1, .L905
 23182 04a0 1346     		mov	r3, r2
 23183 04a2 9B00     		lsls	r3, r3, #2
 23184 04a4 1344     		add	r3, r3, r2
 23185 04a6 0B44     		add	r3, r3, r1
 23186 04a8 03F20B23 		addw	r3, r3, #523
 23187 04ac 0122     		movs	r2, #1
 23188 04ae 1A70     		strb	r2, [r3]
3230:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 23189              		.loc 1 3230 0 discriminator 3
 23190 04b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23191 04b2 4F49     		ldr	r1, .L905
 23192 04b4 1346     		mov	r3, r2
 23193 04b6 9B00     		lsls	r3, r3, #2
 23194 04b8 1344     		add	r3, r3, r2
 23195 04ba 0B44     		add	r3, r3, r1
 23196 04bc 03F50373 		add	r3, r3, #524
 23197 04c0 0022     		movs	r2, #0
 23198 04c2 1A70     		strb	r2, [r3]
3231:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23199              		.loc 1 3231 0 discriminator 3
 23200 04c4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23201 04c6 4A49     		ldr	r1, .L905
 23202 04c8 1346     		mov	r3, r2
 23203 04ca 9B00     		lsls	r3, r3, #2
 23204 04cc 1344     		add	r3, r3, r2
 23205 04ce 0B44     		add	r3, r3, r1
 23206 04d0 03F20D23 		addw	r3, r3, #525
 23207 04d4 0022     		movs	r2, #0
 23208 04d6 1A70     		strb	r2, [r3]
3232:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23209              		.loc 1 3232 0 discriminator 3
 23210 04d8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23211 04da 4549     		ldr	r1, .L905
 23212 04dc 1346     		mov	r3, r2
 23213 04de 9B00     		lsls	r3, r3, #2
 23214 04e0 1344     		add	r3, r3, r2
 23215 04e2 0B44     		add	r3, r3, r1
 23216 04e4 03F20E23 		addw	r3, r3, #526
 23217 04e8 0022     		movs	r2, #0
 23218 04ea 1A70     		strb	r2, [r3]
3227:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23219              		.loc 1 3227 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 510


 23220 04ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23221 04ee 0133     		adds	r3, r3, #1
 23222 04f0 FB71     		strb	r3, [r7, #7]
 23223              	.L895:
3227:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23224              		.loc 1 3227 0 is_stmt 0 discriminator 1
 23225 04f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23226 04f4 042B     		cmp	r3, #4
 23227 04f6 C7D9     		bls	.L896
3233:..\src/command_processing.c ****     }
3234:..\src/command_processing.c ****      
3235:..\src/command_processing.c ****     // EXP STRUCT
3236:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23228              		.loc 1 3236 0 is_stmt 1
 23229 04f8 3D4B     		ldr	r3, .L905
 23230 04fa 0022     		movs	r2, #0
 23231 04fc 83F82E22 		strb	r2, [r3, #558]
3237:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23232              		.loc 1 3237 0
 23233 0500 3B4B     		ldr	r3, .L905
 23234 0502 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23235 0506 5B01     		lsls	r3, r3, #5
 23236 0508 03F51273 		add	r3, r3, #584
 23237 050c 384A     		ldr	r2, .L905
 23238 050e 1344     		add	r3, r3, r2
 23239 0510 384A     		ldr	r2, .L905+4
 23240 0512 1068     		ldr	r0, [r2]	@ unaligned
 23241 0514 1860     		str	r0, [r3]	@ unaligned
 23242 0516 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23243 0518 9279     		ldrb	r2, [r2, #6]
 23244 051a 9980     		strh	r1, [r3, #4]	@ unaligned
 23245 051c 9A71     		strb	r2, [r3, #6]
3238:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23246              		.loc 1 3238 0
 23247 051e 344B     		ldr	r3, .L905
 23248 0520 93F82E32 		ldrb	r3, [r3, #558]	@ zero_extendqisi2
 23249 0524 012B     		cmp	r3, #1
 23250 0526 13D1     		bne	.L897
3239:..\src/command_processing.c ****         // Set date of maintenance from RTC
3240:..\src/command_processing.c ****         store_RTC_current_time();
 23251              		.loc 1 3240 0
 23252 0528 FFF7FEFF 		bl	store_RTC_current_time
3241:..\src/command_processing.c ****         
3242:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23253              		.loc 1 3242 0
 23254 052c 304B     		ldr	r3, .L905
 23255 052e 93F82822 		ldrb	r2, [r3, #552]	@ zero_extendqisi2
 23256 0532 2F4B     		ldr	r3, .L905
 23257 0534 83F8A420 		strb	r2, [r3, #164]
3243:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23258              		.loc 1 3243 0
 23259 0538 2D4B     		ldr	r3, .L905
 23260 053a 93F82922 		ldrb	r2, [r3, #553]	@ zero_extendqisi2
 23261 053e 2C4B     		ldr	r3, .L905
 23262 0540 83F8A520 		strb	r2, [r3, #165]
3244:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23263              		.loc 1 3244 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 511


 23264 0544 2A4B     		ldr	r3, .L905
 23265 0546 93F82A22 		ldrb	r2, [r3, #554]	@ zero_extendqisi2
 23266 054a 294B     		ldr	r3, .L905
 23267 054c 83F8A620 		strb	r2, [r3, #166]
 23268              	.L897:
3245:..\src/command_processing.c ****     }
3246:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23269              		.loc 1 3246 0
 23270 0550 274B     		ldr	r3, .L905
 23271 0552 0022     		movs	r2, #0
 23272 0554 83F82F22 		strb	r2, [r3, #559]
3247:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23273              		.loc 1 3247 0
 23274 0558 0023     		movs	r3, #0
 23275 055a FB71     		strb	r3, [r7, #7]
 23276 055c 08E0     		b	.L898
 23277              	.L899:
3248:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23278              		.loc 1 3248 0 discriminator 3
 23279 055e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23280 0560 234A     		ldr	r2, .L905
 23281 0562 1344     		add	r3, r3, r2
 23282 0564 0022     		movs	r2, #0
 23283 0566 83F83022 		strb	r2, [r3, #560]
3247:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23284              		.loc 1 3247 0 discriminator 3
 23285 056a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23286 056c 0133     		adds	r3, r3, #1
 23287 056e FB71     		strb	r3, [r7, #7]
 23288              	.L898:
3247:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23289              		.loc 1 3247 0 is_stmt 0 discriminator 1
 23290 0570 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23291 0572 0B2B     		cmp	r3, #11
 23292 0574 F3D9     		bls	.L899
3249:..\src/command_processing.c ****     }
3250:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3251:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23293              		.loc 1 3251 0 is_stmt 1
 23294 0576 1E4B     		ldr	r3, .L905
 23295 0578 0122     		movs	r2, #1
 23296 057a 83F83222 		strb	r2, [r3, #562]
3252:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23297              		.loc 1 3252 0
 23298 057e 1C4B     		ldr	r3, .L905
 23299 0580 0122     		movs	r2, #1
 23300 0582 83F83322 		strb	r2, [r3, #563]
3253:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23301              		.loc 1 3253 0
 23302 0586 1A4B     		ldr	r3, .L905
 23303 0588 0022     		movs	r2, #0
 23304 058a 83F83C22 		strb	r2, [r3, #572]
3254:..\src/command_processing.c **** 
3255:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3256:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23305              		.loc 1 3256 0
 23306 058e 184B     		ldr	r3, .L905
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 512


 23307 0590 0022     		movs	r2, #0
 23308 0592 83F8E822 		strb	r2, [r3, #744]
3257:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23309              		.loc 1 3257 0
 23310 0596 164B     		ldr	r3, .L905
 23311 0598 4FF44872 		mov	r2, #800
 23312 059c A3F8EA22 		strh	r2, [r3, #746]	@ movhi
3258:..\src/command_processing.c **** 
3259:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3260:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3261:..\src/command_processing.c ****     memInit_SoftHandPro();
3262:..\src/command_processing.c **** #endif 
3263:..\src/command_processing.c **** 
3264:..\src/command_processing.c **** #ifdef MASTER_FW
3265:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3266:..\src/command_processing.c ****     memInit_Master();
3267:..\src/command_processing.c **** #endif 
3268:..\src/command_processing.c **** 
3269:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3270:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3271:..\src/command_processing.c ****     memInit_AirChambersFb();
3272:..\src/command_processing.c **** #endif 
3273:..\src/command_processing.c **** 
3274:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3275:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3276:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3277:..\src/command_processing.c **** #endif
3278:..\src/command_processing.c **** 
3279:..\src/command_processing.c ****     // JOYSTICK STRUCT
3280:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23313              		.loc 1 3280 0
 23314 05a0 134B     		ldr	r3, .L905
 23315 05a2 9622     		movs	r2, #150
 23316 05a4 A3F8B822 		strh	r2, [r3, #696]	@ movhi
3281:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23317              		.loc 1 3281 0
 23318 05a8 114B     		ldr	r3, .L905
 23319 05aa 6422     		movs	r2, #100
 23320 05ac A3F8BA22 		strh	r2, [r3, #698]	@ movhi
3282:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23321              		.loc 1 3282 0
 23322 05b0 0F4B     		ldr	r3, .L905
 23323 05b2 4FF48062 		mov	r2, #1024
 23324 05b6 A3F8BC22 		strh	r2, [r3, #700]	@ movhi
3283:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23325              		.loc 1 3283 0
 23326 05ba 0D4B     		ldr	r3, .L905
 23327 05bc 4FF48062 		mov	r2, #1024
 23328 05c0 A3F8BE22 		strh	r2, [r3, #702]	@ movhi
3284:..\src/command_processing.c **** 
3285:..\src/command_processing.c ****     // Default generic user_id
3286:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23329              		.loc 1 3286 0
 23330 05c4 0A4B     		ldr	r3, .L905
 23331 05c6 0022     		movs	r2, #0
 23332 05c8 83F8AB20 		strb	r2, [r3, #171]
3287:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 513


3288:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3289:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23333              		.loc 1 3289 0
 23334 05cc 084B     		ldr	r3, .L905
 23335 05ce 0122     		movs	r2, #1
 23336 05d0 1A70     		strb	r2, [r3]
3290:..\src/command_processing.c ****     
3291:..\src/command_processing.c ****     //write that configuration to EEPROM
3292:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23337              		.loc 1 3292 0
 23338 05d2 0020     		movs	r0, #0
 23339 05d4 FFF7FEFF 		bl	memStore
 23340 05d8 0346     		mov	r3, r0
 23341 05da 002B     		cmp	r3, #0
 23342 05dc 0CD0     		beq	.L900
 23343              		.loc 1 3292 0 is_stmt 0 discriminator 1
 23344 05de 3220     		movs	r0, #50
 23345 05e0 FFF7FEFF 		bl	memStore
 23346 05e4 0346     		mov	r3, r0
 23347 05e6 002B     		cmp	r3, #0
 23348 05e8 06D0     		beq	.L900
 23349              		.loc 1 3292 0 discriminator 3
 23350 05ea 0123     		movs	r3, #1
 23351 05ec 05E0     		b	.L901
 23352              	.L906:
 23353 05ee 00BF     		.align	2
 23354              	.L905:
 23355 05f0 00000000 		.word	g_mem
 23356 05f4 00220000 		.word	.LC321
 23357              	.L900:
 23358              		.loc 1 3292 0 discriminator 4
 23359 05f8 0023     		movs	r3, #0
 23360              	.L901:
 23361              		.loc 1 3292 0 discriminator 6
 23362 05fa DBB2     		uxtb	r3, r3
3293:..\src/command_processing.c **** }
 23363              		.loc 1 3293 0 is_stmt 1 discriminator 6
 23364 05fc 1846     		mov	r0, r3
 23365 05fe 0837     		adds	r7, r7, #8
 23366              		.cfi_def_cfa_offset 8
 23367 0600 BD46     		mov	sp, r7
 23368              		.cfi_def_cfa_register 13
 23369              		@ sp needed
 23370 0602 80BD     		pop	{r7, pc}
 23371              		.cfi_endproc
 23372              	.LFE89:
 23373              		.size	memInit, .-memInit
 23374              		.section	.rodata
 23375 2207 00       		.align	2
 23376              	.LC322:
 23377 2208 55535230 		.ascii	"USR001\000"
 23377      303100
 23378              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23379              		.align	2
 23380              		.global	memInit_SoftHandPro
 23381              		.thumb
 23382              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 514


 23383              		.type	memInit_SoftHandPro, %function
 23384              	memInit_SoftHandPro:
 23385              	.LFB90:
3294:..\src/command_processing.c **** 
3295:..\src/command_processing.c **** //==============================================================================
3296:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3297:..\src/command_processing.c **** //==============================================================================
3298:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3299:..\src/command_processing.c **** {
 23386              		.loc 1 3299 0
 23387              		.cfi_startproc
 23388              		@ args = 0, pretend = 0, frame = 8
 23389              		@ frame_needed = 1, uses_anonymous_args = 0
 23390              		@ link register save eliminated.
 23391 0000 80B4     		push	{r7}
 23392              		.cfi_def_cfa_offset 4
 23393              		.cfi_offset 7, -4
 23394 0002 83B0     		sub	sp, sp, #12
 23395              		.cfi_def_cfa_offset 16
 23396 0004 00AF     		add	r7, sp, #0
 23397              		.cfi_def_cfa_register 7
3300:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23398              		.loc 1 3300 0
 23399 0006 0023     		movs	r3, #0
 23400 0008 FB70     		strb	r3, [r7, #3]
3301:..\src/command_processing.c ****     
3302:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3303:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23401              		.loc 1 3303 0
 23402 000a 864B     		ldr	r3, .L910
 23403 000c 0122     		movs	r2, #1
 23404 000e 83F8A720 		strb	r2, [r3, #167]
3304:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23405              		.loc 1 3304 0
 23406 0012 844B     		ldr	r3, .L910
 23407 0014 0022     		movs	r2, #0
 23408 0016 83F8AC20 		strb	r2, [r3, #172]
3305:..\src/command_processing.c ****     
3306:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23409              		.loc 1 3306 0
 23410 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23411 001c 814A     		ldr	r2, .L910
 23412 001e 7421     		movs	r1, #116
 23413 0020 01FB03F3 		mul	r3, r1, r3
 23414 0024 1344     		add	r3, r3, r2
 23415 0026 E033     		adds	r3, r3, #224
 23416 0028 0122     		movs	r2, #1
 23417 002a 1A70     		strb	r2, [r3]
3307:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23418              		.loc 1 3307 0
 23419 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23420 002e 7D4A     		ldr	r2, .L910
 23421 0030 7421     		movs	r1, #116
 23422 0032 01FB03F3 		mul	r3, r1, r3
 23423 0036 1344     		add	r3, r3, r2
 23424 0038 03F58773 		add	r3, r3, #270
 23425 003c 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 515


 23426 003e 1A70     		strb	r2, [r3]
3308:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23427              		.loc 1 3308 0
 23428 0040 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23429 0042 784A     		ldr	r2, .L910
 23430 0044 7421     		movs	r1, #116
 23431 0046 01FB03F3 		mul	r3, r1, r3
 23432 004a 1344     		add	r3, r3, r2
 23433 004c 03F20F13 		addw	r3, r3, #271
 23434 0050 0022     		movs	r2, #0
 23435 0052 1A70     		strb	r2, [r3]
3309:..\src/command_processing.c ****     
3310:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3311:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23436              		.loc 1 3311 0
 23437 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23438 0056 734A     		ldr	r2, .L910
 23439 0058 92F8A700 		ldrb	r0, [r2, #167]	@ zero_extendqisi2
 23440 005c 714A     		ldr	r2, .L910
 23441 005e 7421     		movs	r1, #116
 23442 0060 01FB03F3 		mul	r3, r1, r3
 23443 0064 1344     		add	r3, r3, r2
 23444 0066 03F58873 		add	r3, r3, #272
 23445 006a 0246     		mov	r2, r0
 23446 006c 1A70     		strb	r2, [r3]
3312:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23447              		.loc 1 3312 0
 23448 006e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23449 0070 6C4A     		ldr	r2, .L910
 23450 0072 7421     		movs	r1, #116
 23451 0074 01FB03F3 		mul	r3, r1, r3
 23452 0078 1344     		add	r3, r3, r2
 23453 007a 03F21113 		addw	r3, r3, #273
 23454 007e 0122     		movs	r2, #1
 23455 0080 1A70     		strb	r2, [r3]
3313:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23456              		.loc 1 3313 0
 23457 0082 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23458 0084 674A     		ldr	r2, .L910
 23459 0086 7421     		movs	r1, #116
 23460 0088 01FB03F3 		mul	r3, r1, r3
 23461 008c 1344     		add	r3, r3, r2
 23462 008e 03F58973 		add	r3, r3, #274
 23463 0092 0122     		movs	r2, #1
 23464 0094 1A70     		strb	r2, [r3]
3314:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23465              		.loc 1 3314 0
 23466 0096 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23467 0098 624A     		ldr	r2, .L910
 23468 009a 7421     		movs	r1, #116
 23469 009c 01FB03F3 		mul	r3, r1, r3
 23470 00a0 1344     		add	r3, r3, r2
 23471 00a2 E433     		adds	r3, r3, #228
 23472 00a4 0022     		movs	r2, #0
 23473 00a6 1A60     		str	r2, [r3]
3315:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23474              		.loc 1 3315 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 516


 23475 00a8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23476 00aa FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23477 00ac 5D4A     		ldr	r2, .L910
 23478 00ae 7420     		movs	r0, #116
 23479 00b0 00FB03F3 		mul	r3, r0, r3
 23480 00b4 1344     		add	r3, r3, r2
 23481 00b6 03F58873 		add	r3, r3, #272
 23482 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23483 00bc 1846     		mov	r0, r3
 23484 00be 594A     		ldr	r2, .L910
 23485 00c0 0346     		mov	r3, r0
 23486 00c2 5B00     		lsls	r3, r3, #1
 23487 00c4 0344     		add	r3, r3, r0
 23488 00c6 1B01     		lsls	r3, r3, #4
 23489 00c8 1344     		add	r3, r3, r2
 23490 00ca 03F29D13 		addw	r3, r3, #413
 23491 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23492 00d0 1A46     		mov	r2, r3
 23493 00d2 4FF47A53 		mov	r3, #16000
 23494 00d6 03FA02F2 		lsl	r2, r3, r2
 23495 00da 5248     		ldr	r0, .L910
 23496 00dc 7423     		movs	r3, #116
 23497 00de 03FB01F3 		mul	r3, r3, r1
 23498 00e2 0344     		add	r3, r3, r0
 23499 00e4 E833     		adds	r3, r3, #232
 23500 00e6 1A60     		str	r2, [r3]
 23501              	.LBB30:
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23502              		.loc 1 3317 0
 23503 00e8 0023     		movs	r3, #0
 23504 00ea 7B60     		str	r3, [r7, #4]
 23505 00ec 2EE0     		b	.L908
 23506              	.L909:
3318:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3319:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23507              		.loc 1 3319 0 discriminator 3
 23508 00ee 4D49     		ldr	r1, .L910
 23509 00f0 7A68     		ldr	r2, [r7, #4]
 23510 00f2 1346     		mov	r3, r2
 23511 00f4 5B00     		lsls	r3, r3, #1
 23512 00f6 1344     		add	r3, r3, r2
 23513 00f8 1B01     		lsls	r3, r3, #4
 23514 00fa 0B44     		add	r3, r3, r1
 23515 00fc 03F5DC73 		add	r3, r3, #440
 23516 0100 0122     		movs	r2, #1
 23517 0102 1A70     		strb	r2, [r3]
3320:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23518              		.loc 1 3320 0 discriminator 3
 23519 0104 4749     		ldr	r1, .L910
 23520 0106 7A68     		ldr	r2, [r7, #4]
 23521 0108 1346     		mov	r3, r2
 23522 010a 5B00     		lsls	r3, r3, #1
 23523 010c 1344     		add	r3, r3, r2
 23524 010e 1B01     		lsls	r3, r3, #4
 23525 0110 0B44     		add	r3, r3, r1
 23526 0112 03F2BD13 		addw	r3, r3, #445
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 517


 23527 0116 2322     		movs	r2, #35
 23528 0118 1A70     		strb	r2, [r3]
3321:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23529              		.loc 1 3321 0 discriminator 3
 23530 011a 4249     		ldr	r1, .L910
 23531 011c 7A68     		ldr	r2, [r7, #4]
 23532 011e 1346     		mov	r3, r2
 23533 0120 5B00     		lsls	r3, r3, #1
 23534 0122 1344     		add	r3, r3, r2
 23535 0124 1B01     		lsls	r3, r3, #4
 23536 0126 0B44     		add	r3, r3, r1
 23537 0128 03F5DF73 		add	r3, r3, #446
 23538 012c 0322     		movs	r2, #3
 23539 012e 1A70     		strb	r2, [r3]
3322:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23540              		.loc 1 3322 0 discriminator 3
 23541 0130 3C49     		ldr	r1, .L910
 23542 0132 7A68     		ldr	r2, [r7, #4]
 23543 0134 1346     		mov	r3, r2
 23544 0136 5B00     		lsls	r3, r3, #1
 23545 0138 1344     		add	r3, r3, r2
 23546 013a 1B01     		lsls	r3, r3, #4
 23547 013c 0B44     		add	r3, r3, r1
 23548 013e 03F2BF13 		addw	r3, r3, #447
 23549 0142 FF22     		movs	r2, #255
 23550 0144 1A70     		strb	r2, [r3]
3317:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23551              		.loc 1 3317 0 discriminator 3
 23552 0146 7B68     		ldr	r3, [r7, #4]
 23553 0148 0133     		adds	r3, r3, #1
 23554 014a 7B60     		str	r3, [r7, #4]
 23555              	.L908:
3317:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23556              		.loc 1 3317 0 is_stmt 0 discriminator 1
 23557 014c 7B68     		ldr	r3, [r7, #4]
 23558 014e 012B     		cmp	r3, #1
 23559 0150 CDDD     		ble	.L909
 23560              	.LBE30:
3323:..\src/command_processing.c ****     }
3324:..\src/command_processing.c ****     
3325:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23561              		.loc 1 3325 0 is_stmt 1
 23562 0152 344B     		ldr	r3, .L910
 23563 0154 4FF48062 		mov	r2, #1024
 23564 0158 C3F8FC21 		str	r2, [r3, #508]
3326:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23565              		.loc 1 3326 0
 23566 015c 314B     		ldr	r3, .L910
 23567 015e 4FF48062 		mov	r2, #1024
 23568 0162 C3F80022 		str	r2, [r3, #512]
3327:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23569              		.loc 1 3327 0
 23570 0166 2F4B     		ldr	r3, .L910
 23571 0168 C822     		movs	r2, #200
 23572 016a A3F8F821 		strh	r2, [r3, #504]	@ movhi
3328:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23573              		.loc 1 3328 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 518


 23574 016e 2D4B     		ldr	r3, .L910
 23575 0170 C822     		movs	r2, #200
 23576 0172 A3F8FA21 		strh	r2, [r3, #506]	@ movhi
3329:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23577              		.loc 1 3329 0
 23578 0176 2B4B     		ldr	r3, .L910
 23579 0178 6422     		movs	r2, #100
 23580 017a 83F80422 		strb	r2, [r3, #516]
3330:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23581              		.loc 1 3330 0
 23582 017e 294B     		ldr	r3, .L910
 23583 0180 6422     		movs	r2, #100
 23584 0182 83F80522 		strb	r2, [r3, #517]
3331:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23585              		.loc 1 3331 0
 23586 0186 274B     		ldr	r3, .L910
 23587 0188 0022     		movs	r2, #0
 23588 018a 83F80622 		strb	r2, [r3, #518]
3332:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23589              		.loc 1 3332 0
 23590 018e 254B     		ldr	r3, .L910
 23591 0190 0022     		movs	r2, #0
 23592 0192 83F80722 		strb	r2, [r3, #519]
3333:..\src/command_processing.c ****     
3334:..\src/command_processing.c ****     //Initialize rest position parameters  
3335:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23593              		.loc 1 3335 0
 23594 0196 234B     		ldr	r3, .L910
 23595 0198 0022     		movs	r2, #0
 23596 019a 83F8B422 		strb	r2, [r3, #692]
3336:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23597              		.loc 1 3336 0
 23598 019e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 23599 01a0 204A     		ldr	r2, .L910
 23600 01a2 7421     		movs	r1, #116
 23601 01a4 01FB03F3 		mul	r3, r1, r3
 23602 01a8 1344     		add	r3, r3, r2
 23603 01aa 03F58873 		add	r3, r3, #272
 23604 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23605 01b0 1946     		mov	r1, r3
 23606 01b2 1C4A     		ldr	r2, .L910
 23607 01b4 0B46     		mov	r3, r1
 23608 01b6 5B00     		lsls	r3, r3, #1
 23609 01b8 0B44     		add	r3, r3, r1
 23610 01ba 1B01     		lsls	r3, r3, #4
 23611 01bc 1344     		add	r3, r3, r2
 23612 01be 03F29D13 		addw	r3, r3, #413
 23613 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23614 01c4 1A46     		mov	r2, r3
 23615 01c6 41F65833 		movw	r3, #7000
 23616 01ca 9340     		lsls	r3, r3, r2
 23617 01cc 154A     		ldr	r2, .L910
 23618 01ce C2F8A832 		str	r3, [r2, #680]
3337:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23619              		.loc 1 3337 0
 23620 01d2 144B     		ldr	r3, .L910
 23621 01d4 0A22     		movs	r2, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 519


 23622 01d6 C3F8AC22 		str	r2, [r3, #684]
3338:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23623              		.loc 1 3338 0
 23624 01da 124B     		ldr	r3, .L910
 23625 01dc 42F21072 		movw	r2, #10000
 23626 01e0 C3F8B022 		str	r2, [r3, #688]
3339:..\src/command_processing.c **** 	
3340:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23627              		.loc 1 3340 0
 23628 01e4 0F4B     		ldr	r3, .L910
 23629 01e6 0022     		movs	r2, #0
 23630 01e8 83F80822 		strb	r2, [r3, #520]
3341:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23631              		.loc 1 3341 0
 23632 01ec 0D4B     		ldr	r3, .L910
 23633 01ee 0022     		movs	r2, #0
 23634 01f0 83F82E22 		strb	r2, [r3, #558]
3342:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23635              		.loc 1 3342 0
 23636 01f4 0B4B     		ldr	r3, .L910
 23637 01f6 0022     		movs	r2, #0
 23638 01f8 83F83C22 		strb	r2, [r3, #572]
3343:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23639              		.loc 1 3343 0
 23640 01fc 094B     		ldr	r3, .L910
 23641 01fe 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23642 0202 5B01     		lsls	r3, r3, #5
 23643 0204 03F51273 		add	r3, r3, #584
 23644 0208 064A     		ldr	r2, .L910
 23645 020a 1344     		add	r3, r3, r2
 23646 020c 064A     		ldr	r2, .L910+4
 23647 020e 1068     		ldr	r0, [r2]	@ unaligned
 23648 0210 1860     		str	r0, [r3]	@ unaligned
 23649 0212 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23650 0214 9279     		ldrb	r2, [r2, #6]
 23651 0216 9980     		strh	r1, [r3, #4]	@ unaligned
 23652 0218 9A71     		strb	r2, [r3, #6]
3344:..\src/command_processing.c **** }
 23653              		.loc 1 3344 0
 23654 021a 00BF     		nop
 23655 021c 0C37     		adds	r7, r7, #12
 23656              		.cfi_def_cfa_offset 4
 23657 021e BD46     		mov	sp, r7
 23658              		.cfi_def_cfa_register 13
 23659              		@ sp needed
 23660 0220 80BC     		pop	{r7}
 23661              		.cfi_restore 7
 23662              		.cfi_def_cfa_offset 0
 23663 0222 7047     		bx	lr
 23664              	.L911:
 23665              		.align	2
 23666              	.L910:
 23667 0224 00000000 		.word	g_mem
 23668 0228 08220000 		.word	.LC322
 23669              		.cfi_endproc
 23670              	.LFE90:
 23671              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 520


 23672              		.section	.text.memInit_Master,"ax",%progbits
 23673              		.align	2
 23674              		.global	memInit_Master
 23675              		.thumb
 23676              		.thumb_func
 23677              		.type	memInit_Master, %function
 23678              	memInit_Master:
 23679              	.LFB91:
3345:..\src/command_processing.c **** 
3346:..\src/command_processing.c **** //==============================================================================
3347:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3348:..\src/command_processing.c **** //==============================================================================
3349:..\src/command_processing.c **** void memInit_Master(void)
3350:..\src/command_processing.c **** {
 23680              		.loc 1 3350 0
 23681              		.cfi_startproc
 23682              		@ args = 0, pretend = 0, frame = 0
 23683              		@ frame_needed = 1, uses_anonymous_args = 0
 23684              		@ link register save eliminated.
 23685 0000 80B4     		push	{r7}
 23686              		.cfi_def_cfa_offset 4
 23687              		.cfi_offset 7, -4
 23688 0002 00AF     		add	r7, sp, #0
 23689              		.cfi_def_cfa_register 7
3351:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23690              		.loc 1 3351 0
 23691 0004 074B     		ldr	r3, .L913
 23692 0006 0222     		movs	r2, #2
 23693 0008 83F8A020 		strb	r2, [r3, #160]
3352:..\src/command_processing.c ****     
3353:..\src/command_processing.c ****     // MS STRUCT
3354:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23694              		.loc 1 3354 0
 23695 000c 054B     		ldr	r3, .L913
 23696 000e 0122     		movs	r2, #1
 23697 0010 83F8C922 		strb	r2, [r3, #713]
3355:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 23698              		.loc 1 3355 0
 23699 0014 034B     		ldr	r3, .L913
 23700 0016 0022     		movs	r2, #0
 23701 0018 83F8C822 		strb	r2, [r3, #712]
3356:..\src/command_processing.c **** }
 23702              		.loc 1 3356 0
 23703 001c 00BF     		nop
 23704 001e BD46     		mov	sp, r7
 23705              		.cfi_def_cfa_register 13
 23706              		@ sp needed
 23707 0020 80BC     		pop	{r7}
 23708              		.cfi_restore 7
 23709              		.cfi_def_cfa_offset 0
 23710 0022 7047     		bx	lr
 23711              	.L914:
 23712              		.align	2
 23713              	.L913:
 23714 0024 00000000 		.word	g_mem
 23715              		.cfi_endproc
 23716              	.LFE91:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 521


 23717              		.size	memInit_Master, .-memInit_Master
 23718              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 23719              		.align	2
 23720              		.global	memInit_AirChambersFb
 23721              		.thumb
 23722              		.thumb_func
 23723              		.type	memInit_AirChambersFb, %function
 23724              	memInit_AirChambersFb:
 23725              	.LFB92:
3357:..\src/command_processing.c **** 
3358:..\src/command_processing.c **** //==============================================================================
3359:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3360:..\src/command_processing.c **** //==============================================================================
3361:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3362:..\src/command_processing.c **** {
 23726              		.loc 1 3362 0
 23727              		.cfi_startproc
 23728              		@ args = 0, pretend = 0, frame = 0
 23729              		@ frame_needed = 1, uses_anonymous_args = 0
 23730              		@ link register save eliminated.
 23731 0000 80B4     		push	{r7}
 23732              		.cfi_def_cfa_offset 4
 23733              		.cfi_offset 7, -4
 23734 0002 00AF     		add	r7, sp, #0
 23735              		.cfi_def_cfa_register 7
3363:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3364:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23736              		.loc 1 3364 0
 23737 0004 1A4B     		ldr	r3, .L916
 23738 0006 0222     		movs	r2, #2
 23739 0008 83F8AC20 		strb	r2, [r3, #172]
3365:..\src/command_processing.c ****     
3366:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23740              		.loc 1 3366 0
 23741 000c 184B     		ldr	r3, .L916
 23742 000e 0122     		movs	r2, #1
 23743 0010 83F80F21 		strb	r2, [r3, #271]
3367:..\src/command_processing.c ****     
3368:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3369:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3370:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23744              		.loc 1 3370 0
 23745 0014 164B     		ldr	r3, .L916
 23746 0016 0422     		movs	r2, #4
 23747 0018 83F88221 		strb	r2, [r3, #386]
3371:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23748              		.loc 1 3371 0
 23749 001c 144B     		ldr	r3, .L916
 23750 001e 0022     		movs	r2, #0
 23751 0020 C3F85821 		str	r2, [r3, #344]
3372:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23752              		.loc 1 3372 0
 23753 0024 124B     		ldr	r3, .L916
 23754 0026 93F88431 		ldrb	r3, [r3, #388]	@ zero_extendqisi2
 23755 002a 1946     		mov	r1, r3
 23756 002c 104A     		ldr	r2, .L916
 23757 002e 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 522


 23758 0030 5B00     		lsls	r3, r3, #1
 23759 0032 0B44     		add	r3, r3, r1
 23760 0034 1B01     		lsls	r3, r3, #4
 23761 0036 1344     		add	r3, r3, r2
 23762 0038 03F29D13 		addw	r3, r3, #413
 23763 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23764 003e 1A46     		mov	r2, r3
 23765 0040 45F2F053 		movw	r3, #22000
 23766 0044 9340     		lsls	r3, r3, r2
 23767 0046 0A4A     		ldr	r2, .L916
 23768 0048 C2F85C31 		str	r3, [r2, #348]
3373:..\src/command_processing.c ****     
3374:..\src/command_processing.c ****     // FB STRUCT
3375:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23769              		.loc 1 3375 0
 23770 004c 084B     		ldr	r3, .L916
 23771 004e 4FF4E172 		mov	r2, #450
 23772 0052 C3F8D822 		str	r2, [r3, #728]
3376:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23773              		.loc 1 3376 0
 23774 0056 064B     		ldr	r3, .L916
 23775 0058 064A     		ldr	r2, .L916+4
 23776 005a C3F8DC22 		str	r2, [r3, #732]	@ float
3377:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23777              		.loc 1 3377 0
 23778 005e 044B     		ldr	r3, .L916
 23779 0060 4FF07E52 		mov	r2, #1065353216
 23780 0064 C3F8E022 		str	r2, [r3, #736]	@ float
3378:..\src/command_processing.c **** }
 23781              		.loc 1 3378 0
 23782 0068 00BF     		nop
 23783 006a BD46     		mov	sp, r7
 23784              		.cfi_def_cfa_register 13
 23785              		@ sp needed
 23786 006c 80BC     		pop	{r7}
 23787              		.cfi_restore 7
 23788              		.cfi_def_cfa_offset 0
 23789 006e 7047     		bx	lr
 23790              	.L917:
 23791              		.align	2
 23792              	.L916:
 23793 0070 00000000 		.word	g_mem
 23794 0074 0000C841 		.word	1103626240
 23795              		.cfi_endproc
 23796              	.LFE92:
 23797              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 23798              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23799              		.align	2
 23800              		.global	memInit_OtbkActWristMs
 23801              		.thumb
 23802              		.thumb_func
 23803              		.type	memInit_OtbkActWristMs, %function
 23804              	memInit_OtbkActWristMs:
 23805              	.LFB93:
3379:..\src/command_processing.c **** 
3380:..\src/command_processing.c **** //==============================================================================
3381:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 523


3382:..\src/command_processing.c **** //==============================================================================
3383:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3384:..\src/command_processing.c **** {
 23806              		.loc 1 3384 0
 23807              		.cfi_startproc
 23808              		@ args = 0, pretend = 0, frame = 0
 23809              		@ frame_needed = 1, uses_anonymous_args = 0
 23810              		@ link register save eliminated.
 23811 0000 80B4     		push	{r7}
 23812              		.cfi_def_cfa_offset 4
 23813              		.cfi_offset 7, -4
 23814 0002 00AF     		add	r7, sp, #0
 23815              		.cfi_def_cfa_register 7
3385:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3386:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23816              		.loc 1 3386 0
 23817 0004 294B     		ldr	r3, .L919
 23818 0006 0322     		movs	r2, #3
 23819 0008 83F8AC20 		strb	r2, [r3, #172]
3387:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23820              		.loc 1 3387 0
 23821 000c 274B     		ldr	r3, .L919
 23822 000e 0122     		movs	r2, #1
 23823 0010 83F8A720 		strb	r2, [r3, #167]
3388:..\src/command_processing.c ****     
3389:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23824              		.loc 1 3389 0
 23825 0014 254B     		ldr	r3, .L919
 23826 0016 0122     		movs	r2, #1
 23827 0018 83F80F21 		strb	r2, [r3, #271]
3390:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23828              		.loc 1 3390 0
 23829 001c 234B     		ldr	r3, .L919
 23830 001e 6422     		movs	r2, #100
 23831 0020 83F81121 		strb	r2, [r3, #273]
3391:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23832              		.loc 1 3391 0
 23833 0024 214B     		ldr	r3, .L919
 23834 0026 0022     		movs	r2, #0
 23835 0028 83F81221 		strb	r2, [r3, #274]
3392:..\src/command_processing.c ****     
3393:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3394:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3395:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23836              		.loc 1 3395 0
 23837 002c 1F4B     		ldr	r3, .L919
 23838 002e 0422     		movs	r2, #4
 23839 0030 83F88221 		strb	r2, [r3, #386]
3396:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23840              		.loc 1 3396 0
 23841 0034 1D4B     		ldr	r3, .L919
 23842 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23843 003a 1C4B     		ldr	r3, .L919
 23844 003c 83F88421 		strb	r2, [r3, #388]
3397:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23845              		.loc 1 3397 0
 23846 0040 1A4B     		ldr	r3, .L919
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 524


 23847 0042 0122     		movs	r2, #1
 23848 0044 83F88521 		strb	r2, [r3, #389]
3398:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23849              		.loc 1 3398 0
 23850 0048 184B     		ldr	r3, .L919
 23851 004a 0022     		movs	r2, #0
 23852 004c 83F88621 		strb	r2, [r3, #390]
3399:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23853              		.loc 1 3399 0
 23854 0050 164B     		ldr	r3, .L919
 23855 0052 0022     		movs	r2, #0
 23856 0054 C3F85821 		str	r2, [r3, #344]
3400:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23857              		.loc 1 3400 0
 23858 0058 144B     		ldr	r3, .L919
 23859 005a 93F88431 		ldrb	r3, [r3, #388]	@ zero_extendqisi2
 23860 005e 1946     		mov	r1, r3
 23861 0060 124A     		ldr	r2, .L919
 23862 0062 0B46     		mov	r3, r1
 23863 0064 5B00     		lsls	r3, r3, #1
 23864 0066 0B44     		add	r3, r3, r1
 23865 0068 1B01     		lsls	r3, r3, #4
 23866 006a 1344     		add	r3, r3, r2
 23867 006c 03F29D13 		addw	r3, r3, #413
 23868 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23869 0072 1A46     		mov	r2, r3
 23870 0074 4FF47A53 		mov	r3, #16000
 23871 0078 9340     		lsls	r3, r3, r2
 23872 007a 0C4A     		ldr	r2, .L919
 23873 007c C2F85C31 		str	r3, [r2, #348]
3401:..\src/command_processing.c ****     
3402:..\src/command_processing.c ****     // WR STRUCT
3403:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23874              		.loc 1 3403 0
 23875 0080 0A4B     		ldr	r3, .L919
 23876 0082 0022     		movs	r2, #0
 23877 0084 83F8E822 		strb	r2, [r3, #744]
3404:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23878              		.loc 1 3404 0
 23879 0088 084B     		ldr	r3, .L919
 23880 008a 4FF44872 		mov	r2, #800
 23881 008e A3F8EA22 		strh	r2, [r3, #746]	@ movhi
3405:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23882              		.loc 1 3405 0
 23883 0092 064B     		ldr	r3, .L919
 23884 0094 4FF44872 		mov	r2, #800
 23885 0098 A3F8EC22 		strh	r2, [r3, #748]	@ movhi
3406:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23886              		.loc 1 3406 0
 23887 009c 034B     		ldr	r3, .L919
 23888 009e 0022     		movs	r2, #0
 23889 00a0 83F8EE22 		strb	r2, [r3, #750]
3407:..\src/command_processing.c **** }
 23890              		.loc 1 3407 0
 23891 00a4 00BF     		nop
 23892 00a6 BD46     		mov	sp, r7
 23893              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 525


 23894              		@ sp needed
 23895 00a8 80BC     		pop	{r7}
 23896              		.cfi_restore 7
 23897              		.cfi_def_cfa_offset 0
 23898 00aa 7047     		bx	lr
 23899              	.L920:
 23900              		.align	2
 23901              	.L919:
 23902 00ac 00000000 		.word	g_mem
 23903              		.cfi_endproc
 23904              	.LFE93:
 23905              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23906              		.section	.text.cmd_get_measurements,"ax",%progbits
 23907              		.align	2
 23908              		.global	cmd_get_measurements
 23909              		.thumb
 23910              		.thumb_func
 23911              		.type	cmd_get_measurements, %function
 23912              	cmd_get_measurements:
 23913              	.LFB94:
3408:..\src/command_processing.c **** 
3409:..\src/command_processing.c **** //==============================================================================
3410:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3411:..\src/command_processing.c **** //==============================================================================
3412:..\src/command_processing.c **** /**
3413:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3414:..\src/command_processing.c **** **/
3415:..\src/command_processing.c **** 
3416:..\src/command_processing.c **** void cmd_get_measurements(){
 23914              		.loc 1 3416 0
 23915              		.cfi_startproc
 23916              		@ args = 0, pretend = 0, frame = 16
 23917              		@ frame_needed = 1, uses_anonymous_args = 0
 23918 0000 90B5     		push	{r4, r7, lr}
 23919              		.cfi_def_cfa_offset 12
 23920              		.cfi_offset 4, -12
 23921              		.cfi_offset 7, -8
 23922              		.cfi_offset 14, -4
 23923 0002 85B0     		sub	sp, sp, #20
 23924              		.cfi_def_cfa_offset 32
 23925 0004 00AF     		add	r7, sp, #0
 23926              		.cfi_def_cfa_register 7
3417:..\src/command_processing.c ****  
3418:..\src/command_processing.c ****     uint8 CYDATA index;
3419:..\src/command_processing.c ****     int16 aux_int16;
3420:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3421:..\src/command_processing.c ****     
3422:..\src/command_processing.c ****     uint8 packet_data[8]; 
3423:..\src/command_processing.c ****     
3424:..\src/command_processing.c ****     //Header package
3425:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23927              		.loc 1 3425 0
 23928 0006 8423     		movs	r3, #132
 23929 0008 3B71     		strb	r3, [r7, #4]
3426:..\src/command_processing.c ****     
3427:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23930              		.loc 1 3427 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 526


 23931 000a 0323     		movs	r3, #3
 23932 000c FB73     		strb	r3, [r7, #15]
 23933 000e 38E0     		b	.L922
 23934              	.L923:
3428:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23935              		.loc 1 3428 0
 23936 0010 5E4B     		ldr	r3, .L925
 23937 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23938 0016 1A46     		mov	r2, r3
 23939 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23940 001a 5D48     		ldr	r0, .L925+4
 23941 001c 1346     		mov	r3, r2
 23942 001e 5B00     		lsls	r3, r3, #1
 23943 0020 1344     		add	r3, r3, r2
 23944 0022 9B00     		lsls	r3, r3, #2
 23945 0024 1344     		add	r3, r3, r2
 23946 0026 0B44     		add	r3, r3, r1
 23947 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23948 002c 574B     		ldr	r3, .L925
 23949 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23950 0032 1C46     		mov	r4, r3
 23951 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23952 0036 5548     		ldr	r0, .L925
 23953 0038 2346     		mov	r3, r4
 23954 003a 5B00     		lsls	r3, r3, #1
 23955 003c 2344     		add	r3, r3, r4
 23956 003e 1B01     		lsls	r3, r3, #4
 23957 0040 0344     		add	r3, r3, r0
 23958 0042 0B44     		add	r3, r3, r1
 23959 0044 03F29D13 		addw	r3, r3, #413
 23960 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23961 004a 42FA03F3 		asr	r3, r2, r3
 23962 004e 1BB2     		sxth	r3, r3
 23963 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3429:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23964              		.loc 1 3429 0
 23965 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23966 0054 5B00     		lsls	r3, r3, #1
 23967 0056 0233     		adds	r3, r3, #2
 23968 0058 07F10C02 		add	r2, r7, #12
 23969 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23970 005e 07F11001 		add	r1, r7, #16
 23971 0062 0B44     		add	r3, r3, r1
 23972 0064 03F80C2C 		strb	r2, [r3, #-12]
3430:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23973              		.loc 1 3430 0
 23974 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23975 006a 5B00     		lsls	r3, r3, #1
 23976 006c 5A1C     		adds	r2, r3, #1
 23977 006e 07F10C03 		add	r3, r7, #12
 23978 0072 0133     		adds	r3, r3, #1
 23979 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23980 0076 07F11003 		add	r3, r7, #16
 23981 007a 1344     		add	r3, r3, r2
 23982 007c 0A46     		mov	r2, r1
 23983 007e 03F80C2C 		strb	r2, [r3, #-12]
 23984              	.L922:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 527


3427:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23985              		.loc 1 3427 0 discriminator 1
 23986 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23987 0084 5A1E     		subs	r2, r3, #1
 23988 0086 FA73     		strb	r2, [r7, #15]
 23989 0088 002B     		cmp	r3, #0
 23990 008a C1D1     		bne	.L923
3431:..\src/command_processing.c ****     }
3432:..\src/command_processing.c **** 
3433:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 23991              		.loc 1 3433 0
 23992 008c 3F4B     		ldr	r3, .L925
 23993 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23994 0092 012B     		cmp	r3, #1
 23995 0094 34D1     		bne	.L924
3434:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3435:..\src/command_processing.c ****         index = 1;
 23996              		.loc 1 3435 0
 23997 0096 0123     		movs	r3, #1
 23998 0098 FB73     		strb	r3, [r7, #15]
3436:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 23999              		.loc 1 3436 0
 24000 009a 3C4B     		ldr	r3, .L925
 24001 009c 93F88431 		ldrb	r3, [r3, #388]	@ zero_extendqisi2
 24002 00a0 1946     		mov	r1, r3
 24003 00a2 3B4A     		ldr	r2, .L925+4
 24004 00a4 3423     		movs	r3, #52
 24005 00a6 03FB01F3 		mul	r3, r3, r1
 24006 00aa 1344     		add	r3, r3, r2
 24007 00ac 1A68     		ldr	r2, [r3]
 24008 00ae 374B     		ldr	r3, .L925
 24009 00b0 93F88431 		ldrb	r3, [r3, #388]	@ zero_extendqisi2
 24010 00b4 1846     		mov	r0, r3
 24011 00b6 3549     		ldr	r1, .L925
 24012 00b8 0346     		mov	r3, r0
 24013 00ba 5B00     		lsls	r3, r3, #1
 24014 00bc 0344     		add	r3, r3, r0
 24015 00be 1B01     		lsls	r3, r3, #4
 24016 00c0 0B44     		add	r3, r3, r1
 24017 00c2 03F29D13 		addw	r3, r3, #413
 24018 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24019 00c8 42FA03F3 		asr	r3, r2, r3
 24020 00cc 1BB2     		sxth	r3, r3
 24021 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3437:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24022              		.loc 1 3437 0
 24023 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24024 00d2 5B00     		lsls	r3, r3, #1
 24025 00d4 0233     		adds	r3, r3, #2
 24026 00d6 07F10C02 		add	r2, r7, #12
 24027 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24028 00dc 07F11001 		add	r1, r7, #16
 24029 00e0 0B44     		add	r3, r3, r1
 24030 00e2 03F80C2C 		strb	r2, [r3, #-12]
3438:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24031              		.loc 1 3438 0
 24032 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 528


 24033 00e8 5B00     		lsls	r3, r3, #1
 24034 00ea 5A1C     		adds	r2, r3, #1
 24035 00ec 07F10C03 		add	r3, r7, #12
 24036 00f0 0133     		adds	r3, r3, #1
 24037 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24038 00f4 07F11003 		add	r3, r7, #16
 24039 00f8 1344     		add	r3, r3, r2
 24040 00fa 0A46     		mov	r2, r1
 24041 00fc 03F80C2C 		strb	r2, [r3, #-12]
 24042              	.L924:
3439:..\src/command_processing.c ****     }
3440:..\src/command_processing.c ****     
3441:..\src/command_processing.c ****     index = 2;
 24043              		.loc 1 3441 0
 24044 0100 0223     		movs	r3, #2
 24045 0102 FB73     		strb	r3, [r7, #15]
3442:..\src/command_processing.c ****     aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[1] >> g_mem.enc[g_mem.motor[0].e
 24046              		.loc 1 3442 0
 24047 0104 214B     		ldr	r3, .L925
 24048 0106 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24049 010a 1946     		mov	r1, r3
 24050 010c 204A     		ldr	r2, .L925+4
 24051 010e 3423     		movs	r3, #52
 24052 0110 03FB01F3 		mul	r3, r3, r1
 24053 0114 1344     		add	r3, r3, r2
 24054 0116 0433     		adds	r3, r3, #4
 24055 0118 1A68     		ldr	r2, [r3]
 24056 011a 1C4B     		ldr	r3, .L925
 24057 011c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24058 0120 1846     		mov	r0, r3
 24059 0122 1A49     		ldr	r1, .L925
 24060 0124 0346     		mov	r3, r0
 24061 0126 5B00     		lsls	r3, r3, #1
 24062 0128 0344     		add	r3, r3, r0
 24063 012a 1B01     		lsls	r3, r3, #4
 24064 012c 0B44     		add	r3, r3, r1
 24065 012e 03F5CF73 		add	r3, r3, #414
 24066 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24067 0134 42FA03F3 		asr	r3, r2, r3
 24068 0138 1BB2     		sxth	r3, r3
 24069 013a BB81     		strh	r3, [r7, #12]	@ movhi
3443:..\src/command_processing.c ****     packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24070              		.loc 1 3443 0
 24071 013c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24072 013e 5B00     		lsls	r3, r3, #1
 24073 0140 0233     		adds	r3, r3, #2
 24074 0142 07F10C02 		add	r2, r7, #12
 24075 0146 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24076 0148 07F11001 		add	r1, r7, #16
 24077 014c 0B44     		add	r3, r3, r1
 24078 014e 03F80C2C 		strb	r2, [r3, #-12]
3444:..\src/command_processing.c ****     packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24079              		.loc 1 3444 0
 24080 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24081 0154 5B00     		lsls	r3, r3, #1
 24082 0156 5A1C     		adds	r2, r3, #1
 24083 0158 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 529


 24084 015c 0133     		adds	r3, r3, #1
 24085 015e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24086 0160 07F11003 		add	r3, r7, #16
 24087 0164 1344     		add	r3, r3, r2
 24088 0166 0A46     		mov	r2, r1
 24089 0168 03F80C2C 		strb	r2, [r3, #-12]
3445:..\src/command_processing.c ****         
3446:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3447:..\src/command_processing.c **** 
3448:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24090              		.loc 1 3448 0
 24091 016c 3B1D     		adds	r3, r7, #4
 24092 016e 0721     		movs	r1, #7
 24093 0170 1846     		mov	r0, r3
 24094 0172 FFF7FEFF 		bl	LCRChecksum
 24095 0176 0346     		mov	r3, r0
 24096 0178 FB72     		strb	r3, [r7, #11]
3449:..\src/command_processing.c **** 
3450:..\src/command_processing.c ****     commWrite(packet_data, 8);
 24097              		.loc 1 3450 0
 24098 017a 3B1D     		adds	r3, r7, #4
 24099 017c 0821     		movs	r1, #8
 24100 017e 1846     		mov	r0, r3
 24101 0180 FFF7FEFF 		bl	commWrite
3451:..\src/command_processing.c ****    
3452:..\src/command_processing.c **** }
 24102              		.loc 1 3452 0
 24103 0184 00BF     		nop
 24104 0186 1437     		adds	r7, r7, #20
 24105              		.cfi_def_cfa_offset 12
 24106 0188 BD46     		mov	sp, r7
 24107              		.cfi_def_cfa_register 13
 24108              		@ sp needed
 24109 018a 90BD     		pop	{r4, r7, pc}
 24110              	.L926:
 24111              		.align	2
 24112              	.L925:
 24113 018c 00000000 		.word	g_mem
 24114 0190 00000000 		.word	g_measOld
 24115              		.cfi_endproc
 24116              	.LFE94:
 24117              		.size	cmd_get_measurements, .-cmd_get_measurements
 24118              		.section	.text.cmd_get_velocities,"ax",%progbits
 24119              		.align	2
 24120              		.global	cmd_get_velocities
 24121              		.thumb
 24122              		.thumb_func
 24123              		.type	cmd_get_velocities, %function
 24124              	cmd_get_velocities:
 24125              	.LFB95:
3453:..\src/command_processing.c **** 
3454:..\src/command_processing.c **** void cmd_get_velocities(){
 24126              		.loc 1 3454 0
 24127              		.cfi_startproc
 24128              		@ args = 0, pretend = 0, frame = 16
 24129              		@ frame_needed = 1, uses_anonymous_args = 0
 24130 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 530


 24131              		.cfi_def_cfa_offset 12
 24132              		.cfi_offset 4, -12
 24133              		.cfi_offset 7, -8
 24134              		.cfi_offset 14, -4
 24135 0002 85B0     		sub	sp, sp, #20
 24136              		.cfi_def_cfa_offset 32
 24137 0004 00AF     		add	r7, sp, #0
 24138              		.cfi_def_cfa_register 7
3455:..\src/command_processing.c ****  
3456:..\src/command_processing.c ****     uint8 CYDATA index;
3457:..\src/command_processing.c ****     int16 aux_int16;
3458:..\src/command_processing.c ****    
3459:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3460:..\src/command_processing.c ****     
3461:..\src/command_processing.c ****     uint8 packet_data[8]; 
3462:..\src/command_processing.c ****     
3463:..\src/command_processing.c ****     //Header package
3464:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 24139              		.loc 1 3464 0
 24140 0006 8923     		movs	r3, #137
 24141 0008 3B71     		strb	r3, [r7, #4]
3465:..\src/command_processing.c ****     
3466:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24142              		.loc 1 3466 0
 24143 000a 0323     		movs	r3, #3
 24144 000c FB73     		strb	r3, [r7, #15]
 24145 000e 3AE0     		b	.L928
 24146              	.L929:
3467:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24147              		.loc 1 3467 0
 24148 0010 274B     		ldr	r3, .L930
 24149 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24150 0016 1A46     		mov	r2, r3
 24151 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24152 001a 2648     		ldr	r0, .L930+4
 24153 001c 1346     		mov	r3, r2
 24154 001e 5B00     		lsls	r3, r3, #1
 24155 0020 1344     		add	r3, r3, r2
 24156 0022 9B00     		lsls	r3, r3, #2
 24157 0024 1344     		add	r3, r3, r2
 24158 0026 0B44     		add	r3, r3, r1
 24159 0028 0633     		adds	r3, r3, #6
 24160 002a 9B00     		lsls	r3, r3, #2
 24161 002c 0344     		add	r3, r3, r0
 24162 002e 5A68     		ldr	r2, [r3, #4]
 24163 0030 1F4B     		ldr	r3, .L930
 24164 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24165 0036 1C46     		mov	r4, r3
 24166 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24167 003a 1D48     		ldr	r0, .L930
 24168 003c 2346     		mov	r3, r4
 24169 003e 5B00     		lsls	r3, r3, #1
 24170 0040 2344     		add	r3, r3, r4
 24171 0042 1B01     		lsls	r3, r3, #4
 24172 0044 0344     		add	r3, r3, r0
 24173 0046 0B44     		add	r3, r3, r1
 24174 0048 03F29D13 		addw	r3, r3, #413
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 531


 24175 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24176 004e 42FA03F3 		asr	r3, r2, r3
 24177 0052 1BB2     		sxth	r3, r3
 24178 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3468:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24179              		.loc 1 3468 0
 24180 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24181 0058 5B00     		lsls	r3, r3, #1
 24182 005a 0233     		adds	r3, r3, #2
 24183 005c 07F10C02 		add	r2, r7, #12
 24184 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24185 0062 07F11001 		add	r1, r7, #16
 24186 0066 0B44     		add	r3, r3, r1
 24187 0068 03F80C2C 		strb	r2, [r3, #-12]
3469:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24188              		.loc 1 3469 0
 24189 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24190 006e 5B00     		lsls	r3, r3, #1
 24191 0070 5A1C     		adds	r2, r3, #1
 24192 0072 07F10C03 		add	r3, r7, #12
 24193 0076 0133     		adds	r3, r3, #1
 24194 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24195 007a 07F11003 		add	r3, r7, #16
 24196 007e 1344     		add	r3, r3, r2
 24197 0080 0A46     		mov	r2, r1
 24198 0082 03F80C2C 		strb	r2, [r3, #-12]
 24199              	.L928:
3466:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24200              		.loc 1 3466 0 discriminator 1
 24201 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24202 0088 5A1E     		subs	r2, r3, #1
 24203 008a FA73     		strb	r2, [r7, #15]
 24204 008c 002B     		cmp	r3, #0
 24205 008e BFD1     		bne	.L929
3470:..\src/command_processing.c ****     }
3471:..\src/command_processing.c ****             
3472:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3473:..\src/command_processing.c **** 
3474:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24206              		.loc 1 3474 0
 24207 0090 3B1D     		adds	r3, r7, #4
 24208 0092 0721     		movs	r1, #7
 24209 0094 1846     		mov	r0, r3
 24210 0096 FFF7FEFF 		bl	LCRChecksum
 24211 009a 0346     		mov	r3, r0
 24212 009c FB72     		strb	r3, [r7, #11]
3475:..\src/command_processing.c **** 
3476:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24213              		.loc 1 3476 0
 24214 009e 3B1D     		adds	r3, r7, #4
 24215 00a0 0821     		movs	r1, #8
 24216 00a2 1846     		mov	r0, r3
 24217 00a4 FFF7FEFF 		bl	commWrite
3477:..\src/command_processing.c **** }
 24218              		.loc 1 3477 0
 24219 00a8 00BF     		nop
 24220 00aa 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 532


 24221              		.cfi_def_cfa_offset 12
 24222 00ac BD46     		mov	sp, r7
 24223              		.cfi_def_cfa_register 13
 24224              		@ sp needed
 24225 00ae 90BD     		pop	{r4, r7, pc}
 24226              	.L931:
 24227              		.align	2
 24228              	.L930:
 24229 00b0 00000000 		.word	g_mem
 24230 00b4 00000000 		.word	g_measOld
 24231              		.cfi_endproc
 24232              	.LFE95:
 24233              		.size	cmd_get_velocities, .-cmd_get_velocities
 24234              		.section	.text.cmd_get_accelerations,"ax",%progbits
 24235              		.align	2
 24236              		.global	cmd_get_accelerations
 24237              		.thumb
 24238              		.thumb_func
 24239              		.type	cmd_get_accelerations, %function
 24240              	cmd_get_accelerations:
 24241              	.LFB96:
3478:..\src/command_processing.c **** 
3479:..\src/command_processing.c **** void cmd_get_accelerations(){
 24242              		.loc 1 3479 0
 24243              		.cfi_startproc
 24244              		@ args = 0, pretend = 0, frame = 16
 24245              		@ frame_needed = 1, uses_anonymous_args = 0
 24246 0000 90B5     		push	{r4, r7, lr}
 24247              		.cfi_def_cfa_offset 12
 24248              		.cfi_offset 4, -12
 24249              		.cfi_offset 7, -8
 24250              		.cfi_offset 14, -4
 24251 0002 85B0     		sub	sp, sp, #20
 24252              		.cfi_def_cfa_offset 32
 24253 0004 00AF     		add	r7, sp, #0
 24254              		.cfi_def_cfa_register 7
3480:..\src/command_processing.c ****  
3481:..\src/command_processing.c ****     uint8 CYDATA index;
3482:..\src/command_processing.c ****     int16 aux_int16;
3483:..\src/command_processing.c ****     
3484:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3485:..\src/command_processing.c ****     
3486:..\src/command_processing.c ****     uint8 packet_data[8]; 
3487:..\src/command_processing.c ****     
3488:..\src/command_processing.c ****     //Header package
3489:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24255              		.loc 1 3489 0
 24256 0006 8B23     		movs	r3, #139
 24257 0008 3B71     		strb	r3, [r7, #4]
3490:..\src/command_processing.c ****     
3491:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24258              		.loc 1 3491 0
 24259 000a 0323     		movs	r3, #3
 24260 000c FB73     		strb	r3, [r7, #15]
 24261 000e 39E0     		b	.L933
 24262              	.L934:
3492:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 533


 24263              		.loc 1 3492 0
 24264 0010 274B     		ldr	r3, .L935
 24265 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24266 0016 1A46     		mov	r2, r3
 24267 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24268 001a 2648     		ldr	r0, .L935+4
 24269 001c 1346     		mov	r3, r2
 24270 001e 5B00     		lsls	r3, r3, #1
 24271 0020 1344     		add	r3, r3, r2
 24272 0022 9B00     		lsls	r3, r3, #2
 24273 0024 1344     		add	r3, r3, r2
 24274 0026 0B44     		add	r3, r3, r1
 24275 0028 0A33     		adds	r3, r3, #10
 24276 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24277 002e 204B     		ldr	r3, .L935
 24278 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24279 0034 1C46     		mov	r4, r3
 24280 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24281 0038 1D48     		ldr	r0, .L935
 24282 003a 2346     		mov	r3, r4
 24283 003c 5B00     		lsls	r3, r3, #1
 24284 003e 2344     		add	r3, r3, r4
 24285 0040 1B01     		lsls	r3, r3, #4
 24286 0042 0344     		add	r3, r3, r0
 24287 0044 0B44     		add	r3, r3, r1
 24288 0046 03F29D13 		addw	r3, r3, #413
 24289 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24290 004c 42FA03F3 		asr	r3, r2, r3
 24291 0050 1BB2     		sxth	r3, r3
 24292 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3493:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24293              		.loc 1 3493 0
 24294 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24295 0056 5B00     		lsls	r3, r3, #1
 24296 0058 0233     		adds	r3, r3, #2
 24297 005a 07F10C02 		add	r2, r7, #12
 24298 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24299 0060 07F11001 		add	r1, r7, #16
 24300 0064 0B44     		add	r3, r3, r1
 24301 0066 03F80C2C 		strb	r2, [r3, #-12]
3494:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24302              		.loc 1 3494 0
 24303 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24304 006c 5B00     		lsls	r3, r3, #1
 24305 006e 5A1C     		adds	r2, r3, #1
 24306 0070 07F10C03 		add	r3, r7, #12
 24307 0074 0133     		adds	r3, r3, #1
 24308 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24309 0078 07F11003 		add	r3, r7, #16
 24310 007c 1344     		add	r3, r3, r2
 24311 007e 0A46     		mov	r2, r1
 24312 0080 03F80C2C 		strb	r2, [r3, #-12]
 24313              	.L933:
3491:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24314              		.loc 1 3491 0 discriminator 1
 24315 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24316 0086 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 534


 24317 0088 FA73     		strb	r2, [r7, #15]
 24318 008a 002B     		cmp	r3, #0
 24319 008c C0D1     		bne	.L934
3495:..\src/command_processing.c ****     }
3496:..\src/command_processing.c ****     
3497:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3498:..\src/command_processing.c **** 
3499:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24320              		.loc 1 3499 0
 24321 008e 3B1D     		adds	r3, r7, #4
 24322 0090 0721     		movs	r1, #7
 24323 0092 1846     		mov	r0, r3
 24324 0094 FFF7FEFF 		bl	LCRChecksum
 24325 0098 0346     		mov	r3, r0
 24326 009a FB72     		strb	r3, [r7, #11]
3500:..\src/command_processing.c **** 
3501:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24327              		.loc 1 3501 0
 24328 009c 3B1D     		adds	r3, r7, #4
 24329 009e 0821     		movs	r1, #8
 24330 00a0 1846     		mov	r0, r3
 24331 00a2 FFF7FEFF 		bl	commWrite
3502:..\src/command_processing.c **** }
 24332              		.loc 1 3502 0
 24333 00a6 00BF     		nop
 24334 00a8 1437     		adds	r7, r7, #20
 24335              		.cfi_def_cfa_offset 12
 24336 00aa BD46     		mov	sp, r7
 24337              		.cfi_def_cfa_register 13
 24338              		@ sp needed
 24339 00ac 90BD     		pop	{r4, r7, pc}
 24340              	.L936:
 24341 00ae 00BF     		.align	2
 24342              	.L935:
 24343 00b0 00000000 		.word	g_mem
 24344 00b4 00000000 		.word	g_measOld
 24345              		.cfi_endproc
 24346              	.LFE96:
 24347              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24348              		.section	.text.cmd_get_joystick,"ax",%progbits
 24349              		.align	2
 24350              		.global	cmd_get_joystick
 24351              		.thumb
 24352              		.thumb_func
 24353              		.type	cmd_get_joystick, %function
 24354              	cmd_get_joystick:
 24355              	.LFB97:
3503:..\src/command_processing.c **** 
3504:..\src/command_processing.c **** void cmd_get_joystick() {
 24356              		.loc 1 3504 0
 24357              		.cfi_startproc
 24358              		@ args = 0, pretend = 0, frame = 8
 24359              		@ frame_needed = 1, uses_anonymous_args = 0
 24360 0000 80B5     		push	{r7, lr}
 24361              		.cfi_def_cfa_offset 8
 24362              		.cfi_offset 7, -8
 24363              		.cfi_offset 14, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 535


 24364 0002 82B0     		sub	sp, sp, #8
 24365              		.cfi_def_cfa_offset 16
 24366 0004 00AF     		add	r7, sp, #0
 24367              		.cfi_def_cfa_register 7
3505:..\src/command_processing.c ****  
3506:..\src/command_processing.c ****     int16 aux_int16;
3507:..\src/command_processing.c ****     
3508:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3509:..\src/command_processing.c ****     
3510:..\src/command_processing.c ****     uint8 packet_data[6];
3511:..\src/command_processing.c ****     
3512:..\src/command_processing.c ****     // Header        
3513:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24368              		.loc 1 3513 0
 24369 0006 9223     		movs	r3, #146
 24370 0008 3B70     		strb	r3, [r7]
3514:..\src/command_processing.c ****     
3515:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24371              		.loc 1 3515 0
 24372 000a 134B     		ldr	r3, .L938
 24373 000c 1B6A     		ldr	r3, [r3, #32]
 24374 000e 1BB2     		sxth	r3, r3
 24375 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3516:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24376              		.loc 1 3516 0
 24377 0012 BB1D     		adds	r3, r7, #6
 24378 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24379 0016 BB70     		strb	r3, [r7, #2]
3517:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24380              		.loc 1 3517 0
 24381 0018 BB1D     		adds	r3, r7, #6
 24382 001a 0133     		adds	r3, r3, #1
 24383 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24384 001e 7B70     		strb	r3, [r7, #1]
3518:..\src/command_processing.c ****     
3519:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24385              		.loc 1 3519 0
 24386 0020 0D4B     		ldr	r3, .L938
 24387 0022 5B6A     		ldr	r3, [r3, #36]
 24388 0024 1BB2     		sxth	r3, r3
 24389 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3520:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24390              		.loc 1 3520 0
 24391 0028 BB1D     		adds	r3, r7, #6
 24392 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24393 002c 3B71     		strb	r3, [r7, #4]
3521:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24394              		.loc 1 3521 0
 24395 002e BB1D     		adds	r3, r7, #6
 24396 0030 0133     		adds	r3, r3, #1
 24397 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24398 0034 FB70     		strb	r3, [r7, #3]
3522:..\src/command_processing.c **** 
3523:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24399              		.loc 1 3523 0
 24400 0036 3B46     		mov	r3, r7
 24401 0038 0521     		movs	r1, #5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 536


 24402 003a 1846     		mov	r0, r3
 24403 003c FFF7FEFF 		bl	LCRChecksum
 24404 0040 0346     		mov	r3, r0
 24405 0042 7B71     		strb	r3, [r7, #5]
3524:..\src/command_processing.c **** 
3525:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24406              		.loc 1 3525 0
 24407 0044 3B46     		mov	r3, r7
 24408 0046 0621     		movs	r1, #6
 24409 0048 1846     		mov	r0, r3
 24410 004a FFF7FEFF 		bl	commWrite
3526:..\src/command_processing.c **** }
 24411              		.loc 1 3526 0
 24412 004e 00BF     		nop
 24413 0050 0837     		adds	r7, r7, #8
 24414              		.cfi_def_cfa_offset 8
 24415 0052 BD46     		mov	sp, r7
 24416              		.cfi_def_cfa_register 13
 24417              		@ sp needed
 24418 0054 80BD     		pop	{r7, pc}
 24419              	.L939:
 24420 0056 00BF     		.align	2
 24421              	.L938:
 24422 0058 00000000 		.word	g_adc_measOld
 24423              		.cfi_endproc
 24424              	.LFE97:
 24425              		.size	cmd_get_joystick, .-cmd_get_joystick
 24426              		.section	.text.cmd_set_inputs,"ax",%progbits
 24427              		.align	2
 24428              		.global	cmd_set_inputs
 24429              		.thumb
 24430              		.thumb_func
 24431              		.type	cmd_set_inputs, %function
 24432              	cmd_set_inputs:
 24433              	.LFB98:
3527:..\src/command_processing.c **** 
3528:..\src/command_processing.c **** void cmd_set_inputs(){
 24434              		.loc 1 3528 0
 24435              		.cfi_startproc
 24436              		@ args = 0, pretend = 0, frame = 8
 24437              		@ frame_needed = 1, uses_anonymous_args = 0
 24438              		@ link register save eliminated.
 24439 0000 90B4     		push	{r4, r7}
 24440              		.cfi_def_cfa_offset 8
 24441              		.cfi_offset 4, -8
 24442              		.cfi_offset 7, -4
 24443 0002 82B0     		sub	sp, sp, #8
 24444              		.cfi_def_cfa_offset 16
 24445 0004 00AF     		add	r7, sp, #0
 24446              		.cfi_def_cfa_register 7
3529:..\src/command_processing.c ****     
3530:..\src/command_processing.c ****     // Store position setted in right variables
3531:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3532:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3533:..\src/command_processing.c ****     
3534:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24447              		.loc 1 3534 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 537


 24448 0006 844B     		ldr	r3, .L952
 24449 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24450 000a 1B02     		lsls	r3, r3, #8
 24451 000c 1AB2     		sxth	r2, r3
 24452 000e 824B     		ldr	r3, .L952
 24453 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24454 0012 1BB2     		sxth	r3, r3
 24455 0014 1343     		orrs	r3, r3, r2
 24456 0016 1BB2     		sxth	r3, r3
 24457 0018 3B80     		strh	r3, [r7]	@ movhi
3535:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24458              		.loc 1 3535 0
 24459 001a 7F4B     		ldr	r3, .L952
 24460 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24461 001e 1B02     		lsls	r3, r3, #8
 24462 0020 1AB2     		sxth	r2, r3
 24463 0022 7D4B     		ldr	r3, .L952
 24464 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24465 0026 1BB2     		sxth	r3, r3
 24466 0028 1343     		orrs	r3, r3, r2
 24467 002a 1BB2     		sxth	r3, r3
 24468 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24469              	.LBB31:
3536:..\src/command_processing.c ****     
3537:..\src/command_processing.c ****     // Check if last command received was the same as this 
3538:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3539:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 24470              		.loc 1 3539 0
 24471 002e 0023     		movs	r3, #0
 24472 0030 FB71     		strb	r3, [r7, #7]
 24473 0032 1EE0     		b	.L941
 24474              	.L943:
3540:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24475              		.loc 1 3540 0
 24476 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24477 0036 794A     		ldr	r2, .L952+4
 24478 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24479 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24480 003e 5B00     		lsls	r3, r3, #1
 24481 0040 07F10801 		add	r1, r7, #8
 24482 0044 0B44     		add	r3, r3, r1
 24483 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24484 004a 9A42     		cmp	r2, r3
 24485 004c 03D0     		beq	.L942
3541:..\src/command_processing.c ****             change_ext_ref_flag[i] = TRUE;
 24486              		.loc 1 3541 0
 24487 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24488 0050 734A     		ldr	r2, .L952+8
 24489 0052 0121     		movs	r1, #1
 24490 0054 D154     		strb	r1, [r2, r3]
 24491              	.L942:
3542:..\src/command_processing.c ****        }
3543:..\src/command_processing.c ****         // Update last command
3544:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24492              		.loc 1 3544 0 discriminator 2
 24493 0056 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24494 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 538


 24495 005a 5B00     		lsls	r3, r3, #1
 24496 005c 07F10801 		add	r1, r7, #8
 24497 0060 0B44     		add	r3, r3, r1
 24498 0062 33F9081C 		ldrsh	r1, [r3, #-8]
 24499 0066 6D4B     		ldr	r3, .L952+4
 24500 0068 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3539:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24501              		.loc 1 3539 0 discriminator 2
 24502 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24503 006e 0133     		adds	r3, r3, #1
 24504 0070 FB71     		strb	r3, [r7, #7]
 24505              	.L941:
3539:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24506              		.loc 1 3539 0 is_stmt 0 discriminator 1
 24507 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24508 0074 6B4B     		ldr	r3, .L952+12
 24509 0076 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24510 007a 0133     		adds	r3, r3, #1
 24511 007c 9A42     		cmp	r2, r3
 24512 007e D9DB     		blt	.L943
 24513              	.LBE31:
 24514              	.LBB32:
3545:..\src/command_processing.c ****     }
3546:..\src/command_processing.c ****     
3547:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3548:..\src/command_processing.c ****     for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24515              		.loc 1 3548 0 is_stmt 1
 24516 0080 0023     		movs	r3, #0
 24517 0082 BB71     		strb	r3, [r7, #6]
 24518 0084 BFE0     		b	.L944
 24519              	.L951:
3549:..\src/command_processing.c ****         if (change_ext_ref_flag[i]) {
 24520              		.loc 1 3549 0
 24521 0086 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24522 0088 654A     		ldr	r2, .L952+8
 24523 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24524 008c 002B     		cmp	r3, #0
 24525 008e 00F0B780 		beq	.L945
3550:..\src/command_processing.c ****             
3551:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24526              		.loc 1 3551 0
 24527 0092 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24528 0094 644A     		ldr	r2, .L952+16
 24529 0096 7421     		movs	r1, #116
 24530 0098 01FB03F3 		mul	r3, r1, r3
 24531 009c 1344     		add	r3, r3, r2
 24532 009e 03F20F13 		addw	r3, r3, #271
 24533 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24534 00a4 022B     		cmp	r3, #2
 24535 00a6 0ED1     		bne	.L946
3552:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24536              		.loc 1 3552 0
 24537 00a8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24538 00aa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24539 00ac 5B00     		lsls	r3, r3, #1
 24540 00ae 07F10801 		add	r1, r7, #8
 24541 00b2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 539


 24542 00b4 33F9083C 		ldrsh	r3, [r3, #-8]
 24543 00b8 1846     		mov	r0, r3
 24544 00ba 5C49     		ldr	r1, .L952+20
 24545 00bc 1301     		lsls	r3, r2, #4
 24546 00be 0B44     		add	r3, r3, r1
 24547 00c0 0433     		adds	r3, r3, #4
 24548 00c2 1860     		str	r0, [r3]
 24549 00c4 44E0     		b	.L947
 24550              	.L946:
3553:..\src/command_processing.c ****             }
3554:..\src/command_processing.c ****             else {
3555:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24551              		.loc 1 3555 0
 24552 00c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24553 00c8 574A     		ldr	r2, .L952+16
 24554 00ca 7421     		movs	r1, #116
 24555 00cc 01FB03F3 		mul	r3, r1, r3
 24556 00d0 1344     		add	r3, r3, r2
 24557 00d2 03F20F13 		addw	r3, r3, #271
 24558 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24559 00d8 012B     		cmp	r3, #1
 24560 00da 0ED1     		bne	.L948
3556:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24561              		.loc 1 3556 0
 24562 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24563 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24564 00e0 5B00     		lsls	r3, r3, #1
 24565 00e2 07F10801 		add	r1, r7, #8
 24566 00e6 0B44     		add	r3, r3, r1
 24567 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24568 00ec 1846     		mov	r0, r3
 24569 00ee 4F49     		ldr	r1, .L952+20
 24570 00f0 1301     		lsls	r3, r2, #4
 24571 00f2 0B44     		add	r3, r3, r1
 24572 00f4 0833     		adds	r3, r3, #8
 24573 00f6 1860     		str	r0, [r3]
 24574 00f8 2AE0     		b	.L947
 24575              	.L948:
3557:..\src/command_processing.c ****                 }
3558:..\src/command_processing.c ****                 else {
3559:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24576              		.loc 1 3559 0
 24577 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24578 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24579 00fe 5B00     		lsls	r3, r3, #1
 24580 0100 07F10801 		add	r1, r7, #8
 24581 0104 0B44     		add	r3, r3, r1
 24582 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24583 010a 1846     		mov	r0, r3
 24584 010c 4749     		ldr	r1, .L952+20
 24585 010e 1301     		lsls	r3, r2, #4
 24586 0110 0B44     		add	r3, r3, r1
 24587 0112 1860     		str	r0, [r3]
3560:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24588              		.loc 1 3560 0
 24589 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24590 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 540


 24591 0118 444A     		ldr	r2, .L952+20
 24592 011a 1B01     		lsls	r3, r3, #4
 24593 011c 1344     		add	r3, r3, r2
 24594 011e 1A68     		ldr	r2, [r3]
 24595 0120 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24596 0122 4048     		ldr	r0, .L952+12
 24597 0124 7424     		movs	r4, #116
 24598 0126 04FB03F3 		mul	r3, r4, r3
 24599 012a 0344     		add	r3, r3, r0
 24600 012c 03F58873 		add	r3, r3, #272
 24601 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24602 0132 1C46     		mov	r4, r3
 24603 0134 3C48     		ldr	r0, .L952+16
 24604 0136 2346     		mov	r3, r4
 24605 0138 5B00     		lsls	r3, r3, #1
 24606 013a 2344     		add	r3, r3, r4
 24607 013c 1B01     		lsls	r3, r3, #4
 24608 013e 0344     		add	r3, r3, r0
 24609 0140 03F29D13 		addw	r3, r3, #413
 24610 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24611 0146 9A40     		lsls	r2, r2, r3
 24612 0148 3848     		ldr	r0, .L952+20
 24613 014a 0B01     		lsls	r3, r1, #4
 24614 014c 0344     		add	r3, r3, r0
 24615 014e 1A60     		str	r2, [r3]
 24616              	.L947:
3561:..\src/command_processing.c ****                 }
3562:..\src/command_processing.c ****             }  
3563:..\src/command_processing.c ****                
3564:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3565:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24617              		.loc 1 3565 0
 24618 0150 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24619 0152 344A     		ldr	r2, .L952+12
 24620 0154 7421     		movs	r1, #116
 24621 0156 01FB03F3 		mul	r3, r1, r3
 24622 015a 1344     		add	r3, r3, r2
 24623 015c E333     		adds	r3, r3, #227
 24624 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24625 0160 002B     		cmp	r3, #0
 24626 0162 4DD0     		beq	.L945
 24627              		.loc 1 3565 0 is_stmt 0 discriminator 1
 24628 0164 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24629 0166 304A     		ldr	r2, .L952+16
 24630 0168 7421     		movs	r1, #116
 24631 016a 01FB03F3 		mul	r3, r1, r3
 24632 016e 1344     		add	r3, r3, r2
 24633 0170 03F20F13 		addw	r3, r3, #271
 24634 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24635 0176 032B     		cmp	r3, #3
 24636 0178 0AD0     		beq	.L949
 24637              		.loc 1 3565 0 discriminator 2
 24638 017a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24639 017c 2A4A     		ldr	r2, .L952+16
 24640 017e 7421     		movs	r1, #116
 24641 0180 01FB03F3 		mul	r3, r1, r3
 24642 0184 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 541


 24643 0186 03F20F13 		addw	r3, r3, #271
 24644 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24645 018c 002B     		cmp	r3, #0
 24646 018e 37D1     		bne	.L945
 24647              	.L949:
3566:..\src/command_processing.c ****                 
3567:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24648              		.loc 1 3567 0 is_stmt 1
 24649 0190 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24650 0192 264A     		ldr	r2, .L952+20
 24651 0194 1B01     		lsls	r3, r3, #4
 24652 0196 1344     		add	r3, r3, r2
 24653 0198 1A68     		ldr	r2, [r3]
 24654 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24655 019c 2149     		ldr	r1, .L952+12
 24656 019e 7420     		movs	r0, #116
 24657 01a0 00FB03F3 		mul	r3, r0, r3
 24658 01a4 0B44     		add	r3, r3, r1
 24659 01a6 E433     		adds	r3, r3, #228
 24660 01a8 1B68     		ldr	r3, [r3]
 24661 01aa 9A42     		cmp	r2, r3
 24662 01ac 0CDA     		bge	.L950
3568:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24663              		.loc 1 3568 0
 24664 01ae BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24665 01b0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24666 01b2 1C49     		ldr	r1, .L952+12
 24667 01b4 7420     		movs	r0, #116
 24668 01b6 00FB02F2 		mul	r2, r0, r2
 24669 01ba 0A44     		add	r2, r2, r1
 24670 01bc E432     		adds	r2, r2, #228
 24671 01be 1268     		ldr	r2, [r2]
 24672 01c0 1A49     		ldr	r1, .L952+20
 24673 01c2 1B01     		lsls	r3, r3, #4
 24674 01c4 0B44     		add	r3, r3, r1
 24675 01c6 1A60     		str	r2, [r3]
 24676              	.L950:
3569:..\src/command_processing.c **** 
3570:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24677              		.loc 1 3570 0
 24678 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24679 01ca 184A     		ldr	r2, .L952+20
 24680 01cc 1B01     		lsls	r3, r3, #4
 24681 01ce 1344     		add	r3, r3, r2
 24682 01d0 1A68     		ldr	r2, [r3]
 24683 01d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24684 01d4 1349     		ldr	r1, .L952+12
 24685 01d6 7420     		movs	r0, #116
 24686 01d8 00FB03F3 		mul	r3, r0, r3
 24687 01dc 0B44     		add	r3, r3, r1
 24688 01de E833     		adds	r3, r3, #232
 24689 01e0 1B68     		ldr	r3, [r3]
 24690 01e2 9A42     		cmp	r2, r3
 24691 01e4 0CDD     		ble	.L945
3571:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24692              		.loc 1 3571 0
 24693 01e6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 542


 24694 01e8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24695 01ea 0E49     		ldr	r1, .L952+12
 24696 01ec 7420     		movs	r0, #116
 24697 01ee 00FB02F2 		mul	r2, r0, r2
 24698 01f2 0A44     		add	r2, r2, r1
 24699 01f4 E832     		adds	r2, r2, #232
 24700 01f6 1268     		ldr	r2, [r2]
 24701 01f8 0C49     		ldr	r1, .L952+20
 24702 01fa 1B01     		lsls	r3, r3, #4
 24703 01fc 0B44     		add	r3, r3, r1
 24704 01fe 1A60     		str	r2, [r3]
 24705              	.L945:
3548:..\src/command_processing.c ****         if (change_ext_ref_flag[i]) {
 24706              		.loc 1 3548 0 discriminator 2
 24707 0200 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24708 0202 0133     		adds	r3, r3, #1
 24709 0204 BB71     		strb	r3, [r7, #6]
 24710              	.L944:
3548:..\src/command_processing.c ****         if (change_ext_ref_flag[i]) {
 24711              		.loc 1 3548 0 is_stmt 0 discriminator 1
 24712 0206 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24713 0208 012B     		cmp	r3, #1
 24714 020a 7FF63CAF 		bls	.L951
 24715              	.LBE32:
3572:..\src/command_processing.c ****             }
3573:..\src/command_processing.c ****         }
3574:..\src/command_processing.c ****     }  
3575:..\src/command_processing.c **** }
 24716              		.loc 1 3575 0 is_stmt 1
 24717 020e 00BF     		nop
 24718 0210 0837     		adds	r7, r7, #8
 24719              		.cfi_def_cfa_offset 8
 24720 0212 BD46     		mov	sp, r7
 24721              		.cfi_def_cfa_register 13
 24722              		@ sp needed
 24723 0214 90BC     		pop	{r4, r7}
 24724              		.cfi_restore 7
 24725              		.cfi_restore 4
 24726              		.cfi_def_cfa_offset 0
 24727 0216 7047     		bx	lr
 24728              	.L953:
 24729              		.align	2
 24730              	.L952:
 24731 0218 00000000 		.word	g_rx
 24732 021c 08000000 		.word	last_aux_int16.11419
 24733 0220 00000000 		.word	change_ext_ref_flag
 24734 0224 00000000 		.word	c_mem
 24735 0228 00000000 		.word	g_mem
 24736 022c 00000000 		.word	g_refNew
 24737              		.cfi_endproc
 24738              	.LFE98:
 24739              		.size	cmd_set_inputs, .-cmd_set_inputs
 24740              		.section	.text.cmd_activate,"ax",%progbits
 24741              		.align	2
 24742              		.global	cmd_activate
 24743              		.thumb
 24744              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 543


 24745              		.type	cmd_activate, %function
 24746              	cmd_activate:
 24747              	.LFB99:
3576:..\src/command_processing.c **** 
3577:..\src/command_processing.c **** void cmd_activate(){
 24748              		.loc 1 3577 0
 24749              		.cfi_startproc
 24750              		@ args = 0, pretend = 0, frame = 8
 24751              		@ frame_needed = 1, uses_anonymous_args = 0
 24752 0000 80B5     		push	{r7, lr}
 24753              		.cfi_def_cfa_offset 8
 24754              		.cfi_offset 7, -8
 24755              		.cfi_offset 14, -4
 24756 0002 82B0     		sub	sp, sp, #8
 24757              		.cfi_def_cfa_offset 16
 24758 0004 00AF     		add	r7, sp, #0
 24759              		.cfi_def_cfa_register 7
3578:..\src/command_processing.c ****     
3579:..\src/command_processing.c ****     // Store new value reads
3580:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24760              		.loc 1 3580 0
 24761 0006 294B     		ldr	r3, .L961
 24762 0008 5B78     		ldrb	r3, [r3, #1]
 24763 000a FB71     		strb	r3, [r7, #7]
3581:..\src/command_processing.c ****     
3582:..\src/command_processing.c ****     // Check type of control mode enabled
3583:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24764              		.loc 1 3583 0
 24765 000c 284B     		ldr	r3, .L961+4
 24766 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24767 0012 002B     		cmp	r3, #0
 24768 0014 04D0     		beq	.L955
 24769              		.loc 1 3583 0 is_stmt 0 discriminator 1
 24770 0016 264B     		ldr	r3, .L961+4
 24771 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24772 001c 032B     		cmp	r3, #3
 24773 001e 0BD1     		bne	.L956
 24774              	.L955:
3584:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24775              		.loc 1 3584 0 is_stmt 1
 24776 0020 234B     		ldr	r3, .L961+4
 24777 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24778 0026 1946     		mov	r1, r3
 24779 0028 224A     		ldr	r2, .L961+8
 24780 002a 3423     		movs	r3, #52
 24781 002c 03FB01F3 		mul	r3, r3, r1
 24782 0030 1344     		add	r3, r3, r2
 24783 0032 1B68     		ldr	r3, [r3]
 24784 0034 204A     		ldr	r2, .L961+12
 24785 0036 1360     		str	r3, [r2]
 24786              	.L956:
3585:..\src/command_processing.c ****     }
3586:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24787              		.loc 1 3586 0
 24788 0038 FB79     		ldrb	r3, [r7, #7]
 24789 003a 03F00103 		and	r3, r3, #1
 24790 003e DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 544


 24791 0040 1D4B     		ldr	r3, .L961+12
 24792 0042 1A73     		strb	r2, [r3, #12]
3587:..\src/command_processing.c ****     
3588:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3589:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3590:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3591:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3592:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3593:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3594:..\src/command_processing.c ****         }
3595:..\src/command_processing.c ****         
3596:..\src/command_processing.c ****         // Activate or deactivate the valve
3597:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3598:..\src/command_processing.c ****     }
3599:..\src/command_processing.c **** #endif
3600:..\src/command_processing.c ****     
3601:..\src/command_processing.c ****     // Activate/Deactivate motor
3602:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24793              		.loc 1 3602 0
 24794 0044 1C4B     		ldr	r3, .L961+12
 24795 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24796 0048 1946     		mov	r1, r3
 24797 004a 0020     		movs	r0, #0
 24798 004c FFF7FEFF 		bl	enable_motor
3603:..\src/command_processing.c ****     
3604:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24799              		.loc 1 3604 0
 24800 0050 174B     		ldr	r3, .L961+4
 24801 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24802 0056 012B     		cmp	r3, #1
 24803 0058 23D1     		bne	.L960
3605:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24804              		.loc 1 3605 0
 24805 005a 154B     		ldr	r3, .L961+4
 24806 005c 93F88331 		ldrb	r3, [r3, #387]	@ zero_extendqisi2
 24807 0060 002B     		cmp	r3, #0
 24808 0062 04D0     		beq	.L958
 24809              		.loc 1 3605 0 is_stmt 0 discriminator 1
 24810 0064 124B     		ldr	r3, .L961+4
 24811 0066 93F88331 		ldrb	r3, [r3, #387]	@ zero_extendqisi2
 24812 006a 032B     		cmp	r3, #3
 24813 006c 0BD1     		bne	.L959
 24814              	.L958:
3606:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24815              		.loc 1 3606 0 is_stmt 1
 24816 006e 104B     		ldr	r3, .L961+4
 24817 0070 93F88431 		ldrb	r3, [r3, #388]	@ zero_extendqisi2
 24818 0074 1946     		mov	r1, r3
 24819 0076 0F4A     		ldr	r2, .L961+8
 24820 0078 3423     		movs	r3, #52
 24821 007a 03FB01F3 		mul	r3, r3, r1
 24822 007e 1344     		add	r3, r3, r2
 24823 0080 1B68     		ldr	r3, [r3]
 24824 0082 0D4A     		ldr	r2, .L961+12
 24825 0084 1361     		str	r3, [r2, #16]
 24826              	.L959:
3607:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 545


3608:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24827              		.loc 1 3608 0
 24828 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24829 0088 5B08     		lsrs	r3, r3, #1
 24830 008a DBB2     		uxtb	r3, r3
 24831 008c 03F00103 		and	r3, r3, #1
 24832 0090 DAB2     		uxtb	r2, r3
 24833 0092 094B     		ldr	r3, .L961+12
 24834 0094 1A77     		strb	r2, [r3, #28]
3609:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24835              		.loc 1 3609 0
 24836 0096 084B     		ldr	r3, .L961+12
 24837 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24838 009a 1946     		mov	r1, r3
 24839 009c 0120     		movs	r0, #1
 24840 009e FFF7FEFF 		bl	enable_motor
 24841              	.L960:
3610:..\src/command_processing.c ****     }
3611:..\src/command_processing.c ****     
3612:..\src/command_processing.c **** }
 24842              		.loc 1 3612 0
 24843 00a2 00BF     		nop
 24844 00a4 0837     		adds	r7, r7, #8
 24845              		.cfi_def_cfa_offset 8
 24846 00a6 BD46     		mov	sp, r7
 24847              		.cfi_def_cfa_register 13
 24848              		@ sp needed
 24849 00a8 80BD     		pop	{r7, pc}
 24850              	.L962:
 24851 00aa 00BF     		.align	2
 24852              	.L961:
 24853 00ac 00000000 		.word	g_rx
 24854 00b0 00000000 		.word	g_mem
 24855 00b4 00000000 		.word	g_meas
 24856 00b8 00000000 		.word	g_refNew
 24857              		.cfi_endproc
 24858              	.LFE99:
 24859              		.size	cmd_activate, .-cmd_activate
 24860              		.section	.text.cmd_get_activate,"ax",%progbits
 24861              		.align	2
 24862              		.global	cmd_get_activate
 24863              		.thumb
 24864              		.thumb_func
 24865              		.type	cmd_get_activate, %function
 24866              	cmd_get_activate:
 24867              	.LFB100:
3613:..\src/command_processing.c **** 
3614:..\src/command_processing.c **** void cmd_get_activate(){
 24868              		.loc 1 3614 0
 24869              		.cfi_startproc
 24870              		@ args = 0, pretend = 0, frame = 8
 24871              		@ frame_needed = 1, uses_anonymous_args = 0
 24872 0000 80B5     		push	{r7, lr}
 24873              		.cfi_def_cfa_offset 8
 24874              		.cfi_offset 7, -8
 24875              		.cfi_offset 14, -4
 24876 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 546


 24877              		.cfi_def_cfa_offset 16
 24878 0004 00AF     		add	r7, sp, #0
 24879              		.cfi_def_cfa_register 7
3615:..\src/command_processing.c ****     
3616:..\src/command_processing.c ****     uint8 packet_data[3];
3617:..\src/command_processing.c **** 
3618:..\src/command_processing.c ****     // Header        
3619:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24880              		.loc 1 3619 0
 24881 0006 8123     		movs	r3, #129
 24882 0008 3B71     		strb	r3, [r7, #4]
3620:..\src/command_processing.c ****     
3621:..\src/command_processing.c ****     // Fill payload
3622:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24883              		.loc 1 3622 0
 24884 000a 124B     		ldr	r3, .L966
 24885 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24886 0010 012B     		cmp	r3, #1
 24887 0012 0BD1     		bne	.L964
3623:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24888              		.loc 1 3623 0
 24889 0014 104B     		ldr	r3, .L966+4
 24890 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24891 0018 5B00     		lsls	r3, r3, #1
 24892 001a 5AB2     		sxtb	r2, r3
 24893 001c 0E4B     		ldr	r3, .L966+4
 24894 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24895 0020 5BB2     		sxtb	r3, r3
 24896 0022 1343     		orrs	r3, r3, r2
 24897 0024 5BB2     		sxtb	r3, r3
 24898 0026 DBB2     		uxtb	r3, r3
 24899 0028 7B71     		strb	r3, [r7, #5]
 24900 002a 02E0     		b	.L965
 24901              	.L964:
3624:..\src/command_processing.c ****     } 
3625:..\src/command_processing.c ****     else {
3626:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24902              		.loc 1 3626 0
 24903 002c 0A4B     		ldr	r3, .L966+4
 24904 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24905 0030 7B71     		strb	r3, [r7, #5]
 24906              	.L965:
3627:..\src/command_processing.c ****     }
3628:..\src/command_processing.c ****     
3629:..\src/command_processing.c ****     // Calculate checksum
3630:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24907              		.loc 1 3630 0
 24908 0032 3B1D     		adds	r3, r7, #4
 24909 0034 0221     		movs	r1, #2
 24910 0036 1846     		mov	r0, r3
 24911 0038 FFF7FEFF 		bl	LCRChecksum
 24912 003c 0346     		mov	r3, r0
 24913 003e BB71     		strb	r3, [r7, #6]
3631:..\src/command_processing.c ****     
3632:..\src/command_processing.c ****     // Send package to UART
3633:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24914              		.loc 1 3633 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 547


 24915 0040 3B1D     		adds	r3, r7, #4
 24916 0042 0321     		movs	r1, #3
 24917 0044 1846     		mov	r0, r3
 24918 0046 FFF7FEFF 		bl	commWrite
3634:..\src/command_processing.c **** 
3635:..\src/command_processing.c **** }
 24919              		.loc 1 3635 0
 24920 004a 00BF     		nop
 24921 004c 0837     		adds	r7, r7, #8
 24922              		.cfi_def_cfa_offset 8
 24923 004e BD46     		mov	sp, r7
 24924              		.cfi_def_cfa_register 13
 24925              		@ sp needed
 24926 0050 80BD     		pop	{r7, pc}
 24927              	.L967:
 24928 0052 00BF     		.align	2
 24929              	.L966:
 24930 0054 00000000 		.word	g_mem
 24931 0058 00000000 		.word	g_ref
 24932              		.cfi_endproc
 24933              	.LFE100:
 24934              		.size	cmd_get_activate, .-cmd_get_activate
 24935              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24936              		.align	2
 24937              		.global	cmd_get_curr_and_meas
 24938              		.thumb
 24939              		.thumb_func
 24940              		.type	cmd_get_curr_and_meas, %function
 24941              	cmd_get_curr_and_meas:
 24942              	.LFB101:
3636:..\src/command_processing.c **** 
3637:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24943              		.loc 1 3637 0
 24944              		.cfi_startproc
 24945              		@ args = 0, pretend = 0, frame = 16
 24946              		@ frame_needed = 1, uses_anonymous_args = 0
 24947 0000 90B5     		push	{r4, r7, lr}
 24948              		.cfi_def_cfa_offset 12
 24949              		.cfi_offset 4, -12
 24950              		.cfi_offset 7, -8
 24951              		.cfi_offset 14, -4
 24952 0002 85B0     		sub	sp, sp, #20
 24953              		.cfi_def_cfa_offset 32
 24954 0004 00AF     		add	r7, sp, #0
 24955              		.cfi_def_cfa_register 7
3638:..\src/command_processing.c ****     
3639:..\src/command_processing.c ****     uint8 CYDATA index;
3640:..\src/command_processing.c ****     int16 aux_int16;
3641:..\src/command_processing.c ****    
3642:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3643:..\src/command_processing.c ****     
3644:..\src/command_processing.c ****     uint8 packet_data[12]; 
3645:..\src/command_processing.c **** 
3646:..\src/command_processing.c ****     //Header package
3647:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24956              		.loc 1 3647 0
 24957 0006 8623     		movs	r3, #134
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 548


 24958 0008 3B70     		strb	r3, [r7]
3648:..\src/command_processing.c **** 
3649:..\src/command_processing.c ****     // Currents
3650:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24959              		.loc 1 3650 0
 24960 000a 484B     		ldr	r3, .L973
 24961 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24962 0010 1946     		mov	r1, r3
 24963 0012 474A     		ldr	r2, .L973+4
 24964 0014 3423     		movs	r3, #52
 24965 0016 03FB01F3 		mul	r3, r3, r1
 24966 001a 1344     		add	r3, r3, r2
 24967 001c 0C33     		adds	r3, r3, #12
 24968 001e 1B68     		ldr	r3, [r3]
 24969 0020 1BB2     		sxth	r3, r3
 24970 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3651:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24971              		.loc 1 3651 0
 24972 0024 07F10C03 		add	r3, r7, #12
 24973 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24974 002a BB70     		strb	r3, [r7, #2]
3652:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24975              		.loc 1 3652 0
 24976 002c 07F10C03 		add	r3, r7, #12
 24977 0030 0133     		adds	r3, r3, #1
 24978 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24979 0034 7B70     		strb	r3, [r7, #1]
3653:..\src/command_processing.c ****     
3654:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24980              		.loc 1 3654 0
 24981 0036 3F4B     		ldr	r3, .L973+8
 24982 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24983 003c 012B     		cmp	r3, #1
 24984 003e 0DD1     		bne	.L969
3655:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24985              		.loc 1 3655 0
 24986 0040 3A4B     		ldr	r3, .L973
 24987 0042 93F88431 		ldrb	r3, [r3, #388]	@ zero_extendqisi2
 24988 0046 1946     		mov	r1, r3
 24989 0048 394A     		ldr	r2, .L973+4
 24990 004a 3423     		movs	r3, #52
 24991 004c 03FB01F3 		mul	r3, r3, r1
 24992 0050 1344     		add	r3, r3, r2
 24993 0052 0C33     		adds	r3, r3, #12
 24994 0054 1B68     		ldr	r3, [r3]
 24995 0056 1BB2     		sxth	r3, r3
 24996 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24997 005a 0CE0     		b	.L970
 24998              	.L969:
3656:..\src/command_processing.c ****     }
3657:..\src/command_processing.c ****     else {
3658:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24999              		.loc 1 3658 0
 25000 005c 334B     		ldr	r3, .L973
 25001 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25002 0062 1946     		mov	r1, r3
 25003 0064 324A     		ldr	r2, .L973+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 549


 25004 0066 3423     		movs	r3, #52
 25005 0068 03FB01F3 		mul	r3, r3, r1
 25006 006c 1344     		add	r3, r3, r2
 25007 006e 1033     		adds	r3, r3, #16
 25008 0070 1B68     		ldr	r3, [r3]
 25009 0072 1BB2     		sxth	r3, r3
 25010 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 25011              	.L970:
3659:..\src/command_processing.c ****     }
3660:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25012              		.loc 1 3660 0
 25013 0076 07F10C03 		add	r3, r7, #12
 25014 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25015 007c 3B71     		strb	r3, [r7, #4]
3661:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25016              		.loc 1 3661 0
 25017 007e 07F10C03 		add	r3, r7, #12
 25018 0082 0133     		adds	r3, r3, #1
 25019 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25020 0086 FB70     		strb	r3, [r7, #3]
3662:..\src/command_processing.c **** 
3663:..\src/command_processing.c ****     // Positions
3664:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 25021              		.loc 1 3664 0
 25022 0088 0323     		movs	r3, #3
 25023 008a FB73     		strb	r3, [r7, #15]
 25024 008c 38E0     		b	.L971
 25025              	.L972:
3665:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 25026              		.loc 1 3665 0
 25027 008e 274B     		ldr	r3, .L973
 25028 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25029 0094 1A46     		mov	r2, r3
 25030 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25031 0098 2548     		ldr	r0, .L973+4
 25032 009a 1346     		mov	r3, r2
 25033 009c 5B00     		lsls	r3, r3, #1
 25034 009e 1344     		add	r3, r3, r2
 25035 00a0 9B00     		lsls	r3, r3, #2
 25036 00a2 1344     		add	r3, r3, r2
 25037 00a4 0B44     		add	r3, r3, r1
 25038 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 25039 00aa 204B     		ldr	r3, .L973
 25040 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25041 00b0 1C46     		mov	r4, r3
 25042 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25043 00b4 1D48     		ldr	r0, .L973
 25044 00b6 2346     		mov	r3, r4
 25045 00b8 5B00     		lsls	r3, r3, #1
 25046 00ba 2344     		add	r3, r3, r4
 25047 00bc 1B01     		lsls	r3, r3, #4
 25048 00be 0344     		add	r3, r3, r0
 25049 00c0 0B44     		add	r3, r3, r1
 25050 00c2 03F29D13 		addw	r3, r3, #413
 25051 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25052 00c8 42FA03F3 		asr	r3, r2, r3
 25053 00cc 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 550


 25054 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3666:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 25055              		.loc 1 3666 0
 25056 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25057 00d2 5B00     		lsls	r3, r3, #1
 25058 00d4 0633     		adds	r3, r3, #6
 25059 00d6 07F10C02 		add	r2, r7, #12
 25060 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25061 00dc 07F11001 		add	r1, r7, #16
 25062 00e0 0B44     		add	r3, r3, r1
 25063 00e2 03F8102C 		strb	r2, [r3, #-16]
3667:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 25064              		.loc 1 3667 0
 25065 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25066 00e8 5B00     		lsls	r3, r3, #1
 25067 00ea 5A1D     		adds	r2, r3, #5
 25068 00ec 07F10C03 		add	r3, r7, #12
 25069 00f0 0133     		adds	r3, r3, #1
 25070 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25071 00f4 07F11003 		add	r3, r7, #16
 25072 00f8 1344     		add	r3, r3, r2
 25073 00fa 0A46     		mov	r2, r1
 25074 00fc 03F8102C 		strb	r2, [r3, #-16]
 25075              	.L971:
3664:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 25076              		.loc 1 3664 0 discriminator 1
 25077 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25078 0102 5A1E     		subs	r2, r3, #1
 25079 0104 FA73     		strb	r2, [r7, #15]
 25080 0106 002B     		cmp	r3, #0
 25081 0108 C1D1     		bne	.L972
3668:..\src/command_processing.c ****     }
3669:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3670:..\src/command_processing.c ****         
3671:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 25082              		.loc 1 3671 0
 25083 010a 3B46     		mov	r3, r7
 25084 010c 0B21     		movs	r1, #11
 25085 010e 1846     		mov	r0, r3
 25086 0110 FFF7FEFF 		bl	LCRChecksum
 25087 0114 0346     		mov	r3, r0
 25088 0116 FB72     		strb	r3, [r7, #11]
3672:..\src/command_processing.c ****     commWrite(packet_data, 12);
 25089              		.loc 1 3672 0
 25090 0118 3B46     		mov	r3, r7
 25091 011a 0C21     		movs	r1, #12
 25092 011c 1846     		mov	r0, r3
 25093 011e FFF7FEFF 		bl	commWrite
3673:..\src/command_processing.c ****    
3674:..\src/command_processing.c **** }
 25094              		.loc 1 3674 0
 25095 0122 00BF     		nop
 25096 0124 1437     		adds	r7, r7, #20
 25097              		.cfi_def_cfa_offset 12
 25098 0126 BD46     		mov	sp, r7
 25099              		.cfi_def_cfa_register 13
 25100              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 551


 25101 0128 90BD     		pop	{r4, r7, pc}
 25102              	.L974:
 25103 012a 00BF     		.align	2
 25104              	.L973:
 25105 012c 00000000 		.word	g_mem
 25106 0130 00000000 		.word	g_measOld
 25107 0134 00000000 		.word	c_mem
 25108              		.cfi_endproc
 25109              	.LFE101:
 25110              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 25111              		.global	__aeabi_dmul
 25112              		.global	__aeabi_d2iz
 25113              		.section	.text.cmd_get_currents,"ax",%progbits
 25114              		.align	2
 25115              		.global	cmd_get_currents
 25116              		.thumb
 25117              		.thumb_func
 25118              		.type	cmd_get_currents, %function
 25119              	cmd_get_currents:
 25120              	.LFB102:
3675:..\src/command_processing.c **** 
3676:..\src/command_processing.c **** void cmd_get_currents(){
 25121              		.loc 1 3676 0
 25122              		.cfi_startproc
 25123              		@ args = 0, pretend = 0, frame = 16
 25124              		@ frame_needed = 1, uses_anonymous_args = 0
 25125 0000 90B5     		push	{r4, r7, lr}
 25126              		.cfi_def_cfa_offset 12
 25127              		.cfi_offset 4, -12
 25128              		.cfi_offset 7, -8
 25129              		.cfi_offset 14, -4
 25130 0002 85B0     		sub	sp, sp, #20
 25131              		.cfi_def_cfa_offset 32
 25132 0004 00AF     		add	r7, sp, #0
 25133              		.cfi_def_cfa_register 7
3677:..\src/command_processing.c ****     
3678:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3679:..\src/command_processing.c ****     
3680:..\src/command_processing.c ****     uint8 packet_data[6]; 
3681:..\src/command_processing.c ****     int16 aux_int16;
3682:..\src/command_processing.c ****     
3683:..\src/command_processing.c ****     //Header package
3684:..\src/command_processing.c **** 
3685:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 25134              		.loc 1 3685 0
 25135 0006 8523     		movs	r3, #133
 25136 0008 3B72     		strb	r3, [r7, #8]
3686:..\src/command_processing.c **** 
3687:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 25137              		.loc 1 3687 0
 25138 000a 334B     		ldr	r3, .L980
 25139 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 25140 0010 022B     		cmp	r3, #2
 25141 0012 0DD0     		beq	.L976
3688:..\src/command_processing.c ****         // Currents
3689:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 25142              		.loc 1 3689 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 552


 25143 0014 314B     		ldr	r3, .L980+4
 25144 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25145 001a 1946     		mov	r1, r3
 25146 001c 304A     		ldr	r2, .L980+8
 25147 001e 3423     		movs	r3, #52
 25148 0020 03FB01F3 		mul	r3, r3, r1
 25149 0024 1344     		add	r3, r3, r2
 25150 0026 0C33     		adds	r3, r3, #12
 25151 0028 1B68     		ldr	r3, [r3]
 25152 002a 1BB2     		sxth	r3, r3
 25153 002c FB80     		strh	r3, [r7, #6]	@ movhi
 25154 002e 12E0     		b	.L977
 25155              	.L976:
3690:..\src/command_processing.c ****     }
3691:..\src/command_processing.c ****     else {
3692:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3693:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 25156              		.loc 1 3693 0
 25157 0030 2C4B     		ldr	r3, .L980+12
 25158 0032 1B68     		ldr	r3, [r3]	@ float
 25159 0034 1846     		mov	r0, r3
 25160 0036 FFF7FEFF 		bl	__aeabi_f2d
 25161 003a 4FF00002 		mov	r2, #0
 25162 003e 2A4B     		ldr	r3, .L980+16
 25163 0040 FFF7FEFF 		bl	__aeabi_dmul
 25164 0044 0346     		mov	r3, r0
 25165 0046 0C46     		mov	r4, r1
 25166 0048 1846     		mov	r0, r3
 25167 004a 2146     		mov	r1, r4
 25168 004c FFF7FEFF 		bl	__aeabi_d2iz
 25169 0050 0346     		mov	r3, r0
 25170 0052 1BB2     		sxth	r3, r3
 25171 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 25172              	.L977:
3694:..\src/command_processing.c ****     }
3695:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25173              		.loc 1 3695 0
 25174 0056 BB1D     		adds	r3, r7, #6
 25175 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25176 005a BB72     		strb	r3, [r7, #10]
3696:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25177              		.loc 1 3696 0
 25178 005c BB1D     		adds	r3, r7, #6
 25179 005e 0133     		adds	r3, r3, #1
 25180 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25181 0062 7B72     		strb	r3, [r7, #9]
3697:..\src/command_processing.c ****     
3698:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25182              		.loc 1 3698 0
 25183 0064 1C4B     		ldr	r3, .L980
 25184 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25185 006a 012B     		cmp	r3, #1
 25186 006c 0DD1     		bne	.L978
3699:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 25187              		.loc 1 3699 0
 25188 006e 1B4B     		ldr	r3, .L980+4
 25189 0070 93F88431 		ldrb	r3, [r3, #388]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 553


 25190 0074 1946     		mov	r1, r3
 25191 0076 1A4A     		ldr	r2, .L980+8
 25192 0078 3423     		movs	r3, #52
 25193 007a 03FB01F3 		mul	r3, r3, r1
 25194 007e 1344     		add	r3, r3, r2
 25195 0080 0C33     		adds	r3, r3, #12
 25196 0082 1B68     		ldr	r3, [r3]
 25197 0084 1BB2     		sxth	r3, r3
 25198 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 25199 0088 0CE0     		b	.L979
 25200              	.L978:
3700:..\src/command_processing.c ****     }
3701:..\src/command_processing.c ****     else {
3702:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 25201              		.loc 1 3702 0
 25202 008a 144B     		ldr	r3, .L980+4
 25203 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25204 0090 1946     		mov	r1, r3
 25205 0092 134A     		ldr	r2, .L980+8
 25206 0094 3423     		movs	r3, #52
 25207 0096 03FB01F3 		mul	r3, r3, r1
 25208 009a 1344     		add	r3, r3, r2
 25209 009c 1033     		adds	r3, r3, #16
 25210 009e 1B68     		ldr	r3, [r3]
 25211 00a0 1BB2     		sxth	r3, r3
 25212 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 25213              	.L979:
3703:..\src/command_processing.c ****     }
3704:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25214              		.loc 1 3704 0
 25215 00a4 BB1D     		adds	r3, r7, #6
 25216 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25217 00a8 3B73     		strb	r3, [r7, #12]
3705:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25218              		.loc 1 3705 0
 25219 00aa BB1D     		adds	r3, r7, #6
 25220 00ac 0133     		adds	r3, r3, #1
 25221 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25222 00b0 FB72     		strb	r3, [r7, #11]
3706:..\src/command_processing.c **** 
3707:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3708:..\src/command_processing.c **** 
3709:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25223              		.loc 1 3709 0
 25224 00b2 07F10803 		add	r3, r7, #8
 25225 00b6 0521     		movs	r1, #5
 25226 00b8 1846     		mov	r0, r3
 25227 00ba FFF7FEFF 		bl	LCRChecksum
 25228 00be 0346     		mov	r3, r0
 25229 00c0 7B73     		strb	r3, [r7, #13]
3710:..\src/command_processing.c ****     
3711:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25230              		.loc 1 3711 0
 25231 00c2 07F10803 		add	r3, r7, #8
 25232 00c6 0621     		movs	r1, #6
 25233 00c8 1846     		mov	r0, r3
 25234 00ca FFF7FEFF 		bl	commWrite
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 554


3712:..\src/command_processing.c **** }
 25235              		.loc 1 3712 0
 25236 00ce 00BF     		nop
 25237 00d0 1437     		adds	r7, r7, #20
 25238              		.cfi_def_cfa_offset 12
 25239 00d2 BD46     		mov	sp, r7
 25240              		.cfi_def_cfa_register 13
 25241              		@ sp needed
 25242 00d4 90BD     		pop	{r4, r7, pc}
 25243              	.L981:
 25244 00d6 00BF     		.align	2
 25245              	.L980:
 25246 00d8 00000000 		.word	c_mem
 25247 00dc 00000000 		.word	g_mem
 25248 00e0 00000000 		.word	g_measOld
 25249 00e4 00000000 		.word	g_fb_meas
 25250 00e8 00005940 		.word	1079574528
 25251              		.cfi_endproc
 25252              	.LFE102:
 25253              		.size	cmd_get_currents, .-cmd_get_currents
 25254              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25255              		.align	2
 25256              		.global	cmd_get_currents_for_cuff
 25257              		.thumb
 25258              		.thumb_func
 25259              		.type	cmd_get_currents_for_cuff, %function
 25260              	cmd_get_currents_for_cuff:
 25261              	.LFB103:
3713:..\src/command_processing.c **** 
3714:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25262              		.loc 1 3714 0
 25263              		.cfi_startproc
 25264              		@ args = 0, pretend = 0, frame = 8
 25265              		@ frame_needed = 1, uses_anonymous_args = 0
 25266 0000 80B5     		push	{r7, lr}
 25267              		.cfi_def_cfa_offset 8
 25268              		.cfi_offset 7, -8
 25269              		.cfi_offset 14, -4
 25270 0002 82B0     		sub	sp, sp, #8
 25271              		.cfi_def_cfa_offset 16
 25272 0004 00AF     		add	r7, sp, #0
 25273              		.cfi_def_cfa_register 7
3715:..\src/command_processing.c ****     
3716:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3717:..\src/command_processing.c ****     
3718:..\src/command_processing.c ****     uint8 packet_data[4]; 
3719:..\src/command_processing.c ****     int16 aux_int16;
3720:..\src/command_processing.c ****     
3721:..\src/command_processing.c ****     //Header package
3722:..\src/command_processing.c **** 
3723:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25274              		.loc 1 3723 0
 25275 0006 8E23     		movs	r3, #142
 25276 0008 3B71     		strb	r3, [r7, #4]
3724:..\src/command_processing.c **** 
3725:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25277              		.loc 1 3725 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 555


 25278 000a 144B     		ldr	r3, .L983
 25279 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25280 0010 1946     		mov	r1, r3
 25281 0012 134A     		ldr	r2, .L983+4
 25282 0014 3423     		movs	r3, #52
 25283 0016 03FB01F3 		mul	r3, r3, r1
 25284 001a 1344     		add	r3, r3, r2
 25285 001c 1033     		adds	r3, r3, #16
 25286 001e 1B68     		ldr	r3, [r3]
 25287 0020 1BB2     		sxth	r3, r3
 25288 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3726:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25289              		.loc 1 3726 0
 25290 0024 BB1C     		adds	r3, r7, #2
 25291 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25292 0028 BB71     		strb	r3, [r7, #6]
3727:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25293              		.loc 1 3727 0
 25294 002a BB1C     		adds	r3, r7, #2
 25295 002c 0133     		adds	r3, r3, #1
 25296 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25297 0030 7B71     		strb	r3, [r7, #5]
3728:..\src/command_processing.c **** 
3729:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3730:..\src/command_processing.c **** 
3731:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25298              		.loc 1 3731 0
 25299 0032 3B1D     		adds	r3, r7, #4
 25300 0034 0321     		movs	r1, #3
 25301 0036 1846     		mov	r0, r3
 25302 0038 FFF7FEFF 		bl	LCRChecksum
 25303 003c 0346     		mov	r3, r0
 25304 003e FB71     		strb	r3, [r7, #7]
3732:..\src/command_processing.c ****     
3733:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25305              		.loc 1 3733 0
 25306 0040 064B     		ldr	r3, .L983
 25307 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25308 0046 013B     		subs	r3, r3, #1
 25309 0048 DAB2     		uxtb	r2, r3
 25310 004a 3B1D     		adds	r3, r7, #4
 25311 004c 0421     		movs	r1, #4
 25312 004e 1846     		mov	r0, r3
 25313 0050 FFF7FEFF 		bl	commWriteID
3734:..\src/command_processing.c **** }
 25314              		.loc 1 3734 0
 25315 0054 00BF     		nop
 25316 0056 0837     		adds	r7, r7, #8
 25317              		.cfi_def_cfa_offset 8
 25318 0058 BD46     		mov	sp, r7
 25319              		.cfi_def_cfa_register 13
 25320              		@ sp needed
 25321 005a 80BD     		pop	{r7, pc}
 25322              	.L984:
 25323              		.align	2
 25324              	.L983:
 25325 005c 00000000 		.word	g_mem
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 556


 25326 0060 00000000 		.word	g_measOld
 25327              		.cfi_endproc
 25328              	.LFE103:
 25329              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 25330              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25331              		.align	2
 25332              		.global	commReadResCurrFromSH
 25333              		.thumb
 25334              		.thumb_func
 25335              		.type	commReadResCurrFromSH, %function
 25336              	commReadResCurrFromSH:
 25337              	.LFB104:
3735:..\src/command_processing.c **** 
3736:..\src/command_processing.c **** //==============================================================================
3737:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3738:..\src/command_processing.c **** //==============================================================================
3739:..\src/command_processing.c **** 
3740:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3741:..\src/command_processing.c **** {
 25338              		.loc 1 3741 0
 25339              		.cfi_startproc
 25340              		@ args = 0, pretend = 0, frame = 32
 25341              		@ frame_needed = 1, uses_anonymous_args = 0
 25342 0000 80B5     		push	{r7, lr}
 25343              		.cfi_def_cfa_offset 8
 25344              		.cfi_offset 7, -8
 25345              		.cfi_offset 14, -4
 25346 0002 88B0     		sub	sp, sp, #32
 25347              		.cfi_def_cfa_offset 40
 25348 0004 00AF     		add	r7, sp, #0
 25349              		.cfi_def_cfa_register 7
3742:..\src/command_processing.c ****     uint8 packet_data[16];
3743:..\src/command_processing.c ****     uint8 packet_lenght;
3744:..\src/command_processing.c ****     int16 curr_diff = 0;
 25350              		.loc 1 3744 0
 25351 0006 0023     		movs	r3, #0
 25352 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3745:..\src/command_processing.c ****     uint32 t_start, t_end;
3746:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25353              		.loc 1 3746 0
 25354 000a 0123     		movs	r3, #1
 25355 000c 7B77     		strb	r3, [r7, #29]
3747:..\src/command_processing.c **** 
3748:..\src/command_processing.c ****     packet_lenght = 2;
 25356              		.loc 1 3748 0
 25357 000e 0223     		movs	r3, #2
 25358 0010 3B77     		strb	r3, [r7, #28]
3749:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25359              		.loc 1 3749 0
 25360 0012 8C23     		movs	r3, #140
 25361 0014 3B71     		strb	r3, [r7, #4]
3750:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25362              		.loc 1 3750 0
 25363 0016 8C23     		movs	r3, #140
 25364 0018 7B71     		strb	r3, [r7, #5]
3751:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 25365              		.loc 1 3751 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 557


 25366 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25367 001c 99B2     		uxth	r1, r3
 25368 001e 1D4B     		ldr	r3, .L992
 25369 0020 93F8C922 		ldrb	r2, [r3, #713]	@ zero_extendqisi2
 25370 0024 3B1D     		adds	r3, r7, #4
 25371 0026 1846     		mov	r0, r3
 25372 0028 FFF7FEFF 		bl	commWriteID
3752:..\src/command_processing.c **** 
3753:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25373              		.loc 1 3753 0
 25374 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25375 0030 0346     		mov	r3, r0
 25376 0032 BB61     		str	r3, [r7, #24]
3754:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25377              		.loc 1 3754 0
 25378 0034 18E0     		b	.L986
 25379              	.L989:
3755:..\src/command_processing.c ****         if (interrupt_flag){
 25380              		.loc 1 3755 0
 25381 0036 184B     		ldr	r3, .L992+4
 25382 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25383 003a 002B     		cmp	r3, #0
 25384 003c 04D0     		beq	.L987
3756:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25385              		.loc 1 3756 0
 25386 003e 164B     		ldr	r3, .L992+4
 25387 0040 0022     		movs	r2, #0
 25388 0042 1A70     		strb	r2, [r3]
3757:..\src/command_processing.c ****             interrupt_manager();
 25389              		.loc 1 3757 0
 25390 0044 FFF7FEFF 		bl	interrupt_manager
 25391              	.L987:
3758:..\src/command_processing.c ****         }
3759:..\src/command_processing.c **** 
3760:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25392              		.loc 1 3760 0
 25393 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25394 004c 0346     		mov	r3, r0
 25395 004e 7B61     		str	r3, [r7, #20]
3761:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25396              		.loc 1 3761 0
 25397 0050 BA69     		ldr	r2, [r7, #24]
 25398 0052 7B69     		ldr	r3, [r7, #20]
 25399 0054 D31A     		subs	r3, r2, r3
 25400 0056 114A     		ldr	r2, .L992+8
 25401 0058 9342     		cmp	r3, r2
 25402 005a 05D9     		bls	.L986
3762:..\src/command_processing.c ****             read_flag = FALSE;
 25403              		.loc 1 3762 0
 25404 005c 0023     		movs	r3, #0
 25405 005e 7B77     		strb	r3, [r7, #29]
3763:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25406              		.loc 1 3763 0
 25407 0060 0F4B     		ldr	r3, .L992+12
 25408 0062 0022     		movs	r2, #0
 25409 0064 1A70     		strb	r2, [r3]
3764:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 558


 25410              		.loc 1 3764 0
 25411 0066 03E0     		b	.L988
 25412              	.L986:
3754:..\src/command_processing.c ****         if (interrupt_flag){
 25413              		.loc 1 3754 0
 25414 0068 0E4B     		ldr	r3, .L992+16
 25415 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25416 006c 8E2B     		cmp	r3, #142
 25417 006e E2D1     		bne	.L989
 25418              	.L988:
3765:..\src/command_processing.c ****         }
3766:..\src/command_processing.c ****     }
3767:..\src/command_processing.c **** 
3768:..\src/command_processing.c ****     if (read_flag) {
 25419              		.loc 1 3768 0
 25420 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25421 0072 002B     		cmp	r3, #0
 25422 0074 08D0     		beq	.L990
3769:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25423              		.loc 1 3769 0
 25424 0076 0B4B     		ldr	r3, .L992+16
 25425 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25426 007a 1B02     		lsls	r3, r3, #8
 25427 007c 1AB2     		sxth	r2, r3
 25428 007e 094B     		ldr	r3, .L992+16
 25429 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25430 0082 1BB2     		sxth	r3, r3
 25431 0084 1343     		orrs	r3, r3, r2
 25432 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25433              	.L990:
3770:..\src/command_processing.c ****     }
3771:..\src/command_processing.c ****     
3772:..\src/command_processing.c ****     return curr_diff;
 25434              		.loc 1 3772 0
 25435 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3773:..\src/command_processing.c **** }
 25436              		.loc 1 3773 0
 25437 008c 1846     		mov	r0, r3
 25438 008e 2037     		adds	r7, r7, #32
 25439              		.cfi_def_cfa_offset 8
 25440 0090 BD46     		mov	sp, r7
 25441              		.cfi_def_cfa_register 13
 25442              		@ sp needed
 25443 0092 80BD     		pop	{r7, pc}
 25444              	.L993:
 25445              		.align	2
 25446              	.L992:
 25447 0094 00000000 		.word	c_mem
 25448 0098 00000000 		.word	interrupt_flag
 25449 009c 20AA4400 		.word	4500000
 25450 00a0 00000000 		.word	master_mode
 25451 00a4 00000000 		.word	g_rx
 25452              		.cfi_endproc
 25453              	.LFE104:
 25454              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25455              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25456              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 559


 25457              		.global	cmd_set_baudrate
 25458              		.thumb
 25459              		.thumb_func
 25460              		.type	cmd_set_baudrate, %function
 25461              	cmd_set_baudrate:
 25462              	.LFB105:
3774:..\src/command_processing.c **** 
3775:..\src/command_processing.c **** void cmd_set_baudrate(){
 25463              		.loc 1 3775 0
 25464              		.cfi_startproc
 25465              		@ args = 0, pretend = 0, frame = 0
 25466              		@ frame_needed = 1, uses_anonymous_args = 0
 25467 0000 80B5     		push	{r7, lr}
 25468              		.cfi_def_cfa_offset 8
 25469              		.cfi_offset 7, -8
 25470              		.cfi_offset 14, -4
 25471 0002 00AF     		add	r7, sp, #0
 25472              		.cfi_def_cfa_register 7
3776:..\src/command_processing.c ****     
3777:..\src/command_processing.c ****     // Set BaudRate
3778:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25473              		.loc 1 3778 0
 25474 0004 094B     		ldr	r3, .L999
 25475 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25476 0008 094B     		ldr	r3, .L999+4
 25477 000a 83F8AA20 		strb	r2, [r3, #170]
3779:..\src/command_processing.c ****     
3780:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25478              		.loc 1 3780 0
 25479 000e 074B     		ldr	r3, .L999
 25480 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25481 0012 0D2B     		cmp	r3, #13
 25482 0014 04D1     		bne	.L998
3781:..\src/command_processing.c ****         case 13:
3782:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25483              		.loc 1 3782 0
 25484 0016 0121     		movs	r1, #1
 25485 0018 0C20     		movs	r0, #12
 25486 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3783:..\src/command_processing.c ****             break;
 25487              		.loc 1 3783 0
 25488 001e 03E0     		b	.L997
 25489              	.L998:
3784:..\src/command_processing.c ****         default:
3785:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25490              		.loc 1 3785 0
 25491 0020 0121     		movs	r1, #1
 25492 0022 0220     		movs	r0, #2
 25493 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25494              	.L997:
3786:..\src/command_processing.c ****     }
3787:..\src/command_processing.c **** }
 25495              		.loc 1 3787 0
 25496 0028 00BF     		nop
 25497 002a 80BD     		pop	{r7, pc}
 25498              	.L1000:
 25499              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 560


 25500              	.L999:
 25501 002c 00000000 		.word	g_rx
 25502 0030 00000000 		.word	c_mem
 25503              		.cfi_endproc
 25504              	.LFE105:
 25505              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25506              		.section	.text.cmd_ping,"ax",%progbits
 25507              		.align	2
 25508              		.global	cmd_ping
 25509              		.thumb
 25510              		.thumb_func
 25511              		.type	cmd_ping, %function
 25512              	cmd_ping:
 25513              	.LFB106:
3788:..\src/command_processing.c **** 
3789:..\src/command_processing.c **** void cmd_ping(){
 25514              		.loc 1 3789 0
 25515              		.cfi_startproc
 25516              		@ args = 0, pretend = 0, frame = 8
 25517              		@ frame_needed = 1, uses_anonymous_args = 0
 25518 0000 80B5     		push	{r7, lr}
 25519              		.cfi_def_cfa_offset 8
 25520              		.cfi_offset 7, -8
 25521              		.cfi_offset 14, -4
 25522 0002 82B0     		sub	sp, sp, #8
 25523              		.cfi_def_cfa_offset 16
 25524 0004 00AF     		add	r7, sp, #0
 25525              		.cfi_def_cfa_register 7
3790:..\src/command_processing.c **** 
3791:..\src/command_processing.c ****     uint8 packet_data[2];
3792:..\src/command_processing.c **** 
3793:..\src/command_processing.c ****     // Header
3794:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25526              		.loc 1 3794 0
 25527 0006 0023     		movs	r3, #0
 25528 0008 3B71     		strb	r3, [r7, #4]
3795:..\src/command_processing.c ****     
3796:..\src/command_processing.c ****     // Load Payload
3797:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25529              		.loc 1 3797 0
 25530 000a 0023     		movs	r3, #0
 25531 000c 7B71     		strb	r3, [r7, #5]
3798:..\src/command_processing.c **** 
3799:..\src/command_processing.c ****     // Send Package to uart
3800:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25532              		.loc 1 3800 0
 25533 000e 3B1D     		adds	r3, r7, #4
 25534 0010 0221     		movs	r1, #2
 25535 0012 1846     		mov	r0, r3
 25536 0014 FFF7FEFF 		bl	commWrite
3801:..\src/command_processing.c **** }
 25537              		.loc 1 3801 0
 25538 0018 00BF     		nop
 25539 001a 0837     		adds	r7, r7, #8
 25540              		.cfi_def_cfa_offset 8
 25541 001c BD46     		mov	sp, r7
 25542              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 561


 25543              		@ sp needed
 25544 001e 80BD     		pop	{r7, pc}
 25545              		.cfi_endproc
 25546              	.LFE106:
 25547              		.size	cmd_ping, .-cmd_ping
 25548              		.section	.text.cmd_get_inputs,"ax",%progbits
 25549              		.align	2
 25550              		.global	cmd_get_inputs
 25551              		.thumb
 25552              		.thumb_func
 25553              		.type	cmd_get_inputs, %function
 25554              	cmd_get_inputs:
 25555              	.LFB107:
3802:..\src/command_processing.c **** 
3803:..\src/command_processing.c **** void cmd_get_inputs(){
 25556              		.loc 1 3803 0
 25557              		.cfi_startproc
 25558              		@ args = 0, pretend = 0, frame = 16
 25559              		@ frame_needed = 1, uses_anonymous_args = 0
 25560 0000 80B5     		push	{r7, lr}
 25561              		.cfi_def_cfa_offset 8
 25562              		.cfi_offset 7, -8
 25563              		.cfi_offset 14, -4
 25564 0002 84B0     		sub	sp, sp, #16
 25565              		.cfi_def_cfa_offset 24
 25566 0004 00AF     		add	r7, sp, #0
 25567              		.cfi_def_cfa_register 7
3804:..\src/command_processing.c **** 
3805:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3806:..\src/command_processing.c **** 
3807:..\src/command_processing.c ****     uint8 packet_data[6]; 
3808:..\src/command_processing.c ****     int16 aux_int16;
3809:..\src/command_processing.c ****     
3810:..\src/command_processing.c ****     //Header package
3811:..\src/command_processing.c **** 
3812:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25568              		.loc 1 3812 0
 25569 0006 8323     		movs	r3, #131
 25570 0008 3B72     		strb	r3, [r7, #8]
3813:..\src/command_processing.c ****         
3814:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25571              		.loc 1 3814 0
 25572 000a 234B     		ldr	r3, .L1003
 25573 000c 1A68     		ldr	r2, [r3]
 25574 000e 234B     		ldr	r3, .L1003+4
 25575 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25576 0014 1846     		mov	r0, r3
 25577 0016 2149     		ldr	r1, .L1003+4
 25578 0018 0346     		mov	r3, r0
 25579 001a 5B00     		lsls	r3, r3, #1
 25580 001c 0344     		add	r3, r3, r0
 25581 001e 1B01     		lsls	r3, r3, #4
 25582 0020 0B44     		add	r3, r3, r1
 25583 0022 03F29D13 		addw	r3, r3, #413
 25584 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25585 0028 42FA03F3 		asr	r3, r2, r3
 25586 002c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 562


 25587 002e FB80     		strh	r3, [r7, #6]	@ movhi
3815:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25588              		.loc 1 3815 0
 25589 0030 BB1D     		adds	r3, r7, #6
 25590 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25591 0034 BB72     		strb	r3, [r7, #10]
3816:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25592              		.loc 1 3816 0
 25593 0036 BB1D     		adds	r3, r7, #6
 25594 0038 0133     		adds	r3, r3, #1
 25595 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25596 003c 7B72     		strb	r3, [r7, #9]
3817:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25597              		.loc 1 3817 0
 25598 003e 164B     		ldr	r3, .L1003
 25599 0040 1A69     		ldr	r2, [r3, #16]
 25600 0042 164B     		ldr	r3, .L1003+4
 25601 0044 93F88431 		ldrb	r3, [r3, #388]	@ zero_extendqisi2
 25602 0048 1846     		mov	r0, r3
 25603 004a 1449     		ldr	r1, .L1003+4
 25604 004c 0346     		mov	r3, r0
 25605 004e 5B00     		lsls	r3, r3, #1
 25606 0050 0344     		add	r3, r3, r0
 25607 0052 1B01     		lsls	r3, r3, #4
 25608 0054 0B44     		add	r3, r3, r1
 25609 0056 03F29D13 		addw	r3, r3, #413
 25610 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25611 005c 42FA03F3 		asr	r3, r2, r3
 25612 0060 1BB2     		sxth	r3, r3
 25613 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3818:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25614              		.loc 1 3818 0
 25615 0064 BB1D     		adds	r3, r7, #6
 25616 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25617 0068 3B73     		strb	r3, [r7, #12]
3819:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25618              		.loc 1 3819 0
 25619 006a BB1D     		adds	r3, r7, #6
 25620 006c 0133     		adds	r3, r3, #1
 25621 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25622 0070 FB72     		strb	r3, [r7, #11]
3820:..\src/command_processing.c ****     
3821:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3822:..\src/command_processing.c **** 
3823:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25623              		.loc 1 3823 0
 25624 0072 07F10803 		add	r3, r7, #8
 25625 0076 0521     		movs	r1, #5
 25626 0078 1846     		mov	r0, r3
 25627 007a FFF7FEFF 		bl	LCRChecksum
 25628 007e 0346     		mov	r3, r0
 25629 0080 7B73     		strb	r3, [r7, #13]
3824:..\src/command_processing.c **** 
3825:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25630              		.loc 1 3825 0
 25631 0082 07F10803 		add	r3, r7, #8
 25632 0086 0621     		movs	r1, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 563


 25633 0088 1846     		mov	r0, r3
 25634 008a FFF7FEFF 		bl	commWrite
3826:..\src/command_processing.c **** }
 25635              		.loc 1 3826 0
 25636 008e 00BF     		nop
 25637 0090 1037     		adds	r7, r7, #16
 25638              		.cfi_def_cfa_offset 8
 25639 0092 BD46     		mov	sp, r7
 25640              		.cfi_def_cfa_register 13
 25641              		@ sp needed
 25642 0094 80BD     		pop	{r7, pc}
 25643              	.L1004:
 25644 0096 00BF     		.align	2
 25645              	.L1003:
 25646 0098 00000000 		.word	g_refOld
 25647 009c 00000000 		.word	g_mem
 25648              		.cfi_endproc
 25649              	.LFE107:
 25650              		.size	cmd_get_inputs, .-cmd_get_inputs
 25651              		.section	.text.cmd_store_params,"ax",%progbits
 25652              		.align	2
 25653              		.global	cmd_store_params
 25654              		.thumb
 25655              		.thumb_func
 25656              		.type	cmd_store_params, %function
 25657              	cmd_store_params:
 25658              	.LFB108:
3827:..\src/command_processing.c **** 
3828:..\src/command_processing.c **** void cmd_store_params(){
 25659              		.loc 1 3828 0
 25660              		.cfi_startproc
 25661              		@ args = 0, pretend = 0, frame = 16
 25662              		@ frame_needed = 1, uses_anonymous_args = 0
 25663 0000 80B5     		push	{r7, lr}
 25664              		.cfi_def_cfa_offset 8
 25665              		.cfi_offset 7, -8
 25666              		.cfi_offset 14, -4
 25667 0002 84B0     		sub	sp, sp, #16
 25668              		.cfi_def_cfa_offset 24
 25669 0004 00AF     		add	r7, sp, #0
 25670              		.cfi_def_cfa_register 7
3829:..\src/command_processing.c ****     
3830:..\src/command_processing.c ****     // Check input mode enabled
3831:..\src/command_processing.c ****     uint32 off_1;
3832:..\src/command_processing.c ****     float mult_1;
3833:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25671              		.loc 1 3833 0
 25672 0006 0223     		movs	r3, #2
 25673 0008 FB73     		strb	r3, [r7, #15]
3834:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3835:..\src/command_processing.c ****     uint8 CYDATA old_id;
3836:..\src/command_processing.c ****     
3837:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25674              		.loc 1 3837 0
 25675 000a 674B     		ldr	r3, .L1016
 25676 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25677 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 564


 25678 0012 7CD1     		bne	.L1006
3838:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25679              		.loc 1 3838 0
 25680 0014 644B     		ldr	r3, .L1016
 25681 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25682 001a 1946     		mov	r1, r3
 25683 001c 624A     		ldr	r2, .L1016
 25684 001e 0B46     		mov	r3, r1
 25685 0020 5B00     		lsls	r3, r3, #1
 25686 0022 0B44     		add	r3, r3, r1
 25687 0024 1B01     		lsls	r3, r3, #4
 25688 0026 1344     		add	r3, r3, r2
 25689 0028 03F5D073 		add	r3, r3, #416
 25690 002c 1B68     		ldr	r3, [r3]
 25691 002e BB60     		str	r3, [r7, #8]
3839:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25692              		.loc 1 3839 0
 25693 0030 5D4B     		ldr	r3, .L1016
 25694 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25695 0036 1946     		mov	r1, r3
 25696 0038 5B4A     		ldr	r2, .L1016
 25697 003a 0B46     		mov	r3, r1
 25698 003c 5B00     		lsls	r3, r3, #1
 25699 003e 0B44     		add	r3, r3, r1
 25700 0040 1B01     		lsls	r3, r3, #4
 25701 0042 1344     		add	r3, r3, r2
 25702 0044 03F5D673 		add	r3, r3, #428
 25703 0048 1B68     		ldr	r3, [r3]	@ float
 25704 004a 7B60     		str	r3, [r7, #4]	@ float
3840:..\src/command_processing.c **** 
3841:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25705              		.loc 1 3841 0
 25706 004c 574B     		ldr	r3, .L1016+4
 25707 004e 1B68     		ldr	r3, [r3]
 25708 0050 1846     		mov	r0, r3
 25709 0052 FFF7FEFF 		bl	__aeabi_i2f
 25710 0056 0346     		mov	r3, r0
 25711 0058 7968     		ldr	r1, [r7, #4]	@ float
 25712 005a 1846     		mov	r0, r3
 25713 005c FFF7FEFF 		bl	__aeabi_fdiv
 25714 0060 0346     		mov	r3, r0
 25715 0062 1846     		mov	r0, r3
 25716 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25717 0068 0246     		mov	r2, r0
 25718 006a 504B     		ldr	r3, .L1016+4
 25719 006c 1A60     		str	r2, [r3]
3842:..\src/command_processing.c **** 
3843:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25720              		.loc 1 3843 0
 25721 006e 4F4B     		ldr	r3, .L1016+4
 25722 0070 1B68     		ldr	r3, [r3]
 25723 0072 1846     		mov	r0, r3
 25724 0074 FFF7FEFF 		bl	__aeabi_i2f
 25725 0078 4B4B     		ldr	r3, .L1016
 25726 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25727 007e 1946     		mov	r1, r3
 25728 0080 4B4A     		ldr	r2, .L1016+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 565


 25729 0082 0B46     		mov	r3, r1
 25730 0084 5B00     		lsls	r3, r3, #1
 25731 0086 0B44     		add	r3, r3, r1
 25732 0088 1B01     		lsls	r3, r3, #4
 25733 008a 1344     		add	r3, r3, r2
 25734 008c 03F5D673 		add	r3, r3, #428
 25735 0090 1B68     		ldr	r3, [r3]	@ float
 25736 0092 1946     		mov	r1, r3
 25737 0094 FFF7FEFF 		bl	__aeabi_fmul
 25738 0098 0346     		mov	r3, r0
 25739 009a 1846     		mov	r0, r3
 25740 009c FFF7FEFF 		bl	__aeabi_f2iz
 25741 00a0 0246     		mov	r2, r0
 25742 00a2 424B     		ldr	r3, .L1016+4
 25743 00a4 1A60     		str	r2, [r3]
3844:..\src/command_processing.c **** 
3845:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25744              		.loc 1 3845 0
 25745 00a6 414B     		ldr	r3, .L1016+4
 25746 00a8 1B68     		ldr	r3, [r3]
 25747 00aa 1846     		mov	r0, r3
 25748 00ac 3E4B     		ldr	r3, .L1016
 25749 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25750 00b2 1946     		mov	r1, r3
 25751 00b4 3E4A     		ldr	r2, .L1016+8
 25752 00b6 0B46     		mov	r3, r1
 25753 00b8 5B00     		lsls	r3, r3, #1
 25754 00ba 0B44     		add	r3, r3, r1
 25755 00bc 1B01     		lsls	r3, r3, #4
 25756 00be 1344     		add	r3, r3, r2
 25757 00c0 03F5D073 		add	r3, r3, #416
 25758 00c4 1B68     		ldr	r3, [r3]
 25759 00c6 1A46     		mov	r2, r3
 25760 00c8 BB68     		ldr	r3, [r7, #8]
 25761 00ca D31A     		subs	r3, r2, r3
 25762 00cc 0344     		add	r3, r3, r0
 25763 00ce 1A46     		mov	r2, r3
 25764 00d0 364B     		ldr	r3, .L1016+4
 25765 00d2 1A60     		str	r2, [r3]
3846:..\src/command_processing.c ****         
3847:..\src/command_processing.c ****         // Check position Limits
3848:..\src/command_processing.c **** 
3849:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25766              		.loc 1 3849 0
 25767 00d4 344B     		ldr	r3, .L1016
 25768 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25769 00da 002B     		cmp	r3, #0
 25770 00dc 17D0     		beq	.L1006
3850:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25771              		.loc 1 3850 0
 25772 00de 334B     		ldr	r3, .L1016+4
 25773 00e0 1A68     		ldr	r2, [r3]
 25774 00e2 314B     		ldr	r3, .L1016
 25775 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25776 00e8 9A42     		cmp	r2, r3
 25777 00ea 04DA     		bge	.L1007
3851:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 566


 25778              		.loc 1 3851 0
 25779 00ec 2E4B     		ldr	r3, .L1016
 25780 00ee D3F8E430 		ldr	r3, [r3, #228]
 25781 00f2 2E4A     		ldr	r2, .L1016+4
 25782 00f4 1360     		str	r3, [r2]
 25783              	.L1007:
3852:..\src/command_processing.c **** 
3853:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25784              		.loc 1 3853 0
 25785 00f6 2D4B     		ldr	r3, .L1016+4
 25786 00f8 1A68     		ldr	r2, [r3]
 25787 00fa 2B4B     		ldr	r3, .L1016
 25788 00fc D3F8E830 		ldr	r3, [r3, #232]
 25789 0100 9A42     		cmp	r2, r3
 25790 0102 04DD     		ble	.L1006
3854:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25791              		.loc 1 3854 0
 25792 0104 284B     		ldr	r3, .L1016
 25793 0106 D3F8E830 		ldr	r3, [r3, #232]
 25794 010a 284A     		ldr	r2, .L1016+4
 25795 010c 1360     		str	r3, [r2]
 25796              	.L1006:
3855:..\src/command_processing.c ****         }
3856:..\src/command_processing.c ****     }
3857:..\src/command_processing.c ****     
3858:..\src/command_processing.c ****     // If SD is used, create new param and data file
3859:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25797              		.loc 1 3859 0
 25798 010e 264B     		ldr	r3, .L1016
 25799 0110 93F82E32 		ldrb	r3, [r3, #558]	@ zero_extendqisi2
 25800 0114 012B     		cmp	r3, #1
 25801 0116 06D1     		bne	.L1008
3860:..\src/command_processing.c ****         FS_FClose(pFile);
 25802              		.loc 1 3860 0
 25803 0118 264B     		ldr	r3, .L1016+12
 25804 011a 1B68     		ldr	r3, [r3]
 25805 011c 1846     		mov	r0, r3
 25806 011e FFF7FEFF 		bl	FS_FClose
3861:..\src/command_processing.c ****         
3862:..\src/command_processing.c ****         InitSD_FS();
 25807              		.loc 1 3862 0
 25808 0122 FFF7FEFF 		bl	InitSD_FS
 25809              	.L1008:
3863:..\src/command_processing.c ****     }
3864:..\src/command_processing.c ****    
3865:..\src/command_processing.c ****     // Store params 
3866:..\src/command_processing.c **** 
3867:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25810              		.loc 1 3867 0
 25811 0126 204B     		ldr	r3, .L1016
 25812 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25813 012c 204B     		ldr	r3, .L1016+8
 25814 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25815 0132 9A42     		cmp	r2, r3
 25816 0134 21D0     		beq	.L1009
3868:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25817              		.loc 1 3868 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 567


 25818 0136 1C4B     		ldr	r3, .L1016
 25819 0138 93F8A030 		ldrb	r3, [r3, #160]
 25820 013c FB70     		strb	r3, [r7, #3]
3869:..\src/command_processing.c ****         if(memStore(0)) {
 25821              		.loc 1 3869 0
 25822 013e 0020     		movs	r0, #0
 25823 0140 FFF7FEFF 		bl	memStore
 25824 0144 0346     		mov	r3, r0
 25825 0146 002B     		cmp	r3, #0
 25826 0148 0BD0     		beq	.L1010
3870:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25827              		.loc 1 3870 0
 25828 014a 0123     		movs	r3, #1
 25829 014c 3B70     		strb	r3, [r7]
3871:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25830              		.loc 1 3871 0
 25831 014e 0123     		movs	r3, #1
 25832 0150 7B70     		strb	r3, [r7, #1]
3872:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25833              		.loc 1 3872 0
 25834 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25835 0154 99B2     		uxth	r1, r3
 25836 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25837 0158 3B46     		mov	r3, r7
 25838 015a 1846     		mov	r0, r3
 25839 015c FFF7FEFF 		bl	commWrite_old_id
 25840 0160 18E0     		b	.L1012
 25841              	.L1010:
3873:..\src/command_processing.c ****         }    
3874:..\src/command_processing.c ****         else{
3875:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25842              		.loc 1 3875 0
 25843 0162 0023     		movs	r3, #0
 25844 0164 3B70     		strb	r3, [r7]
3876:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25845              		.loc 1 3876 0
 25846 0166 0023     		movs	r3, #0
 25847 0168 7B70     		strb	r3, [r7, #1]
3877:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25848              		.loc 1 3877 0
 25849 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25850 016c 99B2     		uxth	r1, r3
 25851 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25852 0170 3B46     		mov	r3, r7
 25853 0172 1846     		mov	r0, r3
 25854 0174 FFF7FEFF 		bl	commWrite_old_id
 25855 0178 0CE0     		b	.L1012
 25856              	.L1009:
3878:..\src/command_processing.c ****         }
3879:..\src/command_processing.c ****     }    
3880:..\src/command_processing.c ****     else {
3881:..\src/command_processing.c ****         if(memStore(0))
 25857              		.loc 1 3881 0
 25858 017a 0020     		movs	r0, #0
 25859 017c FFF7FEFF 		bl	memStore
 25860 0180 0346     		mov	r3, r0
 25861 0182 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 568


 25862 0184 03D0     		beq	.L1013
3882:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25863              		.loc 1 3882 0
 25864 0186 0120     		movs	r0, #1
 25865 0188 FFF7FEFF 		bl	sendAcknowledgment
 25866 018c 02E0     		b	.L1012
 25867              	.L1013:
3883:..\src/command_processing.c ****         else
3884:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25868              		.loc 1 3884 0
 25869 018e 0020     		movs	r0, #0
 25870 0190 FFF7FEFF 		bl	sendAcknowledgment
 25871              	.L1012:
3885:..\src/command_processing.c ****     }
3886:..\src/command_processing.c ****     
3887:..\src/command_processing.c ****     // FW reset (if necessary)
3888:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25872              		.loc 1 3888 0
 25873 0194 084B     		ldr	r3, .L1016+16
 25874 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25875 0198 012B     		cmp	r3, #1
 25876 019a 01D1     		bne	.L1015
3889:..\src/command_processing.c ****         CySoftwareReset();
 25877              		.loc 1 3889 0
 25878 019c FFF7FEFF 		bl	CySoftwareReset
 25879              	.L1015:
3890:..\src/command_processing.c ****     }
3891:..\src/command_processing.c **** }
 25880              		.loc 1 3891 0
 25881 01a0 00BF     		nop
 25882 01a2 1037     		adds	r7, r7, #16
 25883              		.cfi_def_cfa_offset 8
 25884 01a4 BD46     		mov	sp, r7
 25885              		.cfi_def_cfa_register 13
 25886              		@ sp needed
 25887 01a6 80BD     		pop	{r7, pc}
 25888              	.L1017:
 25889              		.align	2
 25890              	.L1016:
 25891 01a8 00000000 		.word	c_mem
 25892 01ac 00000000 		.word	g_refNew
 25893 01b0 00000000 		.word	g_mem
 25894 01b4 00000000 		.word	pFile
 25895 01b8 00000000 		.word	reset_PSoC_flag
 25896              		.cfi_endproc
 25897              	.LFE108:
 25898              		.size	cmd_store_params, .-cmd_store_params
 25899              		.section	.text.cmd_get_emg,"ax",%progbits
 25900              		.align	2
 25901              		.global	cmd_get_emg
 25902              		.thumb
 25903              		.thumb_func
 25904              		.type	cmd_get_emg, %function
 25905              	cmd_get_emg:
 25906              	.LFB109:
3892:..\src/command_processing.c **** 
3893:..\src/command_processing.c **** void cmd_get_emg(){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 569


 25907              		.loc 1 3893 0
 25908              		.cfi_startproc
 25909              		@ args = 0, pretend = 0, frame = 16
 25910              		@ frame_needed = 1, uses_anonymous_args = 0
 25911 0000 80B5     		push	{r7, lr}
 25912              		.cfi_def_cfa_offset 8
 25913              		.cfi_offset 7, -8
 25914              		.cfi_offset 14, -4
 25915 0002 84B0     		sub	sp, sp, #16
 25916              		.cfi_def_cfa_offset 24
 25917 0004 00AF     		add	r7, sp, #0
 25918              		.cfi_def_cfa_register 7
3894:..\src/command_processing.c ****     
3895:..\src/command_processing.c ****     uint8 packet_data[6];
3896:..\src/command_processing.c ****     int16 aux_int16;
3897:..\src/command_processing.c ****     
3898:..\src/command_processing.c ****     // Header        
3899:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25919              		.loc 1 3899 0
 25920 0006 8823     		movs	r3, #136
 25921 0008 3B72     		strb	r3, [r7, #8]
3900:..\src/command_processing.c ****     
3901:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25922              		.loc 1 3901 0
 25923 000a 144B     		ldr	r3, .L1019
 25924 000c 1B68     		ldr	r3, [r3]
 25925 000e 1BB2     		sxth	r3, r3
 25926 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3902:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25927              		.loc 1 3902 0
 25928 0012 BB1D     		adds	r3, r7, #6
 25929 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25930 0016 BB72     		strb	r3, [r7, #10]
3903:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25931              		.loc 1 3903 0
 25932 0018 BB1D     		adds	r3, r7, #6
 25933 001a 0133     		adds	r3, r3, #1
 25934 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25935 001e 7B72     		strb	r3, [r7, #9]
3904:..\src/command_processing.c ****     
3905:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25936              		.loc 1 3905 0
 25937 0020 0E4B     		ldr	r3, .L1019
 25938 0022 5B68     		ldr	r3, [r3, #4]
 25939 0024 1BB2     		sxth	r3, r3
 25940 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3906:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25941              		.loc 1 3906 0
 25942 0028 BB1D     		adds	r3, r7, #6
 25943 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25944 002c 3B73     		strb	r3, [r7, #12]
3907:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25945              		.loc 1 3907 0
 25946 002e BB1D     		adds	r3, r7, #6
 25947 0030 0133     		adds	r3, r3, #1
 25948 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25949 0034 FB72     		strb	r3, [r7, #11]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 570


3908:..\src/command_processing.c **** 
3909:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25950              		.loc 1 3909 0
 25951 0036 07F10803 		add	r3, r7, #8
 25952 003a 0521     		movs	r1, #5
 25953 003c 1846     		mov	r0, r3
 25954 003e FFF7FEFF 		bl	LCRChecksum
 25955 0042 0346     		mov	r3, r0
 25956 0044 7B73     		strb	r3, [r7, #13]
3910:..\src/command_processing.c **** 
3911:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25957              		.loc 1 3911 0
 25958 0046 07F10803 		add	r3, r7, #8
 25959 004a 0621     		movs	r1, #6
 25960 004c 1846     		mov	r0, r3
 25961 004e FFF7FEFF 		bl	commWrite
3912:..\src/command_processing.c **** 
3913:..\src/command_processing.c **** }
 25962              		.loc 1 3913 0
 25963 0052 00BF     		nop
 25964 0054 1037     		adds	r7, r7, #16
 25965              		.cfi_def_cfa_offset 8
 25966 0056 BD46     		mov	sp, r7
 25967              		.cfi_def_cfa_register 13
 25968              		@ sp needed
 25969 0058 80BD     		pop	{r7, pc}
 25970              	.L1020:
 25971 005a 00BF     		.align	2
 25972              	.L1019:
 25973 005c 00000000 		.word	g_adc_measOld
 25974              		.cfi_endproc
 25975              	.LFE109:
 25976              		.size	cmd_get_emg, .-cmd_get_emg
 25977              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25978              		.align	2
 25979              		.global	cmd_get_imu_readings
 25980              		.thumb
 25981              		.thumb_func
 25982              		.type	cmd_get_imu_readings, %function
 25983              	cmd_get_imu_readings:
 25984              	.LFB110:
3914:..\src/command_processing.c **** 
3915:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25985              		.loc 1 3915 0
 25986              		.cfi_startproc
 25987              		@ args = 0, pretend = 0, frame = 400
 25988              		@ frame_needed = 1, uses_anonymous_args = 0
 25989 0000 90B5     		push	{r4, r7, lr}
 25990              		.cfi_def_cfa_offset 12
 25991              		.cfi_offset 4, -12
 25992              		.cfi_offset 7, -8
 25993              		.cfi_offset 14, -4
 25994 0002 E5B0     		sub	sp, sp, #404
 25995              		.cfi_def_cfa_offset 416
 25996 0004 00AF     		add	r7, sp, #0
 25997              		.cfi_def_cfa_register 7
3916:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 571


3917:..\src/command_processing.c ****     
3918:..\src/command_processing.c ****     uint8 k_imu;
3919:..\src/command_processing.c ****     uint16 c = 1;
 25998              		.loc 1 3919 0
 25999 0006 0123     		movs	r3, #1
 26000 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3920:..\src/command_processing.c ****     uint8 k = 0;
 26001              		.loc 1 3920 0
 26002 000c 0023     		movs	r3, #0
 26003 000e 87F88B31 		strb	r3, [r7, #395]
3921:..\src/command_processing.c ****     uint16 gl_c = 1;
 26004              		.loc 1 3921 0
 26005 0012 0123     		movs	r3, #1
 26006 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3922:..\src/command_processing.c ****     int16 aux_int16;
3923:..\src/command_processing.c ****     float aux_float;
3924:..\src/command_processing.c ****     
3925:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3926:..\src/command_processing.c ****     uint8 packet_data[350];
3927:..\src/command_processing.c ****     uint8 single_packet[32];
3928:..\src/command_processing.c ****     
3929:..\src/command_processing.c ****     //Header package 
3930:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 26007              		.loc 1 3930 0
 26008 0018 07F12003 		add	r3, r7, #32
 26009 001c A122     		movs	r2, #161
 26010 001e 1A70     		strb	r2, [r3]
3931:..\src/command_processing.c ****  
3932:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 26011              		.loc 1 3932 0
 26012 0020 0023     		movs	r3, #0
 26013 0022 87F88F31 		strb	r3, [r7, #399]
 26014 0026 82E2     		b	.L1022
 26015              	.L1038:
3933:..\src/command_processing.c ****     {	
3934:..\src/command_processing.c ****             
3935:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 26016              		.loc 1 3935 0
 26017 0028 3B46     		mov	r3, r7
 26018 002a 3A22     		movs	r2, #58
 26019 002c 1A70     		strb	r2, [r3]
3936:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 26020              		.loc 1 3936 0
 26021 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26022 0032 DB4A     		ldr	r2, .L1039
 26023 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26024 0036 1946     		mov	r1, r3
 26025 0038 DA4A     		ldr	r2, .L1039+4
 26026 003a 0B46     		mov	r3, r1
 26027 003c 9B00     		lsls	r3, r3, #2
 26028 003e 0B44     		add	r3, r3, r1
 26029 0040 1344     		add	r3, r3, r2
 26030 0042 03F20A23 		addw	r3, r3, #522
 26031 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26032 0048 002B     		cmp	r3, #0
 26033 004a 5DD0     		beq	.L1023
3937:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 572


 26034              		.loc 1 3937 0
 26035 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26036 0050 D549     		ldr	r1, .L1039+8
 26037 0052 1346     		mov	r3, r2
 26038 0054 9B00     		lsls	r3, r3, #2
 26039 0056 1344     		add	r3, r3, r2
 26040 0058 DB00     		lsls	r3, r3, #3
 26041 005a 0B44     		add	r3, r3, r1
 26042 005c 0233     		adds	r3, r3, #2
 26043 005e B3F90030 		ldrsh	r3, [r3]
 26044 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3938:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26045              		.loc 1 3938 0
 26046 0066 B7F88C31 		ldrh	r3, [r7, #396]
 26047 006a 0133     		adds	r3, r3, #1
 26048 006c 07F5C372 		add	r2, r7, #390
 26049 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26050 0072 3A46     		mov	r2, r7
 26051 0074 D154     		strb	r1, [r2, r3]
3939:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26052              		.loc 1 3939 0
 26053 0076 B7F88C21 		ldrh	r2, [r7, #396]
 26054 007a 07F5C373 		add	r3, r7, #390
 26055 007e 0133     		adds	r3, r3, #1
 26056 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26057 0082 3B46     		mov	r3, r7
 26058 0084 9954     		strb	r1, [r3, r2]
3940:..\src/command_processing.c **** 
3941:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 26059              		.loc 1 3941 0
 26060 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26061 008a C749     		ldr	r1, .L1039+8
 26062 008c 1346     		mov	r3, r2
 26063 008e 9B00     		lsls	r3, r3, #2
 26064 0090 1344     		add	r3, r3, r2
 26065 0092 DB00     		lsls	r3, r3, #3
 26066 0094 0B44     		add	r3, r3, r1
 26067 0096 0433     		adds	r3, r3, #4
 26068 0098 B3F90030 		ldrsh	r3, [r3]
 26069 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3942:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26070              		.loc 1 3942 0
 26071 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 26072 00a4 0333     		adds	r3, r3, #3
 26073 00a6 07F5C372 		add	r2, r7, #390
 26074 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26075 00ac 3A46     		mov	r2, r7
 26076 00ae D154     		strb	r1, [r2, r3]
3943:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26077              		.loc 1 3943 0
 26078 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 26079 00b4 9A1C     		adds	r2, r3, #2
 26080 00b6 07F5C373 		add	r3, r7, #390
 26081 00ba 0133     		adds	r3, r3, #1
 26082 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26083 00be 3B46     		mov	r3, r7
 26084 00c0 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 573


3944:..\src/command_processing.c **** 
3945:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 26085              		.loc 1 3945 0
 26086 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26087 00c6 B849     		ldr	r1, .L1039+8
 26088 00c8 1346     		mov	r3, r2
 26089 00ca 9B00     		lsls	r3, r3, #2
 26090 00cc 1344     		add	r3, r3, r2
 26091 00ce DB00     		lsls	r3, r3, #3
 26092 00d0 0B44     		add	r3, r3, r1
 26093 00d2 0633     		adds	r3, r3, #6
 26094 00d4 B3F90030 		ldrsh	r3, [r3]
 26095 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3946:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26096              		.loc 1 3946 0
 26097 00dc B7F88C31 		ldrh	r3, [r7, #396]
 26098 00e0 0533     		adds	r3, r3, #5
 26099 00e2 07F5C372 		add	r2, r7, #390
 26100 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26101 00e8 3A46     		mov	r2, r7
 26102 00ea D154     		strb	r1, [r2, r3]
3947:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26103              		.loc 1 3947 0
 26104 00ec B7F88C31 		ldrh	r3, [r7, #396]
 26105 00f0 1A1D     		adds	r2, r3, #4
 26106 00f2 07F5C373 		add	r3, r7, #390
 26107 00f6 0133     		adds	r3, r3, #1
 26108 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26109 00fa 3B46     		mov	r3, r7
 26110 00fc 9954     		strb	r1, [r3, r2]
3948:..\src/command_processing.c **** 
3949:..\src/command_processing.c ****             c = c + 6;
 26111              		.loc 1 3949 0
 26112 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26113 0102 0633     		adds	r3, r3, #6
 26114 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26115              	.L1023:
3950:..\src/command_processing.c ****         }
3951:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 26116              		.loc 1 3951 0
 26117 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26118 010c A44A     		ldr	r2, .L1039
 26119 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26120 0110 1946     		mov	r1, r3
 26121 0112 A44A     		ldr	r2, .L1039+4
 26122 0114 0B46     		mov	r3, r1
 26123 0116 9B00     		lsls	r3, r3, #2
 26124 0118 0B44     		add	r3, r3, r1
 26125 011a 1344     		add	r3, r3, r2
 26126 011c 03F20B23 		addw	r3, r3, #523
 26127 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26128 0122 002B     		cmp	r3, #0
 26129 0124 5DD0     		beq	.L1024
3952:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 26130              		.loc 1 3952 0
 26131 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26132 012a 9F49     		ldr	r1, .L1039+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 574


 26133 012c 1346     		mov	r3, r2
 26134 012e 9B00     		lsls	r3, r3, #2
 26135 0130 1344     		add	r3, r3, r2
 26136 0132 DB00     		lsls	r3, r3, #3
 26137 0134 0B44     		add	r3, r3, r1
 26138 0136 0833     		adds	r3, r3, #8
 26139 0138 B3F90030 		ldrsh	r3, [r3]
 26140 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3953:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26141              		.loc 1 3953 0
 26142 0140 B7F88C31 		ldrh	r3, [r7, #396]
 26143 0144 0133     		adds	r3, r3, #1
 26144 0146 07F5C372 		add	r2, r7, #390
 26145 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26146 014c 3A46     		mov	r2, r7
 26147 014e D154     		strb	r1, [r2, r3]
3954:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26148              		.loc 1 3954 0
 26149 0150 B7F88C21 		ldrh	r2, [r7, #396]
 26150 0154 07F5C373 		add	r3, r7, #390
 26151 0158 0133     		adds	r3, r3, #1
 26152 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26153 015c 3B46     		mov	r3, r7
 26154 015e 9954     		strb	r1, [r3, r2]
3955:..\src/command_processing.c **** 
3956:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 26155              		.loc 1 3956 0
 26156 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26157 0164 9049     		ldr	r1, .L1039+8
 26158 0166 1346     		mov	r3, r2
 26159 0168 9B00     		lsls	r3, r3, #2
 26160 016a 1344     		add	r3, r3, r2
 26161 016c DB00     		lsls	r3, r3, #3
 26162 016e 0B44     		add	r3, r3, r1
 26163 0170 0A33     		adds	r3, r3, #10
 26164 0172 B3F90030 		ldrsh	r3, [r3]
 26165 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3957:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26166              		.loc 1 3957 0
 26167 017a B7F88C31 		ldrh	r3, [r7, #396]
 26168 017e 0333     		adds	r3, r3, #3
 26169 0180 07F5C372 		add	r2, r7, #390
 26170 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26171 0186 3A46     		mov	r2, r7
 26172 0188 D154     		strb	r1, [r2, r3]
3958:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26173              		.loc 1 3958 0
 26174 018a B7F88C31 		ldrh	r3, [r7, #396]
 26175 018e 9A1C     		adds	r2, r3, #2
 26176 0190 07F5C373 		add	r3, r7, #390
 26177 0194 0133     		adds	r3, r3, #1
 26178 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26179 0198 3B46     		mov	r3, r7
 26180 019a 9954     		strb	r1, [r3, r2]
3959:..\src/command_processing.c **** 
3960:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 26181              		.loc 1 3960 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 575


 26182 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26183 01a0 8149     		ldr	r1, .L1039+8
 26184 01a2 1346     		mov	r3, r2
 26185 01a4 9B00     		lsls	r3, r3, #2
 26186 01a6 1344     		add	r3, r3, r2
 26187 01a8 DB00     		lsls	r3, r3, #3
 26188 01aa 0B44     		add	r3, r3, r1
 26189 01ac 0C33     		adds	r3, r3, #12
 26190 01ae B3F90030 		ldrsh	r3, [r3]
 26191 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3961:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26192              		.loc 1 3961 0
 26193 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26194 01ba 0533     		adds	r3, r3, #5
 26195 01bc 07F5C372 		add	r2, r7, #390
 26196 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26197 01c2 3A46     		mov	r2, r7
 26198 01c4 D154     		strb	r1, [r2, r3]
3962:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26199              		.loc 1 3962 0
 26200 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26201 01ca 1A1D     		adds	r2, r3, #4
 26202 01cc 07F5C373 		add	r3, r7, #390
 26203 01d0 0133     		adds	r3, r3, #1
 26204 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26205 01d4 3B46     		mov	r3, r7
 26206 01d6 9954     		strb	r1, [r3, r2]
3963:..\src/command_processing.c **** 
3964:..\src/command_processing.c ****             c = c + 6;
 26207              		.loc 1 3964 0
 26208 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26209 01dc 0633     		adds	r3, r3, #6
 26210 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26211              	.L1024:
3965:..\src/command_processing.c ****         }
3966:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26212              		.loc 1 3966 0
 26213 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26214 01e6 6E4A     		ldr	r2, .L1039
 26215 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26216 01ea 1946     		mov	r1, r3
 26217 01ec 6D4A     		ldr	r2, .L1039+4
 26218 01ee 0B46     		mov	r3, r1
 26219 01f0 9B00     		lsls	r3, r3, #2
 26220 01f2 0B44     		add	r3, r3, r1
 26221 01f4 1344     		add	r3, r3, r2
 26222 01f6 03F50373 		add	r3, r3, #524
 26223 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26224 01fc 002B     		cmp	r3, #0
 26225 01fe 5DD0     		beq	.L1025
3967:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26226              		.loc 1 3967 0
 26227 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26228 0204 6849     		ldr	r1, .L1039+8
 26229 0206 1346     		mov	r3, r2
 26230 0208 9B00     		lsls	r3, r3, #2
 26231 020a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 576


 26232 020c DB00     		lsls	r3, r3, #3
 26233 020e 0B44     		add	r3, r3, r1
 26234 0210 0E33     		adds	r3, r3, #14
 26235 0212 B3F90030 		ldrsh	r3, [r3]
 26236 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3968:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26237              		.loc 1 3968 0
 26238 021a B7F88C31 		ldrh	r3, [r7, #396]
 26239 021e 0133     		adds	r3, r3, #1
 26240 0220 07F5C372 		add	r2, r7, #390
 26241 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26242 0226 3A46     		mov	r2, r7
 26243 0228 D154     		strb	r1, [r2, r3]
3969:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26244              		.loc 1 3969 0
 26245 022a B7F88C21 		ldrh	r2, [r7, #396]
 26246 022e 07F5C373 		add	r3, r7, #390
 26247 0232 0133     		adds	r3, r3, #1
 26248 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26249 0236 3B46     		mov	r3, r7
 26250 0238 9954     		strb	r1, [r3, r2]
3970:..\src/command_processing.c **** 
3971:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26251              		.loc 1 3971 0
 26252 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26253 023e 5A49     		ldr	r1, .L1039+8
 26254 0240 1346     		mov	r3, r2
 26255 0242 9B00     		lsls	r3, r3, #2
 26256 0244 1344     		add	r3, r3, r2
 26257 0246 DB00     		lsls	r3, r3, #3
 26258 0248 0B44     		add	r3, r3, r1
 26259 024a 1033     		adds	r3, r3, #16
 26260 024c B3F90030 		ldrsh	r3, [r3]
 26261 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3972:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26262              		.loc 1 3972 0
 26263 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26264 0258 0333     		adds	r3, r3, #3
 26265 025a 07F5C372 		add	r2, r7, #390
 26266 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26267 0260 3A46     		mov	r2, r7
 26268 0262 D154     		strb	r1, [r2, r3]
3973:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26269              		.loc 1 3973 0
 26270 0264 B7F88C31 		ldrh	r3, [r7, #396]
 26271 0268 9A1C     		adds	r2, r3, #2
 26272 026a 07F5C373 		add	r3, r7, #390
 26273 026e 0133     		adds	r3, r3, #1
 26274 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26275 0272 3B46     		mov	r3, r7
 26276 0274 9954     		strb	r1, [r3, r2]
3974:..\src/command_processing.c **** 
3975:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26277              		.loc 1 3975 0
 26278 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26279 027a 4B49     		ldr	r1, .L1039+8
 26280 027c 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 577


 26281 027e 9B00     		lsls	r3, r3, #2
 26282 0280 1344     		add	r3, r3, r2
 26283 0282 DB00     		lsls	r3, r3, #3
 26284 0284 0B44     		add	r3, r3, r1
 26285 0286 1233     		adds	r3, r3, #18
 26286 0288 B3F90030 		ldrsh	r3, [r3]
 26287 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3976:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26288              		.loc 1 3976 0
 26289 0290 B7F88C31 		ldrh	r3, [r7, #396]
 26290 0294 0533     		adds	r3, r3, #5
 26291 0296 07F5C372 		add	r2, r7, #390
 26292 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26293 029c 3A46     		mov	r2, r7
 26294 029e D154     		strb	r1, [r2, r3]
3977:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26295              		.loc 1 3977 0
 26296 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26297 02a4 1A1D     		adds	r2, r3, #4
 26298 02a6 07F5C373 		add	r3, r7, #390
 26299 02aa 0133     		adds	r3, r3, #1
 26300 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26301 02ae 3B46     		mov	r3, r7
 26302 02b0 9954     		strb	r1, [r3, r2]
3978:..\src/command_processing.c **** 
3979:..\src/command_processing.c ****             c = c + 6;
 26303              		.loc 1 3979 0
 26304 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26305 02b6 0633     		adds	r3, r3, #6
 26306 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26307              	.L1025:
3980:..\src/command_processing.c ****         }
3981:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26308              		.loc 1 3981 0
 26309 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26310 02c0 374A     		ldr	r2, .L1039
 26311 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26312 02c4 1946     		mov	r1, r3
 26313 02c6 374A     		ldr	r2, .L1039+4
 26314 02c8 0B46     		mov	r3, r1
 26315 02ca 9B00     		lsls	r3, r3, #2
 26316 02cc 0B44     		add	r3, r3, r1
 26317 02ce 1344     		add	r3, r3, r2
 26318 02d0 03F20D23 		addw	r3, r3, #525
 26319 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26320 02d6 002B     		cmp	r3, #0
 26321 02d8 00F0AF80 		beq	.L1026
3982:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 26322              		.loc 1 3982 0
 26323 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26324 02e0 3149     		ldr	r1, .L1039+8
 26325 02e2 1346     		mov	r3, r2
 26326 02e4 9B00     		lsls	r3, r3, #2
 26327 02e6 1344     		add	r3, r3, r2
 26328 02e8 DB00     		lsls	r3, r3, #3
 26329 02ea 0B44     		add	r3, r3, r1
 26330 02ec 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 578


 26331 02ee 1B68     		ldr	r3, [r3]	@ float
 26332 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26333              		.loc 1 3983 0
 26334 02f4 0023     		movs	r3, #0
 26335 02f6 87F88B31 		strb	r3, [r7, #395]
 26336 02fa 13E0     		b	.L1027
 26337              	.L1028:
3984:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26338              		.loc 1 3984 0 discriminator 3
 26339 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26340 0300 1A1D     		adds	r2, r3, #4
 26341 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26342 0306 D31A     		subs	r3, r2, r3
 26343 0308 013B     		subs	r3, r3, #1
 26344 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26345 030e 07F5C071 		add	r1, r7, #384
 26346 0312 0A44     		add	r2, r2, r1
 26347 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26348 0316 3A46     		mov	r2, r7
 26349 0318 D154     		strb	r1, [r2, r3]
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26350              		.loc 1 3983 0 discriminator 3
 26351 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26352 031e 0133     		adds	r3, r3, #1
 26353 0320 87F88B31 		strb	r3, [r7, #395]
 26354              	.L1027:
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26355              		.loc 1 3983 0 is_stmt 0 discriminator 1
 26356 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26357 0328 032B     		cmp	r3, #3
 26358 032a E7D9     		bls	.L1028
3985:..\src/command_processing.c ****             }
3986:..\src/command_processing.c **** 
3987:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 26359              		.loc 1 3987 0 is_stmt 1
 26360 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26361 0330 1D49     		ldr	r1, .L1039+8
 26362 0332 1346     		mov	r3, r2
 26363 0334 9B00     		lsls	r3, r3, #2
 26364 0336 1344     		add	r3, r3, r2
 26365 0338 DB00     		lsls	r3, r3, #3
 26366 033a 0B44     		add	r3, r3, r1
 26367 033c 1833     		adds	r3, r3, #24
 26368 033e 1B68     		ldr	r3, [r3]	@ float
 26369 0340 C7F88031 		str	r3, [r7, #384]	@ float
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26370              		.loc 1 3988 0
 26371 0344 0023     		movs	r3, #0
 26372 0346 87F88B31 		strb	r3, [r7, #395]
 26373 034a 14E0     		b	.L1029
 26374              	.L1030:
3989:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26375              		.loc 1 3989 0 discriminator 3
 26376 034c B7F88C31 		ldrh	r3, [r7, #396]
 26377 0350 03F10802 		add	r2, r3, #8
 26378 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 579


 26379 0358 D31A     		subs	r3, r2, r3
 26380 035a 013B     		subs	r3, r3, #1
 26381 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26382 0360 07F5C071 		add	r1, r7, #384
 26383 0364 0A44     		add	r2, r2, r1
 26384 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26385 0368 3A46     		mov	r2, r7
 26386 036a D154     		strb	r1, [r2, r3]
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26387              		.loc 1 3988 0 discriminator 3
 26388 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26389 0370 0133     		adds	r3, r3, #1
 26390 0372 87F88B31 		strb	r3, [r7, #395]
 26391              	.L1029:
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26392              		.loc 1 3988 0 is_stmt 0 discriminator 1
 26393 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26394 037a 032B     		cmp	r3, #3
 26395 037c E6D9     		bls	.L1030
3990:..\src/command_processing.c ****             }
3991:..\src/command_processing.c **** 
3992:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26396              		.loc 1 3992 0 is_stmt 1
 26397 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26398 0382 0949     		ldr	r1, .L1039+8
 26399 0384 1346     		mov	r3, r2
 26400 0386 9B00     		lsls	r3, r3, #2
 26401 0388 1344     		add	r3, r3, r2
 26402 038a DB00     		lsls	r3, r3, #3
 26403 038c 0B44     		add	r3, r3, r1
 26404 038e 1C33     		adds	r3, r3, #28
 26405 0390 1B68     		ldr	r3, [r3]	@ float
 26406 0392 C7F88031 		str	r3, [r7, #384]	@ float
3993:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26407              		.loc 1 3993 0
 26408 0396 0023     		movs	r3, #0
 26409 0398 87F88B31 		strb	r3, [r7, #395]
 26410 039c 1BE0     		b	.L1031
 26411              	.L1040:
 26412 039e 00BF     		.align	2
 26413              	.L1039:
 26414 03a0 00000000 		.word	IMU_connected
 26415 03a4 00000000 		.word	c_mem
 26416 03a8 00000000 		.word	g_imu
 26417              	.L1032:
3994:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26418              		.loc 1 3994 0 discriminator 3
 26419 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26420 03b0 03F10C02 		add	r2, r3, #12
 26421 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26422 03b8 D31A     		subs	r3, r2, r3
 26423 03ba 013B     		subs	r3, r3, #1
 26424 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26425 03c0 07F5C071 		add	r1, r7, #384
 26426 03c4 0A44     		add	r2, r2, r1
 26427 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26428 03c8 3A46     		mov	r2, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 580


 26429 03ca D154     		strb	r1, [r2, r3]
3993:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26430              		.loc 1 3993 0 discriminator 3
 26431 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26432 03d0 0133     		adds	r3, r3, #1
 26433 03d2 87F88B31 		strb	r3, [r7, #395]
 26434              	.L1031:
3993:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26435              		.loc 1 3993 0 is_stmt 0 discriminator 1
 26436 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26437 03da 032B     		cmp	r3, #3
 26438 03dc E6D9     		bls	.L1032
3995:..\src/command_processing.c ****             }
3996:..\src/command_processing.c **** 
3997:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26439              		.loc 1 3997 0 is_stmt 1
 26440 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26441 03e2 6749     		ldr	r1, .L1041
 26442 03e4 1346     		mov	r3, r2
 26443 03e6 9B00     		lsls	r3, r3, #2
 26444 03e8 1344     		add	r3, r3, r2
 26445 03ea DB00     		lsls	r3, r3, #3
 26446 03ec 0B44     		add	r3, r3, r1
 26447 03ee 2033     		adds	r3, r3, #32
 26448 03f0 1B68     		ldr	r3, [r3]	@ float
 26449 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3998:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26450              		.loc 1 3998 0
 26451 03f6 0023     		movs	r3, #0
 26452 03f8 87F88B31 		strb	r3, [r7, #395]
 26453 03fc 14E0     		b	.L1033
 26454              	.L1034:
3999:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26455              		.loc 1 3999 0 discriminator 3
 26456 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26457 0402 03F11002 		add	r2, r3, #16
 26458 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26459 040a D31A     		subs	r3, r2, r3
 26460 040c 013B     		subs	r3, r3, #1
 26461 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26462 0412 07F5C071 		add	r1, r7, #384
 26463 0416 0A44     		add	r2, r2, r1
 26464 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26465 041a 3A46     		mov	r2, r7
 26466 041c D154     		strb	r1, [r2, r3]
3998:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26467              		.loc 1 3998 0 discriminator 3
 26468 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26469 0422 0133     		adds	r3, r3, #1
 26470 0424 87F88B31 		strb	r3, [r7, #395]
 26471              	.L1033:
3998:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26472              		.loc 1 3998 0 is_stmt 0 discriminator 1
 26473 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26474 042c 032B     		cmp	r3, #3
 26475 042e E6D9     		bls	.L1034
4000:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 581


4001:..\src/command_processing.c ****             c = c + 16;
 26476              		.loc 1 4001 0 is_stmt 1
 26477 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26478 0434 1033     		adds	r3, r3, #16
 26479 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26480              	.L1026:
4002:..\src/command_processing.c ****         }
4003:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26481              		.loc 1 4003 0
 26482 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26483 043e 514A     		ldr	r2, .L1041+4
 26484 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26485 0442 1946     		mov	r1, r3
 26486 0444 504A     		ldr	r2, .L1041+8
 26487 0446 0B46     		mov	r3, r1
 26488 0448 9B00     		lsls	r3, r3, #2
 26489 044a 0B44     		add	r3, r3, r1
 26490 044c 1344     		add	r3, r3, r2
 26491 044e 03F20E23 		addw	r3, r3, #526
 26492 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26493 0454 002B     		cmp	r3, #0
 26494 0456 21D0     		beq	.L1035
4004:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26495              		.loc 1 4004 0
 26496 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26497 045c 4849     		ldr	r1, .L1041
 26498 045e 1346     		mov	r3, r2
 26499 0460 9B00     		lsls	r3, r3, #2
 26500 0462 1344     		add	r3, r3, r2
 26501 0464 DB00     		lsls	r3, r3, #3
 26502 0466 0B44     		add	r3, r3, r1
 26503 0468 2433     		adds	r3, r3, #36
 26504 046a B3F90030 		ldrsh	r3, [r3]
 26505 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
4005:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26506              		.loc 1 4005 0
 26507 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26508 0476 0133     		adds	r3, r3, #1
 26509 0478 07F5C372 		add	r2, r7, #390
 26510 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26511 047e 3A46     		mov	r2, r7
 26512 0480 D154     		strb	r1, [r2, r3]
4006:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26513              		.loc 1 4006 0
 26514 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26515 0486 07F5C373 		add	r3, r7, #390
 26516 048a 0133     		adds	r3, r3, #1
 26517 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26518 048e 3B46     		mov	r3, r7
 26519 0490 9954     		strb	r1, [r3, r2]
4007:..\src/command_processing.c ****             c = c + 2;
 26520              		.loc 1 4007 0
 26521 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26522 0496 0233     		adds	r3, r3, #2
 26523 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26524              	.L1035:
4008:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 582


4009:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26525              		.loc 1 4009 0
 26526 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26527 04a0 384A     		ldr	r2, .L1041+4
 26528 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26529 04a4 1A46     		mov	r2, r3
 26530 04a6 394B     		ldr	r3, .L1041+12
 26531 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26532 04ac 013B     		subs	r3, r3, #1
 26533 04ae 3A46     		mov	r2, r7
 26534 04b0 3A21     		movs	r1, #58
 26535 04b2 D154     		strb	r1, [r2, r3]
4010:..\src/command_processing.c ****         c = 1;
 26536              		.loc 1 4010 0
 26537 04b4 0123     		movs	r3, #1
 26538 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
4011:..\src/command_processing.c ****                
4012:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26539              		.loc 1 4012 0
 26540 04ba 0023     		movs	r3, #0
 26541 04bc 87F88B31 		strb	r3, [r7, #395]
 26542 04c0 10E0     		b	.L1036
 26543              	.L1037:
4013:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26544              		.loc 1 4013 0 discriminator 3
 26545 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26546 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26547 04ca 1344     		add	r3, r3, r2
 26548 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26549 04d0 3946     		mov	r1, r7
 26550 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26551 04d4 07F12002 		add	r2, r7, #32
 26552 04d8 D154     		strb	r1, [r2, r3]
4012:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26553              		.loc 1 4012 0 discriminator 3
 26554 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26555 04de 0133     		adds	r3, r3, #1
 26556 04e0 87F88B31 		strb	r3, [r7, #395]
 26557              	.L1036:
4012:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26558              		.loc 1 4012 0 is_stmt 0 discriminator 1
 26559 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26560 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26561 04ec 2549     		ldr	r1, .L1041+4
 26562 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26563 04f0 1946     		mov	r1, r3
 26564 04f2 264B     		ldr	r3, .L1041+12
 26565 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26566 04f8 9A42     		cmp	r2, r3
 26567 04fa E2DB     		blt	.L1037
4014:..\src/command_processing.c ****         }
4015:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26568              		.loc 1 4015 0 is_stmt 1 discriminator 2
 26569 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26570 0500 204A     		ldr	r2, .L1041+4
 26571 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26572 0504 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 583


 26573 0506 214B     		ldr	r3, .L1041+12
 26574 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26575 050c 9AB2     		uxth	r2, r3
 26576 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26577 0512 1344     		add	r3, r3, r2
 26578 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
4016:..\src/command_processing.c ****         
4017:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26579              		.loc 1 4017 0 discriminator 2
 26580 0518 3B46     		mov	r3, r7
 26581 051a 2022     		movs	r2, #32
 26582 051c 0021     		movs	r1, #0
 26583 051e 1846     		mov	r0, r3
 26584 0520 FFF7FEFF 		bl	memset
3932:..\src/command_processing.c ****     {	
 26585              		.loc 1 3932 0 discriminator 2
 26586 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26587 0528 0133     		adds	r3, r3, #1
 26588 052a 87F88F31 		strb	r3, [r7, #399]
 26589              	.L1022:
3932:..\src/command_processing.c ****     {	
 26590              		.loc 1 3932 0 is_stmt 0 discriminator 1
 26591 052e 184B     		ldr	r3, .L1041+16
 26592 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26593 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26594 0536 9A42     		cmp	r2, r3
 26595 0538 FFF476AD 		bcc	.L1038
4018:..\src/command_processing.c ****         
4019:..\src/command_processing.c ****     }
4020:..\src/command_processing.c **** 
4021:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4022:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26596              		.loc 1 4022 0 is_stmt 1
 26597 053c 154B     		ldr	r3, .L1041+20
 26598 053e 1B68     		ldr	r3, [r3]
 26599 0540 5C1E     		subs	r4, r3, #1
 26600 0542 144B     		ldr	r3, .L1041+20
 26601 0544 1B68     		ldr	r3, [r3]
 26602 0546 DBB2     		uxtb	r3, r3
 26603 0548 013B     		subs	r3, r3, #1
 26604 054a DAB2     		uxtb	r2, r3
 26605 054c 07F12003 		add	r3, r7, #32
 26606 0550 1146     		mov	r1, r2
 26607 0552 1846     		mov	r0, r3
 26608 0554 FFF7FEFF 		bl	LCRChecksum
 26609 0558 0346     		mov	r3, r0
 26610 055a 1A46     		mov	r2, r3
 26611 055c 07F12003 		add	r3, r7, #32
 26612 0560 1A55     		strb	r2, [r3, r4]
4023:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26613              		.loc 1 4023 0
 26614 0562 0C4B     		ldr	r3, .L1041+20
 26615 0564 1B68     		ldr	r3, [r3]
 26616 0566 9AB2     		uxth	r2, r3
 26617 0568 07F12003 		add	r3, r7, #32
 26618 056c 1146     		mov	r1, r2
 26619 056e 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 584


 26620 0570 FFF7FEFF 		bl	commWrite
4024:..\src/command_processing.c **** }
 26621              		.loc 1 4024 0
 26622 0574 00BF     		nop
 26623 0576 07F5CA77 		add	r7, r7, #404
 26624              		.cfi_def_cfa_offset 12
 26625 057a BD46     		mov	sp, r7
 26626              		.cfi_def_cfa_register 13
 26627              		@ sp needed
 26628 057c 90BD     		pop	{r4, r7, pc}
 26629              	.L1042:
 26630 057e 00BF     		.align	2
 26631              	.L1041:
 26632 0580 00000000 		.word	g_imu
 26633 0584 00000000 		.word	IMU_connected
 26634 0588 00000000 		.word	c_mem
 26635 058c 00000000 		.word	single_imu_size
 26636 0590 00000000 		.word	N_IMU_Connected
 26637 0594 00000000 		.word	imus_data_size
 26638              		.cfi_endproc
 26639              	.LFE110:
 26640              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26641              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26642              		.align	2
 26643              		.global	cmd_get_encoder_map
 26644              		.thumb
 26645              		.thumb_func
 26646              		.type	cmd_get_encoder_map, %function
 26647              	cmd_get_encoder_map:
 26648              	.LFB111:
4025:..\src/command_processing.c **** 
4026:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26649              		.loc 1 4026 0
 26650              		.cfi_startproc
 26651              		@ args = 0, pretend = 0, frame = 16
 26652              		@ frame_needed = 1, uses_anonymous_args = 0
 26653 0000 90B5     		push	{r4, r7, lr}
 26654              		.cfi_def_cfa_offset 12
 26655              		.cfi_offset 4, -12
 26656              		.cfi_offset 7, -8
 26657              		.cfi_offset 14, -4
 26658 0002 85B0     		sub	sp, sp, #20
 26659              		.cfi_def_cfa_offset 32
 26660 0004 00AF     		add	r7, sp, #0
 26661              		.cfi_def_cfa_register 7
4027:..\src/command_processing.c ****     //Retrieve Encoder map
4028:..\src/command_processing.c ****     
4029:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4030:..\src/command_processing.c ****     uint8 CYDATA i, j;
4031:..\src/command_processing.c ****     
4032:..\src/command_processing.c ****     // Header        
4033:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26662              		.loc 1 4033 0
 26663 0006 A323     		movs	r3, #163
 26664 0008 3B70     		strb	r3, [r7]
4034:..\src/command_processing.c ****     
4035:..\src/command_processing.c ****     // Fill payload
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 585


4036:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26665              		.loc 1 4036 0
 26666 000a 0223     		movs	r3, #2
 26667 000c 7B70     		strb	r3, [r7, #1]
4037:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26668              		.loc 1 4037 0
 26669 000e 0523     		movs	r3, #5
 26670 0010 BB70     		strb	r3, [r7, #2]
4038:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26671              		.loc 1 4038 0
 26672 0012 0023     		movs	r3, #0
 26673 0014 FB73     		strb	r3, [r7, #15]
 26674 0016 23E0     		b	.L1044
 26675              	.L1047:
4039:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26676              		.loc 1 4039 0
 26677 0018 0023     		movs	r3, #0
 26678 001a BB73     		strb	r3, [r7, #14]
 26679 001c 1AE0     		b	.L1045
 26680              	.L1046:
4040:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26681              		.loc 1 4040 0 discriminator 3
 26682 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26683 0020 1346     		mov	r3, r2
 26684 0022 9B00     		lsls	r3, r3, #2
 26685 0024 1344     		add	r3, r3, r2
 26686 0026 DA1C     		adds	r2, r3, #3
 26687 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26688 002a D118     		adds	r1, r2, r3
 26689 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26690 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26691 0030 154C     		ldr	r4, .L1048
 26692 0032 1346     		mov	r3, r2
 26693 0034 5B00     		lsls	r3, r3, #1
 26694 0036 1344     		add	r3, r3, r2
 26695 0038 1B01     		lsls	r3, r3, #4
 26696 003a 2344     		add	r3, r3, r4
 26697 003c 0344     		add	r3, r3, r0
 26698 003e 03F5CC73 		add	r3, r3, #408
 26699 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26700 0044 07F11003 		add	r3, r7, #16
 26701 0048 0B44     		add	r3, r3, r1
 26702 004a 03F8102C 		strb	r2, [r3, #-16]
4039:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26703              		.loc 1 4039 0 discriminator 3
 26704 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26705 0050 0133     		adds	r3, r3, #1
 26706 0052 BB73     		strb	r3, [r7, #14]
 26707              	.L1045:
4039:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26708              		.loc 1 4039 0 is_stmt 0 discriminator 1
 26709 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26710 0056 042B     		cmp	r3, #4
 26711 0058 E1D9     		bls	.L1046
4038:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26712              		.loc 1 4038 0 is_stmt 1 discriminator 2
 26713 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 586


 26714 005c 0133     		adds	r3, r3, #1
 26715 005e FB73     		strb	r3, [r7, #15]
 26716              	.L1044:
4038:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26717              		.loc 1 4038 0 is_stmt 0 discriminator 1
 26718 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26719 0062 012B     		cmp	r3, #1
 26720 0064 D8D9     		bls	.L1047
4041:..\src/command_processing.c ****         }
4042:..\src/command_processing.c ****     }
4043:..\src/command_processing.c ****     
4044:..\src/command_processing.c ****     // Calculate checksum
4045:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26721              		.loc 1 4045 0 is_stmt 1
 26722 0066 3B46     		mov	r3, r7
 26723 0068 0D21     		movs	r1, #13
 26724 006a 1846     		mov	r0, r3
 26725 006c FFF7FEFF 		bl	LCRChecksum
 26726 0070 0346     		mov	r3, r0
 26727 0072 7B73     		strb	r3, [r7, #13]
4046:..\src/command_processing.c ****     
4047:..\src/command_processing.c ****     // Send package to UART
4048:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26728              		.loc 1 4048 0
 26729 0074 3B46     		mov	r3, r7
 26730 0076 0E21     		movs	r1, #14
 26731 0078 1846     		mov	r0, r3
 26732 007a FFF7FEFF 		bl	commWrite
4049:..\src/command_processing.c **** }
 26733              		.loc 1 4049 0
 26734 007e 00BF     		nop
 26735 0080 1437     		adds	r7, r7, #20
 26736              		.cfi_def_cfa_offset 12
 26737 0082 BD46     		mov	sp, r7
 26738              		.cfi_def_cfa_register 13
 26739              		@ sp needed
 26740 0084 90BD     		pop	{r4, r7, pc}
 26741              	.L1049:
 26742 0086 00BF     		.align	2
 26743              	.L1048:
 26744 0088 00000000 		.word	c_mem
 26745              		.cfi_endproc
 26746              	.LFE111:
 26747              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26748              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26749              		.align	2
 26750              		.global	cmd_get_encoder_raw
 26751              		.thumb
 26752              		.thumb_func
 26753              		.type	cmd_get_encoder_raw, %function
 26754              	cmd_get_encoder_raw:
 26755              	.LFB112:
4050:..\src/command_processing.c **** 
4051:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26756              		.loc 1 4051 0
 26757              		.cfi_startproc
 26758              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 587


 26759              		@ frame_needed = 1, uses_anonymous_args = 0
 26760 0000 90B5     		push	{r4, r7, lr}
 26761              		.cfi_def_cfa_offset 12
 26762              		.cfi_offset 4, -12
 26763              		.cfi_offset 7, -8
 26764              		.cfi_offset 14, -4
 26765 0002 89B0     		sub	sp, sp, #36
 26766              		.cfi_def_cfa_offset 48
 26767 0004 00AF     		add	r7, sp, #0
 26768              		.cfi_def_cfa_register 7
4052:..\src/command_processing.c ****     //Retrieve all Encoders raw values
4053:..\src/command_processing.c ****     
4054:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4055:..\src/command_processing.c ****     uint8 i, j, idx;
4056:..\src/command_processing.c ****     uint16 aux_uint16;
4057:..\src/command_processing.c ****     
4058:..\src/command_processing.c ****     //Header package 
4059:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26769              		.loc 1 4059 0
 26770 0006 A423     		movs	r3, #164
 26771 0008 3B71     		strb	r3, [r7, #4]
4060:..\src/command_processing.c ****  
4061:..\src/command_processing.c ****     // Fill payload
4062:..\src/command_processing.c ****     idx = 0;
 26772              		.loc 1 4062 0
 26773 000a 0023     		movs	r3, #0
 26774 000c 7B77     		strb	r3, [r7, #29]
4063:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26775              		.loc 1 4063 0
 26776 000e 0023     		movs	r3, #0
 26777 0010 FB77     		strb	r3, [r7, #31]
 26778 0012 3FE0     		b	.L1051
 26779              	.L1055:
4064:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26780              		.loc 1 4064 0
 26781 0014 0023     		movs	r3, #0
 26782 0016 BB77     		strb	r3, [r7, #30]
 26783 0018 33E0     		b	.L1052
 26784              	.L1054:
4065:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26785              		.loc 1 4065 0
 26786 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26787 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26788 001e 3048     		ldr	r0, .L1056
 26789 0020 1346     		mov	r3, r2
 26790 0022 5B00     		lsls	r3, r3, #1
 26791 0024 1344     		add	r3, r3, r2
 26792 0026 1B01     		lsls	r3, r3, #4
 26793 0028 0344     		add	r3, r3, r0
 26794 002a 0B44     		add	r3, r3, r1
 26795 002c 03F5CC73 		add	r3, r3, #408
 26796 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26797 0032 012B     		cmp	r3, #1
 26798 0034 22D1     		bne	.L1053
4066:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26799              		.loc 1 4066 0
 26800 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 588


 26801 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26802 003a 2A48     		ldr	r0, .L1056+4
 26803 003c 1346     		mov	r3, r2
 26804 003e 9B00     		lsls	r3, r3, #2
 26805 0040 1344     		add	r3, r3, r2
 26806 0042 0B44     		add	r3, r3, r1
 26807 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26808 0048 7B80     		strh	r3, [r7, #2]	@ movhi
4067:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26809              		.loc 1 4067 0
 26810 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26811 004c 5B00     		lsls	r3, r3, #1
 26812 004e 0233     		adds	r3, r3, #2
 26813 0050 BA1C     		adds	r2, r7, #2
 26814 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26815 0054 07F12001 		add	r1, r7, #32
 26816 0058 0B44     		add	r3, r3, r1
 26817 005a 03F81C2C 		strb	r2, [r3, #-28]
4068:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26818              		.loc 1 4068 0
 26819 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26820 0060 5B00     		lsls	r3, r3, #1
 26821 0062 5A1C     		adds	r2, r3, #1
 26822 0064 BB1C     		adds	r3, r7, #2
 26823 0066 0133     		adds	r3, r3, #1
 26824 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26825 006a 07F12003 		add	r3, r7, #32
 26826 006e 1344     		add	r3, r3, r2
 26827 0070 0A46     		mov	r2, r1
 26828 0072 03F81C2C 		strb	r2, [r3, #-28]
4069:..\src/command_processing.c ****                 idx++;
 26829              		.loc 1 4069 0
 26830 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26831 0078 0133     		adds	r3, r3, #1
 26832 007a 7B77     		strb	r3, [r7, #29]
 26833              	.L1053:
4064:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26834              		.loc 1 4064 0 discriminator 2
 26835 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26836 007e 0133     		adds	r3, r3, #1
 26837 0080 BB77     		strb	r3, [r7, #30]
 26838              	.L1052:
4064:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26839              		.loc 1 4064 0 is_stmt 0 discriminator 1
 26840 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26841 0084 184A     		ldr	r2, .L1056+8
 26842 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26843 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26844 008a 9A42     		cmp	r2, r3
 26845 008c C5D3     		bcc	.L1054
4063:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26846              		.loc 1 4063 0 is_stmt 1 discriminator 2
 26847 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26848 0090 0133     		adds	r3, r3, #1
 26849 0092 FB77     		strb	r3, [r7, #31]
 26850              	.L1051:
4063:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 589


 26851              		.loc 1 4063 0 is_stmt 0 discriminator 1
 26852 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26853 0096 012B     		cmp	r3, #1
 26854 0098 BCD9     		bls	.L1055
4070:..\src/command_processing.c ****             }
4071:..\src/command_processing.c ****         }
4072:..\src/command_processing.c ****     }
4073:..\src/command_processing.c **** 
4074:..\src/command_processing.c ****     // Calculate checksum
4075:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26855              		.loc 1 4075 0 is_stmt 1
 26856 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26857 009c 5B00     		lsls	r3, r3, #1
 26858 009e 5C1C     		adds	r4, r3, #1
 26859 00a0 7B7F     		ldrb	r3, [r7, #29]
 26860 00a2 5B00     		lsls	r3, r3, #1
 26861 00a4 DBB2     		uxtb	r3, r3
 26862 00a6 0133     		adds	r3, r3, #1
 26863 00a8 DAB2     		uxtb	r2, r3
 26864 00aa 3B1D     		adds	r3, r7, #4
 26865 00ac 1146     		mov	r1, r2
 26866 00ae 1846     		mov	r0, r3
 26867 00b0 FFF7FEFF 		bl	LCRChecksum
 26868 00b4 0346     		mov	r3, r0
 26869 00b6 1A46     		mov	r2, r3
 26870 00b8 07F12003 		add	r3, r7, #32
 26871 00bc 2344     		add	r3, r3, r4
 26872 00be 03F81C2C 		strb	r2, [r3, #-28]
4076:..\src/command_processing.c ****     
4077:..\src/command_processing.c ****     // Send package to UART
4078:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26873              		.loc 1 4078 0
 26874 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26875 00c4 0133     		adds	r3, r3, #1
 26876 00c6 9BB2     		uxth	r3, r3
 26877 00c8 5B00     		lsls	r3, r3, #1
 26878 00ca 9AB2     		uxth	r2, r3
 26879 00cc 3B1D     		adds	r3, r7, #4
 26880 00ce 1146     		mov	r1, r2
 26881 00d0 1846     		mov	r0, r3
 26882 00d2 FFF7FEFF 		bl	commWrite
4079:..\src/command_processing.c **** }
 26883              		.loc 1 4079 0
 26884 00d6 00BF     		nop
 26885 00d8 2437     		adds	r7, r7, #36
 26886              		.cfi_def_cfa_offset 12
 26887 00da BD46     		mov	sp, r7
 26888              		.cfi_def_cfa_register 13
 26889              		@ sp needed
 26890 00dc 90BD     		pop	{r4, r7, pc}
 26891              	.L1057:
 26892 00de 00BF     		.align	2
 26893              	.L1056:
 26894 00e0 00000000 		.word	c_mem
 26895 00e4 00000000 		.word	Encoder_Value
 26896 00e8 00000000 		.word	N_Encoder_Line_Connected
 26897              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 590


 26898              	.LFE112:
 26899              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26900              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26901              		.align	2
 26902              		.global	cmd_get_ADC_map
 26903              		.thumb
 26904              		.thumb_func
 26905              		.type	cmd_get_ADC_map, %function
 26906              	cmd_get_ADC_map:
 26907              	.LFB113:
4080:..\src/command_processing.c **** 
4081:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26908              		.loc 1 4081 0
 26909              		.cfi_startproc
 26910              		@ args = 0, pretend = 0, frame = 16
 26911              		@ frame_needed = 1, uses_anonymous_args = 0
 26912 0000 80B5     		push	{r7, lr}
 26913              		.cfi_def_cfa_offset 8
 26914              		.cfi_offset 7, -8
 26915              		.cfi_offset 14, -4
 26916 0002 84B0     		sub	sp, sp, #16
 26917              		.cfi_def_cfa_offset 24
 26918 0004 00AF     		add	r7, sp, #0
 26919              		.cfi_def_cfa_register 7
4082:..\src/command_processing.c ****     //Retrieve Encoder map
4083:..\src/command_processing.c ****     
4084:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
4085:..\src/command_processing.c ****     uint8 CYDATA i;
4086:..\src/command_processing.c ****     
4087:..\src/command_processing.c ****     // Header        
4088:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26920              		.loc 1 4088 0
 26921 0006 A523     		movs	r3, #165
 26922 0008 3B70     		strb	r3, [r7]
4089:..\src/command_processing.c ****     
4090:..\src/command_processing.c ****     // Fill payload
4091:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26923              		.loc 1 4091 0
 26924 000a 0C23     		movs	r3, #12
 26925 000c 7B70     		strb	r3, [r7, #1]
4092:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26926              		.loc 1 4092 0
 26927 000e 0023     		movs	r3, #0
 26928 0010 FB73     		strb	r3, [r7, #15]
 26929 0012 0EE0     		b	.L1059
 26930              	.L1060:
4093:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26931              		.loc 1 4093 0 discriminator 3
 26932 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26933 0016 0233     		adds	r3, r3, #2
 26934 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26935 001a 0F49     		ldr	r1, .L1061
 26936 001c 0A44     		add	r2, r2, r1
 26937 001e 92F83022 		ldrb	r2, [r2, #560]	@ zero_extendqisi2
 26938 0022 07F11001 		add	r1, r7, #16
 26939 0026 0B44     		add	r3, r3, r1
 26940 0028 03F8102C 		strb	r2, [r3, #-16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 591


4092:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26941              		.loc 1 4092 0 discriminator 3
 26942 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26943 002e 0133     		adds	r3, r3, #1
 26944 0030 FB73     		strb	r3, [r7, #15]
 26945              	.L1059:
4092:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26946              		.loc 1 4092 0 is_stmt 0 discriminator 1
 26947 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26948 0034 0B2B     		cmp	r3, #11
 26949 0036 EDD9     		bls	.L1060
4094:..\src/command_processing.c ****     }
4095:..\src/command_processing.c ****     
4096:..\src/command_processing.c ****     // Calculate checksum
4097:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26950              		.loc 1 4097 0 is_stmt 1
 26951 0038 3B46     		mov	r3, r7
 26952 003a 0E21     		movs	r1, #14
 26953 003c 1846     		mov	r0, r3
 26954 003e FFF7FEFF 		bl	LCRChecksum
 26955 0042 0346     		mov	r3, r0
 26956 0044 BB73     		strb	r3, [r7, #14]
4098:..\src/command_processing.c ****     
4099:..\src/command_processing.c ****     // Send package to UART
4100:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26957              		.loc 1 4100 0
 26958 0046 3B46     		mov	r3, r7
 26959 0048 0F21     		movs	r1, #15
 26960 004a 1846     		mov	r0, r3
 26961 004c FFF7FEFF 		bl	commWrite
4101:..\src/command_processing.c ****     
4102:..\src/command_processing.c **** }
 26962              		.loc 1 4102 0
 26963 0050 00BF     		nop
 26964 0052 1037     		adds	r7, r7, #16
 26965              		.cfi_def_cfa_offset 8
 26966 0054 BD46     		mov	sp, r7
 26967              		.cfi_def_cfa_register 13
 26968              		@ sp needed
 26969 0056 80BD     		pop	{r7, pc}
 26970              	.L1062:
 26971              		.align	2
 26972              	.L1061:
 26973 0058 00000000 		.word	c_mem
 26974              		.cfi_endproc
 26975              	.LFE113:
 26976              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 26977              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26978              		.align	2
 26979              		.global	cmd_get_ADC_raw
 26980              		.thumb
 26981              		.thumb_func
 26982              		.type	cmd_get_ADC_raw, %function
 26983              	cmd_get_ADC_raw:
 26984              	.LFB114:
4103:..\src/command_processing.c **** 
4104:..\src/command_processing.c **** void cmd_get_ADC_raw(){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 592


 26985              		.loc 1 4104 0
 26986              		.cfi_startproc
 26987              		@ args = 0, pretend = 0, frame = 32
 26988              		@ frame_needed = 1, uses_anonymous_args = 0
 26989 0000 90B5     		push	{r4, r7, lr}
 26990              		.cfi_def_cfa_offset 12
 26991              		.cfi_offset 4, -12
 26992              		.cfi_offset 7, -8
 26993              		.cfi_offset 14, -4
 26994 0002 89B0     		sub	sp, sp, #36
 26995              		.cfi_def_cfa_offset 48
 26996 0004 00AF     		add	r7, sp, #0
 26997              		.cfi_def_cfa_register 7
4105:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4106:..\src/command_processing.c ****     
4107:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4108:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26998              		.loc 1 4108 0
 26999 0006 0023     		movs	r3, #0
 27000 0008 BB77     		strb	r3, [r7, #30]
4109:..\src/command_processing.c ****     int16 aux_int16;
4110:..\src/command_processing.c ****     
4111:..\src/command_processing.c ****     // Header        
4112:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 27001              		.loc 1 4112 0
 27002 000a A623     		movs	r3, #166
 27003 000c 3B71     		strb	r3, [r7, #4]
4113:..\src/command_processing.c ****     
4114:..\src/command_processing.c ****     // Fill payload
4115:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 27004              		.loc 1 4115 0
 27005 000e 0023     		movs	r3, #0
 27006 0010 FB77     		strb	r3, [r7, #31]
 27007 0012 27E0     		b	.L1064
 27008              	.L1066:
4116:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27009              		.loc 1 4116 0
 27010 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27011 0016 274A     		ldr	r2, .L1067
 27012 0018 1344     		add	r3, r3, r2
 27013 001a 93F83032 		ldrb	r3, [r3, #560]	@ zero_extendqisi2
 27014 001e 012B     		cmp	r3, #1
 27015 0020 1DD1     		bne	.L1065
4117:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 27016              		.loc 1 4117 0
 27017 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27018 0024 244A     		ldr	r2, .L1067+4
 27019 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 27020 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4118:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 27021              		.loc 1 4118 0
 27022 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27023 002e 5B00     		lsls	r3, r3, #1
 27024 0030 0233     		adds	r3, r3, #2
 27025 0032 BA1C     		adds	r2, r7, #2
 27026 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27027 0036 07F12001 		add	r1, r7, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 593


 27028 003a 0B44     		add	r3, r3, r1
 27029 003c 03F81C2C 		strb	r2, [r3, #-28]
4119:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 27030              		.loc 1 4119 0
 27031 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27032 0042 5B00     		lsls	r3, r3, #1
 27033 0044 5A1C     		adds	r2, r3, #1
 27034 0046 BB1C     		adds	r3, r7, #2
 27035 0048 0133     		adds	r3, r3, #1
 27036 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 27037 004c 07F12003 		add	r3, r7, #32
 27038 0050 1344     		add	r3, r3, r2
 27039 0052 0A46     		mov	r2, r1
 27040 0054 03F81C2C 		strb	r2, [r3, #-28]
4120:..\src/command_processing.c ****             idx++;
 27041              		.loc 1 4120 0
 27042 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27043 005a 0133     		adds	r3, r3, #1
 27044 005c BB77     		strb	r3, [r7, #30]
 27045              	.L1065:
4115:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27046              		.loc 1 4115 0 discriminator 2
 27047 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27048 0060 0133     		adds	r3, r3, #1
 27049 0062 FB77     		strb	r3, [r7, #31]
 27050              	.L1064:
4115:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27051              		.loc 1 4115 0 is_stmt 0 discriminator 1
 27052 0064 154B     		ldr	r3, .L1067+8
 27053 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27054 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 27055 006a 9A42     		cmp	r2, r3
 27056 006c D2D3     		bcc	.L1066
4121:..\src/command_processing.c ****         }
4122:..\src/command_processing.c ****     }
4123:..\src/command_processing.c **** 
4124:..\src/command_processing.c ****     // Calculate checksum
4125:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 27057              		.loc 1 4125 0 is_stmt 1
 27058 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27059 0070 5B00     		lsls	r3, r3, #1
 27060 0072 5C1C     		adds	r4, r3, #1
 27061 0074 BB7F     		ldrb	r3, [r7, #30]
 27062 0076 5B00     		lsls	r3, r3, #1
 27063 0078 DBB2     		uxtb	r3, r3
 27064 007a 0133     		adds	r3, r3, #1
 27065 007c DAB2     		uxtb	r2, r3
 27066 007e 3B1D     		adds	r3, r7, #4
 27067 0080 1146     		mov	r1, r2
 27068 0082 1846     		mov	r0, r3
 27069 0084 FFF7FEFF 		bl	LCRChecksum
 27070 0088 0346     		mov	r3, r0
 27071 008a 1A46     		mov	r2, r3
 27072 008c 07F12003 		add	r3, r7, #32
 27073 0090 2344     		add	r3, r3, r4
 27074 0092 03F81C2C 		strb	r2, [r3, #-28]
4126:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 594


4127:..\src/command_processing.c ****     // Send package to UART
4128:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 27075              		.loc 1 4128 0
 27076 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27077 0098 0133     		adds	r3, r3, #1
 27078 009a 9BB2     		uxth	r3, r3
 27079 009c 5B00     		lsls	r3, r3, #1
 27080 009e 9AB2     		uxth	r2, r3
 27081 00a0 3B1D     		adds	r3, r7, #4
 27082 00a2 1146     		mov	r1, r2
 27083 00a4 1846     		mov	r0, r3
 27084 00a6 FFF7FEFF 		bl	commWrite
4129:..\src/command_processing.c **** }
 27085              		.loc 1 4129 0
 27086 00aa 00BF     		nop
 27087 00ac 2437     		adds	r7, r7, #36
 27088              		.cfi_def_cfa_offset 12
 27089 00ae BD46     		mov	sp, r7
 27090              		.cfi_def_cfa_register 13
 27091              		@ sp needed
 27092 00b0 90BD     		pop	{r4, r7, pc}
 27093              	.L1068:
 27094 00b2 00BF     		.align	2
 27095              	.L1067:
 27096 00b4 00000000 		.word	c_mem
 27097 00b8 00000000 		.word	ADC_buf
 27098 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 27099              		.cfi_endproc
 27100              	.LFE114:
 27101              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 27102              		.section	.rodata
 27103 220f 00       		.align	2
 27104              	.LC323:
 27105 2210 00       		.ascii	"\000"
 27106              		.section	.text.cmd_get_SD_file,"ax",%progbits
 27107              		.align	2
 27108              		.global	cmd_get_SD_file
 27109              		.thumb
 27110              		.thumb_func
 27111              		.type	cmd_get_SD_file, %function
 27112              	cmd_get_SD_file:
 27113              	.LFB115:
4130:..\src/command_processing.c **** 
4131:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 27114              		.loc 1 4131 0
 27115              		.cfi_startproc
 27116              		@ args = 0, pretend = 0, frame = 20064
 27117              		@ frame_needed = 1, uses_anonymous_args = 0
 27118 0000 80B5     		push	{r7, lr}
 27119              		.cfi_def_cfa_offset 8
 27120              		.cfi_offset 7, -8
 27121              		.cfi_offset 14, -4
 27122 0002 ADF59C4D 		sub	sp, sp, #19968
 27123              		.cfi_def_cfa_offset 19976
 27124 0006 98B0     		sub	sp, sp, #96
 27125              		.cfi_def_cfa_offset 20072
 27126 0008 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 595


 27127              		.cfi_def_cfa_register 7
 27128 000a 0246     		mov	r2, r0
 27129 000c 07F16003 		add	r3, r7, #96
 27130 0010 5A3B     		subs	r3, r3, #90
 27131 0012 1A80     		strh	r2, [r3]	@ movhi
4132:..\src/command_processing.c ****     
4133:..\src/command_processing.c ****     uint8 i = 0;
 27132              		.loc 1 4133 0
 27133 0014 0023     		movs	r3, #0
 27134 0016 07F59C42 		add	r2, r7, #19968
 27135 001a 02F15F02 		add	r2, r2, #95
 27136 001e 1370     		strb	r3, [r2]
4134:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27137              		.loc 1 4134 0
 27138 0020 0023     		movs	r3, #0
 27139 0022 07F59C42 		add	r2, r7, #19968
 27140 0026 02F12C02 		add	r2, r2, #44
 27141 002a 1360     		str	r3, [r2]
 27142 002c 07F59C43 		add	r3, r7, #19968
 27143 0030 03F13003 		add	r3, r3, #48
 27144 0034 2E22     		movs	r2, #46
 27145 0036 0021     		movs	r1, #0
 27146 0038 1846     		mov	r0, r3
 27147 003a FFF7FEFF 		bl	memset
4135:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 27148              		.loc 1 4135 0
 27149 003e 07F16003 		add	r3, r7, #96
 27150 0042 543B     		subs	r3, r3, #84
 27151 0044 0022     		movs	r2, #0
 27152 0046 1A60     		str	r2, [r3]
 27153 0048 0433     		adds	r3, r3, #4
 27154 004a 44F61C62 		movw	r2, #19996
 27155 004e 0021     		movs	r1, #0
 27156 0050 1846     		mov	r0, r3
 27157 0052 FFF7FEFF 		bl	memset
4136:..\src/command_processing.c ****     strcpy(filename, "");
 27158              		.loc 1 4136 0
 27159 0056 3C4B     		ldr	r3, .L1074
 27160 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27161 005a 07F59C42 		add	r2, r7, #19968
 27162 005e 02F12C02 		add	r2, r2, #44
 27163 0062 1370     		strb	r3, [r2]
4137:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 27164              		.loc 1 4137 0
 27165 0064 384B     		ldr	r3, .L1074
 27166 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27167 0068 07F16003 		add	r3, r7, #96
 27168 006c 543B     		subs	r3, r3, #84
 27169 006e 1A70     		strb	r2, [r3]
4138:..\src/command_processing.c ****     
4139:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27170              		.loc 1 4139 0
 27171 0070 0023     		movs	r3, #0
 27172 0072 07F59C42 		add	r2, r7, #19968
 27173 0076 02F15F02 		add	r2, r2, #95
 27174 007a 1370     		strb	r3, [r2]
 27175 007c 1DE0     		b	.L1070
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 596


 27176              	.L1071:
4140:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27177              		.loc 1 4140 0 discriminator 3
 27178 007e 07F59C43 		add	r3, r7, #19968
 27179 0082 03F15F03 		add	r3, r3, #95
 27180 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27181 0088 07F59C42 		add	r2, r7, #19968
 27182 008c 02F12C02 		add	r2, r2, #44
 27183 0090 1344     		add	r3, r3, r2
 27184 0092 07F59C42 		add	r2, r7, #19968
 27185 0096 02F15F02 		add	r2, r2, #95
 27186 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27187 009c 0332     		adds	r2, r2, #3
 27188 009e 2B49     		ldr	r1, .L1074+4
 27189 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27190 00a2 1A70     		strb	r2, [r3]
4139:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27191              		.loc 1 4139 0 discriminator 3
 27192 00a4 07F59C43 		add	r3, r7, #19968
 27193 00a8 03F15F03 		add	r3, r3, #95
 27194 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27195 00ae 0133     		adds	r3, r3, #1
 27196 00b0 07F59C42 		add	r2, r7, #19968
 27197 00b4 02F15F02 		add	r2, r2, #95
 27198 00b8 1370     		strb	r3, [r2]
 27199              	.L1070:
4139:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27200              		.loc 1 4139 0 is_stmt 0 discriminator 1
 27201 00ba 07F59C43 		add	r3, r7, #19968
 27202 00be 03F15F03 		add	r3, r3, #95
 27203 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27204 00c4 9AB2     		uxth	r2, r3
 27205 00c6 07F16003 		add	r3, r7, #96
 27206 00ca 5A3B     		subs	r3, r3, #90
 27207 00cc 1B88     		ldrh	r3, [r3]
 27208 00ce 9342     		cmp	r3, r2
 27209 00d0 D5D8     		bhi	.L1071
4141:..\src/command_processing.c ****     }
4142:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27210              		.loc 1 4142 0 is_stmt 1
 27211 00d2 07F59C43 		add	r3, r7, #19968
 27212 00d6 03F15F03 		add	r3, r3, #95
 27213 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27214 00dc 07F59C42 		add	r2, r7, #19968
 27215 00e0 02F12C02 		add	r2, r2, #44
 27216 00e4 1344     		add	r3, r3, r2
 27217 00e6 0022     		movs	r2, #0
 27218 00e8 1A70     		strb	r2, [r3]
4143:..\src/command_processing.c ****      
4144:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4145:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27219              		.loc 1 4145 0
 27220 00ea 07F59C43 		add	r3, r7, #19968
 27221 00ee 03F12C03 		add	r3, r3, #44
 27222 00f2 1749     		ldr	r1, .L1074+8
 27223 00f4 1846     		mov	r0, r3
 27224 00f6 FFF7FEFF 		bl	strcmp
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 597


 27225 00fa 0346     		mov	r3, r0
 27226 00fc 002B     		cmp	r3, #0
 27227 00fe 0CD0     		beq	.L1072
4146:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 27228              		.loc 1 4146 0
 27229 0100 07F16003 		add	r3, r7, #96
 27230 0104 543B     		subs	r3, r3, #84
 27231 0106 07F59C40 		add	r0, r7, #19968
 27232 010a 00F12C00 		add	r0, r0, #44
 27233 010e 44F62062 		movw	r2, #20000
 27234 0112 1946     		mov	r1, r3
 27235 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27236 0118 07E0     		b	.L1073
 27237              	.L1072:
4147:..\src/command_processing.c ****     }
4148:..\src/command_processing.c ****     else {
4149:..\src/command_processing.c ****         //It is the currently open working file
4150:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27238              		.loc 1 4150 0
 27239 011a 07F16003 		add	r3, r7, #96
 27240 011e 543B     		subs	r3, r3, #84
 27241 0120 44F62061 		movw	r1, #20000
 27242 0124 1846     		mov	r0, r3
 27243 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27244              	.L1073:
4151:..\src/command_processing.c ****     }
4152:..\src/command_processing.c **** 
4153:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4154:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4155:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27245              		.loc 1 4155 0
 27246 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4156:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27247              		.loc 1 4156 0
 27248 012e 07F16003 		add	r3, r7, #96
 27249 0132 543B     		subs	r3, r3, #84
 27250 0134 1846     		mov	r0, r3
 27251 0136 FFF7FEFF 		bl	UART_RS485_PutString
4157:..\src/command_processing.c **** }
 27252              		.loc 1 4157 0
 27253 013a 00BF     		nop
 27254 013c 07F59C47 		add	r7, r7, #19968
 27255 0140 6037     		adds	r7, r7, #96
 27256              		.cfi_def_cfa_offset 8
 27257 0142 BD46     		mov	sp, r7
 27258              		.cfi_def_cfa_register 13
 27259              		@ sp needed
 27260 0144 80BD     		pop	{r7, pc}
 27261              	.L1075:
 27262 0146 00BF     		.align	2
 27263              	.L1074:
 27264 0148 10220000 		.word	.LC323
 27265 014c 00000000 		.word	g_rx
 27266 0150 00000000 		.word	sdFile
 27267              		.cfi_endproc
 27268              	.LFE115:
 27269              		.size	cmd_get_SD_file, .-cmd_get_SD_file
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 598


 27270              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 27271              		.align	2
 27272              		.global	cmd_remove_SD_file
 27273              		.thumb
 27274              		.thumb_func
 27275              		.type	cmd_remove_SD_file, %function
 27276              	cmd_remove_SD_file:
 27277              	.LFB116:
4158:..\src/command_processing.c **** 
4159:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 27278              		.loc 1 4159 0
 27279              		.cfi_startproc
 27280              		@ args = 0, pretend = 0, frame = 64
 27281              		@ frame_needed = 1, uses_anonymous_args = 0
 27282 0000 80B5     		push	{r7, lr}
 27283              		.cfi_def_cfa_offset 8
 27284              		.cfi_offset 7, -8
 27285              		.cfi_offset 14, -4
 27286 0002 90B0     		sub	sp, sp, #64
 27287              		.cfi_def_cfa_offset 72
 27288 0004 00AF     		add	r7, sp, #0
 27289              		.cfi_def_cfa_register 7
 27290 0006 0346     		mov	r3, r0
 27291 0008 FB80     		strh	r3, [r7, #6]	@ movhi
4160:..\src/command_processing.c ****     
4161:..\src/command_processing.c ****     uint8 i = 0;
 27292              		.loc 1 4161 0
 27293 000a 0023     		movs	r3, #0
 27294 000c 87F83F30 		strb	r3, [r7, #63]
4162:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27295              		.loc 1 4162 0
 27296 0010 0023     		movs	r3, #0
 27297 0012 FB60     		str	r3, [r7, #12]
 27298 0014 07F11003 		add	r3, r7, #16
 27299 0018 2E22     		movs	r2, #46
 27300 001a 0021     		movs	r1, #0
 27301 001c 1846     		mov	r0, r3
 27302 001e FFF7FEFF 		bl	memset
4163:..\src/command_processing.c ****     strcpy(filename, "");
 27303              		.loc 1 4163 0
 27304 0022 214B     		ldr	r3, .L1079
 27305 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27306 0026 3B73     		strb	r3, [r7, #12]
4164:..\src/command_processing.c ****     
4165:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27307              		.loc 1 4165 0
 27308 0028 0023     		movs	r3, #0
 27309 002a 87F83F30 		strb	r3, [r7, #63]
 27310 002e 0FE0     		b	.L1077
 27311              	.L1078:
4166:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27312              		.loc 1 4166 0 discriminator 3
 27313 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27314 0034 07F10C02 		add	r2, r7, #12
 27315 0038 1344     		add	r3, r3, r2
 27316 003a 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 27317 003e 0332     		adds	r2, r2, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 599


 27318 0040 1A49     		ldr	r1, .L1079+4
 27319 0042 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27320 0044 1A70     		strb	r2, [r3]
4165:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27321              		.loc 1 4165 0 discriminator 3
 27322 0046 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27323 004a 0133     		adds	r3, r3, #1
 27324 004c 87F83F30 		strb	r3, [r7, #63]
 27325              	.L1077:
4165:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27326              		.loc 1 4165 0 is_stmt 0 discriminator 1
 27327 0050 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27328 0054 9BB2     		uxth	r3, r3
 27329 0056 FA88     		ldrh	r2, [r7, #6]
 27330 0058 9A42     		cmp	r2, r3
 27331 005a E9D8     		bhi	.L1078
4167:..\src/command_processing.c ****     }
4168:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27332              		.loc 1 4168 0 is_stmt 1
 27333 005c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27334 0060 07F10C02 		add	r2, r7, #12
 27335 0064 1344     		add	r3, r3, r2
 27336 0066 0022     		movs	r2, #0
 27337 0068 1A70     		strb	r2, [r3]
4169:..\src/command_processing.c ****      
4170:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4171:..\src/command_processing.c ****     uint8 res = Remove_SD_File(filename);
 27338              		.loc 1 4171 0
 27339 006a 07F10C03 		add	r3, r7, #12
 27340 006e 1846     		mov	r0, r3
 27341 0070 FFF7FEFF 		bl	Remove_SD_File
 27342 0074 0346     		mov	r3, r0
 27343 0076 87F83E30 		strb	r3, [r7, #62]
4172:..\src/command_processing.c ****   
4173:..\src/command_processing.c ****     
4174:..\src/command_processing.c ****     uint8 packet_data[3]; 
4175:..\src/command_processing.c ****     
4176:..\src/command_processing.c ****     //Header package
4177:..\src/command_processing.c **** 
4178:..\src/command_processing.c ****     packet_data[0] = CMD_REMOVE_SD_SINGLE_FILE;
 27344              		.loc 1 4178 0
 27345 007a A823     		movs	r3, #168
 27346 007c 3B72     		strb	r3, [r7, #8]
4179:..\src/command_processing.c ****     packet_data[1] = res;
 27347              		.loc 1 4179 0
 27348 007e 97F83E30 		ldrb	r3, [r7, #62]
 27349 0082 7B72     		strb	r3, [r7, #9]
4180:..\src/command_processing.c **** 
4181:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4182:..\src/command_processing.c ****     packet_data[2] = LCRChecksum (packet_data, 2);
 27350              		.loc 1 4182 0
 27351 0084 07F10803 		add	r3, r7, #8
 27352 0088 0221     		movs	r1, #2
 27353 008a 1846     		mov	r0, r3
 27354 008c FFF7FEFF 		bl	LCRChecksum
 27355 0090 0346     		mov	r3, r0
 27356 0092 BB72     		strb	r3, [r7, #10]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 600


4183:..\src/command_processing.c ****     
4184:..\src/command_processing.c ****     commWrite(packet_data, 3);
 27357              		.loc 1 4184 0
 27358 0094 07F10803 		add	r3, r7, #8
 27359 0098 0321     		movs	r1, #3
 27360 009a 1846     		mov	r0, r3
 27361 009c FFF7FEFF 		bl	commWrite
4185:..\src/command_processing.c **** }
 27362              		.loc 1 4185 0
 27363 00a0 00BF     		nop
 27364 00a2 4037     		adds	r7, r7, #64
 27365              		.cfi_def_cfa_offset 8
 27366 00a4 BD46     		mov	sp, r7
 27367              		.cfi_def_cfa_register 13
 27368              		@ sp needed
 27369 00a6 80BD     		pop	{r7, pc}
 27370              	.L1080:
 27371              		.align	2
 27372              	.L1079:
 27373 00a8 10220000 		.word	.LC323
 27374 00ac 00000000 		.word	g_rx
 27375              		.cfi_endproc
 27376              	.LFE116:
 27377              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 27378              		.section	.text.air_chambers_control,"ax",%progbits
 27379              		.align	2
 27380              		.global	air_chambers_control
 27381              		.thumb
 27382              		.thumb_func
 27383              		.type	air_chambers_control, %function
 27384              	air_chambers_control:
 27385              	.LFB117:
4186:..\src/command_processing.c **** 
4187:..\src/command_processing.c **** //==============================================================================
4188:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4189:..\src/command_processing.c **** //==============================================================================
4190:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4191:..\src/command_processing.c **** 
4192:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 27386              		.loc 1 4192 0
 27387              		.cfi_startproc
 27388              		@ args = 0, pretend = 0, frame = 8
 27389              		@ frame_needed = 1, uses_anonymous_args = 0
 27390              		@ link register save eliminated.
 27391 0000 80B4     		push	{r7}
 27392              		.cfi_def_cfa_offset 4
 27393              		.cfi_offset 7, -4
 27394 0002 83B0     		sub	sp, sp, #12
 27395              		.cfi_def_cfa_offset 16
 27396 0004 00AF     		add	r7, sp, #0
 27397              		.cfi_def_cfa_register 7
 27398 0006 7860     		str	r0, [r7, #4]
4193:..\src/command_processing.c ****     
4194:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4195:..\src/command_processing.c ****     
4196:..\src/command_processing.c ****     int16 curr_diff;
4197:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 601


4198:..\src/command_processing.c ****     int32 valve_command;
4199:..\src/command_processing.c ****     int16 x_value;
4200:..\src/command_processing.c **** 
4201:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4202:..\src/command_processing.c ****     
4203:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4204:..\src/command_processing.c ****     
4205:..\src/command_processing.c ****     // Current difference saturation old mapping
4206:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4207:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4208:..\src/command_processing.c **** //    }
4209:..\src/command_processing.c **** //    if(curr_diff < 0) {
4210:..\src/command_processing.c **** //        curr_diff = 0;
4211:..\src/command_processing.c **** //    }
4212:..\src/command_processing.c **** 
4213:..\src/command_processing.c ****     // Compute pressure reference
4214:..\src/command_processing.c **** 
4215:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4216:..\src/command_processing.c ****     if (x_value < 0)
4217:..\src/command_processing.c ****         x_value = 0;
4218:..\src/command_processing.c ****     
4219:..\src/command_processing.c ****     // old mapping --- linear mapping
4220:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4221:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4222:..\src/command_processing.c ****     if (pressure_reference < 0)
4223:..\src/command_processing.c ****         pressure_reference = 0;
4224:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4225:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4226:..\src/command_processing.c ****     
4227:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4228:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4229:..\src/command_processing.c **** //    if (err_pressure < 0){
4230:..\src/command_processing.c **** //        err_pressure = 0;
4231:..\src/command_processing.c **** //    }
4232:..\src/command_processing.c ****     
4233:..\src/command_processing.c ****     if (x_value <= 0){
4234:..\src/command_processing.c ****         //i.e the hand is opening
4235:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4236:..\src/command_processing.c ****     }
4237:..\src/command_processing.c ****     else {
4238:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4239:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4240:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4241:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4242:..\src/command_processing.c ****     }
4243:..\src/command_processing.c ****     
4244:..\src/command_processing.c ****     // Pump control
4245:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4246:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4247:..\src/command_processing.c ****     
4248:..\src/command_processing.c ****     // Limit output voltage
4249:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4250:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4251:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4252:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4253:..\src/command_processing.c ****         
4254:..\src/command_processing.c ****     VALVE_Write(valve_command);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 602


4255:..\src/command_processing.c ****     
4256:..\src/command_processing.c ****     
4257:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4258:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4259:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4260:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4261:..\src/command_processing.c **** #endif
4262:..\src/command_processing.c **** }
 27399              		.loc 1 4262 0
 27400 0008 00BF     		nop
 27401 000a 0C37     		adds	r7, r7, #12
 27402              		.cfi_def_cfa_offset 4
 27403 000c BD46     		mov	sp, r7
 27404              		.cfi_def_cfa_register 13
 27405              		@ sp needed
 27406 000e 80BC     		pop	{r7}
 27407              		.cfi_restore 7
 27408              		.cfi_def_cfa_offset 0
 27409 0010 7047     		bx	lr
 27410              		.cfi_endproc
 27411              	.LFE117:
 27412              		.size	air_chambers_control, .-air_chambers_control
 27413 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27414              		.align	2
 27415              		.global	emg_activation_velocity_fsm
 27416              		.thumb
 27417              		.thumb_func
 27418              		.type	emg_activation_velocity_fsm, %function
 27419              	emg_activation_velocity_fsm:
 27420              	.LFB118:
4263:..\src/command_processing.c **** 
4264:..\src/command_processing.c **** 
4265:..\src/command_processing.c **** //==============================================================================
4266:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4267:..\src/command_processing.c **** //==============================================================================
4268:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4269:..\src/command_processing.c **** 
4270:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27421              		.loc 1 4270 0
 27422              		.cfi_startproc
 27423              		@ args = 0, pretend = 0, frame = 16
 27424              		@ frame_needed = 1, uses_anonymous_args = 0
 27425              		@ link register save eliminated.
 27426 0000 80B4     		push	{r7}
 27427              		.cfi_def_cfa_offset 4
 27428              		.cfi_offset 7, -4
 27429 0002 85B0     		sub	sp, sp, #20
 27430              		.cfi_def_cfa_offset 24
 27431 0004 00AF     		add	r7, sp, #0
 27432              		.cfi_def_cfa_register 7
4271:..\src/command_processing.c ****       
4272:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4273:..\src/command_processing.c ****     static int32 cnt = 0;
4274:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4275:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4276:..\src/command_processing.c ****     
4277:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 603


 27433              		.loc 1 4277 0
 27434 0006 534B     		ldr	r3, .L1111
 27435 0008 1B68     		ldr	r3, [r3]
 27436 000a 534A     		ldr	r2, .L1111+4
 27437 000c B2F8F821 		ldrh	r2, [r2, #504]
 27438 0010 9B1A     		subs	r3, r3, r2
 27439 0012 FB60     		str	r3, [r7, #12]
4278:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27440              		.loc 1 4278 0
 27441 0014 4F4B     		ldr	r3, .L1111
 27442 0016 5B68     		ldr	r3, [r3, #4]
 27443 0018 4F4A     		ldr	r2, .L1111+4
 27444 001a B2F8FA21 		ldrh	r2, [r2, #506]
 27445 001e 9B1A     		subs	r3, r3, r2
 27446 0020 BB60     		str	r3, [r7, #8]
4279:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27447              		.loc 1 4279 0
 27448 0022 4C4B     		ldr	r3, .L1111
 27449 0024 1B68     		ldr	r3, [r3]
 27450 0026 4C4A     		ldr	r2, .L1111+4
 27451 0028 B2F8EA22 		ldrh	r2, [r2, #746]
 27452 002c 9B1A     		subs	r3, r3, r2
 27453 002e 7B60     		str	r3, [r7, #4]
4280:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27454              		.loc 1 4280 0
 27455 0030 484B     		ldr	r3, .L1111
 27456 0032 5B68     		ldr	r3, [r3, #4]
 27457 0034 484A     		ldr	r2, .L1111+4
 27458 0036 B2F8EC22 		ldrh	r2, [r2, #748]
 27459 003a 9B1A     		subs	r3, r3, r2
 27460 003c 3B60     		str	r3, [r7]
4281:..\src/command_processing.c ****     
4282:..\src/command_processing.c **** 
4283:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4284:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4285:..\src/command_processing.c ****     switch (fsm_state){
 27461              		.loc 1 4285 0
 27462 003e 474B     		ldr	r3, .L1111+8
 27463 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27464 0042 032B     		cmp	r3, #3
 27465 0044 7FD8     		bhi	.L1083
 27466 0046 01A2     		adr	r2, .L1085
 27467 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27468              		.p2align 2
 27469              	.L1085:
 27470 004c 5D000000 		.word	.L1084+1
 27471 0050 71000000 		.word	.L1086+1
 27472 0054 11010000 		.word	.L1087+1
 27473 0058 25010000 		.word	.L1088+1
 27474              		.p2align 1
 27475              	.L1084:
4286:..\src/command_processing.c ****         case RELAX_STATE:
4287:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27476              		.loc 1 4287 0
 27477 005c FB68     		ldr	r3, [r7, #12]
 27478 005e 002B     		cmp	r3, #0
 27479 0060 02DC     		bgt	.L1089
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 604


 27480              		.loc 1 4287 0 is_stmt 0 discriminator 1
 27481 0062 BB68     		ldr	r3, [r7, #8]
 27482 0064 002B     		cmp	r3, #0
 27483 0066 67DD     		ble	.L1107
 27484              	.L1089:
4288:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27485              		.loc 1 4288 0 is_stmt 1
 27486 0068 3C4B     		ldr	r3, .L1111+8
 27487 006a 0122     		movs	r2, #1
 27488 006c 1A70     		strb	r2, [r3]
4289:..\src/command_processing.c ****             }
4290:..\src/command_processing.c ****             
4291:..\src/command_processing.c ****             break;
 27489              		.loc 1 4291 0
 27490 006e 63E0     		b	.L1107
 27491              	.L1086:
4292:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4293:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27492              		.loc 1 4293 0
 27493 0070 FB68     		ldr	r3, [r7, #12]
 27494 0072 002B     		cmp	r3, #0
 27495 0074 02DC     		bgt	.L1091
 27496              		.loc 1 4293 0 is_stmt 0 discriminator 1
 27497 0076 BB68     		ldr	r3, [r7, #8]
 27498 0078 002B     		cmp	r3, #0
 27499 007a 05DD     		ble	.L1092
 27500              	.L1091:
4294:..\src/command_processing.c ****                 cnt = cnt +1;
 27501              		.loc 1 4294 0 is_stmt 1
 27502 007c 384B     		ldr	r3, .L1111+12
 27503 007e 1B68     		ldr	r3, [r3]
 27504 0080 0133     		adds	r3, r3, #1
 27505 0082 374A     		ldr	r2, .L1111+12
 27506 0084 1360     		str	r3, [r2]
 27507 0086 02E0     		b	.L1093
 27508              	.L1092:
4295:..\src/command_processing.c ****             }
4296:..\src/command_processing.c ****             else {
4297:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27509              		.loc 1 4297 0
 27510 0088 344B     		ldr	r3, .L1111+8
 27511 008a 0022     		movs	r2, #0
 27512 008c 1A70     		strb	r2, [r3]
 27513              	.L1093:
4298:..\src/command_processing.c ****             }
4299:..\src/command_processing.c ****             
4300:..\src/command_processing.c ****             if (cnt > 100){
 27514              		.loc 1 4300 0
 27515 008e 344B     		ldr	r3, .L1111+12
 27516 0090 1B68     		ldr	r3, [r3]
 27517 0092 642B     		cmp	r3, #100
 27518 0094 52DD     		ble	.L1108
4301:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27519              		.loc 1 4301 0
 27520 0096 FB68     		ldr	r3, [r7, #12]
 27521 0098 002B     		cmp	r3, #0
 27522 009a 02DD     		ble	.L1095
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 605


 27523              		.loc 1 4301 0 is_stmt 0 discriminator 1
 27524 009c 7B68     		ldr	r3, [r7, #4]
 27525 009e 002B     		cmp	r3, #0
 27526 00a0 05DC     		bgt	.L1096
 27527              	.L1095:
 27528              		.loc 1 4301 0 discriminator 3
 27529 00a2 BB68     		ldr	r3, [r7, #8]
 27530 00a4 002B     		cmp	r3, #0
 27531 00a6 0EDD     		ble	.L1097
 27532              		.loc 1 4301 0 discriminator 4
 27533 00a8 3B68     		ldr	r3, [r7]
 27534 00aa 002B     		cmp	r3, #0
 27535 00ac 0BDD     		ble	.L1097
 27536              	.L1096:
4302:..\src/command_processing.c ****                     // Fast activation
4303:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27537              		.loc 1 4303 0 is_stmt 1
 27538 00ae 2A4B     		ldr	r3, .L1111+4
 27539 00b0 93F8E832 		ldrb	r3, [r3, #744]	@ zero_extendqisi2
 27540 00b4 002B     		cmp	r3, #0
 27541 00b6 03D1     		bne	.L1098
4304:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27542              		.loc 1 4304 0
 27543 00b8 284B     		ldr	r3, .L1111+8
 27544 00ba 0222     		movs	r2, #2
 27545 00bc 1A70     		strb	r2, [r3]
 27546 00be 02E0     		b	.L1097
 27547              	.L1098:
4305:..\src/command_processing.c ****                     }
4306:..\src/command_processing.c ****                     else{
4307:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27548              		.loc 1 4307 0
 27549 00c0 264B     		ldr	r3, .L1111+8
 27550 00c2 0322     		movs	r2, #3
 27551 00c4 1A70     		strb	r2, [r3]
 27552              	.L1097:
4308:..\src/command_processing.c ****                     }
4309:..\src/command_processing.c ****                 }
4310:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27553              		.loc 1 4310 0
 27554 00c6 FB68     		ldr	r3, [r7, #12]
 27555 00c8 002B     		cmp	r3, #0
 27556 00ca 02DD     		ble	.L1099
 27557              		.loc 1 4310 0 is_stmt 0 discriminator 1
 27558 00cc 7B68     		ldr	r3, [r7, #4]
 27559 00ce 002B     		cmp	r3, #0
 27560 00d0 05DB     		blt	.L1100
 27561              	.L1099:
 27562              		.loc 1 4310 0 discriminator 3
 27563 00d2 BB68     		ldr	r3, [r7, #8]
 27564 00d4 002B     		cmp	r3, #0
 27565 00d6 0EDD     		ble	.L1101
 27566              		.loc 1 4310 0 discriminator 4
 27567 00d8 3B68     		ldr	r3, [r7]
 27568 00da 002B     		cmp	r3, #0
 27569 00dc 0BDA     		bge	.L1101
 27570              	.L1100:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 606


4311:..\src/command_processing.c ****                     // Slow activation
4312:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27571              		.loc 1 4312 0 is_stmt 1
 27572 00de 1E4B     		ldr	r3, .L1111+4
 27573 00e0 93F8E832 		ldrb	r3, [r3, #744]	@ zero_extendqisi2
 27574 00e4 002B     		cmp	r3, #0
 27575 00e6 03D1     		bne	.L1102
4313:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27576              		.loc 1 4313 0
 27577 00e8 1C4B     		ldr	r3, .L1111+8
 27578 00ea 0322     		movs	r2, #3
 27579 00ec 1A70     		strb	r2, [r3]
 27580 00ee 02E0     		b	.L1101
 27581              	.L1102:
4314:..\src/command_processing.c ****                     }
4315:..\src/command_processing.c ****                     else{
4316:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27582              		.loc 1 4316 0
 27583 00f0 1A4B     		ldr	r3, .L1111+8
 27584 00f2 0222     		movs	r2, #2
 27585 00f4 1A70     		strb	r2, [r3]
 27586              	.L1101:
4317:..\src/command_processing.c ****                     }
4318:..\src/command_processing.c ****                 }
4319:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 27587              		.loc 1 4319 0
 27588 00f6 FB68     		ldr	r3, [r7, #12]
 27589 00f8 002B     		cmp	r3, #0
 27590 00fa 05DA     		bge	.L1103
 27591              		.loc 1 4319 0 is_stmt 0 discriminator 1
 27592 00fc BB68     		ldr	r3, [r7, #8]
 27593 00fe 002B     		cmp	r3, #0
 27594 0100 02DA     		bge	.L1103
4320:..\src/command_processing.c ****                     // Involuntary activation
4321:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 27595              		.loc 1 4321 0 is_stmt 1
 27596 0102 164B     		ldr	r3, .L1111+8
 27597 0104 0022     		movs	r2, #0
 27598 0106 1A70     		strb	r2, [r3]
 27599              	.L1103:
4322:..\src/command_processing.c ****                 }
4323:..\src/command_processing.c ****                 cnt = 0;
 27600              		.loc 1 4323 0
 27601 0108 154B     		ldr	r3, .L1111+12
 27602 010a 0022     		movs	r2, #0
 27603 010c 1A60     		str	r2, [r3]
4324:..\src/command_processing.c ****             }
4325:..\src/command_processing.c ****     
4326:..\src/command_processing.c ****             break;
 27604              		.loc 1 4326 0
 27605 010e 15E0     		b	.L1108
 27606              	.L1087:
4327:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4328:..\src/command_processing.c ****             
4329:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27607              		.loc 1 4329 0
 27608 0110 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 607


 27609 0112 002B     		cmp	r3, #0
 27610 0114 14DA     		bge	.L1109
 27611              		.loc 1 4329 0 is_stmt 0 discriminator 1
 27612 0116 BB68     		ldr	r3, [r7, #8]
 27613 0118 002B     		cmp	r3, #0
 27614 011a 11DA     		bge	.L1109
4330:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27615              		.loc 1 4330 0 is_stmt 1
 27616 011c 0F4B     		ldr	r3, .L1111+8
 27617 011e 0022     		movs	r2, #0
 27618 0120 1A70     		strb	r2, [r3]
4331:..\src/command_processing.c ****             }
4332:..\src/command_processing.c ****         
4333:..\src/command_processing.c ****             break;
 27619              		.loc 1 4333 0
 27620 0122 0DE0     		b	.L1109
 27621              	.L1088:
4334:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4335:..\src/command_processing.c ****           
4336:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27622              		.loc 1 4336 0
 27623 0124 FB68     		ldr	r3, [r7, #12]
 27624 0126 002B     		cmp	r3, #0
 27625 0128 0CDA     		bge	.L1110
 27626              		.loc 1 4336 0 is_stmt 0 discriminator 1
 27627 012a BB68     		ldr	r3, [r7, #8]
 27628 012c 002B     		cmp	r3, #0
 27629 012e 09DA     		bge	.L1110
4337:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27630              		.loc 1 4337 0 is_stmt 1
 27631 0130 0A4B     		ldr	r3, .L1111+8
 27632 0132 0022     		movs	r2, #0
 27633 0134 1A70     		strb	r2, [r3]
4338:..\src/command_processing.c ****             }
4339:..\src/command_processing.c ****             
4340:..\src/command_processing.c ****             break;
 27634              		.loc 1 4340 0
 27635 0136 05E0     		b	.L1110
 27636              	.L1107:
4291:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 27637              		.loc 1 4291 0
 27638 0138 00BF     		nop
 27639 013a 04E0     		b	.L1083
 27640              	.L1108:
4326:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 27641              		.loc 1 4326 0
 27642 013c 00BF     		nop
 27643 013e 02E0     		b	.L1083
 27644              	.L1109:
4333:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 27645              		.loc 1 4333 0
 27646 0140 00BF     		nop
 27647 0142 00E0     		b	.L1083
 27648              	.L1110:
 27649              		.loc 1 4340 0
 27650 0144 00BF     		nop
 27651              	.L1083:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 608


4341:..\src/command_processing.c ****     }
4342:..\src/command_processing.c ****     
4343:..\src/command_processing.c ****     return fsm_state;
 27652              		.loc 1 4343 0
 27653 0146 054B     		ldr	r3, .L1111+8
 27654 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4344:..\src/command_processing.c **** 
4345:..\src/command_processing.c **** }
 27655              		.loc 1 4345 0
 27656 014a 1846     		mov	r0, r3
 27657 014c 1437     		adds	r7, r7, #20
 27658              		.cfi_def_cfa_offset 4
 27659 014e BD46     		mov	sp, r7
 27660              		.cfi_def_cfa_register 13
 27661              		@ sp needed
 27662 0150 80BC     		pop	{r7}
 27663              		.cfi_restore 7
 27664              		.cfi_def_cfa_offset 0
 27665 0152 7047     		bx	lr
 27666              	.L1112:
 27667              		.align	2
 27668              	.L1111:
 27669 0154 00000000 		.word	g_adc_meas
 27670 0158 00000000 		.word	c_mem
 27671 015c 0C000000 		.word	fsm_state.11576
 27672 0160 10000000 		.word	cnt.11577
 27673              		.cfi_endproc
 27674              	.LFE118:
 27675              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 27676              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 27677              		.align	2
 27678              		.global	otbk_act_wrist_control
 27679              		.thumb
 27680              		.thumb_func
 27681              		.type	otbk_act_wrist_control, %function
 27682              	otbk_act_wrist_control:
 27683              	.LFB119:
4346:..\src/command_processing.c **** 
4347:..\src/command_processing.c **** //==============================================================================
4348:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4349:..\src/command_processing.c **** //==============================================================================
4350:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4351:..\src/command_processing.c **** 
4352:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 27684              		.loc 1 4352 0
 27685              		.cfi_startproc
 27686              		@ args = 0, pretend = 0, frame = 8
 27687              		@ frame_needed = 1, uses_anonymous_args = 0
 27688              		@ link register save eliminated.
 27689 0000 80B4     		push	{r7}
 27690              		.cfi_def_cfa_offset 4
 27691              		.cfi_offset 7, -4
 27692 0002 83B0     		sub	sp, sp, #12
 27693              		.cfi_def_cfa_offset 16
 27694 0004 00AF     		add	r7, sp, #0
 27695              		.cfi_def_cfa_register 7
 27696 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 609


4353:..\src/command_processing.c ****     
4354:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4355:..\src/command_processing.c ****     
4356:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4357:..\src/command_processing.c ****         
4358:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4359:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4360:..\src/command_processing.c ****     switch (fsm_state){
4361:..\src/command_processing.c ****         case RELAX_STATE:
4362:..\src/command_processing.c ****             
4363:..\src/command_processing.c ****             // Wrist stop
4364:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4365:..\src/command_processing.c ****             
4366:..\src/command_processing.c ****             // Softhand stop
4367:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4368:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4369:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4370:..\src/command_processing.c ****             
4371:..\src/command_processing.c ****             break;
4372:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4373:..\src/command_processing.c ****                 
4374:..\src/command_processing.c ****             break;
4375:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4376:..\src/command_processing.c ****             
4377:..\src/command_processing.c ****             // Wrist movement
4378:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4379:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4380:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4381:..\src/command_processing.c ****                 }
4382:..\src/command_processing.c ****                 else {
4383:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4384:..\src/command_processing.c ****                 }
4385:..\src/command_processing.c ****             }
4386:..\src/command_processing.c ****             else {
4387:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4388:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4389:..\src/command_processing.c ****                 }
4390:..\src/command_processing.c ****                 else {
4391:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4392:..\src/command_processing.c ****                 }
4393:..\src/command_processing.c ****             }
4394:..\src/command_processing.c ****             
4395:..\src/command_processing.c ****             // Softhand stop
4396:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4397:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4398:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4399:..\src/command_processing.c ****             
4400:..\src/command_processing.c ****             break;
4401:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4402:..\src/command_processing.c ****             
4403:..\src/command_processing.c ****             // Wrist stop
4404:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4405:..\src/command_processing.c ****             
4406:..\src/command_processing.c ****             // SoftHand movement
4407:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4408:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4409:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 610


4410:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4411:..\src/command_processing.c ****             
4412:..\src/command_processing.c ****             break;
4413:..\src/command_processing.c ****     }
4414:..\src/command_processing.c ****         
4415:..\src/command_processing.c ****     // Limit output voltage
4416:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4417:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4418:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4419:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4420:..\src/command_processing.c ****     
4421:..\src/command_processing.c **** #endif
4422:..\src/command_processing.c **** }
 27697              		.loc 1 4422 0
 27698 0008 00BF     		nop
 27699 000a 0C37     		adds	r7, r7, #12
 27700              		.cfi_def_cfa_offset 4
 27701 000c BD46     		mov	sp, r7
 27702              		.cfi_def_cfa_register 13
 27703              		@ sp needed
 27704 000e 80BC     		pop	{r7}
 27705              		.cfi_restore 7
 27706              		.cfi_def_cfa_offset 0
 27707 0010 7047     		bx	lr
 27708              		.cfi_endproc
 27709              	.LFE119:
 27710              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 27711 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 27712              		.align	2
 27713              		.global	drive_slave
 27714              		.thumb
 27715              		.thumb_func
 27716              		.type	drive_slave, %function
 27717              	drive_slave:
 27718              	.LFB120:
4423:..\src/command_processing.c **** 
4424:..\src/command_processing.c **** //==============================================================================
4425:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4426:..\src/command_processing.c **** //==============================================================================
4427:..\src/command_processing.c ****  
4428:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 27719              		.loc 1 4428 0
 27720              		.cfi_startproc
 27721              		@ args = 0, pretend = 0, frame = 8
 27722              		@ frame_needed = 1, uses_anonymous_args = 0
 27723              		@ link register save eliminated.
 27724 0000 80B4     		push	{r7}
 27725              		.cfi_def_cfa_offset 4
 27726              		.cfi_offset 7, -4
 27727 0002 83B0     		sub	sp, sp, #12
 27728              		.cfi_def_cfa_offset 16
 27729 0004 00AF     		add	r7, sp, #0
 27730              		.cfi_def_cfa_register 7
 27731 0006 0346     		mov	r3, r0
 27732 0008 0A46     		mov	r2, r1
 27733 000a FB71     		strb	r3, [r7, #7]
 27734 000c 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 611


 27735 000e BB71     		strb	r3, [r7, #6]
4429:..\src/command_processing.c **** 
4430:..\src/command_processing.c **** #ifdef MASTER_FW
4431:..\src/command_processing.c ****     uint8 packet_data[6];
4432:..\src/command_processing.c ****     uint8 packet_lenght;
4433:..\src/command_processing.c ****     int16 aux_int16;
4434:..\src/command_processing.c **** 
4435:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4436:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4437:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4438:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4439:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4440:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4441:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4442:..\src/command_processing.c ****         master_mode = 0;
4443:..\src/command_processing.c ****         return;
4444:..\src/command_processing.c ****     }
4445:..\src/command_processing.c ****         
4446:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4447:..\src/command_processing.c ****         master_mode = 0;
4448:..\src/command_processing.c ****         return;
4449:..\src/command_processing.c ****     }
4450:..\src/command_processing.c ****     
4451:..\src/command_processing.c ****        
4452:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4453:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4454:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4455:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4456:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4457:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4458:..\src/command_processing.c ****     
4459:..\src/command_processing.c ****     packet_lenght = 6;
4460:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4461:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4462:..\src/command_processing.c **** 
4463:..\src/command_processing.c **** #endif
4464:..\src/command_processing.c **** }
 27736              		.loc 1 4464 0
 27737 0010 00BF     		nop
 27738 0012 0C37     		adds	r7, r7, #12
 27739              		.cfi_def_cfa_offset 4
 27740 0014 BD46     		mov	sp, r7
 27741              		.cfi_def_cfa_register 13
 27742              		@ sp needed
 27743 0016 80BC     		pop	{r7}
 27744              		.cfi_restore 7
 27745              		.cfi_def_cfa_offset 0
 27746 0018 7047     		bx	lr
 27747              		.cfi_endproc
 27748              	.LFE120:
 27749              		.size	drive_slave, .-drive_slave
 27750 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 27751              		.align	2
 27752              		.global	stop_master_device
 27753              		.thumb
 27754              		.thumb_func
 27755              		.type	stop_master_device, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 612


 27756              	stop_master_device:
 27757              	.LFB121:
4465:..\src/command_processing.c **** 
4466:..\src/command_processing.c **** //==============================================================================
4467:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4468:..\src/command_processing.c **** //==============================================================================
4469:..\src/command_processing.c ****  
4470:..\src/command_processing.c **** void stop_master_device() {
 27758              		.loc 1 4470 0
 27759              		.cfi_startproc
 27760              		@ args = 0, pretend = 0, frame = 0
 27761              		@ frame_needed = 1, uses_anonymous_args = 0
 27762              		@ link register save eliminated.
 27763 0000 80B4     		push	{r7}
 27764              		.cfi_def_cfa_offset 4
 27765              		.cfi_offset 7, -4
 27766 0002 00AF     		add	r7, sp, #0
 27767              		.cfi_def_cfa_register 7
4471:..\src/command_processing.c ****     
4472:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4473:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4474:..\src/command_processing.c ****         // Stop pump and open valve
4475:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4476:..\src/command_processing.c ****         VALVE_Write(0);
4477:..\src/command_processing.c ****     }
4478:..\src/command_processing.c **** #endif
4479:..\src/command_processing.c **** 
4480:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4481:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4482:..\src/command_processing.c ****         //Stop wrist motor
4483:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4484:..\src/command_processing.c ****     }
4485:..\src/command_processing.c **** #endif    
4486:..\src/command_processing.c **** }
 27768              		.loc 1 4486 0
 27769 0004 00BF     		nop
 27770 0006 BD46     		mov	sp, r7
 27771              		.cfi_def_cfa_register 13
 27772              		@ sp needed
 27773 0008 80BC     		pop	{r7}
 27774              		.cfi_restore 7
 27775              		.cfi_def_cfa_offset 0
 27776 000a 7047     		bx	lr
 27777              		.cfi_endproc
 27778              	.LFE121:
 27779              		.size	stop_master_device, .-stop_master_device
 27780              		.section	.text.deactivate_slaves,"ax",%progbits
 27781              		.align	2
 27782              		.global	deactivate_slaves
 27783              		.thumb
 27784              		.thumb_func
 27785              		.type	deactivate_slaves, %function
 27786              	deactivate_slaves:
 27787              	.LFB122:
4487:..\src/command_processing.c **** 
4488:..\src/command_processing.c **** //==============================================================================
4489:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 613


4490:..\src/command_processing.c **** //==============================================================================
4491:..\src/command_processing.c ****  
4492:..\src/command_processing.c **** void deactivate_slaves() {
 27788              		.loc 1 4492 0
 27789              		.cfi_startproc
 27790              		@ args = 0, pretend = 0, frame = 0
 27791              		@ frame_needed = 1, uses_anonymous_args = 0
 27792              		@ link register save eliminated.
 27793 0000 80B4     		push	{r7}
 27794              		.cfi_def_cfa_offset 4
 27795              		.cfi_offset 7, -4
 27796 0002 00AF     		add	r7, sp, #0
 27797              		.cfi_def_cfa_register 7
4493:..\src/command_processing.c ****     
4494:..\src/command_processing.c **** #ifdef MASTER_FW
4495:..\src/command_processing.c ****     
4496:..\src/command_processing.c ****     uint8 packet_data[10];
4497:..\src/command_processing.c ****     uint8 packet_lenght;
4498:..\src/command_processing.c ****     
4499:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4500:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4501:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4502:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4503:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4504:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4505:..\src/command_processing.c ****         master_mode = 0;
4506:..\src/command_processing.c ****         return;
4507:..\src/command_processing.c ****     }
4508:..\src/command_processing.c ****    
4509:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4510:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4511:..\src/command_processing.c **** 
4512:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4513:..\src/command_processing.c ****     packet_lenght = 3;
4514:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4515:..\src/command_processing.c ****     
4516:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4517:..\src/command_processing.c ****     
4518:..\src/command_processing.c **** #endif    
4519:..\src/command_processing.c **** }
 27798              		.loc 1 4519 0
 27799 0004 00BF     		nop
 27800 0006 BD46     		mov	sp, r7
 27801              		.cfi_def_cfa_register 13
 27802              		@ sp needed
 27803 0008 80BC     		pop	{r7}
 27804              		.cfi_restore 7
 27805              		.cfi_def_cfa_offset 0
 27806 000a 7047     		bx	lr
 27807              		.cfi_endproc
 27808              	.LFE122:
 27809              		.size	deactivate_slaves, .-deactivate_slaves
 27810              		.bss
 27811              		.align	2
 27812              	h_time.11247:
 27813 0000 00000000 		.space	4
 27814              		.align	1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 614


 27815              	i.11288:
 27816 0004 0000     		.space	2
 27817 0006 0000     		.align	2
 27818              	last_aux_int16.11419:
 27819 0008 00000000 		.space	4
 27820              	fsm_state.11576:
 27821 000c 00       		.space	1
 27822 000d 000000   		.align	2
 27823              	cnt.11577:
 27824 0010 00000000 		.space	4
 27825              		.text
 27826              	.Letext0:
 27827              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27828              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27829              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 27830              		.file 6 "..\\src\\commands.h"
 27831              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 27832              		.file 8 "..\\src\\globals.h"
 27833              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 27834              		.section	.debug_info,"",%progbits
 27835              	.Ldebug_info0:
 27836 0000 4E270000 		.4byte	0x274e
 27837 0004 0400     		.2byte	0x4
 27838 0006 00000000 		.4byte	.Ldebug_abbrev0
 27839 000a 04       		.byte	0x4
 27840 000b 01       		.uleb128 0x1
 27841 000c 770A0000 		.4byte	.LASF410
 27842 0010 0C       		.byte	0xc
 27843 0011 15160000 		.4byte	.LASF411
 27844 0015 6C020000 		.4byte	.LASF412
 27845 0019 00000000 		.4byte	.Ldebug_ranges0+0
 27846 001d 00000000 		.4byte	0
 27847 0021 00000000 		.4byte	.Ldebug_line0
 27848 0025 02       		.uleb128 0x2
 27849 0026 01       		.byte	0x1
 27850 0027 06       		.byte	0x6
 27851 0028 33050000 		.4byte	.LASF0
 27852 002c 02       		.uleb128 0x2
 27853 002d 01       		.byte	0x1
 27854 002e 08       		.byte	0x8
 27855 002f AD050000 		.4byte	.LASF1
 27856 0033 02       		.uleb128 0x2
 27857 0034 02       		.byte	0x2
 27858 0035 05       		.byte	0x5
 27859 0036 7E120000 		.4byte	.LASF2
 27860 003a 02       		.uleb128 0x2
 27861 003b 02       		.byte	0x2
 27862 003c 07       		.byte	0x7
 27863 003d 07150000 		.4byte	.LASF3
 27864 0041 03       		.uleb128 0x3
 27865 0042 D3150000 		.4byte	.LASF5
 27866 0046 03       		.byte	0x3
 27867 0047 3F       		.byte	0x3f
 27868 0048 4C000000 		.4byte	0x4c
 27869 004c 02       		.uleb128 0x2
 27870 004d 04       		.byte	0x4
 27871 004e 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 615


 27872 004f F2030000 		.4byte	.LASF4
 27873 0053 03       		.uleb128 0x3
 27874 0054 420B0000 		.4byte	.LASF6
 27875 0058 03       		.byte	0x3
 27876 0059 41       		.byte	0x41
 27877 005a 5E000000 		.4byte	0x5e
 27878 005e 02       		.uleb128 0x2
 27879 005f 04       		.byte	0x4
 27880 0060 07       		.byte	0x7
 27881 0061 31090000 		.4byte	.LASF7
 27882 0065 02       		.uleb128 0x2
 27883 0066 08       		.byte	0x8
 27884 0067 05       		.byte	0x5
 27885 0068 4D0B0000 		.4byte	.LASF8
 27886 006c 02       		.uleb128 0x2
 27887 006d 08       		.byte	0x8
 27888 006e 07       		.byte	0x7
 27889 006f 780F0000 		.4byte	.LASF9
 27890 0073 04       		.uleb128 0x4
 27891 0074 04       		.byte	0x4
 27892 0075 05       		.byte	0x5
 27893 0076 696E7400 		.ascii	"int\000"
 27894 007a 02       		.uleb128 0x2
 27895 007b 04       		.byte	0x4
 27896 007c 07       		.byte	0x7
 27897 007d 8A0C0000 		.4byte	.LASF10
 27898 0081 03       		.uleb128 0x3
 27899 0082 D2000000 		.4byte	.LASF11
 27900 0086 04       		.byte	0x4
 27901 0087 2C       		.byte	0x2c
 27902 0088 41000000 		.4byte	0x41
 27903 008c 03       		.uleb128 0x3
 27904 008d 75140000 		.4byte	.LASF12
 27905 0091 04       		.byte	0x4
 27906 0092 30       		.byte	0x30
 27907 0093 53000000 		.4byte	0x53
 27908 0097 05       		.uleb128 0x5
 27909 0098 60120000 		.4byte	.LASF13
 27910 009c 05       		.byte	0x5
 27911 009d E401     		.2byte	0x1e4
 27912 009f 2C000000 		.4byte	0x2c
 27913 00a3 05       		.uleb128 0x5
 27914 00a4 78160000 		.4byte	.LASF14
 27915 00a8 05       		.byte	0x5
 27916 00a9 E501     		.2byte	0x1e5
 27917 00ab 3A000000 		.4byte	0x3a
 27918 00af 05       		.uleb128 0x5
 27919 00b0 08010000 		.4byte	.LASF15
 27920 00b4 05       		.byte	0x5
 27921 00b5 E601     		.2byte	0x1e6
 27922 00b7 5E000000 		.4byte	0x5e
 27923 00bb 05       		.uleb128 0x5
 27924 00bc 16020000 		.4byte	.LASF16
 27925 00c0 05       		.byte	0x5
 27926 00c1 E701     		.2byte	0x1e7
 27927 00c3 25000000 		.4byte	0x25
 27928 00c7 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 616


 27929 00c8 D5130000 		.4byte	.LASF17
 27930 00cc 05       		.byte	0x5
 27931 00cd E801     		.2byte	0x1e8
 27932 00cf 33000000 		.4byte	0x33
 27933 00d3 05       		.uleb128 0x5
 27934 00d4 61150000 		.4byte	.LASF18
 27935 00d8 05       		.byte	0x5
 27936 00d9 E901     		.2byte	0x1e9
 27937 00db 4C000000 		.4byte	0x4c
 27938 00df 05       		.uleb128 0x5
 27939 00e0 79040000 		.4byte	.LASF19
 27940 00e4 05       		.byte	0x5
 27941 00e5 EA01     		.2byte	0x1ea
 27942 00e7 EB000000 		.4byte	0xeb
 27943 00eb 02       		.uleb128 0x2
 27944 00ec 04       		.byte	0x4
 27945 00ed 04       		.byte	0x4
 27946 00ee 330C0000 		.4byte	.LASF20
 27947 00f2 02       		.uleb128 0x2
 27948 00f3 08       		.byte	0x8
 27949 00f4 04       		.byte	0x4
 27950 00f5 A50B0000 		.4byte	.LASF21
 27951 00f9 02       		.uleb128 0x2
 27952 00fa 01       		.byte	0x1
 27953 00fb 08       		.byte	0x8
 27954 00fc 51060000 		.4byte	.LASF22
 27955 0100 05       		.uleb128 0x5
 27956 0101 6D100000 		.4byte	.LASF23
 27957 0105 05       		.byte	0x5
 27958 0106 8E02     		.2byte	0x28e
 27959 0108 0C010000 		.4byte	0x10c
 27960 010c 06       		.uleb128 0x6
 27961 010d 97000000 		.4byte	0x97
 27962 0111 02       		.uleb128 0x2
 27963 0112 08       		.byte	0x8
 27964 0113 04       		.byte	0x4
 27965 0114 640E0000 		.4byte	.LASF24
 27966 0118 02       		.uleb128 0x2
 27967 0119 04       		.byte	0x4
 27968 011a 07       		.byte	0x7
 27969 011b 39000000 		.4byte	.LASF25
 27970 011f 07       		.uleb128 0x7
 27971 0120 04       		.byte	0x4
 27972 0121 F9000000 		.4byte	0xf9
 27973 0125 07       		.uleb128 0x7
 27974 0126 04       		.byte	0x4
 27975 0127 2B010000 		.4byte	0x12b
 27976 012b 08       		.uleb128 0x8
 27977 012c F9000000 		.4byte	0xf9
 27978 0130 09       		.uleb128 0x9
 27979 0131 F9000000 		.4byte	0xf9
 27980 0135 40010000 		.4byte	0x140
 27981 0139 0A       		.uleb128 0xa
 27982 013a 18010000 		.4byte	0x118
 27983 013e 19       		.byte	0x19
 27984 013f 00       		.byte	0
 27985 0140 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 617


 27986 0141 F9000000 		.4byte	0xf9
 27987 0145 50010000 		.4byte	0x150
 27988 0149 0A       		.uleb128 0xa
 27989 014a 18010000 		.4byte	0x118
 27990 014e 07       		.byte	0x7
 27991 014f 00       		.byte	0
 27992 0150 0B       		.uleb128 0xb
 27993 0151 EA0C0000 		.4byte	.LASF58
 27994 0155 01       		.byte	0x1
 27995 0156 2C000000 		.4byte	0x2c
 27996 015a 06       		.byte	0x6
 27997 015b 42       		.byte	0x42
 27998 015c 21020000 		.4byte	0x221
 27999 0160 0C       		.uleb128 0xc
 28000 0161 92160000 		.4byte	.LASF26
 28001 0165 00       		.byte	0
 28002 0166 0C       		.uleb128 0xc
 28003 0167 0F130000 		.4byte	.LASF27
 28004 016b 01       		.byte	0x1
 28005 016c 0C       		.uleb128 0xc
 28006 016d 0D090000 		.4byte	.LASF28
 28007 0171 03       		.byte	0x3
 28008 0172 0C       		.uleb128 0xc
 28009 0173 E5050000 		.4byte	.LASF29
 28010 0177 04       		.byte	0x4
 28011 0178 0C       		.uleb128 0xc
 28012 0179 A6100000 		.4byte	.LASF30
 28013 017d 05       		.byte	0x5
 28014 017e 0C       		.uleb128 0xc
 28015 017f 1F0A0000 		.4byte	.LASF31
 28016 0183 06       		.byte	0x6
 28017 0184 0C       		.uleb128 0xc
 28018 0185 43090000 		.4byte	.LASF32
 28019 0189 09       		.byte	0x9
 28020 018a 0C       		.uleb128 0xc
 28021 018b 4F000000 		.4byte	.LASF33
 28022 018f 0A       		.byte	0xa
 28023 0190 0C       		.uleb128 0xc
 28024 0191 B7130000 		.4byte	.LASF34
 28025 0195 0C       		.byte	0xc
 28026 0196 0C       		.uleb128 0xc
 28027 0197 C40E0000 		.4byte	.LASF35
 28028 019b 0D       		.byte	0xd
 28029 019c 0C       		.uleb128 0xc
 28030 019d 95000000 		.4byte	.LASF36
 28031 01a1 80       		.byte	0x80
 28032 01a2 0C       		.uleb128 0xc
 28033 01a3 40060000 		.4byte	.LASF37
 28034 01a7 81       		.byte	0x81
 28035 01a8 0C       		.uleb128 0xc
 28036 01a9 79070000 		.4byte	.LASF38
 28037 01ad 82       		.byte	0x82
 28038 01ae 0C       		.uleb128 0xc
 28039 01af D9120000 		.4byte	.LASF39
 28040 01b3 83       		.byte	0x83
 28041 01b4 0C       		.uleb128 0xc
 28042 01b5 29120000 		.4byte	.LASF40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 618


 28043 01b9 84       		.byte	0x84
 28044 01ba 0C       		.uleb128 0xc
 28045 01bb 91040000 		.4byte	.LASF41
 28046 01bf 85       		.byte	0x85
 28047 01c0 0C       		.uleb128 0xc
 28048 01c1 610A0000 		.4byte	.LASF42
 28049 01c5 86       		.byte	0x86
 28050 01c6 0C       		.uleb128 0xc
 28051 01c7 FF090000 		.4byte	.LASF43
 28052 01cb 88       		.byte	0x88
 28053 01cc 0C       		.uleb128 0xc
 28054 01cd 98130000 		.4byte	.LASF44
 28055 01d1 89       		.byte	0x89
 28056 01d2 0C       		.uleb128 0xc
 28057 01d3 D60F0000 		.4byte	.LASF45
 28058 01d7 8B       		.byte	0x8b
 28059 01d8 0C       		.uleb128 0xc
 28060 01d9 220E0000 		.4byte	.LASF46
 28061 01dd 8C       		.byte	0x8c
 28062 01de 0C       		.uleb128 0xc
 28063 01df 1D0B0000 		.4byte	.LASF47
 28064 01e3 8E       		.byte	0x8e
 28065 01e4 0C       		.uleb128 0xc
 28066 01e5 0E100000 		.4byte	.LASF48
 28067 01e9 90       		.byte	0x90
 28068 01ea 0C       		.uleb128 0xc
 28069 01eb 5D030000 		.4byte	.LASF49
 28070 01ef 92       		.byte	0x92
 28071 01f0 0C       		.uleb128 0xc
 28072 01f1 D6140000 		.4byte	.LASF50
 28073 01f5 A1       		.byte	0xa1
 28074 01f6 0C       		.uleb128 0xc
 28075 01f7 E2110000 		.4byte	.LASF51
 28076 01fb A2       		.byte	0xa2
 28077 01fc 0C       		.uleb128 0xc
 28078 01fd 480D0000 		.4byte	.LASF52
 28079 0201 A3       		.byte	0xa3
 28080 0202 0C       		.uleb128 0xc
 28081 0203 FE110000 		.4byte	.LASF53
 28082 0207 A4       		.byte	0xa4
 28083 0208 0C       		.uleb128 0xc
 28084 0209 FE120000 		.4byte	.LASF54
 28085 020d A5       		.byte	0xa5
 28086 020e 0C       		.uleb128 0xc
 28087 020f 96110000 		.4byte	.LASF55
 28088 0213 A6       		.byte	0xa6
 28089 0214 0C       		.uleb128 0xc
 28090 0215 AC0B0000 		.4byte	.LASF56
 28091 0219 A7       		.byte	0xa7
 28092 021a 0C       		.uleb128 0xc
 28093 021b 420C0000 		.4byte	.LASF57
 28094 021f A8       		.byte	0xa8
 28095 0220 00       		.byte	0
 28096 0221 0B       		.uleb128 0xb
 28097 0222 3F160000 		.4byte	.LASF59
 28098 0226 01       		.byte	0x1
 28099 0227 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 619


 28100 022b 06       		.byte	0x6
 28101 022c 8F       		.byte	0x8f
 28102 022d 62020000 		.4byte	0x262
 28103 0231 0C       		.uleb128 0xc
 28104 0232 15080000 		.4byte	.LASF60
 28105 0236 00       		.byte	0
 28106 0237 0C       		.uleb128 0xc
 28107 0238 280D0000 		.4byte	.LASF61
 28108 023c 01       		.byte	0x1
 28109 023d 0C       		.uleb128 0xc
 28110 023e 6E030000 		.4byte	.LASF62
 28111 0242 02       		.byte	0x2
 28112 0243 0C       		.uleb128 0xc
 28113 0244 F2010000 		.4byte	.LASF63
 28114 0248 03       		.byte	0x3
 28115 0249 0C       		.uleb128 0xc
 28116 024a 96010000 		.4byte	.LASF64
 28117 024e 04       		.byte	0x4
 28118 024f 0C       		.uleb128 0xc
 28119 0250 7D000000 		.4byte	.LASF65
 28120 0254 05       		.byte	0x5
 28121 0255 0C       		.uleb128 0xc
 28122 0256 6B090000 		.4byte	.LASF66
 28123 025a 06       		.byte	0x6
 28124 025b 0C       		.uleb128 0xc
 28125 025c C3110000 		.4byte	.LASF67
 28126 0260 07       		.byte	0x7
 28127 0261 00       		.byte	0
 28128 0262 0B       		.uleb128 0xb
 28129 0263 5B0B0000 		.4byte	.LASF68
 28130 0267 01       		.byte	0x1
 28131 0268 2C000000 		.4byte	0x2c
 28132 026c 06       		.byte	0x6
 28133 026d A3       		.byte	0xa3
 28134 026e 8B020000 		.4byte	0x28b
 28135 0272 0C       		.uleb128 0xc
 28136 0273 B8150000 		.4byte	.LASF69
 28137 0277 00       		.byte	0
 28138 0278 0C       		.uleb128 0xc
 28139 0279 F3090000 		.4byte	.LASF70
 28140 027d 01       		.byte	0x1
 28141 027e 0C       		.uleb128 0xc
 28142 027f 540E0000 		.4byte	.LASF71
 28143 0283 02       		.byte	0x2
 28144 0284 0C       		.uleb128 0xc
 28145 0285 F8080000 		.4byte	.LASF72
 28146 0289 03       		.byte	0x3
 28147 028a 00       		.byte	0
 28148 028b 0B       		.uleb128 0xb
 28149 028c 75050000 		.4byte	.LASF73
 28150 0290 01       		.byte	0x1
 28151 0291 2C000000 		.4byte	0x2c
 28152 0295 06       		.byte	0x6
 28153 0296 AD       		.byte	0xad
 28154 0297 A8020000 		.4byte	0x2a8
 28155 029b 0C       		.uleb128 0xc
 28156 029c B9110000 		.4byte	.LASF74
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 620


 28157 02a0 00       		.byte	0
 28158 02a1 0C       		.uleb128 0xc
 28159 02a2 870B0000 		.4byte	.LASF75
 28160 02a6 01       		.byte	0x1
 28161 02a7 00       		.byte	0
 28162 02a8 0B       		.uleb128 0xb
 28163 02a9 1D0F0000 		.4byte	.LASF76
 28164 02ad 01       		.byte	0x1
 28165 02ae 2C000000 		.4byte	0x2c
 28166 02b2 06       		.byte	0x6
 28167 02b3 B2       		.byte	0xb2
 28168 02b4 C5020000 		.4byte	0x2c5
 28169 02b8 0C       		.uleb128 0xc
 28170 02b9 FA070000 		.4byte	.LASF77
 28171 02bd 00       		.byte	0
 28172 02be 0C       		.uleb128 0xc
 28173 02bf B0090000 		.4byte	.LASF78
 28174 02c3 01       		.byte	0x1
 28175 02c4 00       		.byte	0
 28176 02c5 0B       		.uleb128 0xb
 28177 02c6 CA130000 		.4byte	.LASF79
 28178 02ca 01       		.byte	0x1
 28179 02cb 2C000000 		.4byte	0x2c
 28180 02cf 06       		.byte	0x6
 28181 02d0 BA       		.byte	0xba
 28182 02d1 12030000 		.4byte	0x312
 28183 02d5 0C       		.uleb128 0xc
 28184 02d6 B7090000 		.4byte	.LASF80
 28185 02da 00       		.byte	0
 28186 02db 0C       		.uleb128 0xc
 28187 02dc 4D160000 		.4byte	.LASF81
 28188 02e0 01       		.byte	0x1
 28189 02e1 0C       		.uleb128 0xc
 28190 02e2 6B0B0000 		.4byte	.LASF82
 28191 02e6 02       		.byte	0x2
 28192 02e7 0C       		.uleb128 0xc
 28193 02e8 FE0D0000 		.4byte	.LASF83
 28194 02ec 03       		.byte	0x3
 28195 02ed 0C       		.uleb128 0xc
 28196 02ee F50C0000 		.4byte	.LASF84
 28197 02f2 04       		.byte	0x4
 28198 02f3 0C       		.uleb128 0xc
 28199 02f4 8F0F0000 		.4byte	.LASF85
 28200 02f8 05       		.byte	0x5
 28201 02f9 0C       		.uleb128 0xc
 28202 02fa 700E0000 		.4byte	.LASF86
 28203 02fe 06       		.byte	0x6
 28204 02ff 0C       		.uleb128 0xc
 28205 0300 9F0D0000 		.4byte	.LASF87
 28206 0304 07       		.byte	0x7
 28207 0305 0C       		.uleb128 0xc
 28208 0306 BA070000 		.4byte	.LASF88
 28209 030a 08       		.byte	0x8
 28210 030b 0C       		.uleb128 0xc
 28211 030c EC080000 		.4byte	.LASF89
 28212 0310 09       		.byte	0x9
 28213 0311 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 621


 28214 0312 03       		.uleb128 0x3
 28215 0313 99150000 		.4byte	.LASF90
 28216 0317 07       		.byte	0x7
 28217 0318 7E       		.byte	0x7e
 28218 0319 1D030000 		.4byte	0x31d
 28219 031d 0D       		.uleb128 0xd
 28220 031e 99150000 		.4byte	.LASF90
 28221 0322 07       		.uleb128 0x7
 28222 0323 04       		.byte	0x4
 28223 0324 12030000 		.4byte	0x312
 28224 0328 0E       		.uleb128 0xe
 28225 0329 050B0000 		.4byte	.LASF93
 28226 032d 10       		.byte	0x10
 28227 032e 08       		.byte	0x8
 28228 032f E5       		.byte	0xe5
 28229 0330 65030000 		.4byte	0x365
 28230 0334 0F       		.uleb128 0xf
 28231 0335 706F7300 		.ascii	"pos\000"
 28232 0339 08       		.byte	0x8
 28233 033a E6       		.byte	0xe6
 28234 033b D3000000 		.4byte	0xd3
 28235 033f 00       		.byte	0
 28236 0340 10       		.uleb128 0x10
 28237 0341 E3090000 		.4byte	.LASF91
 28238 0345 08       		.byte	0x8
 28239 0346 E7       		.byte	0xe7
 28240 0347 D3000000 		.4byte	0xd3
 28241 034b 04       		.byte	0x4
 28242 034c 0F       		.uleb128 0xf
 28243 034d 70776D00 		.ascii	"pwm\000"
 28244 0351 08       		.byte	0x8
 28245 0352 E8       		.byte	0xe8
 28246 0353 D3000000 		.4byte	0xd3
 28247 0357 08       		.byte	0x8
 28248 0358 10       		.uleb128 0x10
 28249 0359 D00F0000 		.4byte	.LASF92
 28250 035d 08       		.byte	0x8
 28251 035e E9       		.byte	0xe9
 28252 035f 97000000 		.4byte	0x97
 28253 0363 0C       		.byte	0xc
 28254 0364 00       		.byte	0
 28255 0365 0E       		.uleb128 0xe
 28256 0366 8E110000 		.4byte	.LASF94
 28257 036a 34       		.byte	0x34
 28258 036b 08       		.byte	0x8
 28259 036c F0       		.byte	0xf0
 28260 036d C6030000 		.4byte	0x3c6
 28261 0371 0F       		.uleb128 0xf
 28262 0372 706F7300 		.ascii	"pos\000"
 28263 0376 08       		.byte	0x8
 28264 0377 F1       		.byte	0xf1
 28265 0378 C6030000 		.4byte	0x3c6
 28266 037c 00       		.byte	0
 28267 037d 10       		.uleb128 0x10
 28268 037e E3090000 		.4byte	.LASF91
 28269 0382 08       		.byte	0x8
 28270 0383 F2       		.byte	0xf2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 622


 28271 0384 D3000000 		.4byte	0xd3
 28272 0388 0C       		.byte	0xc
 28273 0389 10       		.uleb128 0x10
 28274 038a 17140000 		.4byte	.LASF95
 28275 038e 08       		.byte	0x8
 28276 038f F3       		.byte	0xf3
 28277 0390 D3000000 		.4byte	0xd3
 28278 0394 10       		.byte	0x10
 28279 0395 10       		.uleb128 0x10
 28280 0396 61090000 		.4byte	.LASF96
 28281 039a 08       		.byte	0x8
 28282 039b F4       		.byte	0xf4
 28283 039c D3000000 		.4byte	0xd3
 28284 03a0 14       		.byte	0x14
 28285 03a1 0F       		.uleb128 0xf
 28286 03a2 726F7400 		.ascii	"rot\000"
 28287 03a6 08       		.byte	0x8
 28288 03a7 F5       		.byte	0xf5
 28289 03a8 D6030000 		.4byte	0x3d6
 28290 03ac 18       		.byte	0x18
 28291 03ad 0F       		.uleb128 0xf
 28292 03ae 76656C00 		.ascii	"vel\000"
 28293 03b2 08       		.byte	0x8
 28294 03b3 F6       		.byte	0xf6
 28295 03b4 C6030000 		.4byte	0x3c6
 28296 03b8 1C       		.byte	0x1c
 28297 03b9 0F       		.uleb128 0xf
 28298 03ba 61636300 		.ascii	"acc\000"
 28299 03be 08       		.byte	0x8
 28300 03bf F7       		.byte	0xf7
 28301 03c0 C6030000 		.4byte	0x3c6
 28302 03c4 28       		.byte	0x28
 28303 03c5 00       		.byte	0
 28304 03c6 09       		.uleb128 0x9
 28305 03c7 D3000000 		.4byte	0xd3
 28306 03cb D6030000 		.4byte	0x3d6
 28307 03cf 0A       		.uleb128 0xa
 28308 03d0 18010000 		.4byte	0x118
 28309 03d4 02       		.byte	0x2
 28310 03d5 00       		.byte	0
 28311 03d6 09       		.uleb128 0x9
 28312 03d7 BB000000 		.4byte	0xbb
 28313 03db E6030000 		.4byte	0x3e6
 28314 03df 0A       		.uleb128 0xa
 28315 03e0 18010000 		.4byte	0x118
 28316 03e4 02       		.byte	0x2
 28317 03e5 00       		.byte	0
 28318 03e6 0E       		.uleb128 0xe
 28319 03e7 660C0000 		.4byte	.LASF97
 28320 03eb 28       		.byte	0x28
 28321 03ec 08       		.byte	0x8
 28322 03ed FA       		.byte	0xfa
 28323 03ee 17040000 		.4byte	0x417
 28324 03f2 0F       		.uleb128 0xf
 28325 03f3 656D6700 		.ascii	"emg\000"
 28326 03f7 08       		.byte	0x8
 28327 03f8 FB       		.byte	0xfb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 623


 28328 03f9 17040000 		.4byte	0x417
 28329 03fd 00       		.byte	0
 28330 03fe 10       		.uleb128 0x10
 28331 03ff F60D0000 		.4byte	.LASF98
 28332 0403 08       		.byte	0x8
 28333 0404 FC       		.byte	0xfc
 28334 0405 27040000 		.4byte	0x427
 28335 0409 08       		.byte	0x8
 28336 040a 10       		.uleb128 0x10
 28337 040b BA120000 		.4byte	.LASF99
 28338 040f 08       		.byte	0x8
 28339 0410 FD       		.byte	0xfd
 28340 0411 17040000 		.4byte	0x417
 28341 0415 20       		.byte	0x20
 28342 0416 00       		.byte	0
 28343 0417 09       		.uleb128 0x9
 28344 0418 D3000000 		.4byte	0xd3
 28345 041c 27040000 		.4byte	0x427
 28346 0420 0A       		.uleb128 0xa
 28347 0421 18010000 		.4byte	0x118
 28348 0425 01       		.byte	0x1
 28349 0426 00       		.byte	0
 28350 0427 09       		.uleb128 0x9
 28351 0428 D3000000 		.4byte	0xd3
 28352 042c 37040000 		.4byte	0x437
 28353 0430 0A       		.uleb128 0xa
 28354 0431 18010000 		.4byte	0x118
 28355 0435 05       		.byte	0x5
 28356 0436 00       		.byte	0
 28357 0437 11       		.uleb128 0x11
 28358 0438 AF060000 		.4byte	.LASF100
 28359 043c 04       		.byte	0x4
 28360 043d 08       		.byte	0x8
 28361 043e 0001     		.2byte	0x100
 28362 0440 52040000 		.4byte	0x452
 28363 0444 12       		.uleb128 0x12
 28364 0445 37060000 		.4byte	.LASF101
 28365 0449 08       		.byte	0x8
 28366 044a 0101     		.2byte	0x101
 28367 044c EB000000 		.4byte	0xeb
 28368 0450 00       		.byte	0
 28369 0451 00       		.byte	0
 28370 0452 11       		.uleb128 0x11
 28371 0453 DF000000 		.4byte	.LASF102
 28372 0457 86       		.byte	0x86
 28373 0458 08       		.byte	0x8
 28374 0459 0801     		.2byte	0x108
 28375 045b 94040000 		.4byte	0x494
 28376 045f 12       		.uleb128 0x12
 28377 0460 88070000 		.4byte	.LASF103
 28378 0464 08       		.byte	0x8
 28379 0465 0901     		.2byte	0x109
 28380 0467 94040000 		.4byte	0x494
 28381 046b 00       		.byte	0
 28382 046c 12       		.uleb128 0x12
 28383 046d A50F0000 		.4byte	.LASF104
 28384 0471 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 624


 28385 0472 0A01     		.2byte	0x10a
 28386 0474 C7000000 		.4byte	0xc7
 28387 0478 80       		.byte	0x80
 28388 0479 13       		.uleb128 0x13
 28389 047a 696E6400 		.ascii	"ind\000"
 28390 047e 08       		.byte	0x8
 28391 047f 0B01     		.2byte	0x10b
 28392 0481 C7000000 		.4byte	0xc7
 28393 0485 82       		.byte	0x82
 28394 0486 12       		.uleb128 0x12
 28395 0487 3F030000 		.4byte	.LASF105
 28396 048b 08       		.byte	0x8
 28397 048c 0C01     		.2byte	0x10c
 28398 048e 97000000 		.4byte	0x97
 28399 0492 84       		.byte	0x84
 28400 0493 00       		.byte	0
 28401 0494 09       		.uleb128 0x9
 28402 0495 97000000 		.4byte	0x97
 28403 0499 A4040000 		.4byte	0x4a4
 28404 049d 0A       		.uleb128 0xa
 28405 049e 18010000 		.4byte	0x118
 28406 04a2 7F       		.byte	0x7f
 28407 04a3 00       		.byte	0
 28408 04a4 11       		.uleb128 0x11
 28409 04a5 67040000 		.4byte	.LASF106
 28410 04a9 70       		.byte	0x70
 28411 04aa 08       		.byte	0x8
 28412 04ab 1501     		.2byte	0x115
 28413 04ad 41050000 		.4byte	0x541
 28414 04b1 12       		.uleb128 0x12
 28415 04b2 09000000 		.4byte	.LASF107
 28416 04b6 08       		.byte	0x8
 28417 04b7 1601     		.2byte	0x116
 28418 04b9 41050000 		.4byte	0x541
 28419 04bd 00       		.byte	0
 28420 04be 12       		.uleb128 0x12
 28421 04bf 53020000 		.4byte	.LASF108
 28422 04c3 08       		.byte	0x8
 28423 04c4 1701     		.2byte	0x117
 28424 04c6 51050000 		.4byte	0x551
 28425 04ca 08       		.byte	0x8
 28426 04cb 12       		.uleb128 0x12
 28427 04cc 470E0000 		.4byte	.LASF109
 28428 04d0 08       		.byte	0x8
 28429 04d1 1801     		.2byte	0x118
 28430 04d3 61050000 		.4byte	0x561
 28431 04d7 30       		.byte	0x30
 28432 04d8 12       		.uleb128 0x12
 28433 04d9 B6010000 		.4byte	.LASF110
 28434 04dd 08       		.byte	0x8
 28435 04de 1901     		.2byte	0x119
 28436 04e0 AF000000 		.4byte	0xaf
 28437 04e4 40       		.byte	0x40
 28438 04e5 12       		.uleb128 0x12
 28439 04e6 EC150000 		.4byte	.LASF111
 28440 04ea 08       		.byte	0x8
 28441 04eb 1A01     		.2byte	0x11a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 625


 28442 04ed AF000000 		.4byte	0xaf
 28443 04f1 44       		.byte	0x44
 28444 04f2 12       		.uleb128 0x12
 28445 04f3 FA000000 		.4byte	.LASF112
 28446 04f7 08       		.byte	0x8
 28447 04f8 1B01     		.2byte	0x11b
 28448 04fa AF000000 		.4byte	0xaf
 28449 04fe 48       		.byte	0x48
 28450 04ff 12       		.uleb128 0x12
 28451 0500 7F090000 		.4byte	.LASF113
 28452 0504 08       		.byte	0x8
 28453 0505 1C01     		.2byte	0x11c
 28454 0507 AF000000 		.4byte	0xaf
 28455 050b 4C       		.byte	0x4c
 28456 050c 12       		.uleb128 0x12
 28457 050d 42000000 		.4byte	.LASF114
 28458 0511 08       		.byte	0x8
 28459 0512 1D01     		.2byte	0x11d
 28460 0514 AF000000 		.4byte	0xaf
 28461 0518 50       		.byte	0x50
 28462 0519 12       		.uleb128 0x12
 28463 051a A5030000 		.4byte	.LASF115
 28464 051e 08       		.byte	0x8
 28465 051f 1E01     		.2byte	0x11e
 28466 0521 41050000 		.4byte	0x541
 28467 0525 54       		.byte	0x54
 28468 0526 12       		.uleb128 0x12
 28469 0527 A30E0000 		.4byte	.LASF116
 28470 052b 08       		.byte	0x8
 28471 052c 1F01     		.2byte	0x11f
 28472 052e 41050000 		.4byte	0x541
 28473 0532 5C       		.byte	0x5c
 28474 0533 12       		.uleb128 0x12
 28475 0534 44040000 		.4byte	.LASF117
 28476 0538 08       		.byte	0x8
 28477 0539 2001     		.2byte	0x120
 28478 053b 71050000 		.4byte	0x571
 28479 053f 64       		.byte	0x64
 28480 0540 00       		.byte	0
 28481 0541 09       		.uleb128 0x9
 28482 0542 AF000000 		.4byte	0xaf
 28483 0546 51050000 		.4byte	0x551
 28484 054a 0A       		.uleb128 0xa
 28485 054b 18010000 		.4byte	0x118
 28486 054f 01       		.byte	0x1
 28487 0550 00       		.byte	0
 28488 0551 09       		.uleb128 0x9
 28489 0552 AF000000 		.4byte	0xaf
 28490 0556 61050000 		.4byte	0x561
 28491 055a 0A       		.uleb128 0xa
 28492 055b 18010000 		.4byte	0x118
 28493 055f 09       		.byte	0x9
 28494 0560 00       		.byte	0
 28495 0561 09       		.uleb128 0x9
 28496 0562 AF000000 		.4byte	0xaf
 28497 0566 71050000 		.4byte	0x571
 28498 056a 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 626


 28499 056b 18010000 		.4byte	0x118
 28500 056f 03       		.byte	0x3
 28501 0570 00       		.byte	0
 28502 0571 09       		.uleb128 0x9
 28503 0572 97000000 		.4byte	0x97
 28504 0576 81050000 		.4byte	0x581
 28505 057a 0A       		.uleb128 0xa
 28506 057b 18010000 		.4byte	0x118
 28507 057f 0B       		.byte	0xb
 28508 0580 00       		.byte	0
 28509 0581 11       		.uleb128 0x11
 28510 0582 2F070000 		.4byte	.LASF118
 28511 0586 10       		.byte	0x10
 28512 0587 08       		.byte	0x8
 28513 0588 2701     		.2byte	0x127
 28514 058a 10060000 		.4byte	0x610
 28515 058e 13       		.uleb128 0x13
 28516 058f 696400   		.ascii	"id\000"
 28517 0592 08       		.byte	0x8
 28518 0593 2801     		.2byte	0x128
 28519 0595 97000000 		.4byte	0x97
 28520 0599 00       		.byte	0
 28521 059a 12       		.uleb128 0x12
 28522 059b E8120000 		.4byte	.LASF119
 28523 059f 08       		.byte	0x8
 28524 05a0 2901     		.2byte	0x129
 28525 05a2 10060000 		.4byte	0x610
 28526 05a6 01       		.byte	0x1
 28527 05a7 12       		.uleb128 0x12
 28528 05a8 64130000 		.4byte	.LASF120
 28529 05ac 08       		.byte	0x8
 28530 05ad 2A01     		.2byte	0x12a
 28531 05af 10060000 		.4byte	0x610
 28532 05b3 04       		.byte	0x4
 28533 05b4 12       		.uleb128 0x12
 28534 05b5 DA050000 		.4byte	.LASF121
 28535 05b9 08       		.byte	0x8
 28536 05ba 2B01     		.2byte	0x12b
 28537 05bc 97000000 		.4byte	0x97
 28538 05c0 07       		.byte	0x7
 28539 05c1 12       		.uleb128 0x12
 28540 05c2 13040000 		.4byte	.LASF122
 28541 05c6 08       		.byte	0x8
 28542 05c7 2C01     		.2byte	0x12c
 28543 05c9 97000000 		.4byte	0x97
 28544 05cd 08       		.byte	0x8
 28545 05ce 12       		.uleb128 0x12
 28546 05cf 8A030000 		.4byte	.LASF123
 28547 05d3 08       		.byte	0x8
 28548 05d4 2D01     		.2byte	0x12d
 28549 05d6 97000000 		.4byte	0x97
 28550 05da 09       		.byte	0x9
 28551 05db 12       		.uleb128 0x12
 28552 05dc A9140000 		.4byte	.LASF124
 28553 05e0 08       		.byte	0x8
 28554 05e1 2E01     		.2byte	0x12e
 28555 05e3 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 627


 28556 05e7 0A       		.byte	0xa
 28557 05e8 12       		.uleb128 0x12
 28558 05e9 6D140000 		.4byte	.LASF125
 28559 05ed 08       		.byte	0x8
 28560 05ee 2F01     		.2byte	0x12f
 28561 05f0 97000000 		.4byte	0x97
 28562 05f4 0B       		.byte	0xb
 28563 05f5 12       		.uleb128 0x12
 28564 05f6 38110000 		.4byte	.LASF126
 28565 05fa 08       		.byte	0x8
 28566 05fb 3001     		.2byte	0x130
 28567 05fd 97000000 		.4byte	0x97
 28568 0601 0C       		.byte	0xc
 28569 0602 12       		.uleb128 0x12
 28570 0603 44040000 		.4byte	.LASF117
 28571 0607 08       		.byte	0x8
 28572 0608 3101     		.2byte	0x131
 28573 060a 10060000 		.4byte	0x610
 28574 060e 0D       		.byte	0xd
 28575 060f 00       		.byte	0
 28576 0610 09       		.uleb128 0x9
 28577 0611 97000000 		.4byte	0x97
 28578 0615 20060000 		.4byte	0x620
 28579 0619 0A       		.uleb128 0xa
 28580 061a 18010000 		.4byte	0x118
 28581 061e 02       		.byte	0x2
 28582 061f 00       		.byte	0
 28583 0620 11       		.uleb128 0x11
 28584 0621 84150000 		.4byte	.LASF127
 28585 0625 74       		.byte	0x74
 28586 0626 08       		.byte	0x8
 28587 0627 3801     		.2byte	0x138
 28588 0629 A7070000 		.4byte	0x7a7
 28589 062d 13       		.uleb128 0x13
 28590 062e 6B5F7000 		.ascii	"k_p\000"
 28591 0632 08       		.byte	0x8
 28592 0633 3901     		.2byte	0x139
 28593 0635 D3000000 		.4byte	0xd3
 28594 0639 00       		.byte	0
 28595 063a 13       		.uleb128 0x13
 28596 063b 6B5F6900 		.ascii	"k_i\000"
 28597 063f 08       		.byte	0x8
 28598 0640 3A01     		.2byte	0x13a
 28599 0642 D3000000 		.4byte	0xd3
 28600 0646 04       		.byte	0x4
 28601 0647 13       		.uleb128 0x13
 28602 0648 6B5F6400 		.ascii	"k_d\000"
 28603 064c 08       		.byte	0x8
 28604 064d 3B01     		.2byte	0x13b
 28605 064f D3000000 		.4byte	0xd3
 28606 0653 08       		.byte	0x8
 28607 0654 12       		.uleb128 0x12
 28608 0655 1F100000 		.4byte	.LASF128
 28609 0659 08       		.byte	0x8
 28610 065a 3C01     		.2byte	0x13c
 28611 065c D3000000 		.4byte	0xd3
 28612 0660 0C       		.byte	0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 628


 28613 0661 12       		.uleb128 0x12
 28614 0662 CF060000 		.4byte	.LASF129
 28615 0666 08       		.byte	0x8
 28616 0667 3D01     		.2byte	0x13d
 28617 0669 D3000000 		.4byte	0xd3
 28618 066d 10       		.byte	0x10
 28619 066e 12       		.uleb128 0x12
 28620 066f A9060000 		.4byte	.LASF130
 28621 0673 08       		.byte	0x8
 28622 0674 3E01     		.2byte	0x13e
 28623 0676 D3000000 		.4byte	0xd3
 28624 067a 14       		.byte	0x14
 28625 067b 12       		.uleb128 0x12
 28626 067c 10140000 		.4byte	.LASF131
 28627 0680 08       		.byte	0x8
 28628 0681 3F01     		.2byte	0x13f
 28629 0683 D3000000 		.4byte	0xd3
 28630 0687 18       		.byte	0x18
 28631 0688 12       		.uleb128 0x12
 28632 0689 72070000 		.4byte	.LASF132
 28633 068d 08       		.byte	0x8
 28634 068e 4001     		.2byte	0x140
 28635 0690 D3000000 		.4byte	0xd3
 28636 0694 1C       		.byte	0x1c
 28637 0695 12       		.uleb128 0x12
 28638 0696 AA120000 		.4byte	.LASF133
 28639 069a 08       		.byte	0x8
 28640 069b 4101     		.2byte	0x141
 28641 069d D3000000 		.4byte	0xd3
 28642 06a1 20       		.byte	0x20
 28643 06a2 12       		.uleb128 0x12
 28644 06a3 8F070000 		.4byte	.LASF134
 28645 06a7 08       		.byte	0x8
 28646 06a8 4201     		.2byte	0x142
 28647 06aa D3000000 		.4byte	0xd3
 28648 06ae 24       		.byte	0x24
 28649 06af 12       		.uleb128 0x12
 28650 06b0 7E080000 		.4byte	.LASF135
 28651 06b4 08       		.byte	0x8
 28652 06b5 4301     		.2byte	0x143
 28653 06b7 D3000000 		.4byte	0xd3
 28654 06bb 28       		.byte	0x28
 28655 06bc 12       		.uleb128 0x12
 28656 06bd 9B160000 		.4byte	.LASF136
 28657 06c1 08       		.byte	0x8
 28658 06c2 4401     		.2byte	0x144
 28659 06c4 D3000000 		.4byte	0xd3
 28660 06c8 2C       		.byte	0x2c
 28661 06c9 12       		.uleb128 0x12
 28662 06ca 9B090000 		.4byte	.LASF137
 28663 06ce 08       		.byte	0x8
 28664 06cf 4501     		.2byte	0x145
 28665 06d1 97000000 		.4byte	0x97
 28666 06d5 30       		.byte	0x30
 28667 06d6 12       		.uleb128 0x12
 28668 06d7 F9130000 		.4byte	.LASF138
 28669 06db 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 629


 28670 06dc 4601     		.2byte	0x146
 28671 06de 97000000 		.4byte	0x97
 28672 06e2 31       		.byte	0x31
 28673 06e3 12       		.uleb128 0x12
 28674 06e4 3F100000 		.4byte	.LASF139
 28675 06e8 08       		.byte	0x8
 28676 06e9 4701     		.2byte	0x147
 28677 06eb 97000000 		.4byte	0x97
 28678 06ef 32       		.byte	0x32
 28679 06f0 12       		.uleb128 0x12
 28680 06f1 A1150000 		.4byte	.LASF140
 28681 06f5 08       		.byte	0x8
 28682 06f6 4801     		.2byte	0x148
 28683 06f8 97000000 		.4byte	0x97
 28684 06fc 33       		.byte	0x33
 28685 06fd 12       		.uleb128 0x12
 28686 06fe 6A010000 		.4byte	.LASF141
 28687 0702 08       		.byte	0x8
 28688 0703 4901     		.2byte	0x149
 28689 0705 D3000000 		.4byte	0xd3
 28690 0709 34       		.byte	0x34
 28691 070a 12       		.uleb128 0x12
 28692 070b FC060000 		.4byte	.LASF142
 28693 070f 08       		.byte	0x8
 28694 0710 4A01     		.2byte	0x14a
 28695 0712 D3000000 		.4byte	0xd3
 28696 0716 38       		.byte	0x38
 28697 0717 12       		.uleb128 0x12
 28698 0718 E10B0000 		.4byte	.LASF143
 28699 071c 08       		.byte	0x8
 28700 071d 4B01     		.2byte	0x14b
 28701 071f D3000000 		.4byte	0xd3
 28702 0723 3C       		.byte	0x3c
 28703 0724 12       		.uleb128 0x12
 28704 0725 56060000 		.4byte	.LASF144
 28705 0729 08       		.byte	0x8
 28706 072a 4C01     		.2byte	0x14c
 28707 072c D3000000 		.4byte	0xd3
 28708 0730 40       		.byte	0x40
 28709 0731 12       		.uleb128 0x12
 28710 0732 AA010000 		.4byte	.LASF145
 28711 0736 08       		.byte	0x8
 28712 0737 4D01     		.2byte	0x14d
 28713 0739 A7070000 		.4byte	0x7a7
 28714 073d 44       		.byte	0x44
 28715 073e 12       		.uleb128 0x12
 28716 073f 31160000 		.4byte	.LASF146
 28717 0743 08       		.byte	0x8
 28718 0744 4E01     		.2byte	0x14e
 28719 0746 C7000000 		.4byte	0xc7
 28720 074a 5C       		.byte	0x5c
 28721 074b 12       		.uleb128 0x12
 28722 074c E8090000 		.4byte	.LASF147
 28723 0750 08       		.byte	0x8
 28724 0751 4F01     		.2byte	0x14f
 28725 0753 97000000 		.4byte	0x97
 28726 0757 5E       		.byte	0x5e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 630


 28727 0758 12       		.uleb128 0x12
 28728 0759 150D0000 		.4byte	.LASF148
 28729 075d 08       		.byte	0x8
 28730 075e 5001     		.2byte	0x150
 28731 0760 97000000 		.4byte	0x97
 28732 0764 5F       		.byte	0x5f
 28733 0765 12       		.uleb128 0x12
 28734 0766 FE050000 		.4byte	.LASF149
 28735 076a 08       		.byte	0x8
 28736 076b 5101     		.2byte	0x151
 28737 076d 97000000 		.4byte	0x97
 28738 0771 60       		.byte	0x60
 28739 0772 12       		.uleb128 0x12
 28740 0773 98060000 		.4byte	.LASF150
 28741 0777 08       		.byte	0x8
 28742 0778 5201     		.2byte	0x152
 28743 077a 97000000 		.4byte	0x97
 28744 077e 61       		.byte	0x61
 28745 077f 12       		.uleb128 0x12
 28746 0780 BB050000 		.4byte	.LASF151
 28747 0784 08       		.byte	0x8
 28748 0785 5301     		.2byte	0x153
 28749 0787 97000000 		.4byte	0x97
 28750 078b 62       		.byte	0x62
 28751 078c 12       		.uleb128 0x12
 28752 078d D5060000 		.4byte	.LASF152
 28753 0791 08       		.byte	0x8
 28754 0792 5401     		.2byte	0x154
 28755 0794 A3000000 		.4byte	0xa3
 28756 0798 64       		.byte	0x64
 28757 0799 12       		.uleb128 0x12
 28758 079a 44040000 		.4byte	.LASF117
 28759 079e 08       		.byte	0x8
 28760 079f 5501     		.2byte	0x155
 28761 07a1 B7070000 		.4byte	0x7b7
 28762 07a5 66       		.byte	0x66
 28763 07a6 00       		.byte	0
 28764 07a7 09       		.uleb128 0x9
 28765 07a8 EB000000 		.4byte	0xeb
 28766 07ac B7070000 		.4byte	0x7b7
 28767 07b0 0A       		.uleb128 0xa
 28768 07b1 18010000 		.4byte	0x118
 28769 07b5 05       		.byte	0x5
 28770 07b6 00       		.byte	0
 28771 07b7 09       		.uleb128 0x9
 28772 07b8 97000000 		.4byte	0x97
 28773 07bc C7070000 		.4byte	0x7c7
 28774 07c0 0A       		.uleb128 0xa
 28775 07c1 18010000 		.4byte	0x118
 28776 07c5 0A       		.byte	0xa
 28777 07c6 00       		.byte	0
 28778 07c7 11       		.uleb128 0x11
 28779 07c8 1A150000 		.4byte	.LASF153
 28780 07cc 30       		.byte	0x30
 28781 07cd 08       		.byte	0x8
 28782 07ce 5C01     		.2byte	0x15c
 28783 07d0 4A080000 		.4byte	0x84a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 631


 28784 07d4 12       		.uleb128 0x12
 28785 07d5 C30B0000 		.4byte	.LASF154
 28786 07d9 08       		.byte	0x8
 28787 07da 5D01     		.2byte	0x15d
 28788 07dc 4A080000 		.4byte	0x84a
 28789 07e0 00       		.byte	0
 28790 07e1 13       		.uleb128 0x13
 28791 07e2 72657300 		.ascii	"res\000"
 28792 07e6 08       		.byte	0x8
 28793 07e7 5E01     		.2byte	0x15e
 28794 07e9 10060000 		.4byte	0x610
 28795 07ed 05       		.byte	0x5
 28796 07ee 12       		.uleb128 0x12
 28797 07ef AA090000 		.4byte	.LASF155
 28798 07f3 08       		.byte	0x8
 28799 07f4 5F01     		.2byte	0x15f
 28800 07f6 C6030000 		.4byte	0x3c6
 28801 07fa 08       		.byte	0x8
 28802 07fb 12       		.uleb128 0x12
 28803 07fc C8060000 		.4byte	.LASF156
 28804 0800 08       		.byte	0x8
 28805 0801 6001     		.2byte	0x160
 28806 0803 5A080000 		.4byte	0x85a
 28807 0807 14       		.byte	0x14
 28808 0808 12       		.uleb128 0x12
 28809 0809 EC0E0000 		.4byte	.LASF157
 28810 080d 08       		.byte	0x8
 28811 080e 6101     		.2byte	0x161
 28812 0810 97000000 		.4byte	0x97
 28813 0814 20       		.byte	0x20
 28814 0815 12       		.uleb128 0x12
 28815 0816 45030000 		.4byte	.LASF158
 28816 081a 08       		.byte	0x8
 28817 081b 6201     		.2byte	0x162
 28818 081d 10060000 		.4byte	0x610
 28819 0821 21       		.byte	0x21
 28820 0822 12       		.uleb128 0x12
 28821 0823 340E0000 		.4byte	.LASF159
 28822 0827 08       		.byte	0x8
 28823 0828 6301     		.2byte	0x163
 28824 082a BB000000 		.4byte	0xbb
 28825 082e 24       		.byte	0x24
 28826 082f 12       		.uleb128 0x12
 28827 0830 5F110000 		.4byte	.LASF160
 28828 0834 08       		.byte	0x8
 28829 0835 6401     		.2byte	0x164
 28830 0837 D6030000 		.4byte	0x3d6
 28831 083b 25       		.byte	0x25
 28832 083c 12       		.uleb128 0x12
 28833 083d 44040000 		.4byte	.LASF117
 28834 0841 08       		.byte	0x8
 28835 0842 6501     		.2byte	0x165
 28836 0844 6A080000 		.4byte	0x86a
 28837 0848 28       		.byte	0x28
 28838 0849 00       		.byte	0
 28839 084a 09       		.uleb128 0x9
 28840 084b 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 632


 28841 084f 5A080000 		.4byte	0x85a
 28842 0853 0A       		.uleb128 0xa
 28843 0854 18010000 		.4byte	0x118
 28844 0858 04       		.byte	0x4
 28845 0859 00       		.byte	0
 28846 085a 09       		.uleb128 0x9
 28847 085b DF000000 		.4byte	0xdf
 28848 085f 6A080000 		.4byte	0x86a
 28849 0863 0A       		.uleb128 0xa
 28850 0864 18010000 		.4byte	0x118
 28851 0868 02       		.byte	0x2
 28852 0869 00       		.byte	0
 28853 086a 09       		.uleb128 0x9
 28854 086b 97000000 		.4byte	0x97
 28855 086f 7A080000 		.4byte	0x87a
 28856 0873 0A       		.uleb128 0xa
 28857 0874 18010000 		.4byte	0x118
 28858 0878 07       		.byte	0x7
 28859 0879 00       		.byte	0
 28860 087a 11       		.uleb128 0x11
 28861 087b 4C020000 		.4byte	.LASF161
 28862 087f 10       		.byte	0x10
 28863 0880 08       		.byte	0x8
 28864 0881 6C01     		.2byte	0x16c
 28865 0883 C9080000 		.4byte	0x8c9
 28866 0887 12       		.uleb128 0x12
 28867 0888 140E0000 		.4byte	.LASF162
 28868 088c 08       		.byte	0x8
 28869 088d 6D01     		.2byte	0x16d
 28870 088f C9080000 		.4byte	0x8c9
 28871 0893 00       		.byte	0
 28872 0894 12       		.uleb128 0x12
 28873 0895 F6150000 		.4byte	.LASF163
 28874 0899 08       		.byte	0x8
 28875 089a 6E01     		.2byte	0x16e
 28876 089c 41050000 		.4byte	0x541
 28877 08a0 04       		.byte	0x4
 28878 08a1 12       		.uleb128 0x12
 28879 08a2 10070000 		.4byte	.LASF164
 28880 08a6 08       		.byte	0x8
 28881 08a7 6F01     		.2byte	0x16f
 28882 08a9 D9080000 		.4byte	0x8d9
 28883 08ad 0C       		.byte	0xc
 28884 08ae 12       		.uleb128 0x12
 28885 08af 79110000 		.4byte	.LASF165
 28886 08b3 08       		.byte	0x8
 28887 08b4 7001     		.2byte	0x170
 28888 08b6 97000000 		.4byte	0x97
 28889 08ba 0E       		.byte	0xe
 28890 08bb 12       		.uleb128 0x12
 28891 08bc EE130000 		.4byte	.LASF166
 28892 08c0 08       		.byte	0x8
 28893 08c1 7101     		.2byte	0x171
 28894 08c3 97000000 		.4byte	0x97
 28895 08c7 0F       		.byte	0xf
 28896 08c8 00       		.byte	0
 28897 08c9 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 633


 28898 08ca A3000000 		.4byte	0xa3
 28899 08ce D9080000 		.4byte	0x8d9
 28900 08d2 0A       		.uleb128 0xa
 28901 08d3 18010000 		.4byte	0x118
 28902 08d7 01       		.byte	0x1
 28903 08d8 00       		.byte	0
 28904 08d9 09       		.uleb128 0x9
 28905 08da 97000000 		.4byte	0x97
 28906 08de E9080000 		.4byte	0x8e9
 28907 08e2 0A       		.uleb128 0xa
 28908 08e3 18010000 		.4byte	0x118
 28909 08e7 01       		.byte	0x1
 28910 08e8 00       		.byte	0
 28911 08e9 11       		.uleb128 0x11
 28912 08ea 5D0D0000 		.4byte	.LASF167
 28913 08ee 20       		.byte	0x20
 28914 08ef 08       		.byte	0x8
 28915 08f0 7801     		.2byte	0x178
 28916 08f2 2B090000 		.4byte	0x92b
 28917 08f6 12       		.uleb128 0x12
 28918 08f7 BF030000 		.4byte	.LASF168
 28919 08fb 08       		.byte	0x8
 28920 08fc 7901     		.2byte	0x179
 28921 08fe 97000000 		.4byte	0x97
 28922 0902 00       		.byte	0
 28923 0903 12       		.uleb128 0x12
 28924 0904 0E0F0000 		.4byte	.LASF169
 28925 0908 08       		.byte	0x8
 28926 0909 7A01     		.2byte	0x17a
 28927 090b 97000000 		.4byte	0x97
 28928 090f 01       		.byte	0x1
 28929 0910 12       		.uleb128 0x12
 28930 0911 390C0000 		.4byte	.LASF170
 28931 0915 08       		.byte	0x8
 28932 0916 7B01     		.2byte	0x17b
 28933 0918 2B090000 		.4byte	0x92b
 28934 091c 02       		.byte	0x2
 28935 091d 12       		.uleb128 0x12
 28936 091e 44040000 		.4byte	.LASF117
 28937 0922 08       		.byte	0x8
 28938 0923 7C01     		.2byte	0x17c
 28939 0925 4A080000 		.4byte	0x84a
 28940 0929 1B       		.byte	0x1b
 28941 092a 00       		.byte	0
 28942 092b 09       		.uleb128 0x9
 28943 092c 97000000 		.4byte	0x97
 28944 0930 41090000 		.4byte	0x941
 28945 0934 0A       		.uleb128 0xa
 28946 0935 18010000 		.4byte	0x118
 28947 0939 04       		.byte	0x4
 28948 093a 0A       		.uleb128 0xa
 28949 093b 18010000 		.4byte	0x118
 28950 093f 04       		.byte	0x4
 28951 0940 00       		.byte	0
 28952 0941 11       		.uleb128 0x11
 28953 0942 6C110000 		.4byte	.LASF171
 28954 0946 20       		.byte	0x20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 634


 28955 0947 08       		.byte	0x8
 28956 0948 8301     		.2byte	0x183
 28957 094a 9D090000 		.4byte	0x99d
 28958 094e 12       		.uleb128 0x12
 28959 094f E20E0000 		.4byte	.LASF172
 28960 0953 08       		.byte	0x8
 28961 0954 8401     		.2byte	0x184
 28962 0956 9D090000 		.4byte	0x99d
 28963 095a 00       		.byte	0
 28964 095b 12       		.uleb128 0x12
 28965 095c DB130000 		.4byte	.LASF173
 28966 0960 08       		.byte	0x8
 28967 0961 8501     		.2byte	0x185
 28968 0963 97000000 		.4byte	0x97
 28969 0967 06       		.byte	0x6
 28970 0968 12       		.uleb128 0x12
 28971 0969 30140000 		.4byte	.LASF174
 28972 096d 08       		.byte	0x8
 28973 096e 8601     		.2byte	0x186
 28974 0970 97000000 		.4byte	0x97
 28975 0974 07       		.byte	0x7
 28976 0975 12       		.uleb128 0x12
 28977 0976 3F070000 		.4byte	.LASF175
 28978 097a 08       		.byte	0x8
 28979 097b 8701     		.2byte	0x187
 28980 097d 71050000 		.4byte	0x571
 28981 0981 08       		.byte	0x8
 28982 0982 12       		.uleb128 0x12
 28983 0983 CD030000 		.4byte	.LASF176
 28984 0987 08       		.byte	0x8
 28985 0988 8801     		.2byte	0x188
 28986 098a 97000000 		.4byte	0x97
 28987 098e 14       		.byte	0x14
 28988 098f 12       		.uleb128 0x12
 28989 0990 44040000 		.4byte	.LASF117
 28990 0994 08       		.byte	0x8
 28991 0995 8901     		.2byte	0x189
 28992 0997 B7070000 		.4byte	0x7b7
 28993 099b 15       		.byte	0x15
 28994 099c 00       		.byte	0
 28995 099d 09       		.uleb128 0x9
 28996 099e 97000000 		.4byte	0x97
 28997 09a2 AD090000 		.4byte	0x9ad
 28998 09a6 0A       		.uleb128 0xa
 28999 09a7 18010000 		.4byte	0x118
 29000 09ab 05       		.byte	0x5
 29001 09ac 00       		.byte	0
 29002 09ad 11       		.uleb128 0x11
 29003 09ae 41110000 		.4byte	.LASF177
 29004 09b2 20       		.byte	0x20
 29005 09b3 08       		.byte	0x8
 29006 09b4 9001     		.2byte	0x190
 29007 09b6 E2090000 		.4byte	0x9e2
 29008 09ba 12       		.uleb128 0x12
 29009 09bb 3F050000 		.4byte	.LASF178
 29010 09bf 08       		.byte	0x8
 29011 09c0 9101     		.2byte	0x191
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 635


 29012 09c2 40010000 		.4byte	0x140
 29013 09c6 00       		.byte	0
 29014 09c7 12       		.uleb128 0x12
 29015 09c8 22040000 		.4byte	.LASF179
 29016 09cc 08       		.byte	0x8
 29017 09cd 9201     		.2byte	0x192
 29018 09cf 7A080000 		.4byte	0x87a
 29019 09d3 08       		.byte	0x8
 29020 09d4 12       		.uleb128 0x12
 29021 09d5 44040000 		.4byte	.LASF117
 29022 09d9 08       		.byte	0x8
 29023 09da 9301     		.2byte	0x193
 29024 09dc 6A080000 		.4byte	0x86a
 29025 09e0 18       		.byte	0x18
 29026 09e1 00       		.byte	0
 29027 09e2 11       		.uleb128 0x11
 29028 09e3 310B0000 		.4byte	.LASF180
 29029 09e7 10       		.byte	0x10
 29030 09e8 08       		.byte	0x8
 29031 09e9 9A01     		.2byte	0x19a
 29032 09eb 310A0000 		.4byte	0xa31
 29033 09ef 12       		.uleb128 0x12
 29034 09f0 DA090000 		.4byte	.LASF181
 29035 09f4 08       		.byte	0x8
 29036 09f5 9B01     		.2byte	0x19b
 29037 09f7 D3000000 		.4byte	0xd3
 29038 09fb 00       		.byte	0
 29039 09fc 12       		.uleb128 0x12
 29040 09fd 7F160000 		.4byte	.LASF182
 29041 0a01 08       		.byte	0x8
 29042 0a02 9C01     		.2byte	0x19c
 29043 0a04 D3000000 		.4byte	0xd3
 29044 0a08 04       		.byte	0x4
 29045 0a09 12       		.uleb128 0x12
 29046 0a0a 1A070000 		.4byte	.LASF183
 29047 0a0e 08       		.byte	0x8
 29048 0a0f 9D01     		.2byte	0x19d
 29049 0a11 D3000000 		.4byte	0xd3
 29050 0a15 08       		.byte	0x8
 29051 0a16 12       		.uleb128 0x12
 29052 0a17 44080000 		.4byte	.LASF184
 29053 0a1b 08       		.byte	0x8
 29054 0a1c 9E01     		.2byte	0x19e
 29055 0a1e 97000000 		.4byte	0x97
 29056 0a22 0C       		.byte	0xc
 29057 0a23 12       		.uleb128 0x12
 29058 0a24 44040000 		.4byte	.LASF117
 29059 0a28 08       		.byte	0x8
 29060 0a29 9F01     		.2byte	0x19f
 29061 0a2b 10060000 		.4byte	0x610
 29062 0a2f 0D       		.byte	0xd
 29063 0a30 00       		.byte	0
 29064 0a31 11       		.uleb128 0x11
 29065 0a32 72120000 		.4byte	.LASF185
 29066 0a36 10       		.byte	0x10
 29067 0a37 08       		.byte	0x8
 29068 0a38 A601     		.2byte	0x1a6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 636


 29069 0a3a 730A0000 		.4byte	0xa73
 29070 0a3e 12       		.uleb128 0x12
 29071 0a3f 57080000 		.4byte	.LASF186
 29072 0a43 08       		.byte	0x8
 29073 0a44 A701     		.2byte	0x1a7
 29074 0a46 A3000000 		.4byte	0xa3
 29075 0a4a 00       		.byte	0
 29076 0a4b 12       		.uleb128 0x12
 29077 0a4c A6110000 		.4byte	.LASF187
 29078 0a50 08       		.byte	0x8
 29079 0a51 A801     		.2byte	0x1a8
 29080 0a53 C7000000 		.4byte	0xc7
 29081 0a57 02       		.byte	0x2
 29082 0a58 12       		.uleb128 0x12
 29083 0a59 52090000 		.4byte	.LASF188
 29084 0a5d 08       		.byte	0x8
 29085 0a5e A901     		.2byte	0x1a9
 29086 0a60 C9080000 		.4byte	0x8c9
 29087 0a64 04       		.byte	0x4
 29088 0a65 12       		.uleb128 0x12
 29089 0a66 44040000 		.4byte	.LASF117
 29090 0a6a 08       		.byte	0x8
 29091 0a6b AA01     		.2byte	0x1aa
 29092 0a6d 6A080000 		.4byte	0x86a
 29093 0a71 08       		.byte	0x8
 29094 0a72 00       		.byte	0
 29095 0a73 11       		.uleb128 0x11
 29096 0a74 D8010000 		.4byte	.LASF189
 29097 0a78 10       		.byte	0x10
 29098 0a79 08       		.byte	0x8
 29099 0a7a B101     		.2byte	0x1b1
 29100 0a7c A80A0000 		.4byte	0xaa8
 29101 0a80 12       		.uleb128 0x12
 29102 0a81 E0100000 		.4byte	.LASF190
 29103 0a85 08       		.byte	0x8
 29104 0a86 B201     		.2byte	0x1b2
 29105 0a88 97000000 		.4byte	0x97
 29106 0a8c 00       		.byte	0
 29107 0a8d 12       		.uleb128 0x12
 29108 0a8e 030C0000 		.4byte	.LASF191
 29109 0a92 08       		.byte	0x8
 29110 0a93 B301     		.2byte	0x1b3
 29111 0a95 97000000 		.4byte	0x97
 29112 0a99 01       		.byte	0x1
 29113 0a9a 12       		.uleb128 0x12
 29114 0a9b 44040000 		.4byte	.LASF117
 29115 0a9f 08       		.byte	0x8
 29116 0aa0 B401     		.2byte	0x1b4
 29117 0aa2 A80A0000 		.4byte	0xaa8
 29118 0aa6 02       		.byte	0x2
 29119 0aa7 00       		.byte	0
 29120 0aa8 09       		.uleb128 0x9
 29121 0aa9 97000000 		.4byte	0x97
 29122 0aad B80A0000 		.4byte	0xab8
 29123 0ab1 0A       		.uleb128 0xa
 29124 0ab2 18010000 		.4byte	0x118
 29125 0ab6 0D       		.byte	0xd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 637


 29126 0ab7 00       		.byte	0
 29127 0ab8 11       		.uleb128 0x11
 29128 0ab9 7C0E0000 		.4byte	.LASF192
 29129 0abd 10       		.byte	0x10
 29130 0abe 08       		.byte	0x8
 29131 0abf BB01     		.2byte	0x1bb
 29132 0ac1 FA0A0000 		.4byte	0xafa
 29133 0ac5 12       		.uleb128 0x12
 29134 0ac6 30150000 		.4byte	.LASF193
 29135 0aca 08       		.byte	0x8
 29136 0acb BC01     		.2byte	0x1bc
 29137 0acd D3000000 		.4byte	0xd3
 29138 0ad1 00       		.byte	0
 29139 0ad2 12       		.uleb128 0x12
 29140 0ad3 2F080000 		.4byte	.LASF194
 29141 0ad7 08       		.byte	0x8
 29142 0ad8 BD01     		.2byte	0x1bd
 29143 0ada EB000000 		.4byte	0xeb
 29144 0ade 04       		.byte	0x4
 29145 0adf 12       		.uleb128 0x12
 29146 0ae0 72100000 		.4byte	.LASF195
 29147 0ae4 08       		.byte	0x8
 29148 0ae5 BE01     		.2byte	0x1be
 29149 0ae7 EB000000 		.4byte	0xeb
 29150 0aeb 08       		.byte	0x8
 29151 0aec 12       		.uleb128 0x12
 29152 0aed 44040000 		.4byte	.LASF117
 29153 0af1 08       		.byte	0x8
 29154 0af2 BF01     		.2byte	0x1bf
 29155 0af4 FA0A0000 		.4byte	0xafa
 29156 0af8 0C       		.byte	0xc
 29157 0af9 00       		.byte	0
 29158 0afa 09       		.uleb128 0x9
 29159 0afb 97000000 		.4byte	0x97
 29160 0aff 0A0B0000 		.4byte	0xb0a
 29161 0b03 0A       		.uleb128 0xa
 29162 0b04 18010000 		.4byte	0x118
 29163 0b08 03       		.byte	0x3
 29164 0b09 00       		.byte	0
 29165 0b0a 11       		.uleb128 0x11
 29166 0b0b 34030000 		.4byte	.LASF196
 29167 0b0f 12       		.byte	0x12
 29168 0b10 08       		.byte	0x8
 29169 0b11 C601     		.2byte	0x1c6
 29170 0b13 4C0B0000 		.4byte	0xb4c
 29171 0b17 12       		.uleb128 0x12
 29172 0b18 57160000 		.4byte	.LASF197
 29173 0b1c 08       		.byte	0x8
 29174 0b1d C701     		.2byte	0x1c7
 29175 0b1f 97000000 		.4byte	0x97
 29176 0b23 00       		.byte	0
 29177 0b24 12       		.uleb128 0x12
 29178 0b25 B9140000 		.4byte	.LASF198
 29179 0b29 08       		.byte	0x8
 29180 0b2a C801     		.2byte	0x1c8
 29181 0b2c C9080000 		.4byte	0x8c9
 29182 0b30 02       		.byte	0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 638


 29183 0b31 12       		.uleb128 0x12
 29184 0b32 61000000 		.4byte	.LASF199
 29185 0b36 08       		.byte	0x8
 29186 0b37 C901     		.2byte	0x1c9
 29187 0b39 97000000 		.4byte	0x97
 29188 0b3d 06       		.byte	0x6
 29189 0b3e 12       		.uleb128 0x12
 29190 0b3f 44040000 		.4byte	.LASF117
 29191 0b43 08       		.byte	0x8
 29192 0b44 CA01     		.2byte	0x1ca
 29193 0b46 4C0B0000 		.4byte	0xb4c
 29194 0b4a 07       		.byte	0x7
 29195 0b4b 00       		.byte	0
 29196 0b4c 09       		.uleb128 0x9
 29197 0b4d 97000000 		.4byte	0x97
 29198 0b51 5C0B0000 		.4byte	0xb5c
 29199 0b55 0A       		.uleb128 0xa
 29200 0b56 18010000 		.4byte	0x118
 29201 0b5a 09       		.byte	0x9
 29202 0b5b 00       		.byte	0
 29203 0b5c 14       		.uleb128 0x14
 29204 0b5d 4B150000 		.4byte	.LASF200
 29205 0b61 FC02     		.2byte	0x2fc
 29206 0b63 08       		.byte	0x8
 29207 0b64 D301     		.2byte	0x1d3
 29208 0b66 410C0000 		.4byte	0xc41
 29209 0b6a 12       		.uleb128 0x12
 29210 0b6b 010D0000 		.4byte	.LASF201
 29211 0b6f 08       		.byte	0x8
 29212 0b70 D501     		.2byte	0x1d5
 29213 0b72 97000000 		.4byte	0x97
 29214 0b76 00       		.byte	0
 29215 0b77 12       		.uleb128 0x12
 29216 0b78 44040000 		.4byte	.LASF117
 29217 0b7c 08       		.byte	0x8
 29218 0b7d D601     		.2byte	0x1d6
 29219 0b7f 410C0000 		.4byte	0xc41
 29220 0b83 01       		.byte	0x1
 29221 0b84 13       		.uleb128 0x13
 29222 0b85 636E7400 		.ascii	"cnt\000"
 29223 0b89 08       		.byte	0x8
 29224 0b8a D701     		.2byte	0x1d7
 29225 0b8c A4040000 		.4byte	0x4a4
 29226 0b90 10       		.byte	0x10
 29227 0b91 12       		.uleb128 0x12
 29228 0b92 FB030000 		.4byte	.LASF202
 29229 0b96 08       		.byte	0x8
 29230 0b97 D801     		.2byte	0x1d8
 29231 0b99 510C0000 		.4byte	0xc51
 29232 0b9d 80       		.byte	0x80
 29233 0b9e 13       		.uleb128 0x13
 29234 0b9f 64657600 		.ascii	"dev\000"
 29235 0ba3 08       		.byte	0x8
 29236 0ba4 D901     		.2byte	0x1d9
 29237 0ba6 81050000 		.4byte	0x581
 29238 0baa A0       		.byte	0xa0
 29239 0bab 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 639


 29240 0bac C3120000 		.4byte	.LASF203
 29241 0bb0 08       		.byte	0x8
 29242 0bb1 DA01     		.2byte	0x1da
 29243 0bb3 610C0000 		.4byte	0xc61
 29244 0bb7 B0       		.byte	0xb0
 29245 0bb8 15       		.uleb128 0x15
 29246 0bb9 656E6300 		.ascii	"enc\000"
 29247 0bbd 08       		.byte	0x8
 29248 0bbe DB01     		.2byte	0x1db
 29249 0bc0 710C0000 		.4byte	0xc71
 29250 0bc4 9801     		.2byte	0x198
 29251 0bc6 15       		.uleb128 0x15
 29252 0bc7 656D6700 		.ascii	"emg\000"
 29253 0bcb 08       		.byte	0x8
 29254 0bcc DC01     		.2byte	0x1dc
 29255 0bce 7A080000 		.4byte	0x87a
 29256 0bd2 F801     		.2byte	0x1f8
 29257 0bd4 15       		.uleb128 0x15
 29258 0bd5 696D7500 		.ascii	"imu\000"
 29259 0bd9 08       		.byte	0x8
 29260 0bda DD01     		.2byte	0x1dd
 29261 0bdc E9080000 		.4byte	0x8e9
 29262 0be0 0802     		.2byte	0x208
 29263 0be2 15       		.uleb128 0x15
 29264 0be3 65787000 		.ascii	"exp\000"
 29265 0be7 08       		.byte	0x8
 29266 0be8 DE01     		.2byte	0x1de
 29267 0bea 41090000 		.4byte	0x941
 29268 0bee 2802     		.2byte	0x228
 29269 0bf0 16       		.uleb128 0x16
 29270 0bf1 A2000000 		.4byte	.LASF204
 29271 0bf5 08       		.byte	0x8
 29272 0bf6 DF01     		.2byte	0x1df
 29273 0bf8 810C0000 		.4byte	0xc81
 29274 0bfc 4802     		.2byte	0x248
 29275 0bfe 15       		.uleb128 0x15
 29276 0bff 534800   		.ascii	"SH\000"
 29277 0c02 08       		.byte	0x8
 29278 0c03 E101     		.2byte	0x1e1
 29279 0c05 E2090000 		.4byte	0x9e2
 29280 0c09 A802     		.2byte	0x2a8
 29281 0c0b 16       		.uleb128 0x16
 29282 0c0c 4C010000 		.4byte	.LASF205
 29283 0c10 08       		.byte	0x8
 29284 0c11 E201     		.2byte	0x1e2
 29285 0c13 310A0000 		.4byte	0xa31
 29286 0c17 B802     		.2byte	0x2b8
 29287 0c19 15       		.uleb128 0x15
 29288 0c1a 4D5300   		.ascii	"MS\000"
 29289 0c1d 08       		.byte	0x8
 29290 0c1e E301     		.2byte	0x1e3
 29291 0c20 730A0000 		.4byte	0xa73
 29292 0c24 C802     		.2byte	0x2c8
 29293 0c26 15       		.uleb128 0x15
 29294 0c27 464200   		.ascii	"FB\000"
 29295 0c2a 08       		.byte	0x8
 29296 0c2b E401     		.2byte	0x1e4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 640


 29297 0c2d B80A0000 		.4byte	0xab8
 29298 0c31 D802     		.2byte	0x2d8
 29299 0c33 15       		.uleb128 0x15
 29300 0c34 575200   		.ascii	"WR\000"
 29301 0c37 08       		.byte	0x8
 29302 0c38 E501     		.2byte	0x1e5
 29303 0c3a 0A0B0000 		.4byte	0xb0a
 29304 0c3e E802     		.2byte	0x2e8
 29305 0c40 00       		.byte	0
 29306 0c41 09       		.uleb128 0x9
 29307 0c42 97000000 		.4byte	0x97
 29308 0c46 510C0000 		.4byte	0xc51
 29309 0c4a 0A       		.uleb128 0xa
 29310 0c4b 18010000 		.4byte	0x118
 29311 0c4f 0E       		.byte	0xe
 29312 0c50 00       		.byte	0
 29313 0c51 09       		.uleb128 0x9
 29314 0c52 97000000 		.4byte	0x97
 29315 0c56 610C0000 		.4byte	0xc61
 29316 0c5a 0A       		.uleb128 0xa
 29317 0c5b 18010000 		.4byte	0x118
 29318 0c5f 1F       		.byte	0x1f
 29319 0c60 00       		.byte	0
 29320 0c61 09       		.uleb128 0x9
 29321 0c62 20060000 		.4byte	0x620
 29322 0c66 710C0000 		.4byte	0xc71
 29323 0c6a 0A       		.uleb128 0xa
 29324 0c6b 18010000 		.4byte	0x118
 29325 0c6f 01       		.byte	0x1
 29326 0c70 00       		.byte	0
 29327 0c71 09       		.uleb128 0x9
 29328 0c72 C7070000 		.4byte	0x7c7
 29329 0c76 810C0000 		.4byte	0xc81
 29330 0c7a 0A       		.uleb128 0xa
 29331 0c7b 18010000 		.4byte	0x118
 29332 0c7f 01       		.byte	0x1
 29333 0c80 00       		.byte	0
 29334 0c81 09       		.uleb128 0x9
 29335 0c82 AD090000 		.4byte	0x9ad
 29336 0c86 910C0000 		.4byte	0xc91
 29337 0c8a 0A       		.uleb128 0xa
 29338 0c8b 18010000 		.4byte	0x118
 29339 0c8f 02       		.byte	0x2
 29340 0c90 00       		.byte	0
 29341 0c91 11       		.uleb128 0x11
 29342 0c92 BA0F0000 		.4byte	.LASF206
 29343 0c96 28       		.byte	0x28
 29344 0c97 08       		.byte	0x8
 29345 0c98 F001     		.2byte	0x1f0
 29346 0c9a ED0C0000 		.4byte	0xced
 29347 0c9e 12       		.uleb128 0x12
 29348 0c9f 31060000 		.4byte	.LASF207
 29349 0ca3 08       		.byte	0x8
 29350 0ca4 F101     		.2byte	0x1f1
 29351 0ca6 97000000 		.4byte	0x97
 29352 0caa 00       		.byte	0
 29353 0cab 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 641


 29354 0cac 51040000 		.4byte	.LASF208
 29355 0cb0 08       		.byte	0x8
 29356 0cb1 F201     		.2byte	0x1f2
 29357 0cb3 ED0C0000 		.4byte	0xced
 29358 0cb7 02       		.byte	0x2
 29359 0cb8 12       		.uleb128 0x12
 29360 0cb9 D70E0000 		.4byte	.LASF209
 29361 0cbd 08       		.byte	0x8
 29362 0cbe F301     		.2byte	0x1f3
 29363 0cc0 ED0C0000 		.4byte	0xced
 29364 0cc4 08       		.byte	0x8
 29365 0cc5 12       		.uleb128 0x12
 29366 0cc6 C60F0000 		.4byte	.LASF210
 29367 0cca 08       		.byte	0x8
 29368 0ccb F401     		.2byte	0x1f4
 29369 0ccd ED0C0000 		.4byte	0xced
 29370 0cd1 0E       		.byte	0xe
 29371 0cd2 12       		.uleb128 0x12
 29372 0cd3 C1090000 		.4byte	.LASF211
 29373 0cd7 08       		.byte	0x8
 29374 0cd8 F501     		.2byte	0x1f5
 29375 0cda FD0C0000 		.4byte	0xcfd
 29376 0cde 14       		.byte	0x14
 29377 0cdf 12       		.uleb128 0x12
 29378 0ce0 61020000 		.4byte	.LASF212
 29379 0ce4 08       		.byte	0x8
 29380 0ce5 F601     		.2byte	0x1f6
 29381 0ce7 C7000000 		.4byte	0xc7
 29382 0ceb 24       		.byte	0x24
 29383 0cec 00       		.byte	0
 29384 0ced 09       		.uleb128 0x9
 29385 0cee C7000000 		.4byte	0xc7
 29386 0cf2 FD0C0000 		.4byte	0xcfd
 29387 0cf6 0A       		.uleb128 0xa
 29388 0cf7 18010000 		.4byte	0x118
 29389 0cfb 02       		.byte	0x2
 29390 0cfc 00       		.byte	0
 29391 0cfd 09       		.uleb128 0x9
 29392 0cfe EB000000 		.4byte	0xeb
 29393 0d02 0D0D0000 		.4byte	0xd0d
 29394 0d06 0A       		.uleb128 0xa
 29395 0d07 18010000 		.4byte	0x118
 29396 0d0b 03       		.byte	0x3
 29397 0d0c 00       		.byte	0
 29398 0d0d 11       		.uleb128 0x11
 29399 0d0e 50050000 		.4byte	.LASF213
 29400 0d12 06       		.byte	0x6
 29401 0d13 08       		.byte	0x8
 29402 0d14 0602     		.2byte	0x206
 29403 0d16 4F0D0000 		.4byte	0xd4f
 29404 0d1a 12       		.uleb128 0x12
 29405 0d1b 29090000 		.4byte	.LASF214
 29406 0d1f 08       		.byte	0x8
 29407 0d20 0702     		.2byte	0x207
 29408 0d22 97000000 		.4byte	0x97
 29409 0d26 00       		.byte	0
 29410 0d27 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 642


 29411 0d28 A4160000 		.4byte	.LASF215
 29412 0d2c 08       		.byte	0x8
 29413 0d2d 0802     		.2byte	0x208
 29414 0d2f 97000000 		.4byte	0x97
 29415 0d33 01       		.byte	0x1
 29416 0d34 12       		.uleb128 0x12
 29417 0d35 AD070000 		.4byte	.LASF216
 29418 0d39 08       		.byte	0x8
 29419 0d3a 0902     		.2byte	0x209
 29420 0d3c C7000000 		.4byte	0xc7
 29421 0d40 02       		.byte	0x2
 29422 0d41 12       		.uleb128 0x12
 29423 0d42 D50B0000 		.4byte	.LASF217
 29424 0d46 08       		.byte	0x8
 29425 0d47 0A02     		.2byte	0x20a
 29426 0d49 C7000000 		.4byte	0xc7
 29427 0d4d 04       		.byte	0x4
 29428 0d4e 00       		.byte	0
 29429 0d4f 17       		.uleb128 0x17
 29430 0d50 17110000 		.4byte	.LASF413
 29431 0d54 02       		.byte	0x2
 29432 0d55 1403     		.2byte	0x314
 29433 0d57 8C000000 		.4byte	0x8c
 29434 0d5b 03       		.byte	0x3
 29435 0d5c 790D0000 		.4byte	0xd79
 29436 0d60 18       		.uleb128 0x18
 29437 0d61 2B060000 		.4byte	.LASF305
 29438 0d65 02       		.byte	0x2
 29439 0d66 1403     		.2byte	0x314
 29440 0d68 8C000000 		.4byte	0x8c
 29441 0d6c 19       		.uleb128 0x19
 29442 0d6d 1A030000 		.4byte	.LASF414
 29443 0d71 02       		.byte	0x2
 29444 0d72 1603     		.2byte	0x316
 29445 0d74 8C000000 		.4byte	0x8c
 29446 0d78 00       		.byte	0
 29447 0d79 1A       		.uleb128 0x1a
 29448 0d7a 66120000 		.4byte	.LASF218
 29449 0d7e 01       		.byte	0x1
 29450 0d7f 3D       		.byte	0x3d
 29451 0d80 00000000 		.4byte	.LFB64
 29452 0d84 1C050000 		.4byte	.LFE64-.LFB64
 29453 0d88 01       		.uleb128 0x1
 29454 0d89 9C       		.byte	0x9c
 29455 0d8a 820E0000 		.4byte	0xe82
 29456 0d8e 1B       		.uleb128 0x1b
 29457 0d8f B3070000 		.4byte	.LASF220
 29458 0d93 01       		.byte	0x1
 29459 0d94 3F       		.byte	0x3f
 29460 0d95 97000000 		.4byte	0x97
 29461 0d99 02       		.uleb128 0x2
 29462 0d9a 91       		.byte	0x91
 29463 0d9b 77       		.sleb128 -9
 29464 0d9c 1C       		.uleb128 0x1c
 29465 0d9d 4F0D0000 		.4byte	0xd4f
 29466 0da1 48030000 		.4byte	.LBB12
 29467 0da5 08000000 		.4byte	.LBE12-.LBB12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 643


 29468 0da9 01       		.byte	0x1
 29469 0daa 9C       		.byte	0x9c
 29470 0dab CA0D0000 		.4byte	0xdca
 29471 0daf 1D       		.uleb128 0x1d
 29472 0db0 600D0000 		.4byte	0xd60
 29473 0db4 02       		.uleb128 0x2
 29474 0db5 91       		.byte	0x91
 29475 0db6 60       		.sleb128 -32
 29476 0db7 1E       		.uleb128 0x1e
 29477 0db8 48030000 		.4byte	.LBB13
 29478 0dbc 08000000 		.4byte	.LBE13-.LBB13
 29479 0dc0 1F       		.uleb128 0x1f
 29480 0dc1 6C0D0000 		.4byte	0xd6c
 29481 0dc5 02       		.uleb128 0x2
 29482 0dc6 91       		.byte	0x91
 29483 0dc7 5C       		.sleb128 -36
 29484 0dc8 00       		.byte	0
 29485 0dc9 00       		.byte	0
 29486 0dca 1C       		.uleb128 0x1c
 29487 0dcb 4F0D0000 		.4byte	0xd4f
 29488 0dcf 66030000 		.4byte	.LBB14
 29489 0dd3 08000000 		.4byte	.LBE14-.LBB14
 29490 0dd7 01       		.byte	0x1
 29491 0dd8 A8       		.byte	0xa8
 29492 0dd9 F80D0000 		.4byte	0xdf8
 29493 0ddd 1D       		.uleb128 0x1d
 29494 0dde 600D0000 		.4byte	0xd60
 29495 0de2 02       		.uleb128 0x2
 29496 0de3 91       		.byte	0x91
 29497 0de4 70       		.sleb128 -16
 29498 0de5 1E       		.uleb128 0x1e
 29499 0de6 66030000 		.4byte	.LBB15
 29500 0dea 08000000 		.4byte	.LBE15-.LBB15
 29501 0dee 1F       		.uleb128 0x1f
 29502 0def 6C0D0000 		.4byte	0xd6c
 29503 0df3 02       		.uleb128 0x2
 29504 0df4 91       		.byte	0x91
 29505 0df5 58       		.sleb128 -40
 29506 0df6 00       		.byte	0
 29507 0df7 00       		.byte	0
 29508 0df8 20       		.uleb128 0x20
 29509 0df9 4F0D0000 		.4byte	0xd4f
 29510 0dfd A8040000 		.4byte	.LBB16
 29511 0e01 08000000 		.4byte	.LBE16-.LBB16
 29512 0e05 01       		.byte	0x1
 29513 0e06 0401     		.2byte	0x104
 29514 0e08 270E0000 		.4byte	0xe27
 29515 0e0c 1D       		.uleb128 0x1d
 29516 0e0d 600D0000 		.4byte	0xd60
 29517 0e11 02       		.uleb128 0x2
 29518 0e12 91       		.byte	0x91
 29519 0e13 6C       		.sleb128 -20
 29520 0e14 1E       		.uleb128 0x1e
 29521 0e15 A8040000 		.4byte	.LBB17
 29522 0e19 08000000 		.4byte	.LBE17-.LBB17
 29523 0e1d 1F       		.uleb128 0x1f
 29524 0e1e 6C0D0000 		.4byte	0xd6c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 644


 29525 0e22 02       		.uleb128 0x2
 29526 0e23 91       		.byte	0x91
 29527 0e24 54       		.sleb128 -44
 29528 0e25 00       		.byte	0
 29529 0e26 00       		.byte	0
 29530 0e27 20       		.uleb128 0x20
 29531 0e28 4F0D0000 		.4byte	0xd4f
 29532 0e2c D8040000 		.4byte	.LBB18
 29533 0e30 08000000 		.4byte	.LBE18-.LBB18
 29534 0e34 01       		.byte	0x1
 29535 0e35 2201     		.2byte	0x122
 29536 0e37 560E0000 		.4byte	0xe56
 29537 0e3b 1D       		.uleb128 0x1d
 29538 0e3c 600D0000 		.4byte	0xd60
 29539 0e40 02       		.uleb128 0x2
 29540 0e41 91       		.byte	0x91
 29541 0e42 68       		.sleb128 -24
 29542 0e43 1E       		.uleb128 0x1e
 29543 0e44 D8040000 		.4byte	.LBB19
 29544 0e48 08000000 		.4byte	.LBE19-.LBB19
 29545 0e4c 1F       		.uleb128 0x1f
 29546 0e4d 6C0D0000 		.4byte	0xd6c
 29547 0e51 02       		.uleb128 0x2
 29548 0e52 91       		.byte	0x91
 29549 0e53 50       		.sleb128 -48
 29550 0e54 00       		.byte	0
 29551 0e55 00       		.byte	0
 29552 0e56 21       		.uleb128 0x21
 29553 0e57 4F0D0000 		.4byte	0xd4f
 29554 0e5b F0040000 		.4byte	.LBB20
 29555 0e5f 08000000 		.4byte	.LBE20-.LBB20
 29556 0e63 01       		.byte	0x1
 29557 0e64 2801     		.2byte	0x128
 29558 0e66 1D       		.uleb128 0x1d
 29559 0e67 600D0000 		.4byte	0xd60
 29560 0e6b 02       		.uleb128 0x2
 29561 0e6c 91       		.byte	0x91
 29562 0e6d 64       		.sleb128 -28
 29563 0e6e 1E       		.uleb128 0x1e
 29564 0e6f F0040000 		.4byte	.LBB21
 29565 0e73 08000000 		.4byte	.LBE21-.LBB21
 29566 0e77 1F       		.uleb128 0x1f
 29567 0e78 6C0D0000 		.4byte	0xd6c
 29568 0e7c 02       		.uleb128 0x2
 29569 0e7d 91       		.byte	0x91
 29570 0e7e 4C       		.sleb128 -52
 29571 0e7f 00       		.byte	0
 29572 0e80 00       		.byte	0
 29573 0e81 00       		.byte	0
 29574 0e82 22       		.uleb128 0x22
 29575 0e83 00000000 		.4byte	.LASF219
 29576 0e87 01       		.byte	0x1
 29577 0e88 3601     		.2byte	0x136
 29578 0e8a 00000000 		.4byte	.LFB65
 29579 0e8e 22000000 		.4byte	.LFE65-.LFB65
 29580 0e92 01       		.uleb128 0x1
 29581 0e93 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 645


 29582 0e94 A90E0000 		.4byte	0xea9
 29583 0e98 23       		.uleb128 0x23
 29584 0e99 BA060000 		.4byte	.LASF221
 29585 0e9d 01       		.byte	0x1
 29586 0e9e 3701     		.2byte	0x137
 29587 0ea0 A90E0000 		.4byte	0xea9
 29588 0ea4 03       		.uleb128 0x3
 29589 0ea5 91       		.byte	0x91
 29590 0ea6 9C74     		.sleb128 -1508
 29591 0ea8 00       		.byte	0
 29592 0ea9 09       		.uleb128 0x9
 29593 0eaa F9000000 		.4byte	0xf9
 29594 0eae BA0E0000 		.4byte	0xeba
 29595 0eb2 24       		.uleb128 0x24
 29596 0eb3 18010000 		.4byte	0x118
 29597 0eb7 DB05     		.2byte	0x5db
 29598 0eb9 00       		.byte	0
 29599 0eba 22       		.uleb128 0x22
 29600 0ebb 7C150000 		.4byte	.LASF222
 29601 0ebf 01       		.byte	0x1
 29602 0ec0 4201     		.2byte	0x142
 29603 0ec2 00000000 		.4byte	.LFB66
 29604 0ec6 64010000 		.4byte	.LFE66-.LFB66
 29605 0eca 01       		.uleb128 0x1
 29606 0ecb 9C       		.byte	0x9c
 29607 0ecc 030F0000 		.4byte	0xf03
 29608 0ed0 25       		.uleb128 0x25
 29609 0ed1 CC140000 		.4byte	.LASF225
 29610 0ed5 01       		.byte	0x1
 29611 0ed6 4201     		.2byte	0x142
 29612 0ed8 A3000000 		.4byte	0xa3
 29613 0edc 04       		.uleb128 0x4
 29614 0edd 91       		.byte	0x91
 29615 0ede B6C47E   		.sleb128 -24010
 29616 0ee1 23       		.uleb128 0x23
 29617 0ee2 BA060000 		.4byte	.LASF221
 29618 0ee6 01       		.byte	0x1
 29619 0ee7 4301     		.2byte	0x143
 29620 0ee9 030F0000 		.4byte	0xf03
 29621 0eed 03       		.uleb128 0x3
 29622 0eee 91       		.byte	0x91
 29623 0eef D860     		.sleb128 -4008
 29624 0ef1 23       		.uleb128 0x23
 29625 0ef2 8F090000 		.4byte	.LASF223
 29626 0ef6 01       		.byte	0x1
 29627 0ef7 4401     		.2byte	0x144
 29628 0ef9 140F0000 		.4byte	0xf14
 29629 0efd 04       		.uleb128 0x4
 29630 0efe 91       		.byte	0x91
 29631 0eff B8C47E   		.sleb128 -24008
 29632 0f02 00       		.byte	0
 29633 0f03 09       		.uleb128 0x9
 29634 0f04 F9000000 		.4byte	0xf9
 29635 0f08 140F0000 		.4byte	0xf14
 29636 0f0c 24       		.uleb128 0x24
 29637 0f0d 18010000 		.4byte	0x118
 29638 0f11 9F0F     		.2byte	0xf9f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 646


 29639 0f13 00       		.byte	0
 29640 0f14 09       		.uleb128 0x9
 29641 0f15 F9000000 		.4byte	0xf9
 29642 0f19 250F0000 		.4byte	0xf25
 29643 0f1d 24       		.uleb128 0x24
 29644 0f1e 18010000 		.4byte	0x118
 29645 0f22 1F4E     		.2byte	0x4e1f
 29646 0f24 00       		.byte	0
 29647 0f25 22       		.uleb128 0x22
 29648 0f26 1B020000 		.4byte	.LASF224
 29649 0f2a 01       		.byte	0x1
 29650 0f2b 7401     		.2byte	0x174
 29651 0f2d 00000000 		.4byte	.LFB67
 29652 0f31 D2310000 		.4byte	.LFE67-.LFB67
 29653 0f35 01       		.uleb128 0x1
 29654 0f36 9C       		.byte	0x9c
 29655 0f37 C9100000 		.4byte	0x10c9
 29656 0f3b 25       		.uleb128 0x25
 29657 0f3c 870E0000 		.4byte	.LASF226
 29658 0f40 01       		.byte	0x1
 29659 0f41 7401     		.2byte	0x174
 29660 0f43 C9100000 		.4byte	0x10c9
 29661 0f47 03       		.uleb128 0x3
 29662 0f48 91       		.byte	0x91
 29663 0f49 F452     		.sleb128 -5772
 29664 0f4b 25       		.uleb128 0x25
 29665 0f4c 55150000 		.4byte	.LASF227
 29666 0f50 01       		.byte	0x1
 29667 0f51 7401     		.2byte	0x174
 29668 0f53 CF100000 		.4byte	0x10cf
 29669 0f57 03       		.uleb128 0x3
 29670 0f58 91       		.byte	0x91
 29671 0f59 F052     		.sleb128 -5776
 29672 0f5b 25       		.uleb128 0x25
 29673 0f5c 5D040000 		.4byte	.LASF228
 29674 0f60 01       		.byte	0x1
 29675 0f61 7501     		.2byte	0x175
 29676 0f63 CF100000 		.4byte	0x10cf
 29677 0f67 03       		.uleb128 0x3
 29678 0f68 91       		.byte	0x91
 29679 0f69 EC52     		.sleb128 -5780
 29680 0f6b 25       		.uleb128 0x25
 29681 0f6c C00D0000 		.4byte	.LASF229
 29682 0f70 01       		.byte	0x1
 29683 0f71 7501     		.2byte	0x175
 29684 0f73 CF100000 		.4byte	0x10cf
 29685 0f77 03       		.uleb128 0x3
 29686 0f78 91       		.byte	0x91
 29687 0f79 E852     		.sleb128 -5784
 29688 0f7b 25       		.uleb128 0x25
 29689 0f7c 96140000 		.4byte	.LASF230
 29690 0f80 01       		.byte	0x1
 29691 0f81 7601     		.2byte	0x176
 29692 0f83 CF100000 		.4byte	0x10cf
 29693 0f87 02       		.uleb128 0x2
 29694 0f88 91       		.byte	0x91
 29695 0f89 00       		.sleb128 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 647


 29696 0f8a 25       		.uleb128 0x25
 29697 0f8b 1E090000 		.4byte	.LASF231
 29698 0f8f 01       		.byte	0x1
 29699 0f90 7601     		.2byte	0x176
 29700 0f92 D5100000 		.4byte	0x10d5
 29701 0f96 02       		.uleb128 0x2
 29702 0f97 91       		.byte	0x91
 29703 0f98 04       		.sleb128 4
 29704 0f99 25       		.uleb128 0x25
 29705 0f9a 220C0000 		.4byte	.LASF232
 29706 0f9e 01       		.byte	0x1
 29707 0f9f 7701     		.2byte	0x177
 29708 0fa1 CF100000 		.4byte	0x10cf
 29709 0fa5 02       		.uleb128 0x2
 29710 0fa6 91       		.byte	0x91
 29711 0fa7 08       		.sleb128 8
 29712 0fa8 25       		.uleb128 0x25
 29713 0fa9 A1090000 		.4byte	.LASF233
 29714 0fad 01       		.byte	0x1
 29715 0fae 7701     		.2byte	0x177
 29716 0fb0 D5100000 		.4byte	0x10d5
 29717 0fb4 02       		.uleb128 0x2
 29718 0fb5 91       		.byte	0x91
 29719 0fb6 0C       		.sleb128 12
 29720 0fb7 23       		.uleb128 0x23
 29721 0fb8 23070000 		.4byte	.LASF234
 29722 0fbc 01       		.byte	0x1
 29723 0fbd 7A01     		.2byte	0x17a
 29724 0fbf DB100000 		.4byte	0x10db
 29725 0fc3 03       		.uleb128 0x3
 29726 0fc4 91       		.byte	0x91
 29727 0fc5 C053     		.sleb128 -5696
 29728 0fc7 23       		.uleb128 0x23
 29729 0fc8 B00C0000 		.4byte	.LASF235
 29730 0fcc 01       		.byte	0x1
 29731 0fcd 7B01     		.2byte	0x17b
 29732 0fcf A3000000 		.4byte	0xa3
 29733 0fd3 02       		.uleb128 0x2
 29734 0fd4 91       		.byte	0x91
 29735 0fd5 60       		.sleb128 -32
 29736 0fd6 26       		.uleb128 0x26
 29737 0fd7 6900     		.ascii	"i\000"
 29738 0fd9 01       		.byte	0x1
 29739 0fda 7E01     		.2byte	0x17e
 29740 0fdc 97000000 		.4byte	0x97
 29741 0fe0 02       		.uleb128 0x2
 29742 0fe1 91       		.byte	0x91
 29743 0fe2 67       		.sleb128 -25
 29744 0fe3 26       		.uleb128 0x26
 29745 0fe4 6A00     		.ascii	"j\000"
 29746 0fe6 01       		.byte	0x1
 29747 0fe7 7E01     		.2byte	0x17e
 29748 0fe9 97000000 		.4byte	0x97
 29749 0fed 02       		.uleb128 0x2
 29750 0fee 91       		.byte	0x91
 29751 0fef 66       		.sleb128 -26
 29752 0ff0 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 648


 29753 0ff1 69647800 		.ascii	"idx\000"
 29754 0ff5 01       		.byte	0x1
 29755 0ff6 7F01     		.2byte	0x17f
 29756 0ff8 97000000 		.4byte	0x97
 29757 0ffc 02       		.uleb128 0x2
 29758 0ffd 91       		.byte	0x91
 29759 0ffe 65       		.sleb128 -27
 29760 0fff 23       		.uleb128 0x23
 29761 1000 B1120000 		.4byte	.LASF236
 29762 1004 01       		.byte	0x1
 29763 1005 8001     		.2byte	0x180
 29764 1007 97000000 		.4byte	0x97
 29765 100b 02       		.uleb128 0x2
 29766 100c 91       		.byte	0x91
 29767 100d 64       		.sleb128 -28
 29768 100e 26       		.uleb128 0x26
 29769 100f 736F6400 		.ascii	"sod\000"
 29770 1013 01       		.byte	0x1
 29771 1014 8101     		.2byte	0x181
 29772 1016 97000000 		.4byte	0x97
 29773 101a 02       		.uleb128 0x2
 29774 101b 91       		.byte	0x91
 29775 101c 63       		.sleb128 -29
 29776 101d 23       		.uleb128 0x23
 29777 101e 910D0000 		.4byte	.LASF237
 29778 1022 01       		.byte	0x1
 29779 1023 8201     		.2byte	0x182
 29780 1025 97000000 		.4byte	0x97
 29781 1029 02       		.uleb128 0x2
 29782 102a 91       		.byte	0x91
 29783 102b 62       		.sleb128 -30
 29784 102c 23       		.uleb128 0x23
 29785 102d 8A160000 		.4byte	.LASF238
 29786 1031 01       		.byte	0x1
 29787 1032 8301     		.2byte	0x183
 29788 1034 EC100000 		.4byte	0x10ec
 29789 1038 03       		.uleb128 0x3
 29790 1039 91       		.byte	0x91
 29791 103a 8C53     		.sleb128 -5748
 29792 103c 23       		.uleb128 0x23
 29793 103d 7E140000 		.4byte	.LASF239
 29794 1041 01       		.byte	0x1
 29795 1042 8401     		.2byte	0x184
 29796 1044 EB000000 		.4byte	0xeb
 29797 1048 03       		.uleb128 0x3
 29798 1049 91       		.byte	0x91
 29799 104a 8853     		.sleb128 -5752
 29800 104c 23       		.uleb128 0x23
 29801 104d 42130000 		.4byte	.LASF240
 29802 1051 01       		.byte	0x1
 29803 1052 8501     		.2byte	0x185
 29804 1054 C7000000 		.4byte	0xc7
 29805 1058 03       		.uleb128 0x3
 29806 1059 91       		.byte	0x91
 29807 105a 8653     		.sleb128 -5754
 29808 105c 23       		.uleb128 0x23
 29809 105d 090E0000 		.4byte	.LASF241
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 649


 29810 1061 01       		.byte	0x1
 29811 1062 8601     		.2byte	0x186
 29812 1064 A3000000 		.4byte	0xa3
 29813 1068 03       		.uleb128 0x3
 29814 1069 91       		.byte	0x91
 29815 106a 8453     		.sleb128 -5756
 29816 106c 23       		.uleb128 0x23
 29817 106d 9F140000 		.4byte	.LASF242
 29818 1071 01       		.byte	0x1
 29819 1072 8701     		.2byte	0x187
 29820 1074 D3000000 		.4byte	0xd3
 29821 1078 03       		.uleb128 0x3
 29822 1079 91       		.byte	0x91
 29823 107a 8053     		.sleb128 -5760
 29824 107c 23       		.uleb128 0x23
 29825 107d 9A0F0000 		.4byte	.LASF243
 29826 1081 01       		.byte	0x1
 29827 1082 8801     		.2byte	0x188
 29828 1084 AF000000 		.4byte	0xaf
 29829 1088 03       		.uleb128 0x3
 29830 1089 91       		.byte	0x91
 29831 108a FC52     		.sleb128 -5764
 29832 108c 23       		.uleb128 0x23
 29833 108d 330F0000 		.4byte	.LASF244
 29834 1091 01       		.byte	0x1
 29835 1092 8A01     		.2byte	0x18a
 29836 1094 97000000 		.4byte	0x97
 29837 1098 02       		.uleb128 0x2
 29838 1099 91       		.byte	0x91
 29839 109a 5F       		.sleb128 -33
 29840 109b 23       		.uleb128 0x23
 29841 109c 76010000 		.4byte	.LASF245
 29842 10a0 01       		.byte	0x1
 29843 10a1 8B01     		.2byte	0x18b
 29844 10a3 97000000 		.4byte	0x97
 29845 10a7 02       		.uleb128 0x2
 29846 10a8 91       		.byte	0x91
 29847 10a9 5E       		.sleb128 -34
 29848 10aa 23       		.uleb128 0x23
 29849 10ab 720C0000 		.4byte	.LASF246
 29850 10af 01       		.byte	0x1
 29851 10b0 8D01     		.2byte	0x18d
 29852 10b2 CF100000 		.4byte	0x10cf
 29853 10b6 02       		.uleb128 0x2
 29854 10b7 91       		.byte	0x91
 29855 10b8 58       		.sleb128 -40
 29856 10b9 23       		.uleb128 0x23
 29857 10ba 0A020000 		.4byte	.LASF247
 29858 10be 01       		.byte	0x1
 29859 10bf 8E01     		.2byte	0x18e
 29860 10c1 CF100000 		.4byte	0x10cf
 29861 10c5 02       		.uleb128 0x2
 29862 10c6 91       		.byte	0x91
 29863 10c7 54       		.sleb128 -44
 29864 10c8 00       		.byte	0
 29865 10c9 07       		.uleb128 0x7
 29866 10ca 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 650


 29867 10cb CF100000 		.4byte	0x10cf
 29868 10cf 07       		.uleb128 0x7
 29869 10d0 04       		.byte	0x4
 29870 10d1 97000000 		.4byte	0x97
 29871 10d5 07       		.uleb128 0x7
 29872 10d6 04       		.byte	0x4
 29873 10d7 25010000 		.4byte	0x125
 29874 10db 09       		.uleb128 0x9
 29875 10dc 97000000 		.4byte	0x97
 29876 10e0 EC100000 		.4byte	0x10ec
 29877 10e4 24       		.uleb128 0x24
 29878 10e5 18010000 		.4byte	0x118
 29879 10e9 1116     		.2byte	0x1611
 29880 10eb 00       		.byte	0
 29881 10ec 09       		.uleb128 0x9
 29882 10ed F9000000 		.4byte	0xf9
 29883 10f1 FC100000 		.4byte	0x10fc
 29884 10f5 0A       		.uleb128 0xa
 29885 10f6 18010000 		.4byte	0x118
 29886 10fa 31       		.byte	0x31
 29887 10fb 00       		.byte	0
 29888 10fc 22       		.uleb128 0x22
 29889 10fd 94100000 		.4byte	.LASF248
 29890 1101 01       		.byte	0x1
 29891 1102 7C03     		.2byte	0x37c
 29892 1104 00000000 		.4byte	.LFB68
 29893 1108 38190000 		.4byte	.LFE68-.LFB68
 29894 110c 01       		.uleb128 0x1
 29895 110d 9C       		.byte	0x9c
 29896 110e DA120000 		.4byte	0x12da
 29897 1112 25       		.uleb128 0x25
 29898 1113 29080000 		.4byte	.LASF249
 29899 1117 01       		.byte	0x1
 29900 1118 7C03     		.2byte	0x37c
 29901 111a A3000000 		.4byte	0xa3
 29902 111e 03       		.uleb128 0x3
 29903 111f 91       		.byte	0x91
 29904 1120 CE74     		.sleb128 -1458
 29905 1122 26       		.uleb128 0x26
 29906 1123 6900     		.ascii	"i\000"
 29907 1125 01       		.byte	0x1
 29908 1126 7D03     		.2byte	0x37d
 29909 1128 97000000 		.4byte	0x97
 29910 112c 02       		.uleb128 0x2
 29911 112d 91       		.byte	0x91
 29912 112e 6F       		.sleb128 -17
 29913 112f 26       		.uleb128 0x26
 29914 1130 6A00     		.ascii	"j\000"
 29915 1132 01       		.byte	0x1
 29916 1133 7D03     		.2byte	0x37d
 29917 1135 97000000 		.4byte	0x97
 29918 1139 02       		.uleb128 0x2
 29919 113a 91       		.byte	0x91
 29920 113b 6E       		.sleb128 -18
 29921 113c 26       		.uleb128 0x26
 29922 113d 736F6400 		.ascii	"sod\000"
 29923 1141 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 651


 29924 1142 7E03     		.2byte	0x37e
 29925 1144 97000000 		.4byte	0x97
 29926 1148 02       		.uleb128 0x2
 29927 1149 91       		.byte	0x91
 29928 114a 6D       		.sleb128 -19
 29929 114b 23       		.uleb128 0x23
 29930 114c 5C0C0000 		.4byte	.LASF250
 29931 1150 01       		.byte	0x1
 29932 1151 7F03     		.2byte	0x37f
 29933 1153 97000000 		.4byte	0x97
 29934 1157 02       		.uleb128 0x2
 29935 1158 91       		.byte	0x91
 29936 1159 62       		.sleb128 -30
 29937 115a 23       		.uleb128 0x23
 29938 115b 42130000 		.4byte	.LASF240
 29939 115f 01       		.byte	0x1
 29940 1160 8003     		.2byte	0x380
 29941 1162 C7000000 		.4byte	0xc7
 29942 1166 02       		.uleb128 0x2
 29943 1167 91       		.byte	0x91
 29944 1168 60       		.sleb128 -32
 29945 1169 23       		.uleb128 0x23
 29946 116a 090E0000 		.4byte	.LASF241
 29947 116e 01       		.byte	0x1
 29948 116f 8103     		.2byte	0x381
 29949 1171 A3000000 		.4byte	0xa3
 29950 1175 02       		.uleb128 0x2
 29951 1176 91       		.byte	0x91
 29952 1177 5E       		.sleb128 -34
 29953 1178 23       		.uleb128 0x23
 29954 1179 9F140000 		.4byte	.LASF242
 29955 117d 01       		.byte	0x1
 29956 117e 8203     		.2byte	0x382
 29957 1180 D3000000 		.4byte	0xd3
 29958 1184 02       		.uleb128 0x2
 29959 1185 91       		.byte	0x91
 29960 1186 58       		.sleb128 -40
 29961 1187 23       		.uleb128 0x23
 29962 1188 9A0F0000 		.4byte	.LASF243
 29963 118c 01       		.byte	0x1
 29964 118d 8303     		.2byte	0x383
 29965 118f AF000000 		.4byte	0xaf
 29966 1193 02       		.uleb128 0x2
 29967 1194 91       		.byte	0x91
 29968 1195 54       		.sleb128 -44
 29969 1196 23       		.uleb128 0x23
 29970 1197 7E140000 		.4byte	.LASF239
 29971 119b 01       		.byte	0x1
 29972 119c 8403     		.2byte	0x384
 29973 119e EB000000 		.4byte	0xeb
 29974 11a2 02       		.uleb128 0x2
 29975 11a3 91       		.byte	0x91
 29976 11a4 50       		.sleb128 -48
 29977 11a5 23       		.uleb128 0x23
 29978 11a6 330F0000 		.4byte	.LASF244
 29979 11aa 01       		.byte	0x1
 29980 11ab 8603     		.2byte	0x386
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 652


 29981 11ad 97000000 		.4byte	0x97
 29982 11b1 02       		.uleb128 0x2
 29983 11b2 91       		.byte	0x91
 29984 11b3 65       		.sleb128 -27
 29985 11b4 23       		.uleb128 0x23
 29986 11b5 76010000 		.4byte	.LASF245
 29987 11b9 01       		.byte	0x1
 29988 11ba 8703     		.2byte	0x387
 29989 11bc 97000000 		.4byte	0x97
 29990 11c0 02       		.uleb128 0x2
 29991 11c1 91       		.byte	0x91
 29992 11c2 64       		.sleb128 -28
 29993 11c3 23       		.uleb128 0x23
 29994 11c4 73040000 		.4byte	.LASF251
 29995 11c8 01       		.byte	0x1
 29996 11c9 8A03     		.2byte	0x38a
 29997 11cb DA120000 		.4byte	0x12da
 29998 11cf 02       		.uleb128 0x2
 29999 11d0 91       		.byte	0x91
 30000 11d1 68       		.sleb128 -24
 30001 11d2 23       		.uleb128 0x23
 30002 11d3 870E0000 		.4byte	.LASF226
 30003 11d7 01       		.byte	0x1
 30004 11d8 9203     		.2byte	0x392
 30005 11da E0120000 		.4byte	0x12e0
 30006 11de 03       		.uleb128 0x3
 30007 11df 91       		.byte	0x91
 30008 11e0 FC7C     		.sleb128 -388
 30009 11e2 23       		.uleb128 0x23
 30010 11e3 55150000 		.4byte	.LASF227
 30011 11e7 01       		.byte	0x1
 30012 11e8 F303     		.2byte	0x3f3
 30013 11ea F0120000 		.4byte	0x12f0
 30014 11ee 03       		.uleb128 0x3
 30015 11ef 91       		.byte	0x91
 30016 11f0 A47C     		.sleb128 -476
 30017 11f2 23       		.uleb128 0x23
 30018 11f3 5D040000 		.4byte	.LASF228
 30019 11f7 01       		.byte	0x1
 30020 11f8 0F04     		.2byte	0x40f
 30021 11fa F0120000 		.4byte	0x12f0
 30022 11fe 03       		.uleb128 0x3
 30023 11ff 91       		.byte	0x91
 30024 1200 CC7B     		.sleb128 -564
 30025 1202 23       		.uleb128 0x23
 30026 1203 C00D0000 		.4byte	.LASF229
 30027 1207 01       		.byte	0x1
 30028 1208 2B04     		.2byte	0x42b
 30029 120a F0120000 		.4byte	0x12f0
 30030 120e 03       		.uleb128 0x3
 30031 120f 91       		.byte	0x91
 30032 1210 F47A     		.sleb128 -652
 30033 1212 23       		.uleb128 0x23
 30034 1213 1E090000 		.4byte	.LASF231
 30035 1217 01       		.byte	0x1
 30036 1218 4804     		.2byte	0x448
 30037 121a 00130000 		.4byte	0x1300
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 653


 30038 121e 03       		.uleb128 0x3
 30039 121f 91       		.byte	0x91
 30040 1220 A078     		.sleb128 -992
 30041 1222 23       		.uleb128 0x23
 30042 1223 DD150000 		.4byte	.LASF252
 30043 1227 01       		.byte	0x1
 30044 1228 6504     		.2byte	0x465
 30045 122a 10130000 		.4byte	0x1310
 30046 122e 03       		.uleb128 0x3
 30047 122f 91       		.byte	0x91
 30048 1230 A877     		.sleb128 -1112
 30049 1232 23       		.uleb128 0x23
 30050 1233 20000000 		.4byte	.LASF253
 30051 1237 01       		.byte	0x1
 30052 1238 6804     		.2byte	0x468
 30053 123a 20130000 		.4byte	0x1320
 30054 123e 03       		.uleb128 0x3
 30055 123f 91       		.byte	0x91
 30056 1240 F076     		.sleb128 -1168
 30057 1242 23       		.uleb128 0x23
 30058 1243 A1090000 		.4byte	.LASF233
 30059 1247 01       		.byte	0x1
 30060 1248 7004     		.2byte	0x470
 30061 124a 30130000 		.4byte	0x1330
 30062 124e 03       		.uleb128 0x3
 30063 124f 91       		.byte	0x91
 30064 1250 C076     		.sleb128 -1216
 30065 1252 23       		.uleb128 0x23
 30066 1253 96140000 		.4byte	.LASF230
 30067 1257 01       		.byte	0x1
 30068 1258 7F04     		.2byte	0x47f
 30069 125a 510C0000 		.4byte	0xc51
 30070 125e 03       		.uleb128 0x3
 30071 125f 91       		.byte	0x91
 30072 1260 A076     		.sleb128 -1248
 30073 1262 23       		.uleb128 0x23
 30074 1263 8D0E0000 		.4byte	.LASF254
 30075 1267 01       		.byte	0x1
 30076 1268 8004     		.2byte	0x480
 30077 126a 40130000 		.4byte	0x1340
 30078 126e 03       		.uleb128 0x3
 30079 126f 91       		.byte	0x91
 30080 1270 9476     		.sleb128 -1260
 30081 1272 23       		.uleb128 0x23
 30082 1273 AA0D0000 		.4byte	.LASF255
 30083 1277 01       		.byte	0x1
 30084 1278 8104     		.2byte	0x481
 30085 127a 50130000 		.4byte	0x1350
 30086 127e 03       		.uleb128 0x3
 30087 127f 91       		.byte	0x91
 30088 1280 8076     		.sleb128 -1280
 30089 1282 23       		.uleb128 0x23
 30090 1283 AC0F0000 		.4byte	.LASF256
 30091 1287 01       		.byte	0x1
 30092 1288 8204     		.2byte	0x482
 30093 128a 97000000 		.4byte	0x97
 30094 128e 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 654


 30095 128f 91       		.byte	0x91
 30096 1290 63       		.sleb128 -29
 30097 1291 23       		.uleb128 0x23
 30098 1292 220C0000 		.4byte	.LASF232
 30099 1296 01       		.byte	0x1
 30100 1297 8B04     		.2byte	0x48b
 30101 1299 F0120000 		.4byte	0x12f0
 30102 129d 03       		.uleb128 0x3
 30103 129e 91       		.byte	0x91
 30104 129f A875     		.sleb128 -1368
 30105 12a1 23       		.uleb128 0x23
 30106 12a2 04160000 		.4byte	.LASF257
 30107 12a6 01       		.byte	0x1
 30108 12a7 9604     		.2byte	0x496
 30109 12a9 F0120000 		.4byte	0x12f0
 30110 12ad 03       		.uleb128 0x3
 30111 12ae 91       		.byte	0x91
 30112 12af D074     		.sleb128 -1456
 30113 12b1 1E       		.uleb128 0x1e
 30114 12b2 A2180000 		.4byte	.LBB22
 30115 12b6 86000000 		.4byte	.LBE22-.LBB22
 30116 12ba 26       		.uleb128 0x26
 30117 12bb 69647800 		.ascii	"idx\000"
 30118 12bf 01       		.byte	0x1
 30119 12c0 FF04     		.2byte	0x4ff
 30120 12c2 97000000 		.4byte	0x97
 30121 12c6 02       		.uleb128 0x2
 30122 12c7 91       		.byte	0x91
 30123 12c8 67       		.sleb128 -25
 30124 12c9 23       		.uleb128 0x23
 30125 12ca 71060000 		.4byte	.LASF258
 30126 12ce 01       		.byte	0x1
 30127 12cf FF04     		.2byte	0x4ff
 30128 12d1 97000000 		.4byte	0x97
 30129 12d5 02       		.uleb128 0x2
 30130 12d6 91       		.byte	0x91
 30131 12d7 66       		.sleb128 -26
 30132 12d8 00       		.byte	0
 30133 12d9 00       		.byte	0
 30134 12da 07       		.uleb128 0x7
 30135 12db 04       		.byte	0x4
 30136 12dc 5C0B0000 		.4byte	0xb5c
 30137 12e0 09       		.uleb128 0x9
 30138 12e1 CF100000 		.4byte	0x10cf
 30139 12e5 F0120000 		.4byte	0x12f0
 30140 12e9 0A       		.uleb128 0xa
 30141 12ea 18010000 		.4byte	0x118
 30142 12ee 54       		.byte	0x54
 30143 12ef 00       		.byte	0
 30144 12f0 09       		.uleb128 0x9
 30145 12f1 97000000 		.4byte	0x97
 30146 12f5 00130000 		.4byte	0x1300
 30147 12f9 0A       		.uleb128 0xa
 30148 12fa 18010000 		.4byte	0x118
 30149 12fe 54       		.byte	0x54
 30150 12ff 00       		.byte	0
 30151 1300 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 655


 30152 1301 25010000 		.4byte	0x125
 30153 1305 10130000 		.4byte	0x1310
 30154 1309 0A       		.uleb128 0xa
 30155 130a 18010000 		.4byte	0x118
 30156 130e 54       		.byte	0x54
 30157 130f 00       		.byte	0
 30158 1310 09       		.uleb128 0x9
 30159 1311 F9000000 		.4byte	0xf9
 30160 1315 20130000 		.4byte	0x1320
 30161 1319 0A       		.uleb128 0xa
 30162 131a 18010000 		.4byte	0x118
 30163 131e 75       		.byte	0x75
 30164 131f 00       		.byte	0
 30165 1320 09       		.uleb128 0x9
 30166 1321 F9000000 		.4byte	0xf9
 30167 1325 30130000 		.4byte	0x1330
 30168 1329 0A       		.uleb128 0xa
 30169 132a 18010000 		.4byte	0x118
 30170 132e 37       		.byte	0x37
 30171 132f 00       		.byte	0
 30172 1330 09       		.uleb128 0x9
 30173 1331 25010000 		.4byte	0x125
 30174 1335 40130000 		.4byte	0x1340
 30175 1339 0A       		.uleb128 0xa
 30176 133a 18010000 		.4byte	0x118
 30177 133e 0B       		.byte	0xb
 30178 133f 00       		.byte	0
 30179 1340 09       		.uleb128 0x9
 30180 1341 97000000 		.4byte	0x97
 30181 1345 50130000 		.4byte	0x1350
 30182 1349 0A       		.uleb128 0xa
 30183 134a 18010000 		.4byte	0x118
 30184 134e 08       		.byte	0x8
 30185 134f 00       		.byte	0
 30186 1350 09       		.uleb128 0x9
 30187 1351 97000000 		.4byte	0x97
 30188 1355 60130000 		.4byte	0x1360
 30189 1359 0A       		.uleb128 0xa
 30190 135a 18010000 		.4byte	0x118
 30191 135e 11       		.byte	0x11
 30192 135f 00       		.byte	0
 30193 1360 22       		.uleb128 0x22
 30194 1361 F8040000 		.4byte	.LASF259
 30195 1365 01       		.byte	0x1
 30196 1366 1005     		.2byte	0x510
 30197 1368 00000000 		.4byte	.LFB69
 30198 136c 28140000 		.4byte	.LFE69-.LFB69
 30199 1370 01       		.uleb128 0x1
 30200 1371 9C       		.byte	0x9c
 30201 1372 02140000 		.4byte	0x1402
 30202 1376 25       		.uleb128 0x25
 30203 1377 29080000 		.4byte	.LASF249
 30204 137b 01       		.byte	0x1
 30205 137c 1005     		.2byte	0x510
 30206 137e A3000000 		.4byte	0xa3
 30207 1382 02       		.uleb128 0x2
 30208 1383 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 656


 30209 1384 56       		.sleb128 -42
 30210 1385 26       		.uleb128 0x26
 30211 1386 6900     		.ascii	"i\000"
 30212 1388 01       		.byte	0x1
 30213 1389 1205     		.2byte	0x512
 30214 138b 97000000 		.4byte	0x97
 30215 138f 02       		.uleb128 0x2
 30216 1390 91       		.byte	0x91
 30217 1391 67       		.sleb128 -25
 30218 1392 26       		.uleb128 0x26
 30219 1393 6A00     		.ascii	"j\000"
 30220 1395 01       		.byte	0x1
 30221 1396 1205     		.2byte	0x512
 30222 1398 97000000 		.4byte	0x97
 30223 139c 02       		.uleb128 0x2
 30224 139d 91       		.byte	0x91
 30225 139e 66       		.sleb128 -26
 30226 139f 23       		.uleb128 0x23
 30227 13a0 DB0D0000 		.4byte	.LASF260
 30228 13a4 01       		.byte	0x1
 30229 13a5 1305     		.2byte	0x513
 30230 13a7 97000000 		.4byte	0x97
 30231 13ab 02       		.uleb128 0x2
 30232 13ac 91       		.byte	0x91
 30233 13ad 62       		.sleb128 -30
 30234 13ae 23       		.uleb128 0x23
 30235 13af 7E140000 		.4byte	.LASF239
 30236 13b3 01       		.byte	0x1
 30237 13b4 1405     		.2byte	0x514
 30238 13b6 EB000000 		.4byte	0xeb
 30239 13ba 02       		.uleb128 0x2
 30240 13bb 91       		.byte	0x91
 30241 13bc 5C       		.sleb128 -36
 30242 13bd 23       		.uleb128 0x23
 30243 13be D1040000 		.4byte	.LASF261
 30244 13c2 01       		.byte	0x1
 30245 13c3 1405     		.2byte	0x514
 30246 13c5 EB000000 		.4byte	0xeb
 30247 13c9 02       		.uleb128 0x2
 30248 13ca 91       		.byte	0x91
 30249 13cb 58       		.sleb128 -40
 30250 13cc 23       		.uleb128 0x23
 30251 13cd 330F0000 		.4byte	.LASF244
 30252 13d1 01       		.byte	0x1
 30253 13d2 1605     		.2byte	0x516
 30254 13d4 97000000 		.4byte	0x97
 30255 13d8 02       		.uleb128 0x2
 30256 13d9 91       		.byte	0x91
 30257 13da 64       		.sleb128 -28
 30258 13db 23       		.uleb128 0x23
 30259 13dc 76010000 		.4byte	.LASF245
 30260 13e0 01       		.byte	0x1
 30261 13e1 1705     		.2byte	0x517
 30262 13e3 97000000 		.4byte	0x97
 30263 13e7 02       		.uleb128 0x2
 30264 13e8 91       		.byte	0x91
 30265 13e9 63       		.sleb128 -29
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 657


 30266 13ea 1E       		.uleb128 0x1e
 30267 13eb BC0A0000 		.4byte	.LBB23
 30268 13ef 26000000 		.4byte	.LBE23-.LBB23
 30269 13f3 26       		.uleb128 0x26
 30270 13f4 6900     		.ascii	"i\000"
 30271 13f6 01       		.byte	0x1
 30272 13f7 BE05     		.2byte	0x5be
 30273 13f9 97000000 		.4byte	0x97
 30274 13fd 02       		.uleb128 0x2
 30275 13fe 91       		.byte	0x91
 30276 13ff 65       		.sleb128 -27
 30277 1400 00       		.byte	0
 30278 1401 00       		.byte	0
 30279 1402 22       		.uleb128 0x22
 30280 1403 2C0A0000 		.4byte	.LASF262
 30281 1407 01       		.byte	0x1
 30282 1408 6A06     		.2byte	0x66a
 30283 140a 00000000 		.4byte	.LFB70
 30284 140e F40D0000 		.4byte	.LFE70-.LFB70
 30285 1412 01       		.uleb128 0x1
 30286 1413 9C       		.byte	0x9c
 30287 1414 91150000 		.4byte	0x1591
 30288 1418 25       		.uleb128 0x25
 30289 1419 29080000 		.4byte	.LASF249
 30290 141d 01       		.byte	0x1
 30291 141e 6A06     		.2byte	0x66a
 30292 1420 A3000000 		.4byte	0xa3
 30293 1424 03       		.uleb128 0x3
 30294 1425 91       		.byte	0x91
 30295 1426 CE72     		.sleb128 -1714
 30296 1428 23       		.uleb128 0x23
 30297 1429 23070000 		.4byte	.LASF234
 30298 142d 01       		.byte	0x1
 30299 142e 6D06     		.2byte	0x66d
 30300 1430 91150000 		.4byte	0x1591
 30301 1434 03       		.uleb128 0x3
 30302 1435 91       		.byte	0x91
 30303 1436 DC74     		.sleb128 -1444
 30304 1438 23       		.uleb128 0x23
 30305 1439 2F130000 		.4byte	.LASF263
 30306 143d 01       		.byte	0x1
 30307 143e 7406     		.2byte	0x674
 30308 1440 A3000000 		.4byte	0xa3
 30309 1444 02       		.uleb128 0x2
 30310 1445 91       		.byte	0x91
 30311 1446 62       		.sleb128 -30
 30312 1447 23       		.uleb128 0x23
 30313 1448 85060000 		.4byte	.LASF264
 30314 144c 01       		.byte	0x1
 30315 144d 7506     		.2byte	0x675
 30316 144f A3000000 		.4byte	0xa3
 30317 1453 02       		.uleb128 0x2
 30318 1454 91       		.byte	0x91
 30319 1455 6E       		.sleb128 -18
 30320 1456 23       		.uleb128 0x23
 30321 1457 4D0A0000 		.4byte	.LASF265
 30322 145b 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 658


 30323 145c 7606     		.2byte	0x676
 30324 145e A3000000 		.4byte	0xa3
 30325 1462 02       		.uleb128 0x2
 30326 1463 91       		.byte	0x91
 30327 1464 60       		.sleb128 -32
 30328 1465 23       		.uleb128 0x23
 30329 1466 CC090000 		.4byte	.LASF266
 30330 146a 01       		.byte	0x1
 30331 146b 7706     		.2byte	0x677
 30332 146d A3000000 		.4byte	0xa3
 30333 1471 02       		.uleb128 0x2
 30334 1472 91       		.byte	0x91
 30335 1473 5E       		.sleb128 -34
 30336 1474 26       		.uleb128 0x26
 30337 1475 6900     		.ascii	"i\000"
 30338 1477 01       		.byte	0x1
 30339 1478 7F06     		.2byte	0x67f
 30340 147a A3000000 		.4byte	0xa3
 30341 147e 02       		.uleb128 0x2
 30342 147f 91       		.byte	0x91
 30343 1480 6C       		.sleb128 -20
 30344 1481 26       		.uleb128 0x26
 30345 1482 6A00     		.ascii	"j\000"
 30346 1484 01       		.byte	0x1
 30347 1485 7F06     		.2byte	0x67f
 30348 1487 A3000000 		.4byte	0xa3
 30349 148b 02       		.uleb128 0x2
 30350 148c 91       		.byte	0x91
 30351 148d 6A       		.sleb128 -22
 30352 148e 26       		.uleb128 0x26
 30353 148f 6B00     		.ascii	"k\000"
 30354 1491 01       		.byte	0x1
 30355 1492 7F06     		.2byte	0x67f
 30356 1494 A3000000 		.4byte	0xa3
 30357 1498 02       		.uleb128 0x2
 30358 1499 91       		.byte	0x91
 30359 149a 68       		.sleb128 -24
 30360 149b 26       		.uleb128 0x26
 30361 149c 6800     		.ascii	"h\000"
 30362 149e 01       		.byte	0x1
 30363 149f 7F06     		.2byte	0x67f
 30364 14a1 A3000000 		.4byte	0xa3
 30365 14a5 02       		.uleb128 0x2
 30366 14a6 91       		.byte	0x91
 30367 14a7 66       		.sleb128 -26
 30368 14a8 23       		.uleb128 0x23
 30369 14a9 7A060000 		.4byte	.LASF267
 30370 14ad 01       		.byte	0x1
 30371 14ae 8006     		.2byte	0x680
 30372 14b0 A3000000 		.4byte	0xa3
 30373 14b4 02       		.uleb128 0x2
 30374 14b5 91       		.byte	0x91
 30375 14b6 5C       		.sleb128 -36
 30376 14b7 23       		.uleb128 0x23
 30377 14b8 480F0000 		.4byte	.LASF268
 30378 14bc 01       		.byte	0x1
 30379 14bd 8306     		.2byte	0x683
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 659


 30380 14bf 30010000 		.4byte	0x130
 30381 14c3 03       		.uleb128 0x3
 30382 14c4 91       		.byte	0x91
 30383 14c5 C074     		.sleb128 -1472
 30384 14c7 23       		.uleb128 0x23
 30385 14c8 F6120000 		.4byte	.LASF269
 30386 14cc 01       		.byte	0x1
 30387 14cd 8406     		.2byte	0x684
 30388 14cf A2150000 		.4byte	0x15a2
 30389 14d3 03       		.uleb128 0x3
 30390 14d4 91       		.byte	0x91
 30391 14d5 B474     		.sleb128 -1484
 30392 14d7 23       		.uleb128 0x23
 30393 14d8 B7080000 		.4byte	.LASF270
 30394 14dc 01       		.byte	0x1
 30395 14dd 8506     		.2byte	0x685
 30396 14df B2150000 		.4byte	0x15b2
 30397 14e3 03       		.uleb128 0x3
 30398 14e4 91       		.byte	0x91
 30399 14e5 A074     		.sleb128 -1504
 30400 14e7 23       		.uleb128 0x23
 30401 14e8 19000000 		.4byte	.LASF271
 30402 14ec 01       		.byte	0x1
 30403 14ed 8606     		.2byte	0x686
 30404 14ef C2150000 		.4byte	0x15c2
 30405 14f3 03       		.uleb128 0x3
 30406 14f4 91       		.byte	0x91
 30407 14f5 9074     		.sleb128 -1520
 30408 14f7 23       		.uleb128 0x23
 30409 14f8 25100000 		.4byte	.LASF272
 30410 14fc 01       		.byte	0x1
 30411 14fd 8706     		.2byte	0x687
 30412 14ff D2150000 		.4byte	0x15d2
 30413 1503 03       		.uleb128 0x3
 30414 1504 91       		.byte	0x91
 30415 1505 E473     		.sleb128 -1564
 30416 1507 23       		.uleb128 0x23
 30417 1508 21030000 		.4byte	.LASF273
 30418 150c 01       		.byte	0x1
 30419 150d 8806     		.2byte	0x688
 30420 150f 30010000 		.4byte	0x130
 30421 1513 03       		.uleb128 0x3
 30422 1514 91       		.byte	0x91
 30423 1515 C873     		.sleb128 -1592
 30424 1517 23       		.uleb128 0x23
 30425 1518 E7010000 		.4byte	.LASF274
 30426 151c 01       		.byte	0x1
 30427 151d 8B06     		.2byte	0x68b
 30428 151f 97000000 		.4byte	0x97
 30429 1523 02       		.uleb128 0x2
 30430 1524 91       		.byte	0x91
 30431 1525 5B       		.sleb128 -37
 30432 1526 23       		.uleb128 0x23
 30433 1527 0B060000 		.4byte	.LASF275
 30434 152b 01       		.byte	0x1
 30435 152c 8C06     		.2byte	0x68c
 30436 152e 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 660


 30437 1532 02       		.uleb128 0x2
 30438 1533 91       		.byte	0x91
 30439 1534 5A       		.sleb128 -38
 30440 1535 23       		.uleb128 0x23
 30441 1536 9E120000 		.4byte	.LASF276
 30442 153a 01       		.byte	0x1
 30443 153b 8D06     		.2byte	0x68d
 30444 153d 97000000 		.4byte	0x97
 30445 1541 02       		.uleb128 0x2
 30446 1542 91       		.byte	0x91
 30447 1543 59       		.sleb128 -39
 30448 1544 23       		.uleb128 0x23
 30449 1545 1D130000 		.4byte	.LASF277
 30450 1549 01       		.byte	0x1
 30451 154a 8E06     		.2byte	0x68e
 30452 154c 97000000 		.4byte	0x97
 30453 1550 02       		.uleb128 0x2
 30454 1551 91       		.byte	0x91
 30455 1552 58       		.sleb128 -40
 30456 1553 23       		.uleb128 0x23
 30457 1554 19060000 		.4byte	.LASF278
 30458 1558 01       		.byte	0x1
 30459 1559 8F06     		.2byte	0x68f
 30460 155b 97000000 		.4byte	0x97
 30461 155f 02       		.uleb128 0x2
 30462 1560 91       		.byte	0x91
 30463 1561 57       		.sleb128 -41
 30464 1562 23       		.uleb128 0x23
 30465 1563 35010000 		.4byte	.LASF279
 30466 1567 01       		.byte	0x1
 30467 1568 9006     		.2byte	0x690
 30468 156a 97000000 		.4byte	0x97
 30469 156e 02       		.uleb128 0x2
 30470 156f 91       		.byte	0x91
 30471 1570 65       		.sleb128 -27
 30472 1571 23       		.uleb128 0x23
 30473 1572 DD150000 		.4byte	.LASF252
 30474 1576 01       		.byte	0x1
 30475 1577 9206     		.2byte	0x692
 30476 1579 10130000 		.4byte	0x1310
 30477 157d 03       		.uleb128 0x3
 30478 157e 91       		.byte	0x91
 30479 157f D072     		.sleb128 -1712
 30480 1581 23       		.uleb128 0x23
 30481 1582 E5040000 		.4byte	.LASF280
 30482 1586 01       		.byte	0x1
 30483 1587 9306     		.2byte	0x693
 30484 1589 97000000 		.4byte	0x97
 30485 158d 02       		.uleb128 0x2
 30486 158e 91       		.byte	0x91
 30487 158f 56       		.sleb128 -42
 30488 1590 00       		.byte	0
 30489 1591 09       		.uleb128 0x9
 30490 1592 97000000 		.4byte	0x97
 30491 1596 A2150000 		.4byte	0x15a2
 30492 159a 24       		.uleb128 0x24
 30493 159b 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 661


 30494 159f 7805     		.2byte	0x578
 30495 15a1 00       		.byte	0
 30496 15a2 09       		.uleb128 0x9
 30497 15a3 F9000000 		.4byte	0xf9
 30498 15a7 B2150000 		.4byte	0x15b2
 30499 15ab 0A       		.uleb128 0xa
 30500 15ac 18010000 		.4byte	0x118
 30501 15b0 0A       		.byte	0xa
 30502 15b1 00       		.byte	0
 30503 15b2 09       		.uleb128 0x9
 30504 15b3 F9000000 		.4byte	0xf9
 30505 15b7 C2150000 		.4byte	0x15c2
 30506 15bb 0A       		.uleb128 0xa
 30507 15bc 18010000 		.4byte	0x118
 30508 15c0 13       		.byte	0x13
 30509 15c1 00       		.byte	0
 30510 15c2 09       		.uleb128 0x9
 30511 15c3 F9000000 		.4byte	0xf9
 30512 15c7 D2150000 		.4byte	0x15d2
 30513 15cb 0A       		.uleb128 0xa
 30514 15cc 18010000 		.4byte	0x118
 30515 15d0 0F       		.byte	0xf
 30516 15d1 00       		.byte	0
 30517 15d2 09       		.uleb128 0x9
 30518 15d3 F9000000 		.4byte	0xf9
 30519 15d7 E2150000 		.4byte	0x15e2
 30520 15db 0A       		.uleb128 0xa
 30521 15dc 18010000 		.4byte	0x118
 30522 15e0 29       		.byte	0x29
 30523 15e1 00       		.byte	0
 30524 15e2 27       		.uleb128 0x27
 30525 15e3 3B040000 		.4byte	.LASF319
 30526 15e7 01       		.byte	0x1
 30527 15e8 5907     		.2byte	0x759
 30528 15ea 00000000 		.4byte	.LFB71
 30529 15ee 90000000 		.4byte	.LFE71-.LFB71
 30530 15f2 01       		.uleb128 0x1
 30531 15f3 9C       		.byte	0x9c
 30532 15f4 13160000 		.4byte	0x1613
 30533 15f8 26       		.uleb128 0x26
 30534 15f9 6900     		.ascii	"i\000"
 30535 15fb 01       		.byte	0x1
 30536 15fc 5B07     		.2byte	0x75b
 30537 15fe 97000000 		.4byte	0x97
 30538 1602 02       		.uleb128 0x2
 30539 1603 91       		.byte	0x91
 30540 1604 6F       		.sleb128 -17
 30541 1605 26       		.uleb128 0x26
 30542 1606 6A00     		.ascii	"j\000"
 30543 1608 01       		.byte	0x1
 30544 1609 5B07     		.2byte	0x75b
 30545 160b 97000000 		.4byte	0x97
 30546 160f 02       		.uleb128 0x2
 30547 1610 91       		.byte	0x91
 30548 1611 6E       		.sleb128 -18
 30549 1612 00       		.byte	0
 30550 1613 22       		.uleb128 0x22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 662


 30551 1614 55010000 		.4byte	.LASF281
 30552 1618 01       		.byte	0x1
 30553 1619 6C07     		.2byte	0x76c
 30554 161b 00000000 		.4byte	.LFB72
 30555 161f 78210000 		.4byte	.LFE72-.LFB72
 30556 1623 01       		.uleb128 0x1
 30557 1624 9C       		.byte	0x9c
 30558 1625 CC160000 		.4byte	0x16cc
 30559 1629 25       		.uleb128 0x25
 30560 162a 520F0000 		.4byte	.LASF282
 30561 162e 01       		.byte	0x1
 30562 162f 6C07     		.2byte	0x76c
 30563 1631 1F010000 		.4byte	0x11f
 30564 1635 03       		.uleb128 0x3
 30565 1636 91       		.byte	0x91
 30566 1637 D47E     		.sleb128 -172
 30567 1639 26       		.uleb128 0x26
 30568 163a 6900     		.ascii	"i\000"
 30569 163c 01       		.byte	0x1
 30570 163d 6E07     		.2byte	0x76e
 30571 163f 73000000 		.4byte	0x73
 30572 1643 02       		.uleb128 0x2
 30573 1644 91       		.byte	0x91
 30574 1645 54       		.sleb128 -44
 30575 1646 23       		.uleb128 0x23
 30576 1647 73040000 		.4byte	.LASF251
 30577 164b 01       		.byte	0x1
 30578 164c 7007     		.2byte	0x770
 30579 164e DA120000 		.4byte	0x12da
 30580 1652 02       		.uleb128 0x2
 30581 1653 91       		.byte	0x91
 30582 1654 48       		.sleb128 -56
 30583 1655 1E       		.uleb128 0x1e
 30584 1656 1C000000 		.4byte	.LBB24
 30585 165a 18210000 		.4byte	.LBE24-.LBB24
 30586 165e 26       		.uleb128 0x26
 30587 165f 73747200 		.ascii	"str\000"
 30588 1663 01       		.byte	0x1
 30589 1664 7307     		.2byte	0x773
 30590 1666 CC160000 		.4byte	0x16cc
 30591 166a 03       		.uleb128 0x3
 30592 166b 91       		.byte	0x91
 30593 166c D87E     		.sleb128 -168
 30594 166e 26       		.uleb128 0x26
 30595 166f 6A00     		.ascii	"j\000"
 30596 1671 01       		.byte	0x1
 30597 1672 2F09     		.2byte	0x92f
 30598 1674 73000000 		.4byte	0x73
 30599 1678 02       		.uleb128 0x2
 30600 1679 91       		.byte	0x91
 30601 167a 4C       		.sleb128 -52
 30602 167b 1E       		.uleb128 0x1e
 30603 167c FC020000 		.4byte	.LBB25
 30604 1680 06140000 		.4byte	.LBE25-.LBB25
 30605 1684 26       		.uleb128 0x26
 30606 1685 6B00     		.ascii	"k\000"
 30607 1687 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 663


 30608 1688 A707     		.2byte	0x7a7
 30609 168a 97000000 		.4byte	0x97
 30610 168e 02       		.uleb128 0x2
 30611 168f 91       		.byte	0x91
 30612 1690 53       		.sleb128 -45
 30613 1691 1E       		.uleb128 0x1e
 30614 1692 4C030000 		.4byte	.LBB26
 30615 1696 9A130000 		.4byte	.LBE26-.LBB26
 30616 169a 23       		.uleb128 0x23
 30617 169b 330F0000 		.4byte	.LASF244
 30618 169f 01       		.byte	0x1
 30619 16a0 A907     		.2byte	0x7a9
 30620 16a2 97000000 		.4byte	0x97
 30621 16a6 02       		.uleb128 0x2
 30622 16a7 91       		.byte	0x91
 30623 16a8 47       		.sleb128 -57
 30624 16a9 26       		.uleb128 0x26
 30625 16aa 4D4F5400 		.ascii	"MOT\000"
 30626 16ae 01       		.byte	0x1
 30627 16af AA07     		.2byte	0x7aa
 30628 16b1 DC160000 		.4byte	0x16dc
 30629 16b5 02       		.uleb128 0x2
 30630 16b6 91       		.byte	0x91
 30631 16b7 40       		.sleb128 -64
 30632 16b8 23       		.uleb128 0x23
 30633 16b9 45150000 		.4byte	.LASF283
 30634 16bd 01       		.byte	0x1
 30635 16be AB07     		.2byte	0x7ab
 30636 16c0 97000000 		.4byte	0x97
 30637 16c4 03       		.uleb128 0x3
 30638 16c5 91       		.byte	0x91
 30639 16c6 BF7F     		.sleb128 -65
 30640 16c8 00       		.byte	0
 30641 16c9 00       		.byte	0
 30642 16ca 00       		.byte	0
 30643 16cb 00       		.byte	0
 30644 16cc 09       		.uleb128 0x9
 30645 16cd F9000000 		.4byte	0xf9
 30646 16d1 DC160000 		.4byte	0x16dc
 30647 16d5 0A       		.uleb128 0xa
 30648 16d6 18010000 		.4byte	0x118
 30649 16da 63       		.byte	0x63
 30650 16db 00       		.byte	0
 30651 16dc 07       		.uleb128 0x7
 30652 16dd 04       		.byte	0x4
 30653 16de 20060000 		.4byte	0x620
 30654 16e2 22       		.uleb128 0x22
 30655 16e3 58100000 		.4byte	.LASF284
 30656 16e7 01       		.byte	0x1
 30657 16e8 5909     		.2byte	0x959
 30658 16ea 00000000 		.4byte	.LFB73
 30659 16ee 90040000 		.4byte	.LFE73-.LFB73
 30660 16f2 01       		.uleb128 0x1
 30661 16f3 9C       		.byte	0x9c
 30662 16f4 72170000 		.4byte	0x1772
 30663 16f8 25       		.uleb128 0x25
 30664 16f9 520F0000 		.4byte	.LASF282
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 664


 30665 16fd 01       		.byte	0x1
 30666 16fe 5909     		.2byte	0x959
 30667 1700 1F010000 		.4byte	0x11f
 30668 1704 03       		.uleb128 0x3
 30669 1705 91       		.byte	0x91
 30670 1706 BC7C     		.sleb128 -452
 30671 1708 26       		.uleb128 0x26
 30672 1709 73747200 		.ascii	"str\000"
 30673 170d 01       		.byte	0x1
 30674 170e 5B09     		.2byte	0x95b
 30675 1710 CC160000 		.4byte	0x16cc
 30676 1714 03       		.uleb128 0x3
 30677 1715 91       		.byte	0x91
 30678 1716 F07E     		.sleb128 -144
 30679 1718 26       		.uleb128 0x26
 30680 1719 6900     		.ascii	"i\000"
 30681 171b 01       		.byte	0x1
 30682 171c 5C09     		.2byte	0x95c
 30683 171e 73000000 		.4byte	0x73
 30684 1722 02       		.uleb128 0x2
 30685 1723 91       		.byte	0x91
 30686 1724 64       		.sleb128 -28
 30687 1725 23       		.uleb128 0x23
 30688 1726 A8050000 		.4byte	.LASF285
 30689 172a 01       		.byte	0x1
 30690 172b 5D09     		.2byte	0x95d
 30691 172d 73000000 		.4byte	0x73
 30692 1731 02       		.uleb128 0x2
 30693 1732 91       		.byte	0x91
 30694 1733 54       		.sleb128 -44
 30695 1734 23       		.uleb128 0x23
 30696 1735 73040000 		.4byte	.LASF251
 30697 1739 01       		.byte	0x1
 30698 173a 5F09     		.2byte	0x95f
 30699 173c DA120000 		.4byte	0x12da
 30700 1740 02       		.uleb128 0x2
 30701 1741 91       		.byte	0x91
 30702 1742 60       		.sleb128 -32
 30703 1743 26       		.uleb128 0x26
 30704 1744 4D4F5400 		.ascii	"MOT\000"
 30705 1748 01       		.byte	0x1
 30706 1749 6009     		.2byte	0x960
 30707 174b DC160000 		.4byte	0x16dc
 30708 174f 02       		.uleb128 0x2
 30709 1750 91       		.byte	0x91
 30710 1751 5C       		.sleb128 -36
 30711 1752 23       		.uleb128 0x23
 30712 1753 45150000 		.4byte	.LASF283
 30713 1757 01       		.byte	0x1
 30714 1758 6109     		.2byte	0x961
 30715 175a 97000000 		.4byte	0x97
 30716 175e 02       		.uleb128 0x2
 30717 175f 91       		.byte	0x91
 30718 1760 5B       		.sleb128 -37
 30719 1761 23       		.uleb128 0x23
 30720 1762 08070000 		.4byte	.LASF286
 30721 1766 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 665


 30722 1767 9909     		.2byte	0x999
 30723 1769 72170000 		.4byte	0x1772
 30724 176d 03       		.uleb128 0x3
 30725 176e 91       		.byte	0x91
 30726 176f C47C     		.sleb128 -444
 30727 1771 00       		.byte	0
 30728 1772 09       		.uleb128 0x9
 30729 1773 F9000000 		.4byte	0xf9
 30730 1777 83170000 		.4byte	0x1783
 30731 177b 24       		.uleb128 0x24
 30732 177c 18010000 		.4byte	0x118
 30733 1780 2B01     		.2byte	0x12b
 30734 1782 00       		.byte	0
 30735 1783 22       		.uleb128 0x22
 30736 1784 E50D0000 		.4byte	.LASF287
 30737 1788 01       		.byte	0x1
 30738 1789 A309     		.2byte	0x9a3
 30739 178b 00000000 		.4byte	.LFB74
 30740 178f 5C020000 		.4byte	.LFE74-.LFB74
 30741 1793 01       		.uleb128 0x1
 30742 1794 9C       		.byte	0x9c
 30743 1795 C9170000 		.4byte	0x17c9
 30744 1799 25       		.uleb128 0x25
 30745 179a 520F0000 		.4byte	.LASF282
 30746 179e 01       		.byte	0x1
 30747 179f A309     		.2byte	0x9a3
 30748 17a1 1F010000 		.4byte	0x11f
 30749 17a5 03       		.uleb128 0x3
 30750 17a6 91       		.byte	0x91
 30751 17a7 CC7E     		.sleb128 -180
 30752 17a9 26       		.uleb128 0x26
 30753 17aa 73747200 		.ascii	"str\000"
 30754 17ae 01       		.byte	0x1
 30755 17af A509     		.2byte	0x9a5
 30756 17b1 C9170000 		.4byte	0x17c9
 30757 17b5 03       		.uleb128 0x3
 30758 17b6 91       		.byte	0x91
 30759 17b7 D47E     		.sleb128 -172
 30760 17b9 23       		.uleb128 0x23
 30761 17ba 73040000 		.4byte	.LASF251
 30762 17be 01       		.byte	0x1
 30763 17bf A709     		.2byte	0x9a7
 30764 17c1 DA120000 		.4byte	0x12da
 30765 17c5 02       		.uleb128 0x2
 30766 17c6 91       		.byte	0x91
 30767 17c7 6C       		.sleb128 -20
 30768 17c8 00       		.byte	0
 30769 17c9 09       		.uleb128 0x9
 30770 17ca F9000000 		.4byte	0xf9
 30771 17ce D9170000 		.4byte	0x17d9
 30772 17d2 0A       		.uleb128 0xa
 30773 17d3 18010000 		.4byte	0x118
 30774 17d7 95       		.byte	0x95
 30775 17d8 00       		.byte	0
 30776 17d9 22       		.uleb128 0x22
 30777 17da C0100000 		.4byte	.LASF288
 30778 17de 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 666


 30779 17df D009     		.2byte	0x9d0
 30780 17e1 00000000 		.4byte	.LFB75
 30781 17e5 7C120000 		.4byte	.LFE75-.LFB75
 30782 17e9 01       		.uleb128 0x1
 30783 17ea 9C       		.byte	0x9c
 30784 17eb 7A180000 		.4byte	0x187a
 30785 17ef 25       		.uleb128 0x25
 30786 17f0 520F0000 		.4byte	.LASF282
 30787 17f4 01       		.byte	0x1
 30788 17f5 D009     		.2byte	0x9d0
 30789 17f7 1F010000 		.4byte	0x11f
 30790 17fb 03       		.uleb128 0x3
 30791 17fc 91       		.byte	0x91
 30792 17fd D47E     		.sleb128 -172
 30793 17ff 26       		.uleb128 0x26
 30794 1800 73747200 		.ascii	"str\000"
 30795 1804 01       		.byte	0x1
 30796 1805 D209     		.2byte	0x9d2
 30797 1807 CC160000 		.4byte	0x16cc
 30798 180b 03       		.uleb128 0x3
 30799 180c 91       		.byte	0x91
 30800 180d DC7E     		.sleb128 -164
 30801 180f 26       		.uleb128 0x26
 30802 1810 6900     		.ascii	"i\000"
 30803 1812 01       		.byte	0x1
 30804 1813 D309     		.2byte	0x9d3
 30805 1815 73000000 		.4byte	0x73
 30806 1819 02       		.uleb128 0x2
 30807 181a 91       		.byte	0x91
 30808 181b 54       		.sleb128 -44
 30809 181c 23       		.uleb128 0x23
 30810 181d 73040000 		.4byte	.LASF251
 30811 1821 01       		.byte	0x1
 30812 1822 D709     		.2byte	0x9d7
 30813 1824 DA120000 		.4byte	0x12da
 30814 1828 02       		.uleb128 0x2
 30815 1829 91       		.byte	0x91
 30816 182a 4C       		.sleb128 -52
 30817 182b 1E       		.uleb128 0x1e
 30818 182c 08010000 		.4byte	.LBB27
 30819 1830 D40C0000 		.4byte	.LBE27-.LBB27
 30820 1834 26       		.uleb128 0x26
 30821 1835 6B00     		.ascii	"k\000"
 30822 1837 01       		.byte	0x1
 30823 1838 EC09     		.2byte	0x9ec
 30824 183a 97000000 		.4byte	0x97
 30825 183e 02       		.uleb128 0x2
 30826 183f 91       		.byte	0x91
 30827 1840 53       		.sleb128 -45
 30828 1841 1E       		.uleb128 0x1e
 30829 1842 12010000 		.4byte	.LBB28
 30830 1846 AE0C0000 		.4byte	.LBE28-.LBB28
 30831 184a 23       		.uleb128 0x23
 30832 184b 330F0000 		.4byte	.LASF244
 30833 184f 01       		.byte	0x1
 30834 1850 EE09     		.2byte	0x9ee
 30835 1852 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 667


 30836 1856 02       		.uleb128 0x2
 30837 1857 91       		.byte	0x91
 30838 1858 4B       		.sleb128 -53
 30839 1859 26       		.uleb128 0x26
 30840 185a 4D4F5400 		.ascii	"MOT\000"
 30841 185e 01       		.byte	0x1
 30842 185f EF09     		.2byte	0x9ef
 30843 1861 DC160000 		.4byte	0x16dc
 30844 1865 02       		.uleb128 0x2
 30845 1866 91       		.byte	0x91
 30846 1867 44       		.sleb128 -60
 30847 1868 23       		.uleb128 0x23
 30848 1869 45150000 		.4byte	.LASF283
 30849 186d 01       		.byte	0x1
 30850 186e F009     		.2byte	0x9f0
 30851 1870 97000000 		.4byte	0x97
 30852 1874 02       		.uleb128 0x2
 30853 1875 91       		.byte	0x91
 30854 1876 43       		.sleb128 -61
 30855 1877 00       		.byte	0
 30856 1878 00       		.byte	0
 30857 1879 00       		.byte	0
 30858 187a 22       		.uleb128 0x22
 30859 187b D10C0000 		.4byte	.LASF289
 30860 187f 01       		.byte	0x1
 30861 1880 D80A     		.2byte	0xad8
 30862 1882 00000000 		.4byte	.LFB76
 30863 1886 DC000000 		.4byte	.LFE76-.LFB76
 30864 188a 01       		.uleb128 0x1
 30865 188b 9C       		.byte	0x9c
 30866 188c BE180000 		.4byte	0x18be
 30867 1890 25       		.uleb128 0x25
 30868 1891 520F0000 		.4byte	.LASF282
 30869 1895 01       		.byte	0x1
 30870 1896 D80A     		.2byte	0xad8
 30871 1898 1F010000 		.4byte	0x11f
 30872 189c 03       		.uleb128 0x3
 30873 189d 91       		.byte	0x91
 30874 189e DC7E     		.sleb128 -164
 30875 18a0 26       		.uleb128 0x26
 30876 18a1 73747200 		.ascii	"str\000"
 30877 18a5 01       		.byte	0x1
 30878 18a6 DA0A     		.2byte	0xada
 30879 18a8 BE180000 		.4byte	0x18be
 30880 18ac 03       		.uleb128 0x3
 30881 18ad 91       		.byte	0x91
 30882 18ae E07E     		.sleb128 -160
 30883 18b0 26       		.uleb128 0x26
 30884 18b1 6900     		.ascii	"i\000"
 30885 18b3 01       		.byte	0x1
 30886 18b4 DB0A     		.2byte	0xadb
 30887 18b6 73000000 		.4byte	0x73
 30888 18ba 02       		.uleb128 0x2
 30889 18bb 91       		.byte	0x91
 30890 18bc 6C       		.sleb128 -20
 30891 18bd 00       		.byte	0
 30892 18be 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 668


 30893 18bf F9000000 		.4byte	0xf9
 30894 18c3 CE180000 		.4byte	0x18ce
 30895 18c7 0A       		.uleb128 0xa
 30896 18c8 18010000 		.4byte	0x118
 30897 18cc 8B       		.byte	0x8b
 30898 18cd 00       		.byte	0
 30899 18ce 22       		.uleb128 0x22
 30900 18cf 5E0F0000 		.4byte	.LASF290
 30901 18d3 01       		.byte	0x1
 30902 18d4 F00A     		.2byte	0xaf0
 30903 18d6 00000000 		.4byte	.LFB77
 30904 18da 80010000 		.4byte	.LFE77-.LFB77
 30905 18de 01       		.uleb128 0x1
 30906 18df 9C       		.byte	0x9c
 30907 18e0 12190000 		.4byte	0x1912
 30908 18e4 25       		.uleb128 0x25
 30909 18e5 520F0000 		.4byte	.LASF282
 30910 18e9 01       		.byte	0x1
 30911 18ea F00A     		.2byte	0xaf0
 30912 18ec 1F010000 		.4byte	0x11f
 30913 18f0 03       		.uleb128 0x3
 30914 18f1 91       		.byte	0x91
 30915 18f2 E47E     		.sleb128 -156
 30916 18f4 26       		.uleb128 0x26
 30917 18f5 73747200 		.ascii	"str\000"
 30918 18f9 01       		.byte	0x1
 30919 18fa F20A     		.2byte	0xaf2
 30920 18fc 12190000 		.4byte	0x1912
 30921 1900 03       		.uleb128 0x3
 30922 1901 91       		.byte	0x91
 30923 1902 EC7E     		.sleb128 -148
 30924 1904 26       		.uleb128 0x26
 30925 1905 6900     		.ascii	"i\000"
 30926 1907 01       		.byte	0x1
 30927 1908 F30A     		.2byte	0xaf3
 30928 190a 73000000 		.4byte	0x73
 30929 190e 02       		.uleb128 0x2
 30930 190f 91       		.byte	0x91
 30931 1910 64       		.sleb128 -28
 30932 1911 00       		.byte	0
 30933 1912 09       		.uleb128 0x9
 30934 1913 F9000000 		.4byte	0xf9
 30935 1917 22190000 		.4byte	0x1922
 30936 191b 0A       		.uleb128 0xa
 30937 191c 18010000 		.4byte	0x118
 30938 1920 77       		.byte	0x77
 30939 1921 00       		.byte	0
 30940 1922 28       		.uleb128 0x28
 30941 1923 F2100000 		.4byte	.LASF291
 30942 1927 01       		.byte	0x1
 30943 1928 1C0B     		.2byte	0xb1c
 30944 192a 00000000 		.4byte	.LFB78
 30945 192e 28000000 		.4byte	.LFE78-.LFB78
 30946 1932 01       		.uleb128 0x1
 30947 1933 9C       		.byte	0x9c
 30948 1934 48190000 		.4byte	0x1948
 30949 1938 25       		.uleb128 0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 669


 30950 1939 520F0000 		.4byte	.LASF282
 30951 193d 01       		.byte	0x1
 30952 193e 1C0B     		.2byte	0xb1c
 30953 1940 1F010000 		.4byte	0x11f
 30954 1944 02       		.uleb128 0x2
 30955 1945 91       		.byte	0x91
 30956 1946 6C       		.sleb128 -20
 30957 1947 00       		.byte	0
 30958 1948 22       		.uleb128 0x22
 30959 1949 A2040000 		.4byte	.LASF292
 30960 194d 01       		.byte	0x1
 30961 194e 270B     		.2byte	0xb27
 30962 1950 00000000 		.4byte	.LFB79
 30963 1954 F0000000 		.4byte	.LFE79-.LFB79
 30964 1958 01       		.uleb128 0x1
 30965 1959 9C       		.byte	0x9c
 30966 195a B7190000 		.4byte	0x19b7
 30967 195e 25       		.uleb128 0x25
 30968 195f 520F0000 		.4byte	.LASF282
 30969 1963 01       		.byte	0x1
 30970 1964 270B     		.2byte	0xb27
 30971 1966 1F010000 		.4byte	0x11f
 30972 196a 03       		.uleb128 0x3
 30973 196b 91       		.byte	0x91
 30974 196c FC7E     		.sleb128 -132
 30975 196e 23       		.uleb128 0x23
 30976 196f 11030000 		.4byte	.LASF293
 30977 1973 01       		.byte	0x1
 30978 1974 290B     		.2byte	0xb29
 30979 1976 CC160000 		.4byte	0x16cc
 30980 197a 03       		.uleb128 0x3
 30981 197b 91       		.byte	0x91
 30982 197c 847F     		.sleb128 -124
 30983 197e 23       		.uleb128 0x23
 30984 197f 10020000 		.4byte	.LASF294
 30985 1983 01       		.byte	0x1
 30986 1984 2A0B     		.2byte	0xb2a
 30987 1986 A3000000 		.4byte	0xa3
 30988 198a 02       		.uleb128 0x2
 30989 198b 91       		.byte	0x91
 30990 198c 6E       		.sleb128 -18
 30991 198d 23       		.uleb128 0x23
 30992 198e E7000000 		.4byte	.LASF295
 30993 1992 01       		.byte	0x1
 30994 1993 2B0B     		.2byte	0xb2b
 30995 1995 EB000000 		.4byte	0xeb
 30996 1999 05       		.uleb128 0x5
 30997 199a 03       		.byte	0x3
 30998 199b 00000000 		.4byte	h_time.11247
 30999 199f 1E       		.uleb128 0x1e
 31000 19a0 26000000 		.4byte	.LBB29
 31001 19a4 A4000000 		.4byte	.LBE29-.LBB29
 31002 19a8 26       		.uleb128 0x26
 31003 19a9 6900     		.ascii	"i\000"
 31004 19ab 01       		.byte	0x1
 31005 19ac 300B     		.2byte	0xb30
 31006 19ae 73000000 		.4byte	0x73
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 670


 31007 19b2 02       		.uleb128 0x2
 31008 19b3 91       		.byte	0x91
 31009 19b4 68       		.sleb128 -24
 31010 19b5 00       		.byte	0
 31011 19b6 00       		.byte	0
 31012 19b7 22       		.uleb128 0x22
 31013 19b8 67160000 		.4byte	.LASF296
 31014 19bc 01       		.byte	0x1
 31015 19bd 480B     		.2byte	0xb48
 31016 19bf 00000000 		.4byte	.LFB80
 31017 19c3 74030000 		.4byte	.LFE80-.LFB80
 31018 19c7 01       		.uleb128 0x1
 31019 19c8 9C       		.byte	0x9c
 31020 19c9 FB190000 		.4byte	0x19fb
 31021 19cd 25       		.uleb128 0x25
 31022 19ce 520F0000 		.4byte	.LASF282
 31023 19d2 01       		.byte	0x1
 31024 19d3 480B     		.2byte	0xb48
 31025 19d5 1F010000 		.4byte	0x11f
 31026 19d9 03       		.uleb128 0x3
 31027 19da 91       		.byte	0x91
 31028 19db AC7D     		.sleb128 -340
 31029 19dd 26       		.uleb128 0x26
 31030 19de 73747200 		.ascii	"str\000"
 31031 19e2 01       		.byte	0x1
 31032 19e3 4A0B     		.2byte	0xb4a
 31033 19e5 72170000 		.4byte	0x1772
 31034 19e9 03       		.uleb128 0x3
 31035 19ea 91       		.byte	0x91
 31036 19eb B07D     		.sleb128 -336
 31037 19ed 26       		.uleb128 0x26
 31038 19ee 6900     		.ascii	"i\000"
 31039 19f0 01       		.byte	0x1
 31040 19f1 4B0B     		.2byte	0xb4b
 31041 19f3 73000000 		.4byte	0x73
 31042 19f7 02       		.uleb128 0x2
 31043 19f8 91       		.byte	0x91
 31044 19f9 5C       		.sleb128 -36
 31045 19fa 00       		.byte	0
 31046 19fb 22       		.uleb128 0x22
 31047 19fc 83100000 		.4byte	.LASF297
 31048 1a00 01       		.byte	0x1
 31049 1a01 730B     		.2byte	0xb73
 31050 1a03 00000000 		.4byte	.LFB81
 31051 1a07 84000000 		.4byte	.LFE81-.LFB81
 31052 1a0b 01       		.uleb128 0x1
 31053 1a0c 9C       		.byte	0x9c
 31054 1a0d 4E1A0000 		.4byte	0x1a4e
 31055 1a11 25       		.uleb128 0x25
 31056 1a12 23070000 		.4byte	.LASF234
 31057 1a16 01       		.byte	0x1
 31058 1a17 730B     		.2byte	0xb73
 31059 1a19 CF100000 		.4byte	0x10cf
 31060 1a1d 02       		.uleb128 0x2
 31061 1a1e 91       		.byte	0x91
 31062 1a1f 6C       		.sleb128 -20
 31063 1a20 25       		.uleb128 0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 671


 31064 1a21 B00C0000 		.4byte	.LASF235
 31065 1a25 01       		.byte	0x1
 31066 1a26 730B     		.2byte	0xb73
 31067 1a28 A3000000 		.4byte	0xa3
 31068 1a2c 02       		.uleb128 0x2
 31069 1a2d 91       		.byte	0x91
 31070 1a2e 6A       		.sleb128 -22
 31071 1a2f 25       		.uleb128 0x25
 31072 1a30 10110000 		.4byte	.LASF298
 31073 1a34 01       		.byte	0x1
 31074 1a35 730B     		.2byte	0xb73
 31075 1a37 97000000 		.4byte	0x97
 31076 1a3b 02       		.uleb128 0x2
 31077 1a3c 91       		.byte	0x91
 31078 1a3d 69       		.sleb128 -23
 31079 1a3e 23       		.uleb128 0x23
 31080 1a3f 29080000 		.4byte	.LASF249
 31081 1a43 01       		.byte	0x1
 31082 1a44 750B     		.2byte	0xb75
 31083 1a46 A3000000 		.4byte	0xa3
 31084 1a4a 02       		.uleb128 0x2
 31085 1a4b 91       		.byte	0x91
 31086 1a4c 76       		.sleb128 -10
 31087 1a4d 00       		.byte	0
 31088 1a4e 22       		.uleb128 0x22
 31089 1a4f 48070000 		.4byte	.LASF299
 31090 1a53 01       		.byte	0x1
 31091 1a54 8F0B     		.2byte	0xb8f
 31092 1a56 00000000 		.4byte	.LFB82
 31093 1a5a 88000000 		.4byte	.LFE82-.LFB82
 31094 1a5e 01       		.uleb128 0x1
 31095 1a5f 9C       		.byte	0x9c
 31096 1a60 921A0000 		.4byte	0x1a92
 31097 1a64 25       		.uleb128 0x25
 31098 1a65 23070000 		.4byte	.LASF234
 31099 1a69 01       		.byte	0x1
 31100 1a6a 8F0B     		.2byte	0xb8f
 31101 1a6c CF100000 		.4byte	0x10cf
 31102 1a70 02       		.uleb128 0x2
 31103 1a71 91       		.byte	0x91
 31104 1a72 6C       		.sleb128 -20
 31105 1a73 25       		.uleb128 0x25
 31106 1a74 B00C0000 		.4byte	.LASF235
 31107 1a78 01       		.byte	0x1
 31108 1a79 8F0B     		.2byte	0xb8f
 31109 1a7b A3000000 		.4byte	0xa3
 31110 1a7f 02       		.uleb128 0x2
 31111 1a80 91       		.byte	0x91
 31112 1a81 6A       		.sleb128 -22
 31113 1a82 23       		.uleb128 0x23
 31114 1a83 29080000 		.4byte	.LASF249
 31115 1a87 01       		.byte	0x1
 31116 1a88 910B     		.2byte	0xb91
 31117 1a8a A3000000 		.4byte	0xa3
 31118 1a8e 02       		.uleb128 0x2
 31119 1a8f 91       		.byte	0x91
 31120 1a90 76       		.sleb128 -10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 672


 31121 1a91 00       		.byte	0
 31122 1a92 22       		.uleb128 0x22
 31123 1a93 3C0D0000 		.4byte	.LASF300
 31124 1a97 01       		.byte	0x1
 31125 1a98 AB0B     		.2byte	0xbab
 31126 1a9a 00000000 		.4byte	.LFB83
 31127 1a9e A0000000 		.4byte	.LFE83-.LFB83
 31128 1aa2 01       		.uleb128 0x1
 31129 1aa3 9C       		.byte	0x9c
 31130 1aa4 E51A0000 		.4byte	0x1ae5
 31131 1aa8 25       		.uleb128 0x25
 31132 1aa9 23070000 		.4byte	.LASF234
 31133 1aad 01       		.byte	0x1
 31134 1aae AB0B     		.2byte	0xbab
 31135 1ab0 CF100000 		.4byte	0x10cf
 31136 1ab4 02       		.uleb128 0x2
 31137 1ab5 91       		.byte	0x91
 31138 1ab6 74       		.sleb128 -12
 31139 1ab7 25       		.uleb128 0x25
 31140 1ab8 B00C0000 		.4byte	.LASF235
 31141 1abc 01       		.byte	0x1
 31142 1abd AB0B     		.2byte	0xbab
 31143 1abf A3000000 		.4byte	0xa3
 31144 1ac3 02       		.uleb128 0x2
 31145 1ac4 91       		.byte	0x91
 31146 1ac5 72       		.sleb128 -14
 31147 1ac6 29       		.uleb128 0x29
 31148 1ac7 696400   		.ascii	"id\000"
 31149 1aca 01       		.byte	0x1
 31150 1acb AB0B     		.2byte	0xbab
 31151 1acd 97000000 		.4byte	0x97
 31152 1ad1 02       		.uleb128 0x2
 31153 1ad2 91       		.byte	0x91
 31154 1ad3 71       		.sleb128 -15
 31155 1ad4 26       		.uleb128 0x26
 31156 1ad5 6900     		.ascii	"i\000"
 31157 1ad7 01       		.byte	0x1
 31158 1ad8 AD0B     		.2byte	0xbad
 31159 1ada A3000000 		.4byte	0xa3
 31160 1ade 05       		.uleb128 0x5
 31161 1adf 03       		.byte	0x3
 31162 1ae0 04000000 		.4byte	i.11288
 31163 1ae4 00       		.byte	0
 31164 1ae5 2A       		.uleb128 0x2a
 31165 1ae6 F5140000 		.4byte	.LASF306
 31166 1aea 01       		.byte	0x1
 31167 1aeb C90B     		.2byte	0xbc9
 31168 1aed 97000000 		.4byte	0x97
 31169 1af1 00000000 		.4byte	.LFB84
 31170 1af5 3E000000 		.4byte	.LFE84-.LFB84
 31171 1af9 01       		.uleb128 0x1
 31172 1afa 9C       		.byte	0x9c
 31173 1afb 3A1B0000 		.4byte	0x1b3a
 31174 1aff 25       		.uleb128 0x25
 31175 1b00 7F0C0000 		.4byte	.LASF301
 31176 1b04 01       		.byte	0x1
 31177 1b05 C90B     		.2byte	0xbc9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 673


 31178 1b07 CF100000 		.4byte	0x10cf
 31179 1b0b 02       		.uleb128 0x2
 31180 1b0c 91       		.byte	0x91
 31181 1b0d 6C       		.sleb128 -20
 31182 1b0e 25       		.uleb128 0x25
 31183 1b0f F0060000 		.4byte	.LASF302
 31184 1b13 01       		.byte	0x1
 31185 1b14 C90B     		.2byte	0xbc9
 31186 1b16 97000000 		.4byte	0x97
 31187 1b1a 02       		.uleb128 0x2
 31188 1b1b 91       		.byte	0x91
 31189 1b1c 6B       		.sleb128 -21
 31190 1b1d 26       		.uleb128 0x26
 31191 1b1e 6900     		.ascii	"i\000"
 31192 1b20 01       		.byte	0x1
 31193 1b21 CB0B     		.2byte	0xbcb
 31194 1b23 97000000 		.4byte	0x97
 31195 1b27 02       		.uleb128 0x2
 31196 1b28 91       		.byte	0x91
 31197 1b29 77       		.sleb128 -9
 31198 1b2a 23       		.uleb128 0x23
 31199 1b2b B20E0000 		.4byte	.LASF303
 31200 1b2f 01       		.byte	0x1
 31201 1b30 CC0B     		.2byte	0xbcc
 31202 1b32 97000000 		.4byte	0x97
 31203 1b36 02       		.uleb128 0x2
 31204 1b37 91       		.byte	0x91
 31205 1b38 76       		.sleb128 -10
 31206 1b39 00       		.byte	0
 31207 1b3a 22       		.uleb128 0x22
 31208 1b3b BE0C0000 		.4byte	.LASF304
 31209 1b3f 01       		.byte	0x1
 31210 1b40 D90B     		.2byte	0xbd9
 31211 1b42 00000000 		.4byte	.LFB85
 31212 1b46 2E000000 		.4byte	.LFE85-.LFB85
 31213 1b4a 01       		.uleb128 0x1
 31214 1b4b 9C       		.byte	0x9c
 31215 1b4c 7E1B0000 		.4byte	0x1b7e
 31216 1b50 25       		.uleb128 0x25
 31217 1b51 2B060000 		.4byte	.LASF305
 31218 1b55 01       		.byte	0x1
 31219 1b56 D90B     		.2byte	0xbd9
 31220 1b58 97000000 		.4byte	0x97
 31221 1b5c 02       		.uleb128 0x2
 31222 1b5d 91       		.byte	0x91
 31223 1b5e 6F       		.sleb128 -17
 31224 1b5f 23       		.uleb128 0x23
 31225 1b60 B00C0000 		.4byte	.LASF235
 31226 1b64 01       		.byte	0x1
 31227 1b65 DA0B     		.2byte	0xbda
 31228 1b67 73000000 		.4byte	0x73
 31229 1b6b 02       		.uleb128 0x2
 31230 1b6c 91       		.byte	0x91
 31231 1b6d 74       		.sleb128 -12
 31232 1b6e 23       		.uleb128 0x23
 31233 1b6f 23070000 		.4byte	.LASF234
 31234 1b73 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 674


 31235 1b74 DB0B     		.2byte	0xbdb
 31236 1b76 D9080000 		.4byte	0x8d9
 31237 1b7a 02       		.uleb128 0x2
 31238 1b7b 91       		.byte	0x91
 31239 1b7c 70       		.sleb128 -16
 31240 1b7d 00       		.byte	0
 31241 1b7e 2B       		.uleb128 0x2b
 31242 1b7f 63050000 		.4byte	.LASF307
 31243 1b83 01       		.byte	0x1
 31244 1b84 E80B     		.2byte	0xbe8
 31245 1b86 97000000 		.4byte	0x97
 31246 1b8a 00000000 		.4byte	.LFB86
 31247 1b8e 98000000 		.4byte	.LFE86-.LFB86
 31248 1b92 01       		.uleb128 0x1
 31249 1b93 9C       		.byte	0x9c
 31250 1b94 E21B0000 		.4byte	0x1be2
 31251 1b98 25       		.uleb128 0x25
 31252 1b99 E3060000 		.4byte	.LASF308
 31253 1b9d 01       		.byte	0x1
 31254 1b9e E80B     		.2byte	0xbe8
 31255 1ba0 73000000 		.4byte	0x73
 31256 1ba4 02       		.uleb128 0x2
 31257 1ba5 91       		.byte	0x91
 31258 1ba6 64       		.sleb128 -28
 31259 1ba7 26       		.uleb128 0x26
 31260 1ba8 6900     		.ascii	"i\000"
 31261 1baa 01       		.byte	0x1
 31262 1bab EA0B     		.2byte	0xbea
 31263 1bad 73000000 		.4byte	0x73
 31264 1bb1 02       		.uleb128 0x2
 31265 1bb2 91       		.byte	0x91
 31266 1bb3 74       		.sleb128 -12
 31267 1bb4 23       		.uleb128 0x23
 31268 1bb5 EE000000 		.4byte	.LASF309
 31269 1bb9 01       		.byte	0x1
 31270 1bba EB0B     		.2byte	0xbeb
 31271 1bbc 97000000 		.4byte	0x97
 31272 1bc0 02       		.uleb128 0x2
 31273 1bc1 91       		.byte	0x91
 31274 1bc2 6B       		.sleb128 -21
 31275 1bc3 23       		.uleb128 0x23
 31276 1bc4 64070000 		.4byte	.LASF310
 31277 1bc8 01       		.byte	0x1
 31278 1bc9 EC0B     		.2byte	0xbec
 31279 1bcb 73000000 		.4byte	0x73
 31280 1bcf 02       		.uleb128 0x2
 31281 1bd0 91       		.byte	0x91
 31282 1bd1 6C       		.sleb128 -20
 31283 1bd2 23       		.uleb128 0x23
 31284 1bd3 69060000 		.4byte	.LASF311
 31285 1bd7 01       		.byte	0x1
 31286 1bd8 ED0B     		.2byte	0xbed
 31287 1bda 97000000 		.4byte	0x97
 31288 1bde 02       		.uleb128 0x2
 31289 1bdf 91       		.byte	0x91
 31290 1be0 73       		.sleb128 -13
 31291 1be1 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 675


 31292 1be2 22       		.uleb128 0x22
 31293 1be3 F70F0000 		.4byte	.LASF312
 31294 1be7 01       		.byte	0x1
 31295 1be8 120C     		.2byte	0xc12
 31296 1bea 00000000 		.4byte	.LFB87
 31297 1bee 80000000 		.4byte	.LFE87-.LFB87
 31298 1bf2 01       		.uleb128 0x1
 31299 1bf3 9C       		.byte	0x9c
 31300 1bf4 061C0000 		.4byte	0x1c06
 31301 1bf8 26       		.uleb128 0x26
 31302 1bf9 6900     		.ascii	"i\000"
 31303 1bfb 01       		.byte	0x1
 31304 1bfc 140C     		.2byte	0xc14
 31305 1bfe A3000000 		.4byte	0xa3
 31306 1c02 02       		.uleb128 0x2
 31307 1c03 91       		.byte	0x91
 31308 1c04 76       		.sleb128 -10
 31309 1c05 00       		.byte	0
 31310 1c06 2B       		.uleb128 0x2b
 31311 1c07 3D0F0000 		.4byte	.LASF313
 31312 1c0b 01       		.byte	0x1
 31313 1c0c 2B0C     		.2byte	0xc2b
 31314 1c0e 97000000 		.4byte	0x97
 31315 1c12 00000000 		.4byte	.LFB88
 31316 1c16 5C000000 		.4byte	.LFE88-.LFB88
 31317 1c1a 01       		.uleb128 0x1
 31318 1c1b 9C       		.byte	0x9c
 31319 1c1c 2E1C0000 		.4byte	0x1c2e
 31320 1c20 26       		.uleb128 0x26
 31321 1c21 6900     		.ascii	"i\000"
 31322 1c23 01       		.byte	0x1
 31323 1c24 2C0C     		.2byte	0xc2c
 31324 1c26 A3000000 		.4byte	0xa3
 31325 1c2a 02       		.uleb128 0x2
 31326 1c2b 91       		.byte	0x91
 31327 1c2c 76       		.sleb128 -10
 31328 1c2d 00       		.byte	0
 31329 1c2e 2B       		.uleb128 0x2b
 31330 1c2f 6A070000 		.4byte	.LASF314
 31331 1c33 01       		.byte	0x1
 31332 1c34 3E0C     		.2byte	0xc3e
 31333 1c36 97000000 		.4byte	0x97
 31334 1c3a 00000000 		.4byte	.LFB89
 31335 1c3e 04060000 		.4byte	.LFE89-.LFB89
 31336 1c42 01       		.uleb128 0x1
 31337 1c43 9C       		.byte	0x9c
 31338 1c44 631C0000 		.4byte	0x1c63
 31339 1c48 26       		.uleb128 0x26
 31340 1c49 6900     		.ascii	"i\000"
 31341 1c4b 01       		.byte	0x1
 31342 1c4c 400C     		.2byte	0xc40
 31343 1c4e 97000000 		.4byte	0x97
 31344 1c52 02       		.uleb128 0x2
 31345 1c53 91       		.byte	0x91
 31346 1c54 77       		.sleb128 -9
 31347 1c55 26       		.uleb128 0x26
 31348 1c56 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 676


 31349 1c58 01       		.byte	0x1
 31350 1c59 400C     		.2byte	0xc40
 31351 1c5b 97000000 		.4byte	0x97
 31352 1c5f 02       		.uleb128 0x2
 31353 1c60 91       		.byte	0x91
 31354 1c61 76       		.sleb128 -10
 31355 1c62 00       		.byte	0
 31356 1c63 28       		.uleb128 0x28
 31357 1c64 0B0A0000 		.4byte	.LASF315
 31358 1c68 01       		.byte	0x1
 31359 1c69 E20C     		.2byte	0xce2
 31360 1c6b 00000000 		.4byte	.LFB90
 31361 1c6f 2C020000 		.4byte	.LFE90-.LFB90
 31362 1c73 01       		.uleb128 0x1
 31363 1c74 9C       		.byte	0x9c
 31364 1c75 A01C0000 		.4byte	0x1ca0
 31365 1c79 23       		.uleb128 0x23
 31366 1c7a 330F0000 		.4byte	.LASF244
 31367 1c7e 01       		.byte	0x1
 31368 1c7f E40C     		.2byte	0xce4
 31369 1c81 97000000 		.4byte	0x97
 31370 1c85 02       		.uleb128 0x2
 31371 1c86 91       		.byte	0x91
 31372 1c87 73       		.sleb128 -13
 31373 1c88 1E       		.uleb128 0x1e
 31374 1c89 E8000000 		.4byte	.LBB30
 31375 1c8d 6A000000 		.4byte	.LBE30-.LBB30
 31376 1c91 26       		.uleb128 0x26
 31377 1c92 6900     		.ascii	"i\000"
 31378 1c94 01       		.byte	0x1
 31379 1c95 F50C     		.2byte	0xcf5
 31380 1c97 73000000 		.4byte	0x73
 31381 1c9b 02       		.uleb128 0x2
 31382 1c9c 91       		.byte	0x91
 31383 1c9d 74       		.sleb128 -12
 31384 1c9e 00       		.byte	0
 31385 1c9f 00       		.byte	0
 31386 1ca0 2C       		.uleb128 0x2c
 31387 1ca1 A10C0000 		.4byte	.LASF316
 31388 1ca5 01       		.byte	0x1
 31389 1ca6 150D     		.2byte	0xd15
 31390 1ca8 00000000 		.4byte	.LFB91
 31391 1cac 28000000 		.4byte	.LFE91-.LFB91
 31392 1cb0 01       		.uleb128 0x1
 31393 1cb1 9C       		.byte	0x9c
 31394 1cb2 2C       		.uleb128 0x2c
 31395 1cb3 88120000 		.4byte	.LASF317
 31396 1cb7 01       		.byte	0x1
 31397 1cb8 210D     		.2byte	0xd21
 31398 1cba 00000000 		.4byte	.LFB92
 31399 1cbe 78000000 		.4byte	.LFE92-.LFB92
 31400 1cc2 01       		.uleb128 0x1
 31401 1cc3 9C       		.byte	0x9c
 31402 1cc4 2C       		.uleb128 0x2c
 31403 1cc5 1C050000 		.4byte	.LASF318
 31404 1cc9 01       		.byte	0x1
 31405 1cca 370D     		.2byte	0xd37
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 677


 31406 1ccc 00000000 		.4byte	.LFB93
 31407 1cd0 B0000000 		.4byte	.LFE93-.LFB93
 31408 1cd4 01       		.uleb128 0x1
 31409 1cd5 9C       		.byte	0x9c
 31410 1cd6 27       		.uleb128 0x27
 31411 1cd7 98070000 		.4byte	.LASF320
 31412 1cdb 01       		.byte	0x1
 31413 1cdc 580D     		.2byte	0xd58
 31414 1cde 00000000 		.4byte	.LFB94
 31415 1ce2 94010000 		.4byte	.LFE94-.LFB94
 31416 1ce6 01       		.uleb128 0x1
 31417 1ce7 9C       		.byte	0x9c
 31418 1ce8 1A1D0000 		.4byte	0x1d1a
 31419 1cec 23       		.uleb128 0x23
 31420 1ced 29080000 		.4byte	.LASF249
 31421 1cf1 01       		.byte	0x1
 31422 1cf2 5A0D     		.2byte	0xd5a
 31423 1cf4 97000000 		.4byte	0x97
 31424 1cf8 02       		.uleb128 0x2
 31425 1cf9 91       		.byte	0x91
 31426 1cfa 6F       		.sleb128 -17
 31427 1cfb 23       		.uleb128 0x23
 31428 1cfc 42130000 		.4byte	.LASF240
 31429 1d00 01       		.byte	0x1
 31430 1d01 5B0D     		.2byte	0xd5b
 31431 1d03 C7000000 		.4byte	0xc7
 31432 1d07 02       		.uleb128 0x2
 31433 1d08 91       		.byte	0x91
 31434 1d09 6C       		.sleb128 -20
 31435 1d0a 23       		.uleb128 0x23
 31436 1d0b 23070000 		.4byte	.LASF234
 31437 1d0f 01       		.byte	0x1
 31438 1d10 5E0D     		.2byte	0xd5e
 31439 1d12 6A080000 		.4byte	0x86a
 31440 1d16 02       		.uleb128 0x2
 31441 1d17 91       		.byte	0x91
 31442 1d18 64       		.sleb128 -28
 31443 1d19 00       		.byte	0
 31444 1d1a 27       		.uleb128 0x27
 31445 1d1b E40F0000 		.4byte	.LASF321
 31446 1d1f 01       		.byte	0x1
 31447 1d20 7E0D     		.2byte	0xd7e
 31448 1d22 00000000 		.4byte	.LFB95
 31449 1d26 B8000000 		.4byte	.LFE95-.LFB95
 31450 1d2a 01       		.uleb128 0x1
 31451 1d2b 9C       		.byte	0x9c
 31452 1d2c 5E1D0000 		.4byte	0x1d5e
 31453 1d30 23       		.uleb128 0x23
 31454 1d31 29080000 		.4byte	.LASF249
 31455 1d35 01       		.byte	0x1
 31456 1d36 800D     		.2byte	0xd80
 31457 1d38 97000000 		.4byte	0x97
 31458 1d3c 02       		.uleb128 0x2
 31459 1d3d 91       		.byte	0x91
 31460 1d3e 6F       		.sleb128 -17
 31461 1d3f 23       		.uleb128 0x23
 31462 1d40 42130000 		.4byte	.LASF240
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 678


 31463 1d44 01       		.byte	0x1
 31464 1d45 810D     		.2byte	0xd81
 31465 1d47 C7000000 		.4byte	0xc7
 31466 1d4b 02       		.uleb128 0x2
 31467 1d4c 91       		.byte	0x91
 31468 1d4d 6C       		.sleb128 -20
 31469 1d4e 23       		.uleb128 0x23
 31470 1d4f 23070000 		.4byte	.LASF234
 31471 1d53 01       		.byte	0x1
 31472 1d54 850D     		.2byte	0xd85
 31473 1d56 6A080000 		.4byte	0x86a
 31474 1d5a 02       		.uleb128 0x2
 31475 1d5b 91       		.byte	0x91
 31476 1d5c 64       		.sleb128 -28
 31477 1d5d 00       		.byte	0
 31478 1d5e 27       		.uleb128 0x27
 31479 1d5f 2A020000 		.4byte	.LASF322
 31480 1d63 01       		.byte	0x1
 31481 1d64 970D     		.2byte	0xd97
 31482 1d66 00000000 		.4byte	.LFB96
 31483 1d6a B8000000 		.4byte	.LFE96-.LFB96
 31484 1d6e 01       		.uleb128 0x1
 31485 1d6f 9C       		.byte	0x9c
 31486 1d70 A21D0000 		.4byte	0x1da2
 31487 1d74 23       		.uleb128 0x23
 31488 1d75 29080000 		.4byte	.LASF249
 31489 1d79 01       		.byte	0x1
 31490 1d7a 990D     		.2byte	0xd99
 31491 1d7c 97000000 		.4byte	0x97
 31492 1d80 02       		.uleb128 0x2
 31493 1d81 91       		.byte	0x91
 31494 1d82 6F       		.sleb128 -17
 31495 1d83 23       		.uleb128 0x23
 31496 1d84 42130000 		.4byte	.LASF240
 31497 1d88 01       		.byte	0x1
 31498 1d89 9A0D     		.2byte	0xd9a
 31499 1d8b C7000000 		.4byte	0xc7
 31500 1d8f 02       		.uleb128 0x2
 31501 1d90 91       		.byte	0x91
 31502 1d91 6C       		.sleb128 -20
 31503 1d92 23       		.uleb128 0x23
 31504 1d93 23070000 		.4byte	.LASF234
 31505 1d97 01       		.byte	0x1
 31506 1d98 9E0D     		.2byte	0xd9e
 31507 1d9a 6A080000 		.4byte	0x86a
 31508 1d9e 02       		.uleb128 0x2
 31509 1d9f 91       		.byte	0x91
 31510 1da0 64       		.sleb128 -28
 31511 1da1 00       		.byte	0
 31512 1da2 27       		.uleb128 0x27
 31513 1da3 0C0B0000 		.4byte	.LASF323
 31514 1da7 01       		.byte	0x1
 31515 1da8 B00D     		.2byte	0xdb0
 31516 1daa 00000000 		.4byte	.LFB97
 31517 1dae 5C000000 		.4byte	.LFE97-.LFB97
 31518 1db2 01       		.uleb128 0x1
 31519 1db3 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 679


 31520 1db4 D71D0000 		.4byte	0x1dd7
 31521 1db8 23       		.uleb128 0x23
 31522 1db9 42130000 		.4byte	.LASF240
 31523 1dbd 01       		.byte	0x1
 31524 1dbe B20D     		.2byte	0xdb2
 31525 1dc0 C7000000 		.4byte	0xc7
 31526 1dc4 02       		.uleb128 0x2
 31527 1dc5 91       		.byte	0x91
 31528 1dc6 76       		.sleb128 -10
 31529 1dc7 23       		.uleb128 0x23
 31530 1dc8 23070000 		.4byte	.LASF234
 31531 1dcc 01       		.byte	0x1
 31532 1dcd B60D     		.2byte	0xdb6
 31533 1dcf 9D090000 		.4byte	0x99d
 31534 1dd3 02       		.uleb128 0x2
 31535 1dd4 91       		.byte	0x91
 31536 1dd5 70       		.sleb128 -16
 31537 1dd6 00       		.byte	0
 31538 1dd7 2D       		.uleb128 0x2d
 31539 1dd8 060D0000 		.4byte	.LASF324
 31540 1ddc 01       		.byte	0x1
 31541 1ddd C80D     		.2byte	0xdc8
 31542 1ddf 00000000 		.4byte	.LFB98
 31543 1de3 30020000 		.4byte	.LFE98-.LFB98
 31544 1de7 01       		.uleb128 0x1
 31545 1de8 9C       		.byte	0x9c
 31546 1de9 411E0000 		.4byte	0x1e41
 31547 1ded 23       		.uleb128 0x23
 31548 1dee 42130000 		.4byte	.LASF240
 31549 1df2 01       		.byte	0x1
 31550 1df3 CB0D     		.2byte	0xdcb
 31551 1df5 411E0000 		.4byte	0x1e41
 31552 1df9 02       		.uleb128 0x2
 31553 1dfa 91       		.byte	0x91
 31554 1dfb 70       		.sleb128 -16
 31555 1dfc 23       		.uleb128 0x23
 31556 1dfd EB070000 		.4byte	.LASF325
 31557 1e01 01       		.byte	0x1
 31558 1e02 CC0D     		.2byte	0xdcc
 31559 1e04 411E0000 		.4byte	0x1e41
 31560 1e08 05       		.uleb128 0x5
 31561 1e09 03       		.byte	0x3
 31562 1e0a 08000000 		.4byte	last_aux_int16.11419
 31563 1e0e 2E       		.uleb128 0x2e
 31564 1e0f 2E000000 		.4byte	.LBB31
 31565 1e13 52000000 		.4byte	.LBE31-.LBB31
 31566 1e17 291E0000 		.4byte	0x1e29
 31567 1e1b 26       		.uleb128 0x26
 31568 1e1c 6900     		.ascii	"i\000"
 31569 1e1e 01       		.byte	0x1
 31570 1e1f D30D     		.2byte	0xdd3
 31571 1e21 97000000 		.4byte	0x97
 31572 1e25 02       		.uleb128 0x2
 31573 1e26 91       		.byte	0x91
 31574 1e27 77       		.sleb128 -9
 31575 1e28 00       		.byte	0
 31576 1e29 1E       		.uleb128 0x1e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 680


 31577 1e2a 80000000 		.4byte	.LBB32
 31578 1e2e 8E010000 		.4byte	.LBE32-.LBB32
 31579 1e32 26       		.uleb128 0x26
 31580 1e33 6900     		.ascii	"i\000"
 31581 1e35 01       		.byte	0x1
 31582 1e36 DC0D     		.2byte	0xddc
 31583 1e38 97000000 		.4byte	0x97
 31584 1e3c 02       		.uleb128 0x2
 31585 1e3d 91       		.byte	0x91
 31586 1e3e 76       		.sleb128 -10
 31587 1e3f 00       		.byte	0
 31588 1e40 00       		.byte	0
 31589 1e41 09       		.uleb128 0x9
 31590 1e42 C7000000 		.4byte	0xc7
 31591 1e46 511E0000 		.4byte	0x1e51
 31592 1e4a 0A       		.uleb128 0xa
 31593 1e4b 18010000 		.4byte	0x118
 31594 1e4f 01       		.byte	0x1
 31595 1e50 00       		.byte	0
 31596 1e51 27       		.uleb128 0x27
 31597 1e52 C6150000 		.4byte	.LASF326
 31598 1e56 01       		.byte	0x1
 31599 1e57 F90D     		.2byte	0xdf9
 31600 1e59 00000000 		.4byte	.LFB99
 31601 1e5d BC000000 		.4byte	.LFE99-.LFB99
 31602 1e61 01       		.uleb128 0x1
 31603 1e62 9C       		.byte	0x9c
 31604 1e63 771E0000 		.4byte	0x1e77
 31605 1e67 26       		.uleb128 0x26
 31606 1e68 61757800 		.ascii	"aux\000"
 31607 1e6c 01       		.byte	0x1
 31608 1e6d FC0D     		.2byte	0xdfc
 31609 1e6f 97000000 		.4byte	0x97
 31610 1e73 02       		.uleb128 0x2
 31611 1e74 91       		.byte	0x91
 31612 1e75 77       		.sleb128 -9
 31613 1e76 00       		.byte	0
 31614 1e77 27       		.uleb128 0x27
 31615 1e78 640D0000 		.4byte	.LASF327
 31616 1e7c 01       		.byte	0x1
 31617 1e7d 1E0E     		.2byte	0xe1e
 31618 1e7f 00000000 		.4byte	.LFB100
 31619 1e83 5C000000 		.4byte	.LFE100-.LFB100
 31620 1e87 01       		.uleb128 0x1
 31621 1e88 9C       		.byte	0x9c
 31622 1e89 9D1E0000 		.4byte	0x1e9d
 31623 1e8d 23       		.uleb128 0x23
 31624 1e8e 23070000 		.4byte	.LASF234
 31625 1e92 01       		.byte	0x1
 31626 1e93 200E     		.2byte	0xe20
 31627 1e95 10060000 		.4byte	0x610
 31628 1e99 02       		.uleb128 0x2
 31629 1e9a 91       		.byte	0x91
 31630 1e9b 74       		.sleb128 -12
 31631 1e9c 00       		.byte	0
 31632 1e9d 27       		.uleb128 0x27
 31633 1e9e 49110000 		.4byte	.LASF328
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 681


 31634 1ea2 01       		.byte	0x1
 31635 1ea3 350E     		.2byte	0xe35
 31636 1ea5 00000000 		.4byte	.LFB101
 31637 1ea9 38010000 		.4byte	.LFE101-.LFB101
 31638 1ead 01       		.uleb128 0x1
 31639 1eae 9C       		.byte	0x9c
 31640 1eaf E11E0000 		.4byte	0x1ee1
 31641 1eb3 23       		.uleb128 0x23
 31642 1eb4 29080000 		.4byte	.LASF249
 31643 1eb8 01       		.byte	0x1
 31644 1eb9 370E     		.2byte	0xe37
 31645 1ebb 97000000 		.4byte	0x97
 31646 1ebf 02       		.uleb128 0x2
 31647 1ec0 91       		.byte	0x91
 31648 1ec1 6F       		.sleb128 -17
 31649 1ec2 23       		.uleb128 0x23
 31650 1ec3 42130000 		.4byte	.LASF240
 31651 1ec7 01       		.byte	0x1
 31652 1ec8 380E     		.2byte	0xe38
 31653 1eca C7000000 		.4byte	0xc7
 31654 1ece 02       		.uleb128 0x2
 31655 1ecf 91       		.byte	0x91
 31656 1ed0 6C       		.sleb128 -20
 31657 1ed1 23       		.uleb128 0x23
 31658 1ed2 23070000 		.4byte	.LASF234
 31659 1ed6 01       		.byte	0x1
 31660 1ed7 3C0E     		.2byte	0xe3c
 31661 1ed9 71050000 		.4byte	0x571
 31662 1edd 02       		.uleb128 0x2
 31663 1ede 91       		.byte	0x91
 31664 1edf 60       		.sleb128 -32
 31665 1ee0 00       		.byte	0
 31666 1ee1 27       		.uleb128 0x27
 31667 1ee2 760B0000 		.4byte	.LASF329
 31668 1ee6 01       		.byte	0x1
 31669 1ee7 5C0E     		.2byte	0xe5c
 31670 1ee9 00000000 		.4byte	.LFB102
 31671 1eed EC000000 		.4byte	.LFE102-.LFB102
 31672 1ef1 01       		.uleb128 0x1
 31673 1ef2 9C       		.byte	0x9c
 31674 1ef3 161F0000 		.4byte	0x1f16
 31675 1ef7 23       		.uleb128 0x23
 31676 1ef8 23070000 		.4byte	.LASF234
 31677 1efc 01       		.byte	0x1
 31678 1efd 600E     		.2byte	0xe60
 31679 1eff 9D090000 		.4byte	0x99d
 31680 1f03 02       		.uleb128 0x2
 31681 1f04 91       		.byte	0x91
 31682 1f05 68       		.sleb128 -24
 31683 1f06 23       		.uleb128 0x23
 31684 1f07 42130000 		.4byte	.LASF240
 31685 1f0b 01       		.byte	0x1
 31686 1f0c 610E     		.2byte	0xe61
 31687 1f0e C7000000 		.4byte	0xc7
 31688 1f12 02       		.uleb128 0x2
 31689 1f13 91       		.byte	0x91
 31690 1f14 66       		.sleb128 -26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 682


 31691 1f15 00       		.byte	0
 31692 1f16 27       		.uleb128 0x27
 31693 1f17 9D080000 		.4byte	.LASF330
 31694 1f1b 01       		.byte	0x1
 31695 1f1c 820E     		.2byte	0xe82
 31696 1f1e 00000000 		.4byte	.LFB103
 31697 1f22 64000000 		.4byte	.LFE103-.LFB103
 31698 1f26 01       		.uleb128 0x1
 31699 1f27 9C       		.byte	0x9c
 31700 1f28 4B1F0000 		.4byte	0x1f4b
 31701 1f2c 23       		.uleb128 0x23
 31702 1f2d 23070000 		.4byte	.LASF234
 31703 1f31 01       		.byte	0x1
 31704 1f32 860E     		.2byte	0xe86
 31705 1f34 FA0A0000 		.4byte	0xafa
 31706 1f38 02       		.uleb128 0x2
 31707 1f39 91       		.byte	0x91
 31708 1f3a 74       		.sleb128 -12
 31709 1f3b 23       		.uleb128 0x23
 31710 1f3c 42130000 		.4byte	.LASF240
 31711 1f40 01       		.byte	0x1
 31712 1f41 870E     		.2byte	0xe87
 31713 1f43 C7000000 		.4byte	0xc7
 31714 1f47 02       		.uleb128 0x2
 31715 1f48 91       		.byte	0x91
 31716 1f49 72       		.sleb128 -14
 31717 1f4a 00       		.byte	0
 31718 1f4b 2F       		.uleb128 0x2f
 31719 1f4c 87080000 		.4byte	.LASF331
 31720 1f50 01       		.byte	0x1
 31721 1f51 9C0E     		.2byte	0xe9c
 31722 1f53 C7000000 		.4byte	0xc7
 31723 1f57 00000000 		.4byte	.LFB104
 31724 1f5b A8000000 		.4byte	.LFE104-.LFB104
 31725 1f5f 01       		.uleb128 0x1
 31726 1f60 9C       		.byte	0x9c
 31727 1f61 C01F0000 		.4byte	0x1fc0
 31728 1f65 23       		.uleb128 0x23
 31729 1f66 23070000 		.4byte	.LASF234
 31730 1f6a 01       		.byte	0x1
 31731 1f6b 9E0E     		.2byte	0xe9e
 31732 1f6d C01F0000 		.4byte	0x1fc0
 31733 1f71 02       		.uleb128 0x2
 31734 1f72 91       		.byte	0x91
 31735 1f73 5C       		.sleb128 -36
 31736 1f74 23       		.uleb128 0x23
 31737 1f75 B00C0000 		.4byte	.LASF235
 31738 1f79 01       		.byte	0x1
 31739 1f7a 9F0E     		.2byte	0xe9f
 31740 1f7c 97000000 		.4byte	0x97
 31741 1f80 02       		.uleb128 0x2
 31742 1f81 91       		.byte	0x91
 31743 1f82 74       		.sleb128 -12
 31744 1f83 23       		.uleb128 0x23
 31745 1f84 D6100000 		.4byte	.LASF332
 31746 1f88 01       		.byte	0x1
 31747 1f89 A00E     		.2byte	0xea0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 683


 31748 1f8b C7000000 		.4byte	0xc7
 31749 1f8f 02       		.uleb128 0x2
 31750 1f90 91       		.byte	0x91
 31751 1f91 76       		.sleb128 -10
 31752 1f92 23       		.uleb128 0x23
 31753 1f93 9D030000 		.4byte	.LASF333
 31754 1f97 01       		.byte	0x1
 31755 1f98 A10E     		.2byte	0xea1
 31756 1f9a AF000000 		.4byte	0xaf
 31757 1f9e 02       		.uleb128 0x2
 31758 1f9f 91       		.byte	0x91
 31759 1fa0 70       		.sleb128 -16
 31760 1fa1 23       		.uleb128 0x23
 31761 1fa2 B3140000 		.4byte	.LASF334
 31762 1fa6 01       		.byte	0x1
 31763 1fa7 A10E     		.2byte	0xea1
 31764 1fa9 AF000000 		.4byte	0xaf
 31765 1fad 02       		.uleb128 0x2
 31766 1fae 91       		.byte	0x91
 31767 1faf 6C       		.sleb128 -20
 31768 1fb0 23       		.uleb128 0x23
 31769 1fb1 87050000 		.4byte	.LASF335
 31770 1fb5 01       		.byte	0x1
 31771 1fb6 A20E     		.2byte	0xea2
 31772 1fb8 97000000 		.4byte	0x97
 31773 1fbc 02       		.uleb128 0x2
 31774 1fbd 91       		.byte	0x91
 31775 1fbe 75       		.sleb128 -11
 31776 1fbf 00       		.byte	0
 31777 1fc0 09       		.uleb128 0x9
 31778 1fc1 97000000 		.4byte	0x97
 31779 1fc5 D01F0000 		.4byte	0x1fd0
 31780 1fc9 0A       		.uleb128 0xa
 31781 1fca 18010000 		.4byte	0x118
 31782 1fce 0F       		.byte	0xf
 31783 1fcf 00       		.byte	0
 31784 1fd0 30       		.uleb128 0x30
 31785 1fd1 0F010000 		.4byte	.LASF365
 31786 1fd5 01       		.byte	0x1
 31787 1fd6 BF0E     		.2byte	0xebf
 31788 1fd8 00000000 		.4byte	.LFB105
 31789 1fdc 34000000 		.4byte	.LFE105-.LFB105
 31790 1fe0 01       		.uleb128 0x1
 31791 1fe1 9C       		.byte	0x9c
 31792 1fe2 27       		.uleb128 0x27
 31793 1fe3 DC040000 		.4byte	.LASF336
 31794 1fe7 01       		.byte	0x1
 31795 1fe8 CD0E     		.2byte	0xecd
 31796 1fea 00000000 		.4byte	.LFB106
 31797 1fee 20000000 		.4byte	.LFE106-.LFB106
 31798 1ff2 01       		.uleb128 0x1
 31799 1ff3 9C       		.byte	0x9c
 31800 1ff4 08200000 		.4byte	0x2008
 31801 1ff8 23       		.uleb128 0x23
 31802 1ff9 23070000 		.4byte	.LASF234
 31803 1ffd 01       		.byte	0x1
 31804 1ffe CF0E     		.2byte	0xecf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 684


 31805 2000 D9080000 		.4byte	0x8d9
 31806 2004 02       		.uleb128 0x2
 31807 2005 91       		.byte	0x91
 31808 2006 74       		.sleb128 -12
 31809 2007 00       		.byte	0
 31810 2008 27       		.uleb128 0x27
 31811 2009 87010000 		.4byte	.LASF337
 31812 200d 01       		.byte	0x1
 31813 200e DB0E     		.2byte	0xedb
 31814 2010 00000000 		.4byte	.LFB107
 31815 2014 A0000000 		.4byte	.LFE107-.LFB107
 31816 2018 01       		.uleb128 0x1
 31817 2019 9C       		.byte	0x9c
 31818 201a 3D200000 		.4byte	0x203d
 31819 201e 23       		.uleb128 0x23
 31820 201f 23070000 		.4byte	.LASF234
 31821 2023 01       		.byte	0x1
 31822 2024 DF0E     		.2byte	0xedf
 31823 2026 9D090000 		.4byte	0x99d
 31824 202a 02       		.uleb128 0x2
 31825 202b 91       		.byte	0x91
 31826 202c 70       		.sleb128 -16
 31827 202d 23       		.uleb128 0x23
 31828 202e 42130000 		.4byte	.LASF240
 31829 2032 01       		.byte	0x1
 31830 2033 E00E     		.2byte	0xee0
 31831 2035 C7000000 		.4byte	0xc7
 31832 2039 02       		.uleb128 0x2
 31833 203a 91       		.byte	0x91
 31834 203b 6E       		.sleb128 -18
 31835 203c 00       		.byte	0
 31836 203d 27       		.uleb128 0x27
 31837 203e 12120000 		.4byte	.LASF338
 31838 2042 01       		.byte	0x1
 31839 2043 F40E     		.2byte	0xef4
 31840 2045 00000000 		.4byte	.LFB108
 31841 2049 BC010000 		.4byte	.LFE108-.LFB108
 31842 204d 01       		.uleb128 0x1
 31843 204e 9C       		.byte	0x9c
 31844 204f 9F200000 		.4byte	0x209f
 31845 2053 23       		.uleb128 0x23
 31846 2054 220D0000 		.4byte	.LASF339
 31847 2058 01       		.byte	0x1
 31848 2059 F70E     		.2byte	0xef7
 31849 205b AF000000 		.4byte	0xaf
 31850 205f 02       		.uleb128 0x2
 31851 2060 91       		.byte	0x91
 31852 2061 70       		.sleb128 -16
 31853 2062 23       		.uleb128 0x23
 31854 2063 51100000 		.4byte	.LASF340
 31855 2067 01       		.byte	0x1
 31856 2068 F80E     		.2byte	0xef8
 31857 206a EB000000 		.4byte	0xeb
 31858 206e 02       		.uleb128 0x2
 31859 206f 91       		.byte	0x91
 31860 2070 6C       		.sleb128 -20
 31861 2071 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 685


 31862 2072 B00C0000 		.4byte	.LASF235
 31863 2076 01       		.byte	0x1
 31864 2077 F90E     		.2byte	0xef9
 31865 2079 97000000 		.4byte	0x97
 31866 207d 02       		.uleb128 0x2
 31867 207e 91       		.byte	0x91
 31868 207f 77       		.sleb128 -9
 31869 2080 23       		.uleb128 0x23
 31870 2081 23070000 		.4byte	.LASF234
 31871 2085 01       		.byte	0x1
 31872 2086 FA0E     		.2byte	0xefa
 31873 2088 D9080000 		.4byte	0x8d9
 31874 208c 02       		.uleb128 0x2
 31875 208d 91       		.byte	0x91
 31876 208e 68       		.sleb128 -24
 31877 208f 23       		.uleb128 0x23
 31878 2090 10110000 		.4byte	.LASF298
 31879 2094 01       		.byte	0x1
 31880 2095 FB0E     		.2byte	0xefb
 31881 2097 97000000 		.4byte	0x97
 31882 209b 02       		.uleb128 0x2
 31883 209c 91       		.byte	0x91
 31884 209d 6B       		.sleb128 -21
 31885 209e 00       		.byte	0
 31886 209f 27       		.uleb128 0x27
 31887 20a0 40020000 		.4byte	.LASF341
 31888 20a4 01       		.byte	0x1
 31889 20a5 350F     		.2byte	0xf35
 31890 20a7 00000000 		.4byte	.LFB109
 31891 20ab 60000000 		.4byte	.LFE109-.LFB109
 31892 20af 01       		.uleb128 0x1
 31893 20b0 9C       		.byte	0x9c
 31894 20b1 D4200000 		.4byte	0x20d4
 31895 20b5 23       		.uleb128 0x23
 31896 20b6 23070000 		.4byte	.LASF234
 31897 20ba 01       		.byte	0x1
 31898 20bb 370F     		.2byte	0xf37
 31899 20bd 9D090000 		.4byte	0x99d
 31900 20c1 02       		.uleb128 0x2
 31901 20c2 91       		.byte	0x91
 31902 20c3 70       		.sleb128 -16
 31903 20c4 23       		.uleb128 0x23
 31904 20c5 42130000 		.4byte	.LASF240
 31905 20c9 01       		.byte	0x1
 31906 20ca 380F     		.2byte	0xf38
 31907 20cc C7000000 		.4byte	0xc7
 31908 20d0 02       		.uleb128 0x2
 31909 20d1 91       		.byte	0x91
 31910 20d2 6E       		.sleb128 -18
 31911 20d3 00       		.byte	0
 31912 20d4 27       		.uleb128 0x27
 31913 20d5 C3010000 		.4byte	.LASF342
 31914 20d9 01       		.byte	0x1
 31915 20da 4B0F     		.2byte	0xf4b
 31916 20dc 00000000 		.4byte	.LFB110
 31917 20e0 98050000 		.4byte	.LFE110-.LFB110
 31918 20e4 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 686


 31919 20e5 9C       		.byte	0x9c
 31920 20e6 61210000 		.4byte	0x2161
 31921 20ea 23       		.uleb128 0x23
 31922 20eb 01150000 		.4byte	.LASF343
 31923 20ef 01       		.byte	0x1
 31924 20f0 4E0F     		.2byte	0xf4e
 31925 20f2 97000000 		.4byte	0x97
 31926 20f6 02       		.uleb128 0x2
 31927 20f7 91       		.byte	0x91
 31928 20f8 6F       		.sleb128 -17
 31929 20f9 26       		.uleb128 0x26
 31930 20fa 6300     		.ascii	"c\000"
 31931 20fc 01       		.byte	0x1
 31932 20fd 4F0F     		.2byte	0xf4f
 31933 20ff A3000000 		.4byte	0xa3
 31934 2103 02       		.uleb128 0x2
 31935 2104 91       		.byte	0x91
 31936 2105 6C       		.sleb128 -20
 31937 2106 26       		.uleb128 0x26
 31938 2107 6B00     		.ascii	"k\000"
 31939 2109 01       		.byte	0x1
 31940 210a 500F     		.2byte	0xf50
 31941 210c 97000000 		.4byte	0x97
 31942 2110 02       		.uleb128 0x2
 31943 2111 91       		.byte	0x91
 31944 2112 6B       		.sleb128 -21
 31945 2113 23       		.uleb128 0x23
 31946 2114 5C000000 		.4byte	.LASF344
 31947 2118 01       		.byte	0x1
 31948 2119 510F     		.2byte	0xf51
 31949 211b A3000000 		.4byte	0xa3
 31950 211f 02       		.uleb128 0x2
 31951 2120 91       		.byte	0x91
 31952 2121 68       		.sleb128 -24
 31953 2122 23       		.uleb128 0x23
 31954 2123 42130000 		.4byte	.LASF240
 31955 2127 01       		.byte	0x1
 31956 2128 520F     		.2byte	0xf52
 31957 212a C7000000 		.4byte	0xc7
 31958 212e 02       		.uleb128 0x2
 31959 212f 91       		.byte	0x91
 31960 2130 66       		.sleb128 -26
 31961 2131 23       		.uleb128 0x23
 31962 2132 7E140000 		.4byte	.LASF239
 31963 2136 01       		.byte	0x1
 31964 2137 530F     		.2byte	0xf53
 31965 2139 EB000000 		.4byte	0xeb
 31966 213d 02       		.uleb128 0x2
 31967 213e 91       		.byte	0x91
 31968 213f 60       		.sleb128 -32
 31969 2140 23       		.uleb128 0x23
 31970 2141 23070000 		.4byte	.LASF234
 31971 2145 01       		.byte	0x1
 31972 2146 560F     		.2byte	0xf56
 31973 2148 61210000 		.4byte	0x2161
 31974 214c 03       		.uleb128 0x3
 31975 214d 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 687


 31976 214e 807D     		.sleb128 -384
 31977 2150 23       		.uleb128 0x23
 31978 2151 3F0A0000 		.4byte	.LASF345
 31979 2155 01       		.byte	0x1
 31980 2156 570F     		.2byte	0xf57
 31981 2158 510C0000 		.4byte	0xc51
 31982 215c 03       		.uleb128 0x3
 31983 215d 91       		.byte	0x91
 31984 215e E07C     		.sleb128 -416
 31985 2160 00       		.byte	0
 31986 2161 09       		.uleb128 0x9
 31987 2162 97000000 		.4byte	0x97
 31988 2166 72210000 		.4byte	0x2172
 31989 216a 24       		.uleb128 0x24
 31990 216b 18010000 		.4byte	0x118
 31991 216f 5D01     		.2byte	0x15d
 31992 2171 00       		.byte	0
 31993 2172 27       		.uleb128 0x27
 31994 2173 59140000 		.4byte	.LASF346
 31995 2177 01       		.byte	0x1
 31996 2178 BA0F     		.2byte	0xfba
 31997 217a 00000000 		.4byte	.LFB111
 31998 217e 8C000000 		.4byte	.LFE111-.LFB111
 31999 2182 01       		.uleb128 0x1
 32000 2183 9C       		.byte	0x9c
 32001 2184 B2210000 		.4byte	0x21b2
 32002 2188 23       		.uleb128 0x23
 32003 2189 23070000 		.4byte	.LASF234
 32004 218d 01       		.byte	0x1
 32005 218e BD0F     		.2byte	0xfbd
 32006 2190 A80A0000 		.4byte	0xaa8
 32007 2194 02       		.uleb128 0x2
 32008 2195 91       		.byte	0x91
 32009 2196 60       		.sleb128 -32
 32010 2197 26       		.uleb128 0x26
 32011 2198 6900     		.ascii	"i\000"
 32012 219a 01       		.byte	0x1
 32013 219b BE0F     		.2byte	0xfbe
 32014 219d 97000000 		.4byte	0x97
 32015 21a1 02       		.uleb128 0x2
 32016 21a2 91       		.byte	0x91
 32017 21a3 6F       		.sleb128 -17
 32018 21a4 26       		.uleb128 0x26
 32019 21a5 6A00     		.ascii	"j\000"
 32020 21a7 01       		.byte	0x1
 32021 21a8 BE0F     		.2byte	0xfbe
 32022 21aa 97000000 		.4byte	0x97
 32023 21ae 02       		.uleb128 0x2
 32024 21af 91       		.byte	0x91
 32025 21b0 6E       		.sleb128 -18
 32026 21b1 00       		.byte	0
 32027 21b2 27       		.uleb128 0x27
 32028 21b3 4C120000 		.4byte	.LASF347
 32029 21b7 01       		.byte	0x1
 32030 21b8 D30F     		.2byte	0xfd3
 32031 21ba 00000000 		.4byte	.LFB112
 32032 21be EC000000 		.4byte	.LFE112-.LFB112
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 688


 32033 21c2 01       		.uleb128 0x1
 32034 21c3 9C       		.byte	0x9c
 32035 21c4 10220000 		.4byte	0x2210
 32036 21c8 23       		.uleb128 0x23
 32037 21c9 23070000 		.4byte	.LASF234
 32038 21cd 01       		.byte	0x1
 32039 21ce D60F     		.2byte	0xfd6
 32040 21d0 10220000 		.4byte	0x2210
 32041 21d4 02       		.uleb128 0x2
 32042 21d5 91       		.byte	0x91
 32043 21d6 54       		.sleb128 -44
 32044 21d7 26       		.uleb128 0x26
 32045 21d8 6900     		.ascii	"i\000"
 32046 21da 01       		.byte	0x1
 32047 21db D70F     		.2byte	0xfd7
 32048 21dd 97000000 		.4byte	0x97
 32049 21e1 02       		.uleb128 0x2
 32050 21e2 91       		.byte	0x91
 32051 21e3 6F       		.sleb128 -17
 32052 21e4 26       		.uleb128 0x26
 32053 21e5 6A00     		.ascii	"j\000"
 32054 21e7 01       		.byte	0x1
 32055 21e8 D70F     		.2byte	0xfd7
 32056 21ea 97000000 		.4byte	0x97
 32057 21ee 02       		.uleb128 0x2
 32058 21ef 91       		.byte	0x91
 32059 21f0 6E       		.sleb128 -18
 32060 21f1 26       		.uleb128 0x26
 32061 21f2 69647800 		.ascii	"idx\000"
 32062 21f6 01       		.byte	0x1
 32063 21f7 D70F     		.2byte	0xfd7
 32064 21f9 97000000 		.4byte	0x97
 32065 21fd 02       		.uleb128 0x2
 32066 21fe 91       		.byte	0x91
 32067 21ff 6D       		.sleb128 -19
 32068 2200 23       		.uleb128 0x23
 32069 2201 090E0000 		.4byte	.LASF241
 32070 2205 01       		.byte	0x1
 32071 2206 D80F     		.2byte	0xfd8
 32072 2208 A3000000 		.4byte	0xa3
 32073 220c 02       		.uleb128 0x2
 32074 220d 91       		.byte	0x91
 32075 220e 52       		.sleb128 -46
 32076 220f 00       		.byte	0
 32077 2210 09       		.uleb128 0x9
 32078 2211 97000000 		.4byte	0x97
 32079 2215 20220000 		.4byte	0x2220
 32080 2219 0A       		.uleb128 0xa
 32081 221a 18010000 		.4byte	0x118
 32082 221e 15       		.byte	0x15
 32083 221f 00       		.byte	0
 32084 2220 27       		.uleb128 0x27
 32085 2221 81040000 		.4byte	.LASF348
 32086 2225 01       		.byte	0x1
 32087 2226 F10F     		.2byte	0xff1
 32088 2228 00000000 		.4byte	.LFB113
 32089 222c 5C000000 		.4byte	.LFE113-.LFB113
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 689


 32090 2230 01       		.uleb128 0x1
 32091 2231 9C       		.byte	0x9c
 32092 2232 53220000 		.4byte	0x2253
 32093 2236 23       		.uleb128 0x23
 32094 2237 23070000 		.4byte	.LASF234
 32095 223b 01       		.byte	0x1
 32096 223c F40F     		.2byte	0xff4
 32097 223e 410C0000 		.4byte	0xc41
 32098 2242 02       		.uleb128 0x2
 32099 2243 91       		.byte	0x91
 32100 2244 68       		.sleb128 -24
 32101 2245 26       		.uleb128 0x26
 32102 2246 6900     		.ascii	"i\000"
 32103 2248 01       		.byte	0x1
 32104 2249 F50F     		.2byte	0xff5
 32105 224b 97000000 		.4byte	0x97
 32106 224f 02       		.uleb128 0x2
 32107 2250 91       		.byte	0x91
 32108 2251 77       		.sleb128 -9
 32109 2252 00       		.byte	0
 32110 2253 27       		.uleb128 0x27
 32111 2254 B9040000 		.4byte	.LASF349
 32112 2258 01       		.byte	0x1
 32113 2259 0810     		.2byte	0x1008
 32114 225b 00000000 		.4byte	.LFB114
 32115 225f C0000000 		.4byte	.LFE114-.LFB114
 32116 2263 01       		.uleb128 0x1
 32117 2264 9C       		.byte	0x9c
 32118 2265 A4220000 		.4byte	0x22a4
 32119 2269 23       		.uleb128 0x23
 32120 226a 23070000 		.4byte	.LASF234
 32121 226e 01       		.byte	0x1
 32122 226f 0B10     		.2byte	0x100b
 32123 2271 A4220000 		.4byte	0x22a4
 32124 2275 02       		.uleb128 0x2
 32125 2276 91       		.byte	0x91
 32126 2277 54       		.sleb128 -44
 32127 2278 26       		.uleb128 0x26
 32128 2279 6900     		.ascii	"i\000"
 32129 227b 01       		.byte	0x1
 32130 227c 0C10     		.2byte	0x100c
 32131 227e 97000000 		.4byte	0x97
 32132 2282 02       		.uleb128 0x2
 32133 2283 91       		.byte	0x91
 32134 2284 6F       		.sleb128 -17
 32135 2285 26       		.uleb128 0x26
 32136 2286 69647800 		.ascii	"idx\000"
 32137 228a 01       		.byte	0x1
 32138 228b 0C10     		.2byte	0x100c
 32139 228d 97000000 		.4byte	0x97
 32140 2291 02       		.uleb128 0x2
 32141 2292 91       		.byte	0x91
 32142 2293 6E       		.sleb128 -18
 32143 2294 23       		.uleb128 0x23
 32144 2295 42130000 		.4byte	.LASF240
 32145 2299 01       		.byte	0x1
 32146 229a 0D10     		.2byte	0x100d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 690


 32147 229c C7000000 		.4byte	0xc7
 32148 22a0 02       		.uleb128 0x2
 32149 22a1 91       		.byte	0x91
 32150 22a2 52       		.sleb128 -46
 32151 22a3 00       		.byte	0
 32152 22a4 09       		.uleb128 0x9
 32153 22a5 97000000 		.4byte	0x97
 32154 22a9 B4220000 		.4byte	0x22b4
 32155 22ad 0A       		.uleb128 0xa
 32156 22ae 18010000 		.4byte	0x118
 32157 22b2 19       		.byte	0x19
 32158 22b3 00       		.byte	0
 32159 22b4 22       		.uleb128 0x22
 32160 22b5 2B040000 		.4byte	.LASF350
 32161 22b9 01       		.byte	0x1
 32162 22ba 2310     		.2byte	0x1023
 32163 22bc 00000000 		.4byte	.LFB115
 32164 22c0 54010000 		.4byte	.LFE115-.LFB115
 32165 22c4 01       		.uleb128 0x1
 32166 22c5 9C       		.byte	0x9c
 32167 22c6 09230000 		.4byte	0x2309
 32168 22ca 25       		.uleb128 0x25
 32169 22cb 6E080000 		.4byte	.LASF351
 32170 22cf 01       		.byte	0x1
 32171 22d0 2310     		.2byte	0x1023
 32172 22d2 A3000000 		.4byte	0xa3
 32173 22d6 04       		.uleb128 0x4
 32174 22d7 91       		.byte	0x91
 32175 22d8 9EE37E   		.sleb128 -20066
 32176 22db 26       		.uleb128 0x26
 32177 22dc 6900     		.ascii	"i\000"
 32178 22de 01       		.byte	0x1
 32179 22df 2510     		.2byte	0x1025
 32180 22e1 97000000 		.4byte	0x97
 32181 22e5 02       		.uleb128 0x2
 32182 22e6 91       		.byte	0x91
 32183 22e7 77       		.sleb128 -9
 32184 22e8 23       		.uleb128 0x23
 32185 22e9 6C050000 		.4byte	.LASF352
 32186 22ed 01       		.byte	0x1
 32187 22ee 2610     		.2byte	0x1026
 32188 22f0 EC100000 		.4byte	0x10ec
 32189 22f4 02       		.uleb128 0x2
 32190 22f5 91       		.byte	0x91
 32191 22f6 44       		.sleb128 -60
 32192 22f7 23       		.uleb128 0x23
 32193 22f8 8F090000 		.4byte	.LASF223
 32194 22fc 01       		.byte	0x1
 32195 22fd 2710     		.2byte	0x1027
 32196 22ff 140F0000 		.4byte	0xf14
 32197 2303 04       		.uleb128 0x4
 32198 2304 91       		.byte	0x91
 32199 2305 A4E37E   		.sleb128 -20060
 32200 2308 00       		.byte	0
 32201 2309 22       		.uleb128 0x22
 32202 230a 09050000 		.4byte	.LASF353
 32203 230e 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 691


 32204 230f 3F10     		.2byte	0x103f
 32205 2311 00000000 		.4byte	.LFB116
 32206 2315 B0000000 		.4byte	.LFE116-.LFB116
 32207 2319 01       		.uleb128 0x1
 32208 231a 9C       		.byte	0x9c
 32209 231b 6A230000 		.4byte	0x236a
 32210 231f 25       		.uleb128 0x25
 32211 2320 6E080000 		.4byte	.LASF351
 32212 2324 01       		.byte	0x1
 32213 2325 3F10     		.2byte	0x103f
 32214 2327 A3000000 		.4byte	0xa3
 32215 232b 03       		.uleb128 0x3
 32216 232c 91       		.byte	0x91
 32217 232d BE7F     		.sleb128 -66
 32218 232f 26       		.uleb128 0x26
 32219 2330 6900     		.ascii	"i\000"
 32220 2332 01       		.byte	0x1
 32221 2333 4110     		.2byte	0x1041
 32222 2335 97000000 		.4byte	0x97
 32223 2339 02       		.uleb128 0x2
 32224 233a 91       		.byte	0x91
 32225 233b 77       		.sleb128 -9
 32226 233c 23       		.uleb128 0x23
 32227 233d 6C050000 		.4byte	.LASF352
 32228 2341 01       		.byte	0x1
 32229 2342 4210     		.2byte	0x1042
 32230 2344 EC100000 		.4byte	0x10ec
 32231 2348 02       		.uleb128 0x2
 32232 2349 91       		.byte	0x91
 32233 234a 44       		.sleb128 -60
 32234 234b 26       		.uleb128 0x26
 32235 234c 72657300 		.ascii	"res\000"
 32236 2350 01       		.byte	0x1
 32237 2351 4B10     		.2byte	0x104b
 32238 2353 97000000 		.4byte	0x97
 32239 2357 02       		.uleb128 0x2
 32240 2358 91       		.byte	0x91
 32241 2359 76       		.sleb128 -10
 32242 235a 23       		.uleb128 0x23
 32243 235b 23070000 		.4byte	.LASF234
 32244 235f 01       		.byte	0x1
 32245 2360 4E10     		.2byte	0x104e
 32246 2362 10060000 		.4byte	0x610
 32247 2366 02       		.uleb128 0x2
 32248 2367 91       		.byte	0x91
 32249 2368 40       		.sleb128 -64
 32250 2369 00       		.byte	0
 32251 236a 28       		.uleb128 0x28
 32252 236b 20010000 		.4byte	.LASF354
 32253 236f 01       		.byte	0x1
 32254 2370 6010     		.2byte	0x1060
 32255 2372 00000000 		.4byte	.LFB117
 32256 2376 12000000 		.4byte	.LFE117-.LFB117
 32257 237a 01       		.uleb128 0x1
 32258 237b 9C       		.byte	0x9c
 32259 237c 90230000 		.4byte	0x2390
 32260 2380 25       		.uleb128 0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 692


 32261 2381 C6070000 		.4byte	.LASF355
 32262 2385 01       		.byte	0x1
 32263 2386 6010     		.2byte	0x1060
 32264 2388 73000000 		.4byte	0x73
 32265 238c 02       		.uleb128 0x2
 32266 238d 91       		.byte	0x91
 32267 238e 74       		.sleb128 -12
 32268 238f 00       		.byte	0
 32269 2390 31       		.uleb128 0x31
 32270 2391 750D0000 		.4byte	.LASF356
 32271 2395 01       		.byte	0x1
 32272 2396 AE10     		.2byte	0x10ae
 32273 2398 97000000 		.4byte	0x97
 32274 239c 00000000 		.4byte	.LFB118
 32275 23a0 64010000 		.4byte	.LFE118-.LFB118
 32276 23a4 01       		.uleb128 0x1
 32277 23a5 9C       		.byte	0x9c
 32278 23a6 0B240000 		.4byte	0x240b
 32279 23aa 23       		.uleb128 0x23
 32280 23ab 6E0F0000 		.4byte	.LASF357
 32281 23af 01       		.byte	0x1
 32282 23b0 B010     		.2byte	0x10b0
 32283 23b2 97000000 		.4byte	0x97
 32284 23b6 05       		.uleb128 0x5
 32285 23b7 03       		.byte	0x3
 32286 23b8 0C000000 		.4byte	fsm_state.11576
 32287 23bc 26       		.uleb128 0x26
 32288 23bd 636E7400 		.ascii	"cnt\000"
 32289 23c1 01       		.byte	0x1
 32290 23c2 B110     		.2byte	0x10b1
 32291 23c4 D3000000 		.4byte	0xd3
 32292 23c8 05       		.uleb128 0x5
 32293 23c9 03       		.byte	0x3
 32294 23ca 10000000 		.4byte	cnt.11577
 32295 23ce 23       		.uleb128 0x23
 32296 23cf 59050000 		.4byte	.LASF358
 32297 23d3 01       		.byte	0x1
 32298 23d4 B210     		.2byte	0x10b2
 32299 23d6 D3000000 		.4byte	0xd3
 32300 23da 02       		.uleb128 0x2
 32301 23db 91       		.byte	0x91
 32302 23dc 74       		.sleb128 -12
 32303 23dd 23       		.uleb128 0x23
 32304 23de 970C0000 		.4byte	.LASF359
 32305 23e2 01       		.byte	0x1
 32306 23e3 B210     		.2byte	0x10b2
 32307 23e5 D3000000 		.4byte	0xd3
 32308 23e9 02       		.uleb128 0x2
 32309 23ea 91       		.byte	0x91
 32310 23eb 70       		.sleb128 -16
 32311 23ec 23       		.uleb128 0x23
 32312 23ed A7000000 		.4byte	.LASF360
 32313 23f1 01       		.byte	0x1
 32314 23f2 B310     		.2byte	0x10b3
 32315 23f4 D3000000 		.4byte	0xd3
 32316 23f8 02       		.uleb128 0x2
 32317 23f9 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 693


 32318 23fa 6C       		.sleb128 -20
 32319 23fb 23       		.uleb128 0x23
 32320 23fc B3000000 		.4byte	.LASF361
 32321 2400 01       		.byte	0x1
 32322 2401 B310     		.2byte	0x10b3
 32323 2403 D3000000 		.4byte	0xd3
 32324 2407 02       		.uleb128 0x2
 32325 2408 91       		.byte	0x91
 32326 2409 68       		.sleb128 -24
 32327 240a 00       		.byte	0
 32328 240b 28       		.uleb128 0x28
 32329 240c D5080000 		.4byte	.LASF362
 32330 2410 01       		.byte	0x1
 32331 2411 0011     		.2byte	0x1100
 32332 2413 00000000 		.4byte	.LFB119
 32333 2417 12000000 		.4byte	.LFE119-.LFB119
 32334 241b 01       		.uleb128 0x1
 32335 241c 9C       		.byte	0x9c
 32336 241d 31240000 		.4byte	0x2431
 32337 2421 25       		.uleb128 0x25
 32338 2422 C6070000 		.4byte	.LASF355
 32339 2426 01       		.byte	0x1
 32340 2427 0011     		.2byte	0x1100
 32341 2429 73000000 		.4byte	0x73
 32342 242d 02       		.uleb128 0x2
 32343 242e 91       		.byte	0x91
 32344 242f 74       		.sleb128 -12
 32345 2430 00       		.byte	0
 32346 2431 28       		.uleb128 0x28
 32347 2432 020F0000 		.4byte	.LASF363
 32348 2436 01       		.byte	0x1
 32349 2437 4C11     		.2byte	0x114c
 32350 2439 00000000 		.4byte	.LFB120
 32351 243d 1A000000 		.4byte	.LFE120-.LFB120
 32352 2441 01       		.uleb128 0x1
 32353 2442 9C       		.byte	0x9c
 32354 2443 66240000 		.4byte	0x2466
 32355 2447 25       		.uleb128 0x25
 32356 2448 09040000 		.4byte	.LASF364
 32357 244c 01       		.byte	0x1
 32358 244d 4C11     		.2byte	0x114c
 32359 244f 97000000 		.4byte	0x97
 32360 2453 02       		.uleb128 0x2
 32361 2454 91       		.byte	0x91
 32362 2455 77       		.sleb128 -9
 32363 2456 25       		.uleb128 0x25
 32364 2457 030C0000 		.4byte	.LASF191
 32365 245b 01       		.byte	0x1
 32366 245c 4C11     		.2byte	0x114c
 32367 245e 97000000 		.4byte	0x97
 32368 2462 02       		.uleb128 0x2
 32369 2463 91       		.byte	0x91
 32370 2464 76       		.sleb128 -10
 32371 2465 00       		.byte	0
 32372 2466 32       		.uleb128 0x32
 32373 2467 BF000000 		.4byte	.LASF366
 32374 246b 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 694


 32375 246c 7611     		.2byte	0x1176
 32376 246e 00000000 		.4byte	.LFB121
 32377 2472 0C000000 		.4byte	.LFE121-.LFB121
 32378 2476 01       		.uleb128 0x1
 32379 2477 9C       		.byte	0x9c
 32380 2478 32       		.uleb128 0x32
 32381 2479 52070000 		.4byte	.LASF367
 32382 247d 01       		.byte	0x1
 32383 247e 8C11     		.2byte	0x118c
 32384 2480 00000000 		.4byte	.LFB122
 32385 2484 0C000000 		.4byte	.LFE122-.LFB122
 32386 2488 01       		.uleb128 0x1
 32387 2489 9C       		.byte	0x9c
 32388 248a 33       		.uleb128 0x33
 32389 248b 8B130000 		.4byte	.LASF368
 32390 248f 09       		.byte	0x9
 32391 2490 1207     		.2byte	0x712
 32392 2492 96240000 		.4byte	0x2496
 32393 2496 06       		.uleb128 0x6
 32394 2497 81000000 		.4byte	0x81
 32395 249b 09       		.uleb128 0x9
 32396 249c 28030000 		.4byte	0x328
 32397 24a0 AB240000 		.4byte	0x24ab
 32398 24a4 0A       		.uleb128 0xa
 32399 24a5 18010000 		.4byte	0x118
 32400 24a9 01       		.byte	0x1
 32401 24aa 00       		.byte	0
 32402 24ab 33       		.uleb128 0x33
 32403 24ac 5B150000 		.4byte	.LASF369
 32404 24b0 08       		.byte	0x8
 32405 24b1 2302     		.2byte	0x223
 32406 24b3 9B240000 		.4byte	0x249b
 32407 24b7 33       		.uleb128 0x33
 32408 24b8 D1050000 		.4byte	.LASF370
 32409 24bc 08       		.byte	0x8
 32410 24bd 2302     		.2byte	0x223
 32411 24bf 9B240000 		.4byte	0x249b
 32412 24c3 33       		.uleb128 0x33
 32413 24c4 BB0E0000 		.4byte	.LASF371
 32414 24c8 08       		.byte	0x8
 32415 24c9 2302     		.2byte	0x223
 32416 24cb 9B240000 		.4byte	0x249b
 32417 24cf 09       		.uleb128 0x9
 32418 24d0 65030000 		.4byte	0x365
 32419 24d4 DF240000 		.4byte	0x24df
 32420 24d8 0A       		.uleb128 0xa
 32421 24d9 18010000 		.4byte	0x118
 32422 24dd 01       		.byte	0x1
 32423 24de 00       		.byte	0
 32424 24df 33       		.uleb128 0x33
 32425 24e0 D6070000 		.4byte	.LASF372
 32426 24e4 08       		.byte	0x8
 32427 24e5 2402     		.2byte	0x224
 32428 24e7 CF240000 		.4byte	0x24cf
 32429 24eb 33       		.uleb128 0x33
 32430 24ec AE150000 		.4byte	.LASF373
 32431 24f0 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 695


 32432 24f1 2402     		.2byte	0x224
 32433 24f3 CF240000 		.4byte	0x24cf
 32434 24f7 33       		.uleb128 0x33
 32435 24f8 25150000 		.4byte	.LASF374
 32436 24fc 08       		.byte	0x8
 32437 24fd 2502     		.2byte	0x225
 32438 24ff E6030000 		.4byte	0x3e6
 32439 2503 33       		.uleb128 0x33
 32440 2504 3E120000 		.4byte	.LASF375
 32441 2508 08       		.byte	0x8
 32442 2509 2502     		.2byte	0x225
 32443 250b E6030000 		.4byte	0x3e6
 32444 250f 33       		.uleb128 0x33
 32445 2510 F4110000 		.4byte	.LASF376
 32446 2514 08       		.byte	0x8
 32447 2515 2602     		.2byte	0x226
 32448 2517 37040000 		.4byte	0x437
 32449 251b 33       		.uleb128 0x33
 32450 251c DA000000 		.4byte	.LASF377
 32451 2520 08       		.byte	0x8
 32452 2521 2702     		.2byte	0x227
 32453 2523 52040000 		.4byte	0x452
 32454 2527 33       		.uleb128 0x33
 32455 2528 23120000 		.4byte	.LASF378
 32456 252c 08       		.byte	0x8
 32457 252d 2802     		.2byte	0x228
 32458 252f 5C0B0000 		.4byte	0xb5c
 32459 2533 33       		.uleb128 0x33
 32460 2534 790C0000 		.4byte	.LASF379
 32461 2538 08       		.byte	0x8
 32462 2539 2802     		.2byte	0x228
 32463 253b 5C0B0000 		.4byte	0xb5c
 32464 253f 33       		.uleb128 0x33
 32465 2540 3C0B0000 		.4byte	.LASF380
 32466 2544 08       		.byte	0x8
 32467 2545 2902     		.2byte	0x229
 32468 2547 0D0D0000 		.4byte	0xd0d
 32469 254b 33       		.uleb128 0x33
 32470 254c E6030000 		.4byte	.LASF381
 32471 2550 08       		.byte	0x8
 32472 2551 2F02     		.2byte	0x22f
 32473 2553 A3000000 		.4byte	0xa3
 32474 2557 33       		.uleb128 0x33
 32475 2558 01100000 		.4byte	.LASF382
 32476 255c 08       		.byte	0x8
 32477 255d 3002     		.2byte	0x230
 32478 255f A3000000 		.4byte	0xa3
 32479 2563 33       		.uleb128 0x33
 32480 2564 33100000 		.4byte	.LASF383
 32481 2568 08       		.byte	0x8
 32482 2569 3302     		.2byte	0x233
 32483 256b 17040000 		.4byte	0x417
 32484 256f 33       		.uleb128 0x33
 32485 2570 22140000 		.4byte	.LASF384
 32486 2574 08       		.byte	0x8
 32487 2575 3402     		.2byte	0x234
 32488 2577 C9080000 		.4byte	0x8c9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 696


 32489 257b 33       		.uleb128 0x33
 32490 257c AB130000 		.4byte	.LASF385
 32491 2580 08       		.byte	0x8
 32492 2581 3702     		.2byte	0x237
 32493 2583 17040000 		.4byte	0x417
 32494 2587 33       		.uleb128 0x33
 32495 2588 0C0C0000 		.4byte	.LASF386
 32496 258c 08       		.byte	0x8
 32497 258d 4102     		.2byte	0x241
 32498 258f D9080000 		.4byte	0x8d9
 32499 2593 33       		.uleb128 0x33
 32500 2594 99050000 		.4byte	.LASF387
 32501 2598 08       		.byte	0x8
 32502 2599 4302     		.2byte	0x243
 32503 259b 97000000 		.4byte	0x97
 32504 259f 33       		.uleb128 0x33
 32505 25a0 910B0000 		.4byte	.LASF388
 32506 25a4 08       		.byte	0x8
 32507 25a5 4A02     		.2byte	0x24a
 32508 25a7 D9080000 		.4byte	0x8d9
 32509 25ab 33       		.uleb128 0x33
 32510 25ac C5080000 		.4byte	.LASF389
 32511 25b0 08       		.byte	0x8
 32512 25b1 4B02     		.2byte	0x24b
 32513 25b3 97000000 		.4byte	0x97
 32514 25b7 09       		.uleb128 0x9
 32515 25b8 C7000000 		.4byte	0xc7
 32516 25bc C7250000 		.4byte	0x25c7
 32517 25c0 0A       		.uleb128 0xa
 32518 25c1 18010000 		.4byte	0x118
 32519 25c5 0B       		.byte	0xb
 32520 25c6 00       		.byte	0
 32521 25c7 33       		.uleb128 0x33
 32522 25c8 91050000 		.4byte	.LASF390
 32523 25cc 08       		.byte	0x8
 32524 25cd 4E02     		.2byte	0x24e
 32525 25cf B7250000 		.4byte	0x25b7
 32526 25d3 33       		.uleb128 0x33
 32527 25d4 67150000 		.4byte	.LASF391
 32528 25d8 08       		.byte	0x8
 32529 25d9 4F02     		.2byte	0x24f
 32530 25db 97000000 		.4byte	0x97
 32531 25df 09       		.uleb128 0x9
 32532 25e0 AF000000 		.4byte	0xaf
 32533 25e4 F5250000 		.4byte	0x25f5
 32534 25e8 0A       		.uleb128 0xa
 32535 25e9 18010000 		.4byte	0x118
 32536 25ed 01       		.byte	0x1
 32537 25ee 0A       		.uleb128 0xa
 32538 25ef 18010000 		.4byte	0x118
 32539 25f3 04       		.byte	0x4
 32540 25f4 00       		.byte	0
 32541 25f5 33       		.uleb128 0x33
 32542 25f6 04080000 		.4byte	.LASF392
 32543 25fa 08       		.byte	0x8
 32544 25fb 5502     		.2byte	0x255
 32545 25fd DF250000 		.4byte	0x25df
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 697


 32546 2601 33       		.uleb128 0x33
 32547 2602 1F110000 		.4byte	.LASF393
 32548 2606 08       		.byte	0x8
 32549 2607 5602     		.2byte	0x256
 32550 2609 D9080000 		.4byte	0x8d9
 32551 260d 09       		.uleb128 0x9
 32552 260e A3000000 		.4byte	0xa3
 32553 2612 23260000 		.4byte	0x2623
 32554 2616 0A       		.uleb128 0xa
 32555 2617 18010000 		.4byte	0x118
 32556 261b 01       		.byte	0x1
 32557 261c 0A       		.uleb128 0xa
 32558 261d 18010000 		.4byte	0x118
 32559 2621 04       		.byte	0x4
 32560 2622 00       		.byte	0
 32561 2623 33       		.uleb128 0x33
 32562 2624 4B140000 		.4byte	.LASF394
 32563 2628 08       		.byte	0x8
 32564 2629 5702     		.2byte	0x257
 32565 262b 0D260000 		.4byte	0x260d
 32566 262f 09       		.uleb128 0x9
 32567 2630 97000000 		.4byte	0x97
 32568 2634 45260000 		.4byte	0x2645
 32569 2638 0A       		.uleb128 0xa
 32570 2639 18010000 		.4byte	0x118
 32571 263d 01       		.byte	0x1
 32572 263e 0A       		.uleb128 0xa
 32573 263f 18010000 		.4byte	0x118
 32574 2643 04       		.byte	0x4
 32575 2644 00       		.byte	0
 32576 2645 33       		.uleb128 0x33
 32577 2646 DD070000 		.4byte	.LASF395
 32578 264a 08       		.byte	0x8
 32579 264b 5802     		.2byte	0x258
 32580 264d 2F260000 		.4byte	0x262f
 32581 2651 33       		.uleb128 0x33
 32582 2652 39070000 		.4byte	.LASF396
 32583 2656 08       		.byte	0x8
 32584 2657 5F02     		.2byte	0x25f
 32585 2659 22030000 		.4byte	0x322
 32586 265d 33       		.uleb128 0x33
 32587 265e B9100000 		.4byte	.LASF397
 32588 2662 08       		.byte	0x8
 32589 2663 6002     		.2byte	0x260
 32590 2665 CC160000 		.4byte	0x16cc
 32591 2669 33       		.uleb128 0x33
 32592 266a C9040000 		.4byte	.LASF398
 32593 266e 08       		.byte	0x8
 32594 266f 6102     		.2byte	0x261
 32595 2671 CC160000 		.4byte	0x16cc
 32596 2675 33       		.uleb128 0x33
 32597 2676 EB140000 		.4byte	.LASF399
 32598 267a 08       		.byte	0x8
 32599 267b 6402     		.2byte	0x264
 32600 267d CC160000 		.4byte	0x16cc
 32601 2681 33       		.uleb128 0x33
 32602 2682 C9120000 		.4byte	.LASF400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 698


 32603 2686 08       		.byte	0x8
 32604 2687 6702     		.2byte	0x267
 32605 2689 97000000 		.4byte	0x97
 32606 268d 33       		.uleb128 0x33
 32607 268e 88140000 		.4byte	.LASF401
 32608 2692 08       		.byte	0x8
 32609 2693 6802     		.2byte	0x268
 32610 2695 4A080000 		.4byte	0x84a
 32611 2699 33       		.uleb128 0x33
 32612 269a 7C130000 		.4byte	.LASF402
 32613 269e 08       		.byte	0x8
 32614 269f 6902     		.2byte	0x269
 32615 26a1 73000000 		.4byte	0x73
 32616 26a5 09       		.uleb128 0x9
 32617 26a6 73000000 		.4byte	0x73
 32618 26aa B5260000 		.4byte	0x26b5
 32619 26ae 0A       		.uleb128 0xa
 32620 26af 18010000 		.4byte	0x118
 32621 26b3 04       		.byte	0x4
 32622 26b4 00       		.byte	0
 32623 26b5 33       		.uleb128 0x33
 32624 26b6 CB0D0000 		.4byte	.LASF403
 32625 26ba 08       		.byte	0x8
 32626 26bb 6A02     		.2byte	0x26a
 32627 26bd A5260000 		.4byte	0x26a5
 32628 26c1 09       		.uleb128 0x9
 32629 26c2 910C0000 		.4byte	0xc91
 32630 26c6 D1260000 		.4byte	0x26d1
 32631 26ca 0A       		.uleb128 0xa
 32632 26cb 18010000 		.4byte	0x118
 32633 26cf 04       		.byte	0x4
 32634 26d0 00       		.byte	0
 32635 26d1 33       		.uleb128 0x33
 32636 26d2 63060000 		.4byte	.LASF404
 32637 26d6 08       		.byte	0x8
 32638 26d7 6B02     		.2byte	0x26b
 32639 26d9 C1260000 		.4byte	0x26c1
 32640 26dd 09       		.uleb128 0x9
 32641 26de 97000000 		.4byte	0x97
 32642 26e2 F3260000 		.4byte	0x26f3
 32643 26e6 0A       		.uleb128 0xa
 32644 26e7 18010000 		.4byte	0x118
 32645 26eb 04       		.byte	0x4
 32646 26ec 0A       		.uleb128 0xa
 32647 26ed 18010000 		.4byte	0x118
 32648 26f1 02       		.byte	0x2
 32649 26f2 00       		.byte	0
 32650 26f3 33       		.uleb128 0x33
 32651 26f4 E30C0000 		.4byte	.LASF405
 32652 26f8 08       		.byte	0x8
 32653 26f9 6F02     		.2byte	0x26f
 32654 26fb DD260000 		.4byte	0x26dd
 32655 26ff 33       		.uleb128 0x33
 32656 2700 8D150000 		.4byte	.LASF406
 32657 2704 08       		.byte	0x8
 32658 2705 7402     		.2byte	0x274
 32659 2707 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 699


 32660 270b 09       		.uleb128 0x9
 32661 270c A3000000 		.4byte	0xa3
 32662 2710 22270000 		.4byte	0x2722
 32663 2714 24       		.uleb128 0x24
 32664 2715 18010000 		.4byte	0x118
 32665 2719 5702     		.2byte	0x257
 32666 271b 0A       		.uleb128 0xa
 32667 271c 18010000 		.4byte	0x118
 32668 2720 01       		.byte	0x1
 32669 2721 00       		.byte	0
 32670 2722 33       		.uleb128 0x33
 32671 2723 4C130000 		.4byte	.LASF407
 32672 2727 08       		.byte	0x8
 32673 2728 7702     		.2byte	0x277
 32674 272a 0B270000 		.4byte	0x270b
 32675 272e 33       		.uleb128 0x33
 32676 272f EE0B0000 		.4byte	.LASF408
 32677 2733 08       		.byte	0x8
 32678 2734 7802     		.2byte	0x278
 32679 2736 AF000000 		.4byte	0xaf
 32680 273a 34       		.uleb128 0x34
 32681 273b 58130000 		.4byte	.LASF409
 32682 273f 01       		.byte	0x1
 32683 2740 33       		.byte	0x33
 32684 2741 4B270000 		.4byte	0x274b
 32685 2745 05       		.uleb128 0x5
 32686 2746 03       		.byte	0x3
 32687 2747 00000000 		.4byte	EEPROM_ADDR
 32688 274b 07       		.uleb128 0x7
 32689 274c 04       		.byte	0x4
 32690 274d 00010000 		.4byte	0x100
 32691 2751 00       		.byte	0
 32692              		.section	.debug_abbrev,"",%progbits
 32693              	.Ldebug_abbrev0:
 32694 0000 01       		.uleb128 0x1
 32695 0001 11       		.uleb128 0x11
 32696 0002 01       		.byte	0x1
 32697 0003 25       		.uleb128 0x25
 32698 0004 0E       		.uleb128 0xe
 32699 0005 13       		.uleb128 0x13
 32700 0006 0B       		.uleb128 0xb
 32701 0007 03       		.uleb128 0x3
 32702 0008 0E       		.uleb128 0xe
 32703 0009 1B       		.uleb128 0x1b
 32704 000a 0E       		.uleb128 0xe
 32705 000b 55       		.uleb128 0x55
 32706 000c 17       		.uleb128 0x17
 32707 000d 11       		.uleb128 0x11
 32708 000e 01       		.uleb128 0x1
 32709 000f 10       		.uleb128 0x10
 32710 0010 17       		.uleb128 0x17
 32711 0011 00       		.byte	0
 32712 0012 00       		.byte	0
 32713 0013 02       		.uleb128 0x2
 32714 0014 24       		.uleb128 0x24
 32715 0015 00       		.byte	0
 32716 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 700


 32717 0017 0B       		.uleb128 0xb
 32718 0018 3E       		.uleb128 0x3e
 32719 0019 0B       		.uleb128 0xb
 32720 001a 03       		.uleb128 0x3
 32721 001b 0E       		.uleb128 0xe
 32722 001c 00       		.byte	0
 32723 001d 00       		.byte	0
 32724 001e 03       		.uleb128 0x3
 32725 001f 16       		.uleb128 0x16
 32726 0020 00       		.byte	0
 32727 0021 03       		.uleb128 0x3
 32728 0022 0E       		.uleb128 0xe
 32729 0023 3A       		.uleb128 0x3a
 32730 0024 0B       		.uleb128 0xb
 32731 0025 3B       		.uleb128 0x3b
 32732 0026 0B       		.uleb128 0xb
 32733 0027 49       		.uleb128 0x49
 32734 0028 13       		.uleb128 0x13
 32735 0029 00       		.byte	0
 32736 002a 00       		.byte	0
 32737 002b 04       		.uleb128 0x4
 32738 002c 24       		.uleb128 0x24
 32739 002d 00       		.byte	0
 32740 002e 0B       		.uleb128 0xb
 32741 002f 0B       		.uleb128 0xb
 32742 0030 3E       		.uleb128 0x3e
 32743 0031 0B       		.uleb128 0xb
 32744 0032 03       		.uleb128 0x3
 32745 0033 08       		.uleb128 0x8
 32746 0034 00       		.byte	0
 32747 0035 00       		.byte	0
 32748 0036 05       		.uleb128 0x5
 32749 0037 16       		.uleb128 0x16
 32750 0038 00       		.byte	0
 32751 0039 03       		.uleb128 0x3
 32752 003a 0E       		.uleb128 0xe
 32753 003b 3A       		.uleb128 0x3a
 32754 003c 0B       		.uleb128 0xb
 32755 003d 3B       		.uleb128 0x3b
 32756 003e 05       		.uleb128 0x5
 32757 003f 49       		.uleb128 0x49
 32758 0040 13       		.uleb128 0x13
 32759 0041 00       		.byte	0
 32760 0042 00       		.byte	0
 32761 0043 06       		.uleb128 0x6
 32762 0044 35       		.uleb128 0x35
 32763 0045 00       		.byte	0
 32764 0046 49       		.uleb128 0x49
 32765 0047 13       		.uleb128 0x13
 32766 0048 00       		.byte	0
 32767 0049 00       		.byte	0
 32768 004a 07       		.uleb128 0x7
 32769 004b 0F       		.uleb128 0xf
 32770 004c 00       		.byte	0
 32771 004d 0B       		.uleb128 0xb
 32772 004e 0B       		.uleb128 0xb
 32773 004f 49       		.uleb128 0x49
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 701


 32774 0050 13       		.uleb128 0x13
 32775 0051 00       		.byte	0
 32776 0052 00       		.byte	0
 32777 0053 08       		.uleb128 0x8
 32778 0054 26       		.uleb128 0x26
 32779 0055 00       		.byte	0
 32780 0056 49       		.uleb128 0x49
 32781 0057 13       		.uleb128 0x13
 32782 0058 00       		.byte	0
 32783 0059 00       		.byte	0
 32784 005a 09       		.uleb128 0x9
 32785 005b 01       		.uleb128 0x1
 32786 005c 01       		.byte	0x1
 32787 005d 49       		.uleb128 0x49
 32788 005e 13       		.uleb128 0x13
 32789 005f 01       		.uleb128 0x1
 32790 0060 13       		.uleb128 0x13
 32791 0061 00       		.byte	0
 32792 0062 00       		.byte	0
 32793 0063 0A       		.uleb128 0xa
 32794 0064 21       		.uleb128 0x21
 32795 0065 00       		.byte	0
 32796 0066 49       		.uleb128 0x49
 32797 0067 13       		.uleb128 0x13
 32798 0068 2F       		.uleb128 0x2f
 32799 0069 0B       		.uleb128 0xb
 32800 006a 00       		.byte	0
 32801 006b 00       		.byte	0
 32802 006c 0B       		.uleb128 0xb
 32803 006d 04       		.uleb128 0x4
 32804 006e 01       		.byte	0x1
 32805 006f 03       		.uleb128 0x3
 32806 0070 0E       		.uleb128 0xe
 32807 0071 0B       		.uleb128 0xb
 32808 0072 0B       		.uleb128 0xb
 32809 0073 49       		.uleb128 0x49
 32810 0074 13       		.uleb128 0x13
 32811 0075 3A       		.uleb128 0x3a
 32812 0076 0B       		.uleb128 0xb
 32813 0077 3B       		.uleb128 0x3b
 32814 0078 0B       		.uleb128 0xb
 32815 0079 01       		.uleb128 0x1
 32816 007a 13       		.uleb128 0x13
 32817 007b 00       		.byte	0
 32818 007c 00       		.byte	0
 32819 007d 0C       		.uleb128 0xc
 32820 007e 28       		.uleb128 0x28
 32821 007f 00       		.byte	0
 32822 0080 03       		.uleb128 0x3
 32823 0081 0E       		.uleb128 0xe
 32824 0082 1C       		.uleb128 0x1c
 32825 0083 0B       		.uleb128 0xb
 32826 0084 00       		.byte	0
 32827 0085 00       		.byte	0
 32828 0086 0D       		.uleb128 0xd
 32829 0087 13       		.uleb128 0x13
 32830 0088 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 702


 32831 0089 03       		.uleb128 0x3
 32832 008a 0E       		.uleb128 0xe
 32833 008b 3C       		.uleb128 0x3c
 32834 008c 19       		.uleb128 0x19
 32835 008d 00       		.byte	0
 32836 008e 00       		.byte	0
 32837 008f 0E       		.uleb128 0xe
 32838 0090 13       		.uleb128 0x13
 32839 0091 01       		.byte	0x1
 32840 0092 03       		.uleb128 0x3
 32841 0093 0E       		.uleb128 0xe
 32842 0094 0B       		.uleb128 0xb
 32843 0095 0B       		.uleb128 0xb
 32844 0096 3A       		.uleb128 0x3a
 32845 0097 0B       		.uleb128 0xb
 32846 0098 3B       		.uleb128 0x3b
 32847 0099 0B       		.uleb128 0xb
 32848 009a 01       		.uleb128 0x1
 32849 009b 13       		.uleb128 0x13
 32850 009c 00       		.byte	0
 32851 009d 00       		.byte	0
 32852 009e 0F       		.uleb128 0xf
 32853 009f 0D       		.uleb128 0xd
 32854 00a0 00       		.byte	0
 32855 00a1 03       		.uleb128 0x3
 32856 00a2 08       		.uleb128 0x8
 32857 00a3 3A       		.uleb128 0x3a
 32858 00a4 0B       		.uleb128 0xb
 32859 00a5 3B       		.uleb128 0x3b
 32860 00a6 0B       		.uleb128 0xb
 32861 00a7 49       		.uleb128 0x49
 32862 00a8 13       		.uleb128 0x13
 32863 00a9 38       		.uleb128 0x38
 32864 00aa 0B       		.uleb128 0xb
 32865 00ab 00       		.byte	0
 32866 00ac 00       		.byte	0
 32867 00ad 10       		.uleb128 0x10
 32868 00ae 0D       		.uleb128 0xd
 32869 00af 00       		.byte	0
 32870 00b0 03       		.uleb128 0x3
 32871 00b1 0E       		.uleb128 0xe
 32872 00b2 3A       		.uleb128 0x3a
 32873 00b3 0B       		.uleb128 0xb
 32874 00b4 3B       		.uleb128 0x3b
 32875 00b5 0B       		.uleb128 0xb
 32876 00b6 49       		.uleb128 0x49
 32877 00b7 13       		.uleb128 0x13
 32878 00b8 38       		.uleb128 0x38
 32879 00b9 0B       		.uleb128 0xb
 32880 00ba 00       		.byte	0
 32881 00bb 00       		.byte	0
 32882 00bc 11       		.uleb128 0x11
 32883 00bd 13       		.uleb128 0x13
 32884 00be 01       		.byte	0x1
 32885 00bf 03       		.uleb128 0x3
 32886 00c0 0E       		.uleb128 0xe
 32887 00c1 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 703


 32888 00c2 0B       		.uleb128 0xb
 32889 00c3 3A       		.uleb128 0x3a
 32890 00c4 0B       		.uleb128 0xb
 32891 00c5 3B       		.uleb128 0x3b
 32892 00c6 05       		.uleb128 0x5
 32893 00c7 01       		.uleb128 0x1
 32894 00c8 13       		.uleb128 0x13
 32895 00c9 00       		.byte	0
 32896 00ca 00       		.byte	0
 32897 00cb 12       		.uleb128 0x12
 32898 00cc 0D       		.uleb128 0xd
 32899 00cd 00       		.byte	0
 32900 00ce 03       		.uleb128 0x3
 32901 00cf 0E       		.uleb128 0xe
 32902 00d0 3A       		.uleb128 0x3a
 32903 00d1 0B       		.uleb128 0xb
 32904 00d2 3B       		.uleb128 0x3b
 32905 00d3 05       		.uleb128 0x5
 32906 00d4 49       		.uleb128 0x49
 32907 00d5 13       		.uleb128 0x13
 32908 00d6 38       		.uleb128 0x38
 32909 00d7 0B       		.uleb128 0xb
 32910 00d8 00       		.byte	0
 32911 00d9 00       		.byte	0
 32912 00da 13       		.uleb128 0x13
 32913 00db 0D       		.uleb128 0xd
 32914 00dc 00       		.byte	0
 32915 00dd 03       		.uleb128 0x3
 32916 00de 08       		.uleb128 0x8
 32917 00df 3A       		.uleb128 0x3a
 32918 00e0 0B       		.uleb128 0xb
 32919 00e1 3B       		.uleb128 0x3b
 32920 00e2 05       		.uleb128 0x5
 32921 00e3 49       		.uleb128 0x49
 32922 00e4 13       		.uleb128 0x13
 32923 00e5 38       		.uleb128 0x38
 32924 00e6 0B       		.uleb128 0xb
 32925 00e7 00       		.byte	0
 32926 00e8 00       		.byte	0
 32927 00e9 14       		.uleb128 0x14
 32928 00ea 13       		.uleb128 0x13
 32929 00eb 01       		.byte	0x1
 32930 00ec 03       		.uleb128 0x3
 32931 00ed 0E       		.uleb128 0xe
 32932 00ee 0B       		.uleb128 0xb
 32933 00ef 05       		.uleb128 0x5
 32934 00f0 3A       		.uleb128 0x3a
 32935 00f1 0B       		.uleb128 0xb
 32936 00f2 3B       		.uleb128 0x3b
 32937 00f3 05       		.uleb128 0x5
 32938 00f4 01       		.uleb128 0x1
 32939 00f5 13       		.uleb128 0x13
 32940 00f6 00       		.byte	0
 32941 00f7 00       		.byte	0
 32942 00f8 15       		.uleb128 0x15
 32943 00f9 0D       		.uleb128 0xd
 32944 00fa 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 704


 32945 00fb 03       		.uleb128 0x3
 32946 00fc 08       		.uleb128 0x8
 32947 00fd 3A       		.uleb128 0x3a
 32948 00fe 0B       		.uleb128 0xb
 32949 00ff 3B       		.uleb128 0x3b
 32950 0100 05       		.uleb128 0x5
 32951 0101 49       		.uleb128 0x49
 32952 0102 13       		.uleb128 0x13
 32953 0103 38       		.uleb128 0x38
 32954 0104 05       		.uleb128 0x5
 32955 0105 00       		.byte	0
 32956 0106 00       		.byte	0
 32957 0107 16       		.uleb128 0x16
 32958 0108 0D       		.uleb128 0xd
 32959 0109 00       		.byte	0
 32960 010a 03       		.uleb128 0x3
 32961 010b 0E       		.uleb128 0xe
 32962 010c 3A       		.uleb128 0x3a
 32963 010d 0B       		.uleb128 0xb
 32964 010e 3B       		.uleb128 0x3b
 32965 010f 05       		.uleb128 0x5
 32966 0110 49       		.uleb128 0x49
 32967 0111 13       		.uleb128 0x13
 32968 0112 38       		.uleb128 0x38
 32969 0113 05       		.uleb128 0x5
 32970 0114 00       		.byte	0
 32971 0115 00       		.byte	0
 32972 0116 17       		.uleb128 0x17
 32973 0117 2E       		.uleb128 0x2e
 32974 0118 01       		.byte	0x1
 32975 0119 03       		.uleb128 0x3
 32976 011a 0E       		.uleb128 0xe
 32977 011b 3A       		.uleb128 0x3a
 32978 011c 0B       		.uleb128 0xb
 32979 011d 3B       		.uleb128 0x3b
 32980 011e 05       		.uleb128 0x5
 32981 011f 27       		.uleb128 0x27
 32982 0120 19       		.uleb128 0x19
 32983 0121 49       		.uleb128 0x49
 32984 0122 13       		.uleb128 0x13
 32985 0123 20       		.uleb128 0x20
 32986 0124 0B       		.uleb128 0xb
 32987 0125 01       		.uleb128 0x1
 32988 0126 13       		.uleb128 0x13
 32989 0127 00       		.byte	0
 32990 0128 00       		.byte	0
 32991 0129 18       		.uleb128 0x18
 32992 012a 05       		.uleb128 0x5
 32993 012b 00       		.byte	0
 32994 012c 03       		.uleb128 0x3
 32995 012d 0E       		.uleb128 0xe
 32996 012e 3A       		.uleb128 0x3a
 32997 012f 0B       		.uleb128 0xb
 32998 0130 3B       		.uleb128 0x3b
 32999 0131 05       		.uleb128 0x5
 33000 0132 49       		.uleb128 0x49
 33001 0133 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 705


 33002 0134 00       		.byte	0
 33003 0135 00       		.byte	0
 33004 0136 19       		.uleb128 0x19
 33005 0137 34       		.uleb128 0x34
 33006 0138 00       		.byte	0
 33007 0139 03       		.uleb128 0x3
 33008 013a 0E       		.uleb128 0xe
 33009 013b 3A       		.uleb128 0x3a
 33010 013c 0B       		.uleb128 0xb
 33011 013d 3B       		.uleb128 0x3b
 33012 013e 05       		.uleb128 0x5
 33013 013f 49       		.uleb128 0x49
 33014 0140 13       		.uleb128 0x13
 33015 0141 00       		.byte	0
 33016 0142 00       		.byte	0
 33017 0143 1A       		.uleb128 0x1a
 33018 0144 2E       		.uleb128 0x2e
 33019 0145 01       		.byte	0x1
 33020 0146 3F       		.uleb128 0x3f
 33021 0147 19       		.uleb128 0x19
 33022 0148 03       		.uleb128 0x3
 33023 0149 0E       		.uleb128 0xe
 33024 014a 3A       		.uleb128 0x3a
 33025 014b 0B       		.uleb128 0xb
 33026 014c 3B       		.uleb128 0x3b
 33027 014d 0B       		.uleb128 0xb
 33028 014e 27       		.uleb128 0x27
 33029 014f 19       		.uleb128 0x19
 33030 0150 11       		.uleb128 0x11
 33031 0151 01       		.uleb128 0x1
 33032 0152 12       		.uleb128 0x12
 33033 0153 06       		.uleb128 0x6
 33034 0154 40       		.uleb128 0x40
 33035 0155 18       		.uleb128 0x18
 33036 0156 9642     		.uleb128 0x2116
 33037 0158 19       		.uleb128 0x19
 33038 0159 01       		.uleb128 0x1
 33039 015a 13       		.uleb128 0x13
 33040 015b 00       		.byte	0
 33041 015c 00       		.byte	0
 33042 015d 1B       		.uleb128 0x1b
 33043 015e 34       		.uleb128 0x34
 33044 015f 00       		.byte	0
 33045 0160 03       		.uleb128 0x3
 33046 0161 0E       		.uleb128 0xe
 33047 0162 3A       		.uleb128 0x3a
 33048 0163 0B       		.uleb128 0xb
 33049 0164 3B       		.uleb128 0x3b
 33050 0165 0B       		.uleb128 0xb
 33051 0166 49       		.uleb128 0x49
 33052 0167 13       		.uleb128 0x13
 33053 0168 02       		.uleb128 0x2
 33054 0169 18       		.uleb128 0x18
 33055 016a 00       		.byte	0
 33056 016b 00       		.byte	0
 33057 016c 1C       		.uleb128 0x1c
 33058 016d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 706


 33059 016e 01       		.byte	0x1
 33060 016f 31       		.uleb128 0x31
 33061 0170 13       		.uleb128 0x13
 33062 0171 11       		.uleb128 0x11
 33063 0172 01       		.uleb128 0x1
 33064 0173 12       		.uleb128 0x12
 33065 0174 06       		.uleb128 0x6
 33066 0175 58       		.uleb128 0x58
 33067 0176 0B       		.uleb128 0xb
 33068 0177 59       		.uleb128 0x59
 33069 0178 0B       		.uleb128 0xb
 33070 0179 01       		.uleb128 0x1
 33071 017a 13       		.uleb128 0x13
 33072 017b 00       		.byte	0
 33073 017c 00       		.byte	0
 33074 017d 1D       		.uleb128 0x1d
 33075 017e 05       		.uleb128 0x5
 33076 017f 00       		.byte	0
 33077 0180 31       		.uleb128 0x31
 33078 0181 13       		.uleb128 0x13
 33079 0182 02       		.uleb128 0x2
 33080 0183 18       		.uleb128 0x18
 33081 0184 00       		.byte	0
 33082 0185 00       		.byte	0
 33083 0186 1E       		.uleb128 0x1e
 33084 0187 0B       		.uleb128 0xb
 33085 0188 01       		.byte	0x1
 33086 0189 11       		.uleb128 0x11
 33087 018a 01       		.uleb128 0x1
 33088 018b 12       		.uleb128 0x12
 33089 018c 06       		.uleb128 0x6
 33090 018d 00       		.byte	0
 33091 018e 00       		.byte	0
 33092 018f 1F       		.uleb128 0x1f
 33093 0190 34       		.uleb128 0x34
 33094 0191 00       		.byte	0
 33095 0192 31       		.uleb128 0x31
 33096 0193 13       		.uleb128 0x13
 33097 0194 02       		.uleb128 0x2
 33098 0195 18       		.uleb128 0x18
 33099 0196 00       		.byte	0
 33100 0197 00       		.byte	0
 33101 0198 20       		.uleb128 0x20
 33102 0199 1D       		.uleb128 0x1d
 33103 019a 01       		.byte	0x1
 33104 019b 31       		.uleb128 0x31
 33105 019c 13       		.uleb128 0x13
 33106 019d 11       		.uleb128 0x11
 33107 019e 01       		.uleb128 0x1
 33108 019f 12       		.uleb128 0x12
 33109 01a0 06       		.uleb128 0x6
 33110 01a1 58       		.uleb128 0x58
 33111 01a2 0B       		.uleb128 0xb
 33112 01a3 59       		.uleb128 0x59
 33113 01a4 05       		.uleb128 0x5
 33114 01a5 01       		.uleb128 0x1
 33115 01a6 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 707


 33116 01a7 00       		.byte	0
 33117 01a8 00       		.byte	0
 33118 01a9 21       		.uleb128 0x21
 33119 01aa 1D       		.uleb128 0x1d
 33120 01ab 01       		.byte	0x1
 33121 01ac 31       		.uleb128 0x31
 33122 01ad 13       		.uleb128 0x13
 33123 01ae 11       		.uleb128 0x11
 33124 01af 01       		.uleb128 0x1
 33125 01b0 12       		.uleb128 0x12
 33126 01b1 06       		.uleb128 0x6
 33127 01b2 58       		.uleb128 0x58
 33128 01b3 0B       		.uleb128 0xb
 33129 01b4 59       		.uleb128 0x59
 33130 01b5 05       		.uleb128 0x5
 33131 01b6 00       		.byte	0
 33132 01b7 00       		.byte	0
 33133 01b8 22       		.uleb128 0x22
 33134 01b9 2E       		.uleb128 0x2e
 33135 01ba 01       		.byte	0x1
 33136 01bb 3F       		.uleb128 0x3f
 33137 01bc 19       		.uleb128 0x19
 33138 01bd 03       		.uleb128 0x3
 33139 01be 0E       		.uleb128 0xe
 33140 01bf 3A       		.uleb128 0x3a
 33141 01c0 0B       		.uleb128 0xb
 33142 01c1 3B       		.uleb128 0x3b
 33143 01c2 05       		.uleb128 0x5
 33144 01c3 27       		.uleb128 0x27
 33145 01c4 19       		.uleb128 0x19
 33146 01c5 11       		.uleb128 0x11
 33147 01c6 01       		.uleb128 0x1
 33148 01c7 12       		.uleb128 0x12
 33149 01c8 06       		.uleb128 0x6
 33150 01c9 40       		.uleb128 0x40
 33151 01ca 18       		.uleb128 0x18
 33152 01cb 9642     		.uleb128 0x2116
 33153 01cd 19       		.uleb128 0x19
 33154 01ce 01       		.uleb128 0x1
 33155 01cf 13       		.uleb128 0x13
 33156 01d0 00       		.byte	0
 33157 01d1 00       		.byte	0
 33158 01d2 23       		.uleb128 0x23
 33159 01d3 34       		.uleb128 0x34
 33160 01d4 00       		.byte	0
 33161 01d5 03       		.uleb128 0x3
 33162 01d6 0E       		.uleb128 0xe
 33163 01d7 3A       		.uleb128 0x3a
 33164 01d8 0B       		.uleb128 0xb
 33165 01d9 3B       		.uleb128 0x3b
 33166 01da 05       		.uleb128 0x5
 33167 01db 49       		.uleb128 0x49
 33168 01dc 13       		.uleb128 0x13
 33169 01dd 02       		.uleb128 0x2
 33170 01de 18       		.uleb128 0x18
 33171 01df 00       		.byte	0
 33172 01e0 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 708


 33173 01e1 24       		.uleb128 0x24
 33174 01e2 21       		.uleb128 0x21
 33175 01e3 00       		.byte	0
 33176 01e4 49       		.uleb128 0x49
 33177 01e5 13       		.uleb128 0x13
 33178 01e6 2F       		.uleb128 0x2f
 33179 01e7 05       		.uleb128 0x5
 33180 01e8 00       		.byte	0
 33181 01e9 00       		.byte	0
 33182 01ea 25       		.uleb128 0x25
 33183 01eb 05       		.uleb128 0x5
 33184 01ec 00       		.byte	0
 33185 01ed 03       		.uleb128 0x3
 33186 01ee 0E       		.uleb128 0xe
 33187 01ef 3A       		.uleb128 0x3a
 33188 01f0 0B       		.uleb128 0xb
 33189 01f1 3B       		.uleb128 0x3b
 33190 01f2 05       		.uleb128 0x5
 33191 01f3 49       		.uleb128 0x49
 33192 01f4 13       		.uleb128 0x13
 33193 01f5 02       		.uleb128 0x2
 33194 01f6 18       		.uleb128 0x18
 33195 01f7 00       		.byte	0
 33196 01f8 00       		.byte	0
 33197 01f9 26       		.uleb128 0x26
 33198 01fa 34       		.uleb128 0x34
 33199 01fb 00       		.byte	0
 33200 01fc 03       		.uleb128 0x3
 33201 01fd 08       		.uleb128 0x8
 33202 01fe 3A       		.uleb128 0x3a
 33203 01ff 0B       		.uleb128 0xb
 33204 0200 3B       		.uleb128 0x3b
 33205 0201 05       		.uleb128 0x5
 33206 0202 49       		.uleb128 0x49
 33207 0203 13       		.uleb128 0x13
 33208 0204 02       		.uleb128 0x2
 33209 0205 18       		.uleb128 0x18
 33210 0206 00       		.byte	0
 33211 0207 00       		.byte	0
 33212 0208 27       		.uleb128 0x27
 33213 0209 2E       		.uleb128 0x2e
 33214 020a 01       		.byte	0x1
 33215 020b 3F       		.uleb128 0x3f
 33216 020c 19       		.uleb128 0x19
 33217 020d 03       		.uleb128 0x3
 33218 020e 0E       		.uleb128 0xe
 33219 020f 3A       		.uleb128 0x3a
 33220 0210 0B       		.uleb128 0xb
 33221 0211 3B       		.uleb128 0x3b
 33222 0212 05       		.uleb128 0x5
 33223 0213 11       		.uleb128 0x11
 33224 0214 01       		.uleb128 0x1
 33225 0215 12       		.uleb128 0x12
 33226 0216 06       		.uleb128 0x6
 33227 0217 40       		.uleb128 0x40
 33228 0218 18       		.uleb128 0x18
 33229 0219 9642     		.uleb128 0x2116
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 709


 33230 021b 19       		.uleb128 0x19
 33231 021c 01       		.uleb128 0x1
 33232 021d 13       		.uleb128 0x13
 33233 021e 00       		.byte	0
 33234 021f 00       		.byte	0
 33235 0220 28       		.uleb128 0x28
 33236 0221 2E       		.uleb128 0x2e
 33237 0222 01       		.byte	0x1
 33238 0223 3F       		.uleb128 0x3f
 33239 0224 19       		.uleb128 0x19
 33240 0225 03       		.uleb128 0x3
 33241 0226 0E       		.uleb128 0xe
 33242 0227 3A       		.uleb128 0x3a
 33243 0228 0B       		.uleb128 0xb
 33244 0229 3B       		.uleb128 0x3b
 33245 022a 05       		.uleb128 0x5
 33246 022b 27       		.uleb128 0x27
 33247 022c 19       		.uleb128 0x19
 33248 022d 11       		.uleb128 0x11
 33249 022e 01       		.uleb128 0x1
 33250 022f 12       		.uleb128 0x12
 33251 0230 06       		.uleb128 0x6
 33252 0231 40       		.uleb128 0x40
 33253 0232 18       		.uleb128 0x18
 33254 0233 9742     		.uleb128 0x2117
 33255 0235 19       		.uleb128 0x19
 33256 0236 01       		.uleb128 0x1
 33257 0237 13       		.uleb128 0x13
 33258 0238 00       		.byte	0
 33259 0239 00       		.byte	0
 33260 023a 29       		.uleb128 0x29
 33261 023b 05       		.uleb128 0x5
 33262 023c 00       		.byte	0
 33263 023d 03       		.uleb128 0x3
 33264 023e 08       		.uleb128 0x8
 33265 023f 3A       		.uleb128 0x3a
 33266 0240 0B       		.uleb128 0xb
 33267 0241 3B       		.uleb128 0x3b
 33268 0242 05       		.uleb128 0x5
 33269 0243 49       		.uleb128 0x49
 33270 0244 13       		.uleb128 0x13
 33271 0245 02       		.uleb128 0x2
 33272 0246 18       		.uleb128 0x18
 33273 0247 00       		.byte	0
 33274 0248 00       		.byte	0
 33275 0249 2A       		.uleb128 0x2a
 33276 024a 2E       		.uleb128 0x2e
 33277 024b 01       		.byte	0x1
 33278 024c 3F       		.uleb128 0x3f
 33279 024d 19       		.uleb128 0x19
 33280 024e 03       		.uleb128 0x3
 33281 024f 0E       		.uleb128 0xe
 33282 0250 3A       		.uleb128 0x3a
 33283 0251 0B       		.uleb128 0xb
 33284 0252 3B       		.uleb128 0x3b
 33285 0253 05       		.uleb128 0x5
 33286 0254 27       		.uleb128 0x27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 710


 33287 0255 19       		.uleb128 0x19
 33288 0256 49       		.uleb128 0x49
 33289 0257 13       		.uleb128 0x13
 33290 0258 11       		.uleb128 0x11
 33291 0259 01       		.uleb128 0x1
 33292 025a 12       		.uleb128 0x12
 33293 025b 06       		.uleb128 0x6
 33294 025c 40       		.uleb128 0x40
 33295 025d 18       		.uleb128 0x18
 33296 025e 9742     		.uleb128 0x2117
 33297 0260 19       		.uleb128 0x19
 33298 0261 01       		.uleb128 0x1
 33299 0262 13       		.uleb128 0x13
 33300 0263 00       		.byte	0
 33301 0264 00       		.byte	0
 33302 0265 2B       		.uleb128 0x2b
 33303 0266 2E       		.uleb128 0x2e
 33304 0267 01       		.byte	0x1
 33305 0268 3F       		.uleb128 0x3f
 33306 0269 19       		.uleb128 0x19
 33307 026a 03       		.uleb128 0x3
 33308 026b 0E       		.uleb128 0xe
 33309 026c 3A       		.uleb128 0x3a
 33310 026d 0B       		.uleb128 0xb
 33311 026e 3B       		.uleb128 0x3b
 33312 026f 05       		.uleb128 0x5
 33313 0270 27       		.uleb128 0x27
 33314 0271 19       		.uleb128 0x19
 33315 0272 49       		.uleb128 0x49
 33316 0273 13       		.uleb128 0x13
 33317 0274 11       		.uleb128 0x11
 33318 0275 01       		.uleb128 0x1
 33319 0276 12       		.uleb128 0x12
 33320 0277 06       		.uleb128 0x6
 33321 0278 40       		.uleb128 0x40
 33322 0279 18       		.uleb128 0x18
 33323 027a 9642     		.uleb128 0x2116
 33324 027c 19       		.uleb128 0x19
 33325 027d 01       		.uleb128 0x1
 33326 027e 13       		.uleb128 0x13
 33327 027f 00       		.byte	0
 33328 0280 00       		.byte	0
 33329 0281 2C       		.uleb128 0x2c
 33330 0282 2E       		.uleb128 0x2e
 33331 0283 00       		.byte	0
 33332 0284 3F       		.uleb128 0x3f
 33333 0285 19       		.uleb128 0x19
 33334 0286 03       		.uleb128 0x3
 33335 0287 0E       		.uleb128 0xe
 33336 0288 3A       		.uleb128 0x3a
 33337 0289 0B       		.uleb128 0xb
 33338 028a 3B       		.uleb128 0x3b
 33339 028b 05       		.uleb128 0x5
 33340 028c 27       		.uleb128 0x27
 33341 028d 19       		.uleb128 0x19
 33342 028e 11       		.uleb128 0x11
 33343 028f 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 711


 33344 0290 12       		.uleb128 0x12
 33345 0291 06       		.uleb128 0x6
 33346 0292 40       		.uleb128 0x40
 33347 0293 18       		.uleb128 0x18
 33348 0294 9742     		.uleb128 0x2117
 33349 0296 19       		.uleb128 0x19
 33350 0297 00       		.byte	0
 33351 0298 00       		.byte	0
 33352 0299 2D       		.uleb128 0x2d
 33353 029a 2E       		.uleb128 0x2e
 33354 029b 01       		.byte	0x1
 33355 029c 3F       		.uleb128 0x3f
 33356 029d 19       		.uleb128 0x19
 33357 029e 03       		.uleb128 0x3
 33358 029f 0E       		.uleb128 0xe
 33359 02a0 3A       		.uleb128 0x3a
 33360 02a1 0B       		.uleb128 0xb
 33361 02a2 3B       		.uleb128 0x3b
 33362 02a3 05       		.uleb128 0x5
 33363 02a4 11       		.uleb128 0x11
 33364 02a5 01       		.uleb128 0x1
 33365 02a6 12       		.uleb128 0x12
 33366 02a7 06       		.uleb128 0x6
 33367 02a8 40       		.uleb128 0x40
 33368 02a9 18       		.uleb128 0x18
 33369 02aa 9742     		.uleb128 0x2117
 33370 02ac 19       		.uleb128 0x19
 33371 02ad 01       		.uleb128 0x1
 33372 02ae 13       		.uleb128 0x13
 33373 02af 00       		.byte	0
 33374 02b0 00       		.byte	0
 33375 02b1 2E       		.uleb128 0x2e
 33376 02b2 0B       		.uleb128 0xb
 33377 02b3 01       		.byte	0x1
 33378 02b4 11       		.uleb128 0x11
 33379 02b5 01       		.uleb128 0x1
 33380 02b6 12       		.uleb128 0x12
 33381 02b7 06       		.uleb128 0x6
 33382 02b8 01       		.uleb128 0x1
 33383 02b9 13       		.uleb128 0x13
 33384 02ba 00       		.byte	0
 33385 02bb 00       		.byte	0
 33386 02bc 2F       		.uleb128 0x2f
 33387 02bd 2E       		.uleb128 0x2e
 33388 02be 01       		.byte	0x1
 33389 02bf 3F       		.uleb128 0x3f
 33390 02c0 19       		.uleb128 0x19
 33391 02c1 03       		.uleb128 0x3
 33392 02c2 0E       		.uleb128 0xe
 33393 02c3 3A       		.uleb128 0x3a
 33394 02c4 0B       		.uleb128 0xb
 33395 02c5 3B       		.uleb128 0x3b
 33396 02c6 05       		.uleb128 0x5
 33397 02c7 49       		.uleb128 0x49
 33398 02c8 13       		.uleb128 0x13
 33399 02c9 11       		.uleb128 0x11
 33400 02ca 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 712


 33401 02cb 12       		.uleb128 0x12
 33402 02cc 06       		.uleb128 0x6
 33403 02cd 40       		.uleb128 0x40
 33404 02ce 18       		.uleb128 0x18
 33405 02cf 9642     		.uleb128 0x2116
 33406 02d1 19       		.uleb128 0x19
 33407 02d2 01       		.uleb128 0x1
 33408 02d3 13       		.uleb128 0x13
 33409 02d4 00       		.byte	0
 33410 02d5 00       		.byte	0
 33411 02d6 30       		.uleb128 0x30
 33412 02d7 2E       		.uleb128 0x2e
 33413 02d8 00       		.byte	0
 33414 02d9 3F       		.uleb128 0x3f
 33415 02da 19       		.uleb128 0x19
 33416 02db 03       		.uleb128 0x3
 33417 02dc 0E       		.uleb128 0xe
 33418 02dd 3A       		.uleb128 0x3a
 33419 02de 0B       		.uleb128 0xb
 33420 02df 3B       		.uleb128 0x3b
 33421 02e0 05       		.uleb128 0x5
 33422 02e1 11       		.uleb128 0x11
 33423 02e2 01       		.uleb128 0x1
 33424 02e3 12       		.uleb128 0x12
 33425 02e4 06       		.uleb128 0x6
 33426 02e5 40       		.uleb128 0x40
 33427 02e6 18       		.uleb128 0x18
 33428 02e7 9642     		.uleb128 0x2116
 33429 02e9 19       		.uleb128 0x19
 33430 02ea 00       		.byte	0
 33431 02eb 00       		.byte	0
 33432 02ec 31       		.uleb128 0x31
 33433 02ed 2E       		.uleb128 0x2e
 33434 02ee 01       		.byte	0x1
 33435 02ef 3F       		.uleb128 0x3f
 33436 02f0 19       		.uleb128 0x19
 33437 02f1 03       		.uleb128 0x3
 33438 02f2 0E       		.uleb128 0xe
 33439 02f3 3A       		.uleb128 0x3a
 33440 02f4 0B       		.uleb128 0xb
 33441 02f5 3B       		.uleb128 0x3b
 33442 02f6 05       		.uleb128 0x5
 33443 02f7 49       		.uleb128 0x49
 33444 02f8 13       		.uleb128 0x13
 33445 02f9 11       		.uleb128 0x11
 33446 02fa 01       		.uleb128 0x1
 33447 02fb 12       		.uleb128 0x12
 33448 02fc 06       		.uleb128 0x6
 33449 02fd 40       		.uleb128 0x40
 33450 02fe 18       		.uleb128 0x18
 33451 02ff 9742     		.uleb128 0x2117
 33452 0301 19       		.uleb128 0x19
 33453 0302 01       		.uleb128 0x1
 33454 0303 13       		.uleb128 0x13
 33455 0304 00       		.byte	0
 33456 0305 00       		.byte	0
 33457 0306 32       		.uleb128 0x32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 713


 33458 0307 2E       		.uleb128 0x2e
 33459 0308 00       		.byte	0
 33460 0309 3F       		.uleb128 0x3f
 33461 030a 19       		.uleb128 0x19
 33462 030b 03       		.uleb128 0x3
 33463 030c 0E       		.uleb128 0xe
 33464 030d 3A       		.uleb128 0x3a
 33465 030e 0B       		.uleb128 0xb
 33466 030f 3B       		.uleb128 0x3b
 33467 0310 05       		.uleb128 0x5
 33468 0311 11       		.uleb128 0x11
 33469 0312 01       		.uleb128 0x1
 33470 0313 12       		.uleb128 0x12
 33471 0314 06       		.uleb128 0x6
 33472 0315 40       		.uleb128 0x40
 33473 0316 18       		.uleb128 0x18
 33474 0317 9742     		.uleb128 0x2117
 33475 0319 19       		.uleb128 0x19
 33476 031a 00       		.byte	0
 33477 031b 00       		.byte	0
 33478 031c 33       		.uleb128 0x33
 33479 031d 34       		.uleb128 0x34
 33480 031e 00       		.byte	0
 33481 031f 03       		.uleb128 0x3
 33482 0320 0E       		.uleb128 0xe
 33483 0321 3A       		.uleb128 0x3a
 33484 0322 0B       		.uleb128 0xb
 33485 0323 3B       		.uleb128 0x3b
 33486 0324 05       		.uleb128 0x5
 33487 0325 49       		.uleb128 0x49
 33488 0326 13       		.uleb128 0x13
 33489 0327 3F       		.uleb128 0x3f
 33490 0328 19       		.uleb128 0x19
 33491 0329 3C       		.uleb128 0x3c
 33492 032a 19       		.uleb128 0x19
 33493 032b 00       		.byte	0
 33494 032c 00       		.byte	0
 33495 032d 34       		.uleb128 0x34
 33496 032e 34       		.uleb128 0x34
 33497 032f 00       		.byte	0
 33498 0330 03       		.uleb128 0x3
 33499 0331 0E       		.uleb128 0xe
 33500 0332 3A       		.uleb128 0x3a
 33501 0333 0B       		.uleb128 0xb
 33502 0334 3B       		.uleb128 0x3b
 33503 0335 0B       		.uleb128 0xb
 33504 0336 49       		.uleb128 0x49
 33505 0337 13       		.uleb128 0x13
 33506 0338 3F       		.uleb128 0x3f
 33507 0339 19       		.uleb128 0x19
 33508 033a 02       		.uleb128 0x2
 33509 033b 18       		.uleb128 0x18
 33510 033c 00       		.byte	0
 33511 033d 00       		.byte	0
 33512 033e 00       		.byte	0
 33513              		.section	.debug_aranges,"",%progbits
 33514 0000 EC010000 		.4byte	0x1ec
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 714


 33515 0004 0200     		.2byte	0x2
 33516 0006 00000000 		.4byte	.Ldebug_info0
 33517 000a 04       		.byte	0x4
 33518 000b 00       		.byte	0
 33519 000c 0000     		.2byte	0
 33520 000e 0000     		.2byte	0
 33521 0010 00000000 		.4byte	.LFB64
 33522 0014 1C050000 		.4byte	.LFE64-.LFB64
 33523 0018 00000000 		.4byte	.LFB65
 33524 001c 22000000 		.4byte	.LFE65-.LFB65
 33525 0020 00000000 		.4byte	.LFB66
 33526 0024 64010000 		.4byte	.LFE66-.LFB66
 33527 0028 00000000 		.4byte	.LFB67
 33528 002c D2310000 		.4byte	.LFE67-.LFB67
 33529 0030 00000000 		.4byte	.LFB68
 33530 0034 38190000 		.4byte	.LFE68-.LFB68
 33531 0038 00000000 		.4byte	.LFB69
 33532 003c 28140000 		.4byte	.LFE69-.LFB69
 33533 0040 00000000 		.4byte	.LFB70
 33534 0044 F40D0000 		.4byte	.LFE70-.LFB70
 33535 0048 00000000 		.4byte	.LFB71
 33536 004c 90000000 		.4byte	.LFE71-.LFB71
 33537 0050 00000000 		.4byte	.LFB72
 33538 0054 78210000 		.4byte	.LFE72-.LFB72
 33539 0058 00000000 		.4byte	.LFB73
 33540 005c 90040000 		.4byte	.LFE73-.LFB73
 33541 0060 00000000 		.4byte	.LFB74
 33542 0064 5C020000 		.4byte	.LFE74-.LFB74
 33543 0068 00000000 		.4byte	.LFB75
 33544 006c 7C120000 		.4byte	.LFE75-.LFB75
 33545 0070 00000000 		.4byte	.LFB76
 33546 0074 DC000000 		.4byte	.LFE76-.LFB76
 33547 0078 00000000 		.4byte	.LFB77
 33548 007c 80010000 		.4byte	.LFE77-.LFB77
 33549 0080 00000000 		.4byte	.LFB78
 33550 0084 28000000 		.4byte	.LFE78-.LFB78
 33551 0088 00000000 		.4byte	.LFB79
 33552 008c F0000000 		.4byte	.LFE79-.LFB79
 33553 0090 00000000 		.4byte	.LFB80
 33554 0094 74030000 		.4byte	.LFE80-.LFB80
 33555 0098 00000000 		.4byte	.LFB81
 33556 009c 84000000 		.4byte	.LFE81-.LFB81
 33557 00a0 00000000 		.4byte	.LFB82
 33558 00a4 88000000 		.4byte	.LFE82-.LFB82
 33559 00a8 00000000 		.4byte	.LFB83
 33560 00ac A0000000 		.4byte	.LFE83-.LFB83
 33561 00b0 00000000 		.4byte	.LFB84
 33562 00b4 3E000000 		.4byte	.LFE84-.LFB84
 33563 00b8 00000000 		.4byte	.LFB85
 33564 00bc 2E000000 		.4byte	.LFE85-.LFB85
 33565 00c0 00000000 		.4byte	.LFB86
 33566 00c4 98000000 		.4byte	.LFE86-.LFB86
 33567 00c8 00000000 		.4byte	.LFB87
 33568 00cc 80000000 		.4byte	.LFE87-.LFB87
 33569 00d0 00000000 		.4byte	.LFB88
 33570 00d4 5C000000 		.4byte	.LFE88-.LFB88
 33571 00d8 00000000 		.4byte	.LFB89
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 715


 33572 00dc 04060000 		.4byte	.LFE89-.LFB89
 33573 00e0 00000000 		.4byte	.LFB90
 33574 00e4 2C020000 		.4byte	.LFE90-.LFB90
 33575 00e8 00000000 		.4byte	.LFB91
 33576 00ec 28000000 		.4byte	.LFE91-.LFB91
 33577 00f0 00000000 		.4byte	.LFB92
 33578 00f4 78000000 		.4byte	.LFE92-.LFB92
 33579 00f8 00000000 		.4byte	.LFB93
 33580 00fc B0000000 		.4byte	.LFE93-.LFB93
 33581 0100 00000000 		.4byte	.LFB94
 33582 0104 94010000 		.4byte	.LFE94-.LFB94
 33583 0108 00000000 		.4byte	.LFB95
 33584 010c B8000000 		.4byte	.LFE95-.LFB95
 33585 0110 00000000 		.4byte	.LFB96
 33586 0114 B8000000 		.4byte	.LFE96-.LFB96
 33587 0118 00000000 		.4byte	.LFB97
 33588 011c 5C000000 		.4byte	.LFE97-.LFB97
 33589 0120 00000000 		.4byte	.LFB98
 33590 0124 30020000 		.4byte	.LFE98-.LFB98
 33591 0128 00000000 		.4byte	.LFB99
 33592 012c BC000000 		.4byte	.LFE99-.LFB99
 33593 0130 00000000 		.4byte	.LFB100
 33594 0134 5C000000 		.4byte	.LFE100-.LFB100
 33595 0138 00000000 		.4byte	.LFB101
 33596 013c 38010000 		.4byte	.LFE101-.LFB101
 33597 0140 00000000 		.4byte	.LFB102
 33598 0144 EC000000 		.4byte	.LFE102-.LFB102
 33599 0148 00000000 		.4byte	.LFB103
 33600 014c 64000000 		.4byte	.LFE103-.LFB103
 33601 0150 00000000 		.4byte	.LFB104
 33602 0154 A8000000 		.4byte	.LFE104-.LFB104
 33603 0158 00000000 		.4byte	.LFB105
 33604 015c 34000000 		.4byte	.LFE105-.LFB105
 33605 0160 00000000 		.4byte	.LFB106
 33606 0164 20000000 		.4byte	.LFE106-.LFB106
 33607 0168 00000000 		.4byte	.LFB107
 33608 016c A0000000 		.4byte	.LFE107-.LFB107
 33609 0170 00000000 		.4byte	.LFB108
 33610 0174 BC010000 		.4byte	.LFE108-.LFB108
 33611 0178 00000000 		.4byte	.LFB109
 33612 017c 60000000 		.4byte	.LFE109-.LFB109
 33613 0180 00000000 		.4byte	.LFB110
 33614 0184 98050000 		.4byte	.LFE110-.LFB110
 33615 0188 00000000 		.4byte	.LFB111
 33616 018c 8C000000 		.4byte	.LFE111-.LFB111
 33617 0190 00000000 		.4byte	.LFB112
 33618 0194 EC000000 		.4byte	.LFE112-.LFB112
 33619 0198 00000000 		.4byte	.LFB113
 33620 019c 5C000000 		.4byte	.LFE113-.LFB113
 33621 01a0 00000000 		.4byte	.LFB114
 33622 01a4 C0000000 		.4byte	.LFE114-.LFB114
 33623 01a8 00000000 		.4byte	.LFB115
 33624 01ac 54010000 		.4byte	.LFE115-.LFB115
 33625 01b0 00000000 		.4byte	.LFB116
 33626 01b4 B0000000 		.4byte	.LFE116-.LFB116
 33627 01b8 00000000 		.4byte	.LFB117
 33628 01bc 12000000 		.4byte	.LFE117-.LFB117
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 716


 33629 01c0 00000000 		.4byte	.LFB118
 33630 01c4 64010000 		.4byte	.LFE118-.LFB118
 33631 01c8 00000000 		.4byte	.LFB119
 33632 01cc 12000000 		.4byte	.LFE119-.LFB119
 33633 01d0 00000000 		.4byte	.LFB120
 33634 01d4 1A000000 		.4byte	.LFE120-.LFB120
 33635 01d8 00000000 		.4byte	.LFB121
 33636 01dc 0C000000 		.4byte	.LFE121-.LFB121
 33637 01e0 00000000 		.4byte	.LFB122
 33638 01e4 0C000000 		.4byte	.LFE122-.LFB122
 33639 01e8 00000000 		.4byte	0
 33640 01ec 00000000 		.4byte	0
 33641              		.section	.debug_ranges,"",%progbits
 33642              	.Ldebug_ranges0:
 33643 0000 00000000 		.4byte	.LFB64
 33644 0004 1C050000 		.4byte	.LFE64
 33645 0008 00000000 		.4byte	.LFB65
 33646 000c 22000000 		.4byte	.LFE65
 33647 0010 00000000 		.4byte	.LFB66
 33648 0014 64010000 		.4byte	.LFE66
 33649 0018 00000000 		.4byte	.LFB67
 33650 001c D2310000 		.4byte	.LFE67
 33651 0020 00000000 		.4byte	.LFB68
 33652 0024 38190000 		.4byte	.LFE68
 33653 0028 00000000 		.4byte	.LFB69
 33654 002c 28140000 		.4byte	.LFE69
 33655 0030 00000000 		.4byte	.LFB70
 33656 0034 F40D0000 		.4byte	.LFE70
 33657 0038 00000000 		.4byte	.LFB71
 33658 003c 90000000 		.4byte	.LFE71
 33659 0040 00000000 		.4byte	.LFB72
 33660 0044 78210000 		.4byte	.LFE72
 33661 0048 00000000 		.4byte	.LFB73
 33662 004c 90040000 		.4byte	.LFE73
 33663 0050 00000000 		.4byte	.LFB74
 33664 0054 5C020000 		.4byte	.LFE74
 33665 0058 00000000 		.4byte	.LFB75
 33666 005c 7C120000 		.4byte	.LFE75
 33667 0060 00000000 		.4byte	.LFB76
 33668 0064 DC000000 		.4byte	.LFE76
 33669 0068 00000000 		.4byte	.LFB77
 33670 006c 80010000 		.4byte	.LFE77
 33671 0070 00000000 		.4byte	.LFB78
 33672 0074 28000000 		.4byte	.LFE78
 33673 0078 00000000 		.4byte	.LFB79
 33674 007c F0000000 		.4byte	.LFE79
 33675 0080 00000000 		.4byte	.LFB80
 33676 0084 74030000 		.4byte	.LFE80
 33677 0088 00000000 		.4byte	.LFB81
 33678 008c 84000000 		.4byte	.LFE81
 33679 0090 00000000 		.4byte	.LFB82
 33680 0094 88000000 		.4byte	.LFE82
 33681 0098 00000000 		.4byte	.LFB83
 33682 009c A0000000 		.4byte	.LFE83
 33683 00a0 00000000 		.4byte	.LFB84
 33684 00a4 3E000000 		.4byte	.LFE84
 33685 00a8 00000000 		.4byte	.LFB85
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 717


 33686 00ac 2E000000 		.4byte	.LFE85
 33687 00b0 00000000 		.4byte	.LFB86
 33688 00b4 98000000 		.4byte	.LFE86
 33689 00b8 00000000 		.4byte	.LFB87
 33690 00bc 80000000 		.4byte	.LFE87
 33691 00c0 00000000 		.4byte	.LFB88
 33692 00c4 5C000000 		.4byte	.LFE88
 33693 00c8 00000000 		.4byte	.LFB89
 33694 00cc 04060000 		.4byte	.LFE89
 33695 00d0 00000000 		.4byte	.LFB90
 33696 00d4 2C020000 		.4byte	.LFE90
 33697 00d8 00000000 		.4byte	.LFB91
 33698 00dc 28000000 		.4byte	.LFE91
 33699 00e0 00000000 		.4byte	.LFB92
 33700 00e4 78000000 		.4byte	.LFE92
 33701 00e8 00000000 		.4byte	.LFB93
 33702 00ec B0000000 		.4byte	.LFE93
 33703 00f0 00000000 		.4byte	.LFB94
 33704 00f4 94010000 		.4byte	.LFE94
 33705 00f8 00000000 		.4byte	.LFB95
 33706 00fc B8000000 		.4byte	.LFE95
 33707 0100 00000000 		.4byte	.LFB96
 33708 0104 B8000000 		.4byte	.LFE96
 33709 0108 00000000 		.4byte	.LFB97
 33710 010c 5C000000 		.4byte	.LFE97
 33711 0110 00000000 		.4byte	.LFB98
 33712 0114 30020000 		.4byte	.LFE98
 33713 0118 00000000 		.4byte	.LFB99
 33714 011c BC000000 		.4byte	.LFE99
 33715 0120 00000000 		.4byte	.LFB100
 33716 0124 5C000000 		.4byte	.LFE100
 33717 0128 00000000 		.4byte	.LFB101
 33718 012c 38010000 		.4byte	.LFE101
 33719 0130 00000000 		.4byte	.LFB102
 33720 0134 EC000000 		.4byte	.LFE102
 33721 0138 00000000 		.4byte	.LFB103
 33722 013c 64000000 		.4byte	.LFE103
 33723 0140 00000000 		.4byte	.LFB104
 33724 0144 A8000000 		.4byte	.LFE104
 33725 0148 00000000 		.4byte	.LFB105
 33726 014c 34000000 		.4byte	.LFE105
 33727 0150 00000000 		.4byte	.LFB106
 33728 0154 20000000 		.4byte	.LFE106
 33729 0158 00000000 		.4byte	.LFB107
 33730 015c A0000000 		.4byte	.LFE107
 33731 0160 00000000 		.4byte	.LFB108
 33732 0164 BC010000 		.4byte	.LFE108
 33733 0168 00000000 		.4byte	.LFB109
 33734 016c 60000000 		.4byte	.LFE109
 33735 0170 00000000 		.4byte	.LFB110
 33736 0174 98050000 		.4byte	.LFE110
 33737 0178 00000000 		.4byte	.LFB111
 33738 017c 8C000000 		.4byte	.LFE111
 33739 0180 00000000 		.4byte	.LFB112
 33740 0184 EC000000 		.4byte	.LFE112
 33741 0188 00000000 		.4byte	.LFB113
 33742 018c 5C000000 		.4byte	.LFE113
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 718


 33743 0190 00000000 		.4byte	.LFB114
 33744 0194 C0000000 		.4byte	.LFE114
 33745 0198 00000000 		.4byte	.LFB115
 33746 019c 54010000 		.4byte	.LFE115
 33747 01a0 00000000 		.4byte	.LFB116
 33748 01a4 B0000000 		.4byte	.LFE116
 33749 01a8 00000000 		.4byte	.LFB117
 33750 01ac 12000000 		.4byte	.LFE117
 33751 01b0 00000000 		.4byte	.LFB118
 33752 01b4 64010000 		.4byte	.LFE118
 33753 01b8 00000000 		.4byte	.LFB119
 33754 01bc 12000000 		.4byte	.LFE119
 33755 01c0 00000000 		.4byte	.LFB120
 33756 01c4 1A000000 		.4byte	.LFE120
 33757 01c8 00000000 		.4byte	.LFB121
 33758 01cc 0C000000 		.4byte	.LFE121
 33759 01d0 00000000 		.4byte	.LFB122
 33760 01d4 0C000000 		.4byte	.LFE122
 33761 01d8 00000000 		.4byte	0
 33762 01dc 00000000 		.4byte	0
 33763              		.section	.debug_line,"",%progbits
 33764              	.Ldebug_line0:
 33765 0000 531F0000 		.section	.debug_str,"MS",%progbits,1
 33765      0200C001 
 33765      00000201 
 33765      FB0E0D00 
 33765      01010101 
 33766              	.LASF219:
 33767 0000 696E666F 		.ascii	"infoSend\000"
 33767      53656E64 
 33767      00
 33768              	.LASF107:
 33769 0009 656D675F 		.ascii	"emg_act_counter\000"
 33769      6163745F 
 33769      636F756E 
 33769      74657200 
 33770              	.LASF271:
 33771 0019 69645F73 		.ascii	"id_str\000"
 33771      747200
 33772              	.LASF253:
 33773 0020 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 33773      61637469 
 33773      76617469 
 33773      6F6E5F6D 
 33773      6F64655F 
 33774              	.LASF25:
 33775 0039 73697A65 		.ascii	"sizetype\000"
 33775      74797065 
 33775      00
 33776              	.LASF114:
 33777 0042 706F7765 		.ascii	"power_cycles\000"
 33777      725F6379 
 33777      636C6573 
 33777      00
 33778              	.LASF33:
 33779 004f 434D445F 		.ascii	"CMD_INIT_MEM\000"
 33779      494E4954 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 719


 33779      5F4D454D 
 33779      00
 33780              	.LASF344:
 33781 005c 676C5F63 		.ascii	"gl_c\000"
 33781      00
 33782              	.LASF199:
 33783 0061 77726973 		.ascii	"wrist_direction_association\000"
 33783      745F6469 
 33783      72656374 
 33783      696F6E5F 
 33783      6173736F 
 33784              	.LASF65:
 33785 007d 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 33785      545F4D4F 
 33785      44455F45 
 33785      4D475F46 
 33785      4346535F 
 33786              	.LASF36:
 33787 0095 434D445F 		.ascii	"CMD_ACTIVATE\000"
 33787      41435449 
 33787      56415445 
 33787      00
 33788              	.LASF204:
 33789 00a2 75736572 		.ascii	"user\000"
 33789      00
 33790              	.LASF360:
 33791 00a7 665F6572 		.ascii	"f_err_emg_1\000"
 33791      725F656D 
 33791      675F3100 
 33792              	.LASF361:
 33793 00b3 665F6572 		.ascii	"f_err_emg_2\000"
 33793      725F656D 
 33793      675F3200 
 33794              	.LASF366:
 33795 00bf 73746F70 		.ascii	"stop_master_device\000"
 33795      5F6D6173 
 33795      7465725F 
 33795      64657669 
 33795      636500
 33796              	.LASF11:
 33797 00d2 696E7433 		.ascii	"int32_t\000"
 33797      325F7400 
 33798              	.LASF377:
 33799 00da 675F7278 		.ascii	"g_rx\000"
 33799      00
 33800              	.LASF102:
 33801 00df 73745F64 		.ascii	"st_data\000"
 33801      61746100 
 33802              	.LASF295:
 33803 00e7 685F7469 		.ascii	"h_time\000"
 33803      6D6500
 33804              	.LASF309:
 33805 00ee 77726974 		.ascii	"writeStatus\000"
 33805      65537461 
 33805      74757300 
 33806              	.LASF112:
 33807 00fa 746F7461 		.ascii	"total_runtime\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 720


 33807      6C5F7275 
 33807      6E74696D 
 33807      6500
 33808              	.LASF15:
 33809 0108 75696E74 		.ascii	"uint32\000"
 33809      333200
 33810              	.LASF365:
 33811 010f 636D645F 		.ascii	"cmd_set_baudrate\000"
 33811      7365745F 
 33811      62617564 
 33811      72617465 
 33811      00
 33812              	.LASF354:
 33813 0120 6169725F 		.ascii	"air_chambers_control\000"
 33813      6368616D 
 33813      62657273 
 33813      5F636F6E 
 33813      74726F6C 
 33814              	.LASF279:
 33815 0135 7370695F 		.ascii	"spi_read_delay_str_len\000"
 33815      72656164 
 33815      5F64656C 
 33815      61795F73 
 33815      74725F6C 
 33816              	.LASF205:
 33817 014c 4A4F595F 		.ascii	"JOY_spec\000"
 33817      73706563 
 33817      00
 33818              	.LASF281:
 33819 0155 70726570 		.ascii	"prepare_generic_info\000"
 33819      6172655F 
 33819      67656E65 
 33819      7269635F 
 33819      696E666F 
 33820              	.LASF141:
 33821 016a 706F735F 		.ascii	"pos_lim_inf\000"
 33821      6C696D5F 
 33821      696E6600 
 33822              	.LASF245:
 33823 0176 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 33823      4E445F4D 
 33823      4F544F52 
 33823      5F494458 
 33823      00
 33824              	.LASF337:
 33825 0187 636D645F 		.ascii	"cmd_get_inputs\000"
 33825      6765745F 
 33825      696E7075 
 33825      747300
 33826              	.LASF64:
 33827 0196 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 33827      545F4D4F 
 33827      44455F45 
 33827      4D475F46 
 33827      43465300 
 33828              	.LASF145:
 33829 01aa 63757272 		.ascii	"curr_lookup\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 721


 33829      5F6C6F6F 
 33829      6B757000 
 33830              	.LASF110:
 33831 01b6 72657374 		.ascii	"rest_counter\000"
 33831      5F636F75 
 33831      6E746572 
 33831      00
 33832              	.LASF342:
 33833 01c3 636D645F 		.ascii	"cmd_get_imu_readings\000"
 33833      6765745F 
 33833      696D755F 
 33833      72656164 
 33833      696E6773 
 33834              	.LASF189:
 33835 01d8 73745F4D 		.ascii	"st_MASTER_spec\000"
 33835      41535445 
 33835      525F7370 
 33835      656300
 33836              	.LASF274:
 33837 01e7 69645F73 		.ascii	"id_str_len\000"
 33837      74725F6C 
 33837      656E00
 33838              	.LASF63:
 33839 01f2 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 33839      545F4D4F 
 33839      44455F45 
 33839      4D475F49 
 33839      4E544547 
 33840              	.LASF247:
 33841 020a 6D5F746D 		.ascii	"m_tmp\000"
 33841      7000
 33842              	.LASF294:
 33843 0210 765F6964 		.ascii	"v_idx\000"
 33843      7800
 33844              	.LASF16:
 33845 0216 696E7438 		.ascii	"int8\000"
 33845      00
 33846              	.LASF224:
 33847 021b 6765745F 		.ascii	"get_param_list\000"
 33847      70617261 
 33847      6D5F6C69 
 33847      737400
 33848              	.LASF322:
 33849 022a 636D645F 		.ascii	"cmd_get_accelerations\000"
 33849      6765745F 
 33849      61636365 
 33849      6C657261 
 33849      74696F6E 
 33850              	.LASF341:
 33851 0240 636D645F 		.ascii	"cmd_get_emg\000"
 33851      6765745F 
 33851      656D6700 
 33852              	.LASF161:
 33853 024c 73745F65 		.ascii	"st_emg\000"
 33853      6D6700
 33854              	.LASF108:
 33855 0253 706F7369 		.ascii	"position_hist\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 722


 33855      74696F6E 
 33855      5F686973 
 33855      7400
 33856              	.LASF212:
 33857 0261 74656D70 		.ascii	"temp_value\000"
 33857      5F76616C 
 33857      756500
 33858              	.LASF412:
 33859 026c 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
 33859      73657273 
 33859      5C6D676E 
 33859      6F63636F 
 33859      5C446F63 
 33860 0299 5F47656E 		.ascii	"_Generic_ParametricPWMRescaling\\Generic_Parametric"
 33860      65726963 
 33860      5F506172 
 33860      616D6574 
 33860      72696350 
 33861 02cb 50574D52 		.ascii	"PWMRescaling_NoEncoder\\Generic_ParametricPWMRescal"
 33861      65736361 
 33861      6C696E67 
 33861      5F4E6F45 
 33861      6E636F64 
 33862 02fd 696E675F 		.ascii	"ing_NoEncoder.cydsn\000"
 33862      4E6F456E 
 33862      636F6465 
 33862      722E6379 
 33862      64736E00 
 33863              	.LASF293:
 33864 0311 7374725F 		.ascii	"str_data\000"
 33864      64617461 
 33864      00
 33865              	.LASF414:
 33866 031a 72657375 		.ascii	"result\000"
 33866      6C7400
 33867              	.LASF273:
 33868 0321 7370695F 		.ascii	"spi_read_delay_str\000"
 33868      72656164 
 33868      5F64656C 
 33868      61795F73 
 33868      747200
 33869              	.LASF196:
 33870 0334 73745F57 		.ascii	"st_WR_spec\000"
 33870      525F7370 
 33870      656300
 33871              	.LASF105:
 33872 033f 72656164 		.ascii	"ready\000"
 33872      7900
 33873              	.LASF158:
 33874 0345 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 33874      6964785F 
 33874      7573655F 
 33874      666F725F 
 33874      636F6E74 
 33875              	.LASF49:
 33876 035d 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 33876      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 723


 33876      4A4F5953 
 33876      5449434B 
 33876      00
 33877              	.LASF62:
 33878 036e 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 33878      545F4D4F 
 33878      44455F45 
 33878      4D475F50 
 33878      524F504F 
 33879              	.LASF123:
 33880 038a 7573655F 		.ascii	"use_2nd_motor_flag\000"
 33880      326E645F 
 33880      6D6F746F 
 33880      725F666C 
 33880      616700
 33881              	.LASF333:
 33882 039d 745F7374 		.ascii	"t_start\000"
 33882      61727400 
 33883              	.LASF115:
 33884 03a5 65786365 		.ascii	"excessive_signal_activity\000"
 33884      73736976 
 33884      655F7369 
 33884      676E616C 
 33884      5F616374 
 33885              	.LASF168:
 33886 03bf 72656164 		.ascii	"read_imu_flag\000"
 33886      5F696D75 
 33886      5F666C61 
 33886      6700
 33887              	.LASF176:
 33888 03cd 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 33888      72645F45 
 33888      4D475F68 
 33888      6973746F 
 33888      72795F6F 
 33889              	.LASF381:
 33890 03e6 74696D65 		.ascii	"timer_value\000"
 33890      725F7661 
 33890      6C756500 
 33891              	.LASF4:
 33892 03f2 6C6F6E67 		.ascii	"long int\000"
 33892      20696E74 
 33892      00
 33893              	.LASF202:
 33894 03fb 756E7573 		.ascii	"unused_bytes1\000"
 33894      65645F62 
 33894      79746573 
 33894      3100
 33895              	.LASF364:
 33896 0409 6D6F746F 		.ascii	"motor_idx\000"
 33896      725F6964 
 33896      7800
 33897              	.LASF122:
 33898 0413 72657365 		.ascii	"reset_counters\000"
 33898      745F636F 
 33898      756E7465 
 33898      727300
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 724


 33899              	.LASF179:
 33900 0422 75736572 		.ascii	"user_emg\000"
 33900      5F656D67 
 33900      00
 33901              	.LASF350:
 33902 042b 636D645F 		.ascii	"cmd_get_SD_file\000"
 33902      6765745F 
 33902      53445F66 
 33902      696C6500 
 33903              	.LASF319:
 33904 043b 7365745A 		.ascii	"setZeros\000"
 33904      65726F73 
 33904      00
 33905              	.LASF117:
 33906 0444 756E7573 		.ascii	"unused_bytes\000"
 33906      65645F62 
 33906      79746573 
 33906      00
 33907              	.LASF208:
 33908 0451 61636365 		.ascii	"accel_value\000"
 33908      6C5F7661 
 33908      6C756500 
 33909              	.LASF228:
 33910 045d 4E554D5F 		.ascii	"NUM_ITEMS\000"
 33910      4954454D 
 33910      5300
 33911              	.LASF106:
 33912 0467 73745F63 		.ascii	"st_counters\000"
 33912      6F756E74 
 33912      65727300 
 33913              	.LASF251:
 33914 0473 4D454D5F 		.ascii	"MEM_P\000"
 33914      5000
 33915              	.LASF19:
 33916 0479 666C6F61 		.ascii	"float32\000"
 33916      74333200 
 33917              	.LASF348:
 33918 0481 636D645F 		.ascii	"cmd_get_ADC_map\000"
 33918      6765745F 
 33918      4144435F 
 33918      6D617000 
 33919              	.LASF41:
 33920 0491 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 33920      4745545F 
 33920      43555252 
 33920      454E5453 
 33920      00
 33921              	.LASF292:
 33922 04a2 70726570 		.ascii	"prepare_SD_EMG_history\000"
 33922      6172655F 
 33922      53445F45 
 33922      4D475F68 
 33922      6973746F 
 33923              	.LASF349:
 33924 04b9 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 33924      6765745F 
 33924      4144435F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 725


 33924      72617700 
 33925              	.LASF398:
 33926 04c9 73645061 		.ascii	"sdParam\000"
 33926      72616D00 
 33927              	.LASF261:
 33928 04d1 6175785F 		.ascii	"aux_float2\000"
 33928      666C6F61 
 33928      743200
 33929              	.LASF336:
 33930 04dc 636D645F 		.ascii	"cmd_ping\000"
 33930      70696E67 
 33930      00
 33931              	.LASF280:
 33932 04e5 7370695F 		.ascii	"spi_delay_menu_len\000"
 33932      64656C61 
 33932      795F6D65 
 33932      6E755F6C 
 33932      656E00
 33933              	.LASF259:
 33934 04f8 7365745F 		.ascii	"set_custom_param\000"
 33934      63757374 
 33934      6F6D5F70 
 33934      6172616D 
 33934      00
 33935              	.LASF353:
 33936 0509 636D645F 		.ascii	"cmd_remove_SD_file\000"
 33936      72656D6F 
 33936      76655F53 
 33936      445F6669 
 33936      6C6500
 33937              	.LASF318:
 33938 051c 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 33938      6E69745F 
 33938      4F74626B 
 33938      41637457 
 33938      72697374 
 33939              	.LASF0:
 33940 0533 7369676E 		.ascii	"signed char\000"
 33940      65642063 
 33940      68617200 
 33941              	.LASF178:
 33942 053f 75736572 		.ascii	"user_code_string\000"
 33942      5F636F64 
 33942      655F7374 
 33942      72696E67 
 33942      00
 33943              	.LASF213:
 33944 0550 73745F63 		.ascii	"st_calib\000"
 33944      616C6962 
 33944      00
 33945              	.LASF358:
 33946 0559 6572725F 		.ascii	"err_emg_1\000"
 33946      656D675F 
 33946      3100
 33947              	.LASF307:
 33948 0563 6D656D53 		.ascii	"memStore\000"
 33948      746F7265 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 726


 33948      00
 33949              	.LASF352:
 33950 056c 66696C65 		.ascii	"filename\000"
 33950      6E616D65 
 33950      00
 33951              	.LASF73:
 33952 0575 6D6F746F 		.ascii	"motor_supply_type\000"
 33952      725F7375 
 33952      70706C79 
 33952      5F747970 
 33952      6500
 33953              	.LASF335:
 33954 0587 72656164 		.ascii	"read_flag\000"
 33954      5F666C61 
 33954      6700
 33955              	.LASF390:
 33956 0591 4144435F 		.ascii	"ADC_buf\000"
 33956      62756600 
 33957              	.LASF387:
 33958 0599 696E7465 		.ascii	"interrupt_flag\000"
 33958      72727570 
 33958      745F666C 
 33958      616700
 33959              	.LASF285:
 33960 05a8 73746570 		.ascii	"step\000"
 33960      00
 33961              	.LASF1:
 33962 05ad 756E7369 		.ascii	"unsigned char\000"
 33962      676E6564 
 33962      20636861 
 33962      7200
 33963              	.LASF151:
 33964 05bb 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 33964      72657665 
 33964      72735F6D 
 33964      6F746F72 
 33964      5F666C61 
 33965              	.LASF370:
 33966 05d1 675F7265 		.ascii	"g_refNew\000"
 33966      664E6577 
 33966      00
 33967              	.LASF121:
 33968 05da 72696768 		.ascii	"right_left\000"
 33968      745F6C65 
 33968      667400
 33969              	.LASF29:
 33970 05e5 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 33970      53544F52 
 33970      455F4445 
 33970      4641554C 
 33970      545F5041 
 33971              	.LASF149:
 33972 05fe 656E636F 		.ascii	"encoder_line\000"
 33972      6465725F 
 33972      6C696E65 
 33972      00
 33973              	.LASF275:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 727


 33974 060b 6E5F696D 		.ascii	"n_imu_str_len\000"
 33974      755F7374 
 33974      725F6C65 
 33974      6E00
 33975              	.LASF278:
 33976 0619 696D755F 		.ascii	"imu_table_str_len\000"
 33976      7461626C 
 33976      655F7374 
 33976      725F6C65 
 33976      6E00
 33977              	.LASF305:
 33978 062b 76616C75 		.ascii	"value\000"
 33978      6500
 33979              	.LASF207:
 33980 0631 666C6167 		.ascii	"flags\000"
 33980      7300
 33981              	.LASF101:
 33982 0637 70726573 		.ascii	"pressure\000"
 33982      73757265 
 33982      00
 33983              	.LASF37:
 33984 0640 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 33984      4745545F 
 33984      41435449 
 33984      56415445 
 33984      00
 33985              	.LASF22:
 33986 0651 63686172 		.ascii	"char\000"
 33986      00
 33987              	.LASF144:
 33988 0656 6D61785F 		.ascii	"max_step_pos\000"
 33988      73746570 
 33988      5F706F73 
 33988      00
 33989              	.LASF404:
 33990 0663 675F696D 		.ascii	"g_imu\000"
 33990      7500
 33991              	.LASF311:
 33992 0669 7265745F 		.ascii	"ret_val\000"
 33992      76616C00 
 33993              	.LASF258:
 33994 0671 6D656E75 		.ascii	"menu_idx\000"
 33994      5F696478 
 33994      00
 33995              	.LASF267:
 33996 067a 73746172 		.ascii	"start_byte\000"
 33996      745F6279 
 33996      746500
 33997              	.LASF264:
 33998 0685 6E756D5F 		.ascii	"num_mag_cal_params\000"
 33998      6D61675F 
 33998      63616C5F 
 33998      70617261 
 33998      6D7300
 33999              	.LASF150:
 34000 0698 70776D5F 		.ascii	"pwm_rate_limiter\000"
 34000      72617465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 728


 34000      5F6C696D 
 34000      69746572 
 34000      00
 34001              	.LASF130:
 34002 06a9 6B5F645F 		.ascii	"k_d_c\000"
 34002      6300
 34003              	.LASF100:
 34004 06af 73745F66 		.ascii	"st_fb_meas\000"
 34004      625F6D65 
 34004      617300
 34005              	.LASF221:
 34006 06ba 7061636B 		.ascii	"packet_string\000"
 34006      65745F73 
 34006      7472696E 
 34006      6700
 34007              	.LASF156:
 34008 06c8 6D5F6D75 		.ascii	"m_mult\000"
 34008      6C7400
 34009              	.LASF129:
 34010 06cf 6B5F695F 		.ascii	"k_i_c\000"
 34010      6300
 34011              	.LASF152:
 34012 06d5 6D6F746F 		.ascii	"motor_voltage\000"
 34012      725F766F 
 34012      6C746167 
 34012      6500
 34013              	.LASF308:
 34014 06e3 64697370 		.ascii	"displacement\000"
 34014      6C616365 
 34014      6D656E74 
 34014      00
 34015              	.LASF302:
 34016 06f0 64617461 		.ascii	"data_length\000"
 34016      5F6C656E 
 34016      67746800 
 34017              	.LASF142:
 34018 06fc 706F735F 		.ascii	"pos_lim_sup\000"
 34018      6C696D5F 
 34018      73757000 
 34019              	.LASF286:
 34020 0708 5230315F 		.ascii	"R01_str\000"
 34020      73747200 
 34021              	.LASF164:
 34022 0710 656D675F 		.ascii	"emg_speed\000"
 34022      73706565 
 34022      6400
 34023              	.LASF183:
 34024 071a 72657374 		.ascii	"rest_vel\000"
 34024      5F76656C 
 34024      00
 34025              	.LASF234:
 34026 0723 7061636B 		.ascii	"packet_data\000"
 34026      65745F64 
 34026      61746100 
 34027              	.LASF118:
 34028 072f 73745F64 		.ascii	"st_device\000"
 34028      65766963 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 729


 34028      6500
 34029              	.LASF396:
 34030 0739 7046696C 		.ascii	"pFile\000"
 34030      6500
 34031              	.LASF175:
 34032 073f 4144435F 		.ascii	"ADC_conf\000"
 34032      636F6E66 
 34032      00
 34033              	.LASF299:
 34034 0748 636F6D6D 		.ascii	"commWrite\000"
 34034      57726974 
 34034      6500
 34035              	.LASF367:
 34036 0752 64656163 		.ascii	"deactivate_slaves\000"
 34036      74697661 
 34036      74655F73 
 34036      6C617665 
 34036      7300
 34037              	.LASF310:
 34038 0764 70616765 		.ascii	"pages\000"
 34038      7300
 34039              	.LASF314:
 34040 076a 6D656D49 		.ascii	"memInit\000"
 34040      6E697400 
 34041              	.LASF132:
 34042 0772 6B5F695F 		.ascii	"k_i_dl\000"
 34042      646C00
 34043              	.LASF38:
 34044 0779 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 34044      5345545F 
 34044      494E5055 
 34044      545300
 34045              	.LASF103:
 34046 0788 62756666 		.ascii	"buffer\000"
 34046      657200
 34047              	.LASF134:
 34048 078f 6B5F705F 		.ascii	"k_p_c_dl\000"
 34048      635F646C 
 34048      00
 34049              	.LASF320:
 34050 0798 636D645F 		.ascii	"cmd_get_measurements\000"
 34050      6765745F 
 34050      6D656173 
 34050      7572656D 
 34050      656E7473 
 34051              	.LASF216:
 34052 07ad 73706565 		.ascii	"speed\000"
 34052      6400
 34053              	.LASF220:
 34054 07b3 72785F63 		.ascii	"rx_cmd\000"
 34054      6D6400
 34055              	.LASF88:
 34056 07ba 54595045 		.ascii	"TYPE_DOUBLE\000"
 34056      5F444F55 
 34056      424C4500 
 34057              	.LASF355:
 34058 07c6 736C6176 		.ascii	"slave_motor_idx\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 730


 34058      655F6D6F 
 34058      746F725F 
 34058      69647800 
 34059              	.LASF372:
 34060 07d6 675F6D65 		.ascii	"g_meas\000"
 34060      617300
 34061              	.LASF395:
 34062 07dd 456E636F 		.ascii	"Encoder_Check\000"
 34062      6465725F 
 34062      43686563 
 34062      6B00
 34063              	.LASF325:
 34064 07eb 6C617374 		.ascii	"last_aux_int16\000"
 34064      5F617578 
 34064      5F696E74 
 34064      313600
 34065              	.LASF77:
 34066 07fa 41434B5F 		.ascii	"ACK_ERROR\000"
 34066      4552524F 
 34066      5200
 34067              	.LASF392:
 34068 0804 64617461 		.ascii	"data_encoder_raw\000"
 34068      5F656E63 
 34068      6F646572 
 34068      5F726177 
 34068      00
 34069              	.LASF60:
 34070 0815 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 34070      545F4D4F 
 34070      44455F45 
 34070      58544552 
 34070      4E414C00 
 34071              	.LASF249:
 34072 0829 696E6465 		.ascii	"index\000"
 34072      7800
 34073              	.LASF194:
 34074 082f 6D617869 		.ascii	"maximum_pressure_kPa\000"
 34074      6D756D5F 
 34074      70726573 
 34074      73757265 
 34074      5F6B5061 
 34075              	.LASF184:
 34076 0844 72657374 		.ascii	"rest_position_flag\000"
 34076      5F706F73 
 34076      6974696F 
 34076      6E5F666C 
 34076      616700
 34077              	.LASF186:
 34078 0857 6A6F7973 		.ascii	"joystick_closure_speed\000"
 34078      7469636B 
 34078      5F636C6F 
 34078      73757265 
 34078      5F737065 
 34079              	.LASF351:
 34080 086e 66696C65 		.ascii	"filename_length\000"
 34080      6E616D65 
 34080      5F6C656E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 731


 34080      67746800 
 34081              	.LASF135:
 34082 087e 6B5F695F 		.ascii	"k_i_c_dl\000"
 34082      635F646C 
 34082      00
 34083              	.LASF331:
 34084 0887 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 34084      52656164 
 34084      52657343 
 34084      75727246 
 34084      726F6D53 
 34085              	.LASF330:
 34086 089d 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 34086      6765745F 
 34086      63757272 
 34086      656E7473 
 34086      5F666F72 
 34087              	.LASF270:
 34088 08b7 6D61675F 		.ascii	"mag_param_str\000"
 34088      70617261 
 34088      6D5F7374 
 34088      7200
 34089              	.LASF389:
 34090 08c5 72657365 		.ascii	"reset_PSoC_flag\000"
 34090      745F5053 
 34090      6F435F66 
 34090      6C616700 
 34091              	.LASF362:
 34092 08d5 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 34092      5F616374 
 34092      5F777269 
 34092      73745F63 
 34092      6F6E7472 
 34093              	.LASF89:
 34094 08ec 54595045 		.ascii	"TYPE_STRING\000"
 34094      5F535452 
 34094      494E4700 
 34095              	.LASF72:
 34096 08f8 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 34096      5F414E44 
 34096      5F504F53 
 34096      5F434F4E 
 34096      54524F4C 
 34097              	.LASF28:
 34098 090d 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 34098      53544F52 
 34098      455F5041 
 34098      52414D53 
 34098      00
 34099              	.LASF231:
 34100 091e 50415241 		.ascii	"PARAMS_STR\000"
 34100      4D535F53 
 34100      545200
 34101              	.LASF214:
 34102 0929 656E6162 		.ascii	"enabled\000"
 34102      6C656400 
 34103              	.LASF7:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 732


 34104 0931 6C6F6E67 		.ascii	"long unsigned int\000"
 34104      20756E73 
 34104      69676E65 
 34104      6420696E 
 34104      7400
 34105              	.LASF32:
 34106 0943 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 34106      424F4F54 
 34106      4C4F4144 
 34106      455200
 34107              	.LASF188:
 34108 0952 6A6F7973 		.ascii	"joystick_gains\000"
 34108      7469636B 
 34108      5F676169 
 34108      6E7300
 34109              	.LASF96:
 34110 0961 686F6C64 		.ascii	"hold_curr\000"
 34110      5F637572 
 34110      7200
 34111              	.LASF66:
 34112 096b 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 34112      545F4D4F 
 34112      44455F4A 
 34112      4F595354 
 34112      49434B00 
 34113              	.LASF113:
 34114 097f 746F7461 		.ascii	"total_time_rest\000"
 34114      6C5F7469 
 34114      6D655F72 
 34114      65737400 
 34115              	.LASF223:
 34116 098f 7374725F 		.ascii	"str_sd_data\000"
 34116      73645F64 
 34116      61746100 
 34117              	.LASF137:
 34118 099b 61637469 		.ascii	"activ\000"
 34118      7600
 34119              	.LASF233:
 34120 09a1 4D454E55 		.ascii	"MENU_STR\000"
 34120      5F535452 
 34120      00
 34121              	.LASF155:
 34122 09aa 6D5F6F66 		.ascii	"m_off\000"
 34122      6600
 34123              	.LASF78:
 34124 09b0 41434B5F 		.ascii	"ACK_OK\000"
 34124      4F4B00
 34125              	.LASF80:
 34126 09b7 54595045 		.ascii	"TYPE_FLAG\000"
 34126      5F464C41 
 34126      4700
 34127              	.LASF211:
 34128 09c1 71756174 		.ascii	"quat_value\000"
 34128      5F76616C 
 34128      756500
 34129              	.LASF266:
 34130 09cc 7061636B 		.ascii	"packet_length\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 733


 34130      65745F6C 
 34130      656E6774 
 34130      6800
 34131              	.LASF181:
 34132 09da 72657374 		.ascii	"rest_pos\000"
 34132      5F706F73 
 34132      00
 34133              	.LASF91:
 34134 09e3 63757272 		.ascii	"curr\000"
 34134      00
 34135              	.LASF147:
 34136 09e8 696E7075 		.ascii	"input_mode\000"
 34136      745F6D6F 
 34136      646500
 34137              	.LASF70:
 34138 09f3 434F4E54 		.ascii	"CONTROL_PWM\000"
 34138      524F4C5F 
 34138      50574D00 
 34139              	.LASF43:
 34140 09ff 434D445F 		.ascii	"CMD_GET_EMG\000"
 34140      4745545F 
 34140      454D4700 
 34141              	.LASF315:
 34142 0a0b 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 34142      6E69745F 
 34142      536F6674 
 34142      48616E64 
 34142      50726F00 
 34143              	.LASF31:
 34144 0a1f 434D445F 		.ascii	"CMD_GET_INFO\000"
 34144      4745545F 
 34144      494E464F 
 34144      00
 34145              	.LASF262:
 34146 0a2c 6765745F 		.ascii	"get_IMU_param_list\000"
 34146      494D555F 
 34146      70617261 
 34146      6D5F6C69 
 34146      737400
 34147              	.LASF345:
 34148 0a3f 73696E67 		.ascii	"single_packet\000"
 34148      6C655F70 
 34148      61636B65 
 34148      7400
 34149              	.LASF265:
 34150 0a4d 66697273 		.ascii	"first_imu_parameter\000"
 34150      745F696D 
 34150      755F7061 
 34150      72616D65 
 34150      74657200 
 34151              	.LASF42:
 34152 0a61 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 34152      4745545F 
 34152      43555252 
 34152      5F414E44 
 34152      5F4D4541 
 34153              	.LASF410:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 734


 34154 0a77 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 34154      43313120 
 34154      352E342E 
 34154      31203230 
 34154      31363036 
 34155 0aaa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 34155      20726576 
 34155      6973696F 
 34155      6E203233 
 34155      37373135 
 34156 0add 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 34156      66756E63 
 34156      74696F6E 
 34156      2D736563 
 34156      74696F6E 
 34157              	.LASF93:
 34158 0b05 73745F72 		.ascii	"st_ref\000"
 34158      656600
 34159              	.LASF323:
 34160 0b0c 636D645F 		.ascii	"cmd_get_joystick\000"
 34160      6765745F 
 34160      6A6F7973 
 34160      7469636B 
 34160      00
 34161              	.LASF47:
 34162 0b1d 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 34162      5345545F 
 34162      43554646 
 34162      5F494E50 
 34162      55545300 
 34163              	.LASF180:
 34164 0b31 73745F53 		.ascii	"st_SH_spec\000"
 34164      485F7370 
 34164      656300
 34165              	.LASF380:
 34166 0b3c 63616C69 		.ascii	"calib\000"
 34166      6200
 34167              	.LASF6:
 34168 0b42 5F5F7569 		.ascii	"__uint32_t\000"
 34168      6E743332 
 34168      5F7400
 34169              	.LASF8:
 34170 0b4d 6C6F6E67 		.ascii	"long long int\000"
 34170      206C6F6E 
 34170      6720696E 
 34170      7400
 34171              	.LASF68:
 34172 0b5b 53485F63 		.ascii	"SH_control_mode\000"
 34172      6F6E7472 
 34172      6F6C5F6D 
 34172      6F646500 
 34173              	.LASF82:
 34174 0b6b 54595045 		.ascii	"TYPE_UINT8\000"
 34174      5F55494E 
 34174      543800
 34175              	.LASF329:
 34176 0b76 636D645F 		.ascii	"cmd_get_currents\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 735


 34176      6765745F 
 34176      63757272 
 34176      656E7473 
 34176      00
 34177              	.LASF75:
 34178 0b87 4D41584F 		.ascii	"MAXON_12V\000"
 34178      4E5F3132 
 34178      5600
 34179              	.LASF388:
 34180 0b91 6368616E 		.ascii	"change_ext_ref_flag\000"
 34180      67655F65 
 34180      78745F72 
 34180      65665F66 
 34180      6C616700 
 34181              	.LASF21:
 34182 0ba5 646F7562 		.ascii	"double\000"
 34182      6C6500
 34183              	.LASF56:
 34184 0bac 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 34184      4745545F 
 34184      53445F53 
 34184      494E474C 
 34184      455F4649 
 34185              	.LASF154:
 34186 0bc3 456E635F 		.ascii	"Enc_raw_read_conf\000"
 34186      7261775F 
 34186      72656164 
 34186      5F636F6E 
 34186      6600
 34187              	.LASF217:
 34188 0bd5 72657065 		.ascii	"repetitions\000"
 34188      74697469 
 34188      6F6E7300 
 34189              	.LASF143:
 34190 0be1 6D61785F 		.ascii	"max_step_neg\000"
 34190      73746570 
 34190      5F6E6567 
 34190      00
 34191              	.LASF408:
 34192 0bee 656D675F 		.ascii	"emg_history_next_idx\000"
 34192      68697374 
 34192      6F72795F 
 34192      6E657874 
 34192      5F696478 
 34193              	.LASF191:
 34194 0c03 736C6176 		.ascii	"slave_ID\000"
 34194      655F4944 
 34194      00
 34195              	.LASF386:
 34196 0c0c 72657365 		.ascii	"reset_last_value_flag\000"
 34196      745F6C61 
 34196      73745F76 
 34196      616C7565 
 34196      5F666C61 
 34197              	.LASF232:
 34198 0c22 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 34198      4F4D5F50 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 736


 34198      4152414D 
 34198      5F474554 
 34198      00
 34199              	.LASF20:
 34200 0c33 666C6F61 		.ascii	"float\000"
 34200      7400
 34201              	.LASF170:
 34202 0c39 494D555F 		.ascii	"IMU_conf\000"
 34202      636F6E66 
 34202      00
 34203              	.LASF57:
 34204 0c42 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 34204      52454D4F 
 34204      56455F53 
 34204      445F5349 
 34204      4E474C45 
 34205              	.LASF250:
 34206 0c5c 50415241 		.ascii	"PARAM_IDX\000"
 34206      4D5F4944 
 34206      5800
 34207              	.LASF97:
 34208 0c66 73745F61 		.ascii	"st_adc_meas\000"
 34208      64635F6D 
 34208      65617300 
 34209              	.LASF246:
 34210 0c72 6D5F6164 		.ascii	"m_addr\000"
 34210      647200
 34211              	.LASF379:
 34212 0c79 635F6D65 		.ascii	"c_mem\000"
 34212      6D00
 34213              	.LASF301:
 34214 0c7f 64617461 		.ascii	"data_array\000"
 34214      5F617272 
 34214      617900
 34215              	.LASF10:
 34216 0c8a 756E7369 		.ascii	"unsigned int\000"
 34216      676E6564 
 34216      20696E74 
 34216      00
 34217              	.LASF359:
 34218 0c97 6572725F 		.ascii	"err_emg_2\000"
 34218      656D675F 
 34218      3200
 34219              	.LASF316:
 34220 0ca1 6D656D49 		.ascii	"memInit_Master\000"
 34220      6E69745F 
 34220      4D617374 
 34220      657200
 34221              	.LASF235:
 34222 0cb0 7061636B 		.ascii	"packet_lenght\000"
 34222      65745F6C 
 34222      656E6768 
 34222      7400
 34223              	.LASF304:
 34224 0cbe 73656E64 		.ascii	"sendAcknowledgment\000"
 34224      41636B6E 
 34224      6F776C65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 737


 34224      64676D65 
 34224      6E7400
 34225              	.LASF289:
 34226 0cd1 70726570 		.ascii	"prepare_SD_legend\000"
 34226      6172655F 
 34226      53445F6C 
 34226      6567656E 
 34226      6400
 34227              	.LASF405:
 34228 0ce3 4D616743 		.ascii	"MagCal\000"
 34228      616C00
 34229              	.LASF58:
 34230 0cea 53485F63 		.ascii	"SH_command\000"
 34230      6F6D6D61 
 34230      6E6400
 34231              	.LASF84:
 34232 0cf5 54595045 		.ascii	"TYPE_UINT16\000"
 34232      5F55494E 
 34232      54313600 
 34233              	.LASF201:
 34234 0d01 666C6167 		.ascii	"flag\000"
 34234      00
 34235              	.LASF324:
 34236 0d06 636D645F 		.ascii	"cmd_set_inputs\000"
 34236      7365745F 
 34236      696E7075 
 34236      747300
 34237              	.LASF148:
 34238 0d15 636F6E74 		.ascii	"control_mode\000"
 34238      726F6C5F 
 34238      6D6F6465 
 34238      00
 34239              	.LASF339:
 34240 0d22 6F66665F 		.ascii	"off_1\000"
 34240      3100
 34241              	.LASF61:
 34242 0d28 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 34242      545F4D4F 
 34242      44455F45 
 34242      4E434F44 
 34242      45523300 
 34243              	.LASF300:
 34244 0d3c 636F6D6D 		.ascii	"commWriteID\000"
 34244      57726974 
 34244      65494400 
 34245              	.LASF52:
 34246 0d48 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 34246      4745545F 
 34246      454E434F 
 34246      4445525F 
 34246      434F4E46 
 34247              	.LASF167:
 34248 0d5d 73745F69 		.ascii	"st_imu\000"
 34248      6D7500
 34249              	.LASF327:
 34250 0d64 636D645F 		.ascii	"cmd_get_activate\000"
 34250      6765745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 738


 34250      61637469 
 34250      76617465 
 34250      00
 34251              	.LASF356:
 34252 0d75 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 34252      61637469 
 34252      76617469 
 34252      6F6E5F76 
 34252      656C6F63 
 34253              	.LASF237:
 34254 0d91 73747269 		.ascii	"string_lenght\000"
 34254      6E675F6C 
 34254      656E6768 
 34254      7400
 34255              	.LASF87:
 34256 0d9f 54595045 		.ascii	"TYPE_FLOAT\000"
 34256      5F464C4F 
 34256      415400
 34257              	.LASF255:
 34258 0daa 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 34258      4F4D5F50 
 34258      4152414D 
 34258      5F534554 
 34258      5F4C4953 
 34259              	.LASF229:
 34260 0dc0 4E554D5F 		.ascii	"NUM_STRUCT\000"
 34260      53545255 
 34260      435400
 34261              	.LASF403:
 34262 0dcb 73696E67 		.ascii	"single_imu_size\000"
 34262      6C655F69 
 34262      6D755F73 
 34262      697A6500 
 34263              	.LASF260:
 34264 0ddb 6175785F 		.ascii	"aux_uchar\000"
 34264      75636861 
 34264      7200
 34265              	.LASF287:
 34266 0de5 70726570 		.ascii	"prepare_R01_info\000"
 34266      6172655F 
 34266      5230315F 
 34266      696E666F 
 34266      00
 34267              	.LASF98:
 34268 0df6 6164645F 		.ascii	"add_emg\000"
 34268      656D6700 
 34269              	.LASF83:
 34270 0dfe 54595045 		.ascii	"TYPE_INT16\000"
 34270      5F494E54 
 34270      313600
 34271              	.LASF241:
 34272 0e09 6175785F 		.ascii	"aux_uint16\000"
 34272      75696E74 
 34272      313600
 34273              	.LASF162:
 34274 0e14 656D675F 		.ascii	"emg_threshold\000"
 34274      74687265 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 739


 34274      73686F6C 
 34274      6400
 34275              	.LASF46:
 34276 0e22 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 34276      4745545F 
 34276      43555252 
 34276      5F444946 
 34276      4600
 34277              	.LASF159:
 34278 0e34 6D6F746F 		.ascii	"motor_handle_ratio\000"
 34278      725F6861 
 34278      6E646C65 
 34278      5F726174 
 34278      696F00
 34279              	.LASF109:
 34280 0e47 63757272 		.ascii	"current_hist\000"
 34280      656E745F 
 34280      68697374 
 34280      00
 34281              	.LASF71:
 34282 0e54 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 34282      524F4C5F 
 34282      43555252 
 34282      454E5400 
 34283              	.LASF24:
 34284 0e64 6C6F6E67 		.ascii	"long double\000"
 34284      20646F75 
 34284      626C6500 
 34285              	.LASF86:
 34286 0e70 54595045 		.ascii	"TYPE_UINT32\000"
 34286      5F55494E 
 34286      54333200 
 34287              	.LASF192:
 34288 0e7c 73745F46 		.ascii	"st_FB_spec\000"
 34288      425F7370 
 34288      656300
 34289              	.LASF226:
 34290 0e87 5641525F 		.ascii	"VAR_P\000"
 34290      5000
 34291              	.LASF254:
 34292 0e8d 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 34292      4F4D5F50 
 34292      4152414D 
 34292      5F474554 
 34292      5F4C4953 
 34293              	.LASF116:
 34294 0ea3 6D6F7469 		.ascii	"motion_counter\000"
 34294      6F6E5F63 
 34294      6F756E74 
 34294      657200
 34295              	.LASF303:
 34296 0eb2 63686563 		.ascii	"checksum\000"
 34296      6B73756D 
 34296      00
 34297              	.LASF371:
 34298 0ebb 675F7265 		.ascii	"g_refOld\000"
 34298      664F6C64 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 740


 34298      00
 34299              	.LASF35:
 34300 0ec4 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 34300      48414E44 
 34300      5F43414C 
 34300      49425241 
 34300      544500
 34301              	.LASF209:
 34302 0ed7 6779726F 		.ascii	"gyro_value\000"
 34302      5F76616C 
 34302      756500
 34303              	.LASF172:
 34304 0ee2 63757272 		.ascii	"curr_time\000"
 34304      5F74696D 
 34304      6500
 34305              	.LASF157:
 34306 0eec 646F7562 		.ascii	"double_encoder_on_off\000"
 34306      6C655F65 
 34306      6E636F64 
 34306      65725F6F 
 34306      6E5F6F66 
 34307              	.LASF363:
 34308 0f02 64726976 		.ascii	"drive_slave\000"
 34308      655F736C 
 34308      61766500 
 34309              	.LASF169:
 34310 0f0e 5350495F 		.ascii	"SPI_read_delay\000"
 34310      72656164 
 34310      5F64656C 
 34310      617900
 34311              	.LASF76:
 34312 0f1d 61636B6E 		.ascii	"acknowledgment_values\000"
 34312      6F776C65 
 34312      64676D65 
 34312      6E745F76 
 34312      616C7565 
 34313              	.LASF244:
 34314 0f33 4D4F544F 		.ascii	"MOTOR_IDX\000"
 34314      525F4944 
 34314      5800
 34315              	.LASF313:
 34316 0f3d 6D656D52 		.ascii	"memRestore\000"
 34316      6573746F 
 34316      726500
 34317              	.LASF268:
 34318 0f48 6E5F696D 		.ascii	"n_imu_str\000"
 34318      755F7374 
 34318      7200
 34319              	.LASF282:
 34320 0f52 696E666F 		.ascii	"info_string\000"
 34320      5F737472 
 34320      696E6700 
 34321              	.LASF290:
 34322 0f5e 70726570 		.ascii	"prepare_SD_info\000"
 34322      6172655F 
 34322      53445F69 
 34322      6E666F00 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 741


 34323              	.LASF357:
 34324 0f6e 66736D5F 		.ascii	"fsm_state\000"
 34324      73746174 
 34324      6500
 34325              	.LASF9:
 34326 0f78 6C6F6E67 		.ascii	"long long unsigned int\000"
 34326      206C6F6E 
 34326      6720756E 
 34326      7369676E 
 34326      65642069 
 34327              	.LASF85:
 34328 0f8f 54595045 		.ascii	"TYPE_INT32\000"
 34328      5F494E54 
 34328      333200
 34329              	.LASF243:
 34330 0f9a 6175785F 		.ascii	"aux_uint32\000"
 34330      75696E74 
 34330      333200
 34331              	.LASF104:
 34332 0fa5 6C656E67 		.ascii	"length\000"
 34332      746800
 34333              	.LASF256:
 34334 0fac 55534552 		.ascii	"USER_ID_PARAM\000"
 34334      5F49445F 
 34334      50415241 
 34334      4D00
 34335              	.LASF206:
 34336 0fba 73745F69 		.ascii	"st_imu_data\000"
 34336      6D755F64 
 34336      61746100 
 34337              	.LASF210:
 34338 0fc6 6D61675F 		.ascii	"mag_value\000"
 34338      76616C75 
 34338      6500
 34339              	.LASF92:
 34340 0fd0 6F6E6F66 		.ascii	"onoff\000"
 34340      6600
 34341              	.LASF45:
 34342 0fd6 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 34342      4745545F 
 34342      41434345 
 34342      4C00
 34343              	.LASF321:
 34344 0fe4 636D645F 		.ascii	"cmd_get_velocities\000"
 34344      6765745F 
 34344      76656C6F 
 34344      63697469 
 34344      657300
 34345              	.LASF312:
 34346 0ff7 6D656D52 		.ascii	"memRecall\000"
 34346      6563616C 
 34346      6C00
 34347              	.LASF382:
 34348 1001 74696D65 		.ascii	"timer_value0\000"
 34348      725F7661 
 34348      6C756530 
 34348      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 742


 34349              	.LASF48:
 34350 100e 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 34350      5345545F 
 34350      42415544 
 34350      52415445 
 34350      00
 34351              	.LASF128:
 34352 101f 6B5F705F 		.ascii	"k_p_c\000"
 34352      6300
 34353              	.LASF272:
 34354 1025 696D755F 		.ascii	"imu_table_str\000"
 34354      7461626C 
 34354      655F7374 
 34354      7200
 34355              	.LASF383:
 34356 1033 6465765F 		.ascii	"dev_tension\000"
 34356      74656E73 
 34356      696F6E00 
 34357              	.LASF139:
 34358 103f 6D6F746F 		.ascii	"motor_driver_type\000"
 34358      725F6472 
 34358      69766572 
 34358      5F747970 
 34358      6500
 34359              	.LASF340:
 34360 1051 6D756C74 		.ascii	"mult_1\000"
 34360      5F3100
 34361              	.LASF284:
 34362 1058 70726570 		.ascii	"prepare_counter_info\000"
 34362      6172655F 
 34362      636F756E 
 34362      7465725F 
 34362      696E666F 
 34363              	.LASF23:
 34364 106d 72656738 		.ascii	"reg8\000"
 34364      00
 34365              	.LASF195:
 34366 1072 70726F70 		.ascii	"prop_err_fb_gain\000"
 34366      5F657272 
 34366      5F66625F 
 34366      6761696E 
 34366      00
 34367              	.LASF297:
 34368 1083 636F6D6D 		.ascii	"commWrite_old_id\000"
 34368      57726974 
 34368      655F6F6C 
 34368      645F6964 
 34368      00
 34369              	.LASF248:
 34370 1094 6D616E61 		.ascii	"manage_param_list\000"
 34370      67655F70 
 34370      6172616D 
 34370      5F6C6973 
 34370      7400
 34371              	.LASF30:
 34372 10a6 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 34372      52455354 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 743


 34372      4F52455F 
 34372      50415241 
 34372      4D5300
 34373              	.LASF397:
 34374 10b9 73644669 		.ascii	"sdFile\000"
 34374      6C6500
 34375              	.LASF288:
 34376 10c0 70726570 		.ascii	"prepare_SD_param_info\000"
 34376      6172655F 
 34376      53445F70 
 34376      6172616D 
 34376      5F696E66 
 34377              	.LASF332:
 34378 10d6 63757272 		.ascii	"curr_diff\000"
 34378      5F646966 
 34378      6600
 34379              	.LASF190:
 34380 10e0 736C6176 		.ascii	"slave_comm_active\000"
 34380      655F636F 
 34380      6D6D5F61 
 34380      63746976 
 34380      6500
 34381              	.LASF291:
 34382 10f2 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 34382      6172655F 
 34382      53445F45 
 34382      4D475F48 
 34382      6973746F 
 34383              	.LASF298:
 34384 1110 6F6C645F 		.ascii	"old_id\000"
 34384      696400
 34385              	.LASF413:
 34386 1117 5F5F5245 		.ascii	"__REV16\000"
 34386      56313600 
 34387              	.LASF393:
 34388 111f 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 34388      636F6465 
 34388      725F4C69 
 34388      6E655F43 
 34388      6F6E6E65 
 34389              	.LASF126:
 34390 1138 6465765F 		.ascii	"dev_type\000"
 34390      74797065 
 34390      00
 34391              	.LASF177:
 34392 1141 73745F75 		.ascii	"st_user\000"
 34392      73657200 
 34393              	.LASF328:
 34394 1149 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 34394      6765745F 
 34394      63757272 
 34394      5F616E64 
 34394      5F6D6561 
 34395              	.LASF160:
 34396 115f 67656172 		.ascii	"gears_params\000"
 34396      735F7061 
 34396      72616D73 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 744


 34396      00
 34397              	.LASF171:
 34398 116c 73745F65 		.ascii	"st_expansion\000"
 34398      7870616E 
 34398      73696F6E 
 34398      00
 34399              	.LASF165:
 34400 1179 656D675F 		.ascii	"emg_calibration_flag\000"
 34400      63616C69 
 34400      62726174 
 34400      696F6E5F 
 34400      666C6167 
 34401              	.LASF94:
 34402 118e 73745F6D 		.ascii	"st_meas\000"
 34402      65617300 
 34403              	.LASF55:
 34404 1196 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 34404      4745545F 
 34404      4144435F 
 34404      52415700 
 34405              	.LASF187:
 34406 11a6 6A6F7973 		.ascii	"joystick_threshold\000"
 34406      7469636B 
 34406      5F746872 
 34406      6573686F 
 34406      6C6400
 34407              	.LASF74:
 34408 11b9 4D41584F 		.ascii	"MAXON_24V\000"
 34408      4E5F3234 
 34408      5600
 34409              	.LASF67:
 34410 11c3 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 34410      545F4D4F 
 34410      44455F45 
 34410      4D475F50 
 34410      524F504F 
 34411              	.LASF51:
 34412 11e2 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 34412      4745545F 
 34412      494D555F 
 34412      50415241 
 34412      4D00
 34413              	.LASF376:
 34414 11f4 675F6662 		.ascii	"g_fb_meas\000"
 34414      5F6D6561 
 34414      7300
 34415              	.LASF53:
 34416 11fe 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 34416      4745545F 
 34416      454E434F 
 34416      4445525F 
 34416      52415700 
 34417              	.LASF338:
 34418 1212 636D645F 		.ascii	"cmd_store_params\000"
 34418      73746F72 
 34418      655F7061 
 34418      72616D73 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 745


 34418      00
 34419              	.LASF378:
 34420 1223 675F6D65 		.ascii	"g_mem\000"
 34420      6D00
 34421              	.LASF40:
 34422 1229 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 34422      4745545F 
 34422      4D454153 
 34422      5552454D 
 34422      454E5453 
 34423              	.LASF375:
 34424 123e 675F6164 		.ascii	"g_adc_measOld\000"
 34424      635F6D65 
 34424      61734F6C 
 34424      6400
 34425              	.LASF347:
 34426 124c 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 34426      6765745F 
 34426      656E636F 
 34426      6465725F 
 34426      72617700 
 34427              	.LASF13:
 34428 1260 75696E74 		.ascii	"uint8\000"
 34428      3800
 34429              	.LASF218:
 34430 1266 636F6D6D 		.ascii	"commProcess\000"
 34430      50726F63 
 34430      65737300 
 34431              	.LASF185:
 34432 1272 73745F4A 		.ascii	"st_JOY_spec\000"
 34432      4F595F73 
 34432      70656300 
 34433              	.LASF2:
 34434 127e 73686F72 		.ascii	"short int\000"
 34434      7420696E 
 34434      7400
 34435              	.LASF317:
 34436 1288 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 34436      6E69745F 
 34436      41697243 
 34436      68616D62 
 34436      65727346 
 34437              	.LASF276:
 34438 129e 6964735F 		.ascii	"ids_str_len\000"
 34438      7374725F 
 34438      6C656E00 
 34439              	.LASF133:
 34440 12aa 6B5F645F 		.ascii	"k_d_dl\000"
 34440      646C00
 34441              	.LASF236:
 34442 12b1 6964785F 		.ascii	"idx_menu\000"
 34442      6D656E75 
 34442      00
 34443              	.LASF99:
 34444 12ba 6A6F7973 		.ascii	"joystick\000"
 34444      7469636B 
 34444      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 746


 34445              	.LASF203:
 34446 12c3 6D6F746F 		.ascii	"motor\000"
 34446      7200
 34447              	.LASF400:
 34448 12c9 4E5F494D 		.ascii	"N_IMU_Connected\000"
 34448      555F436F 
 34448      6E6E6563 
 34448      74656400 
 34449              	.LASF39:
 34450 12d9 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 34450      4745545F 
 34450      494E5055 
 34450      545300
 34451              	.LASF119:
 34452 12e8 68775F6D 		.ascii	"hw_maint_date\000"
 34452      61696E74 
 34452      5F646174 
 34452      6500
 34453              	.LASF269:
 34454 12f6 6964735F 		.ascii	"ids_str\000"
 34454      73747200 
 34455              	.LASF54:
 34456 12fe 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 34456      4745545F 
 34456      4144435F 
 34456      434F4E46 
 34456      00
 34457              	.LASF27:
 34458 130f 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 34458      5345545F 
 34458      5A45524F 
 34458      5300
 34459              	.LASF277:
 34460 131d 6D61675F 		.ascii	"mag_param_str_len\000"
 34460      70617261 
 34460      6D5F7374 
 34460      725F6C65 
 34460      6E00
 34461              	.LASF263:
 34462 132f 6E756D5F 		.ascii	"num_imus_id_params\000"
 34462      696D7573 
 34462      5F69645F 
 34462      70617261 
 34462      6D7300
 34463              	.LASF240:
 34464 1342 6175785F 		.ascii	"aux_int16\000"
 34464      696E7431 
 34464      3600
 34465              	.LASF407:
 34466 134c 656D675F 		.ascii	"emg_history\000"
 34466      68697374 
 34466      6F727900 
 34467              	.LASF409:
 34468 1358 45455052 		.ascii	"EEPROM_ADDR\000"
 34468      4F4D5F41 
 34468      44445200 
 34469              	.LASF120:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 747


 34470 1364 73746174 		.ascii	"stats_period_begin_date\000"
 34470      735F7065 
 34470      72696F64 
 34470      5F626567 
 34470      696E5F64 
 34471              	.LASF402:
 34472 137c 696D7573 		.ascii	"imus_data_size\000"
 34472      5F646174 
 34472      615F7369 
 34472      7A6500
 34473              	.LASF368:
 34474 138b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 34474      52784275 
 34474      66666572 
 34474      00
 34475              	.LASF44:
 34476 1398 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 34476      4745545F 
 34476      56454C4F 
 34476      43495449 
 34476      455300
 34477              	.LASF385:
 34478 13ab 706F775F 		.ascii	"pow_tension\000"
 34478      74656E73 
 34478      696F6E00 
 34479              	.LASF34:
 34480 13b7 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 34480      4745545F 
 34480      50415241 
 34480      4D5F4C49 
 34480      535400
 34481              	.LASF79:
 34482 13ca 64617461 		.ascii	"data_types\000"
 34482      5F747970 
 34482      657300
 34483              	.LASF17:
 34484 13d5 696E7431 		.ascii	"int16\000"
 34484      3600
 34485              	.LASF173:
 34486 13db 72656164 		.ascii	"read_exp_port_flag\000"
 34486      5F657870 
 34486      5F706F72 
 34486      745F666C 
 34486      616700
 34487              	.LASF166:
 34488 13ee 73776974 		.ascii	"switch_emg\000"
 34488      63685F65 
 34488      6D6700
 34489              	.LASF138:
 34490 13f9 61637469 		.ascii	"activate_pwm_rescaling\000"
 34490      76617465 
 34490      5F70776D 
 34490      5F726573 
 34490      63616C69 
 34491              	.LASF131:
 34492 1410 6B5F705F 		.ascii	"k_p_dl\000"
 34492      646C00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 748


 34493              	.LASF95:
 34494 1417 65737469 		.ascii	"estim_curr\000"
 34494      6D5F6375 
 34494      727200
 34495              	.LASF384:
 34496 1422 6465765F 		.ascii	"dev_pwm_limit\000"
 34496      70776D5F 
 34496      6C696D69 
 34496      7400
 34497              	.LASF174:
 34498 1430 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 34498      5F414443 
 34498      5F73656E 
 34498      736F7273 
 34498      5F706F72 
 34499              	.LASF394:
 34500 144b 456E636F 		.ascii	"Encoder_Value\000"
 34500      6465725F 
 34500      56616C75 
 34500      6500
 34501              	.LASF346:
 34502 1459 636D645F 		.ascii	"cmd_get_encoder_map\000"
 34502      6765745F 
 34502      656E636F 
 34502      6465725F 
 34502      6D617000 
 34503              	.LASF125:
 34504 146d 75736572 		.ascii	"user_id\000"
 34504      5F696400 
 34505              	.LASF12:
 34506 1475 75696E74 		.ascii	"uint32_t\000"
 34506      33325F74 
 34506      00
 34507              	.LASF239:
 34508 147e 6175785F 		.ascii	"aux_float\000"
 34508      666C6F61 
 34508      7400
 34509              	.LASF401:
 34510 1488 494D555F 		.ascii	"IMU_connected\000"
 34510      636F6E6E 
 34510      65637465 
 34510      6400
 34511              	.LASF230:
 34512 1496 4E554D5F 		.ascii	"NUM_MENU\000"
 34512      4D454E55 
 34512      00
 34513              	.LASF242:
 34514 149f 6175785F 		.ascii	"aux_int32\000"
 34514      696E7433 
 34514      3200
 34515              	.LASF124:
 34516 14a9 62617564 		.ascii	"baud_rate\000"
 34516      5F726174 
 34516      6500
 34517              	.LASF334:
 34518 14b3 745F656E 		.ascii	"t_end\000"
 34518      6400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 749


 34519              	.LASF198:
 34520 14b9 66617374 		.ascii	"fast_act_threshold\000"
 34520      5F616374 
 34520      5F746872 
 34520      6573686F 
 34520      6C6400
 34521              	.LASF225:
 34522 14cc 696E666F 		.ascii	"info_type\000"
 34522      5F747970 
 34522      6500
 34523              	.LASF50:
 34524 14d6 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 34524      4745545F 
 34524      494D555F 
 34524      52454144 
 34524      494E4753 
 34525              	.LASF399:
 34526 14eb 73645230 		.ascii	"sdR01File\000"
 34526      3146696C 
 34526      6500
 34527              	.LASF306:
 34528 14f5 4C435243 		.ascii	"LCRChecksum\000"
 34528      6865636B 
 34528      73756D00 
 34529              	.LASF343:
 34530 1501 6B5F696D 		.ascii	"k_imu\000"
 34530      7500
 34531              	.LASF3:
 34532 1507 73686F72 		.ascii	"short unsigned int\000"
 34532      7420756E 
 34532      7369676E 
 34532      65642069 
 34532      6E7400
 34533              	.LASF153:
 34534 151a 73745F65 		.ascii	"st_encoder\000"
 34534      6E636F64 
 34534      657200
 34535              	.LASF374:
 34536 1525 675F6164 		.ascii	"g_adc_meas\000"
 34536      635F6D65 
 34536      617300
 34537              	.LASF193:
 34538 1530 6D61785F 		.ascii	"max_residual_current\000"
 34538      72657369 
 34538      6475616C 
 34538      5F637572 
 34538      72656E74 
 34539              	.LASF283:
 34540 1545 454E435F 		.ascii	"ENC_L\000"
 34540      4C00
 34541              	.LASF200:
 34542 154b 73745F65 		.ascii	"st_eeprom\000"
 34542      6570726F 
 34542      6D00
 34543              	.LASF227:
 34544 1555 54595045 		.ascii	"TYPES\000"
 34544      5300
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 750


 34545              	.LASF369:
 34546 155b 675F7265 		.ascii	"g_ref\000"
 34546      6600
 34547              	.LASF18:
 34548 1561 696E7433 		.ascii	"int32\000"
 34548      3200
 34549              	.LASF391:
 34550 1567 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 34550      4F465F41 
 34550      4E414C4F 
 34550      475F494E 
 34550      50555453 
 34551              	.LASF222:
 34552 157c 696E666F 		.ascii	"infoGet\000"
 34552      47657400 
 34553              	.LASF127:
 34554 1584 73745F6D 		.ascii	"st_motor\000"
 34554      6F746F72 
 34554      00
 34555              	.LASF406:
 34556 158d 6D617374 		.ascii	"master_mode\000"
 34556      65725F6D 
 34556      6F646500 
 34557              	.LASF90:
 34558 1599 46535F46 		.ascii	"FS_FILE\000"
 34558      494C4500 
 34559              	.LASF140:
 34560 15a1 706F735F 		.ascii	"pos_lim_flag\000"
 34560      6C696D5F 
 34560      666C6167 
 34560      00
 34561              	.LASF373:
 34562 15ae 675F6D65 		.ascii	"g_measOld\000"
 34562      61734F6C 
 34562      6400
 34563              	.LASF69:
 34564 15b8 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 34564      524F4C5F 
 34564      414E474C 
 34564      4500
 34565              	.LASF326:
 34566 15c6 636D645F 		.ascii	"cmd_activate\000"
 34566      61637469 
 34566      76617465 
 34566      00
 34567              	.LASF5:
 34568 15d3 5F5F696E 		.ascii	"__int32_t\000"
 34568      7433325F 
 34568      7400
 34569              	.LASF252:
 34570 15dd 7370695F 		.ascii	"spi_delay_menu\000"
 34570      64656C61 
 34570      795F6D65 
 34570      6E7500
 34571              	.LASF111:
 34572 15ec 77697265 		.ascii	"wire_disp\000"
 34572      5F646973 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 751


 34572      7000
 34573              	.LASF163:
 34574 15f6 656D675F 		.ascii	"emg_max_value\000"
 34574      6D61785F 
 34574      76616C75 
 34574      6500
 34575              	.LASF257:
 34576 1604 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 34576      4F4D5F50 
 34576      4152414D 
 34576      5F534554 
 34576      00
 34577              	.LASF411:
 34578 1615 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 34578      72635C63 
 34578      6F6D6D61 
 34578      6E645F70 
 34578      726F6365 
 34579              	.LASF146:
 34580 1631 63757272 		.ascii	"current_limit\000"
 34580      656E745F 
 34580      6C696D69 
 34580      7400
 34581              	.LASF59:
 34582 163f 53485F69 		.ascii	"SH_input_mode\000"
 34582      6E707574 
 34582      5F6D6F64 
 34582      6500
 34583              	.LASF81:
 34584 164d 54595045 		.ascii	"TYPE_INT8\000"
 34584      5F494E54 
 34584      3800
 34585              	.LASF197:
 34586 1657 61637469 		.ascii	"activation_mode\000"
 34586      76617469 
 34586      6F6E5F6D 
 34586      6F646500 
 34587              	.LASF296:
 34588 1667 494D555F 		.ascii	"IMU_reading_info\000"
 34588      72656164 
 34588      696E675F 
 34588      696E666F 
 34588      00
 34589              	.LASF14:
 34590 1678 75696E74 		.ascii	"uint16\000"
 34590      313600
 34591              	.LASF182:
 34592 167f 72657374 		.ascii	"rest_delay\000"
 34592      5F64656C 
 34592      617900
 34593              	.LASF238:
 34594 168a 6175785F 		.ascii	"aux_str\000"
 34594      73747200 
 34595              	.LASF26:
 34596 1692 434D445F 		.ascii	"CMD_PING\000"
 34596      50494E47 
 34596      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccz2X9g1.s 			page 752


 34597              	.LASF136:
 34598 169b 6B5F645F 		.ascii	"k_d_c_dl\000"
 34598      635F646C 
 34598      00
 34599              	.LASF215:
 34600 16a4 64697265 		.ascii	"direction\000"
 34600      6374696F 
 34600      6E00
 34601              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
